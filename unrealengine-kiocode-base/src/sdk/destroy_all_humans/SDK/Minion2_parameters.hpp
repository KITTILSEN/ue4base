#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Minion2

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Minion2.Minion2_C.ExecuteUbergraph_Minion2
// 0x0038 (0x0038 - 0x0000)
struct Minion2_C_ExecuteUbergraph_Minion2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25BE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25BF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C0[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minion2_C_ExecuteUbergraph_Minion2) == 0x000008, "Wrong alignment on Minion2_C_ExecuteUbergraph_Minion2");
static_assert(sizeof(Minion2_C_ExecuteUbergraph_Minion2) == 0x000038, "Wrong size on Minion2_C_ExecuteUbergraph_Minion2");
static_assert(offsetof(Minion2_C_ExecuteUbergraph_Minion2, EntryPoint) == 0x000000, "Member 'Minion2_C_ExecuteUbergraph_Minion2::EntryPoint' has a wrong offset!");
static_assert(offsetof(Minion2_C_ExecuteUbergraph_Minion2, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'Minion2_C_ExecuteUbergraph_Minion2::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minion2_C_ExecuteUbergraph_Minion2, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'Minion2_C_ExecuteUbergraph_Minion2::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minion2_C_ExecuteUbergraph_Minion2, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'Minion2_C_ExecuteUbergraph_Minion2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Minion2_C_ExecuteUbergraph_Minion2, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Minion2_C_ExecuteUbergraph_Minion2::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minion2_C_ExecuteUbergraph_Minion2, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Minion2_C_ExecuteUbergraph_Minion2::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minion2_C_ExecuteUbergraph_Minion2, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000028, "Member 'Minion2_C_ExecuteUbergraph_Minion2::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Minion2_C_ExecuteUbergraph_Minion2, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'Minion2_C_ExecuteUbergraph_Minion2::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Minion2.Minion2_C.ReceiveDamage
// 0x0070 (0x0070 - 0x0000)
struct Minion2_C_ReceiveDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Attacker;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C3[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAlliedCharacter_C*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C4[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMinion1_C*                             K2Node_DynamicCast_AsMinion_1;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C5[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minion2_C_ReceiveDamage) == 0x000008, "Wrong alignment on Minion2_C_ReceiveDamage");
static_assert(sizeof(Minion2_C_ReceiveDamage) == 0x000070, "Wrong size on Minion2_C_ReceiveDamage");
static_assert(offsetof(Minion2_C_ReceiveDamage, Damage) == 0x000000, "Member 'Minion2_C_ReceiveDamage::Damage' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, Attacker) == 0x000008, "Member 'Minion2_C_ReceiveDamage::Attacker' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Minion2_C_ReceiveDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Minion2_C_ReceiveDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Minion2_C_ReceiveDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, CallFunc_GetRefMgr_RefMgr) == 0x000020, "Member 'Minion2_C_ReceiveDamage::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, CallFunc_GetPlayerController_PC) == 0x000028, "Member 'Minion2_C_ReceiveDamage::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Minion2_C_ReceiveDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, CallFunc_Array_Get_Item) == 0x000038, "Member 'Minion2_C_ReceiveDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'Minion2_C_ReceiveDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, K2Node_DynamicCast_AsMinion_1) == 0x000048, "Member 'Minion2_C_ReceiveDamage::K2Node_DynamicCast_AsMinion_1' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Minion2_C_ReceiveDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Minion2_C_ReceiveDamage, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'Minion2_C_ReceiveDamage::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function Minion2.Minion2_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Minion2_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minion2_C_ReceiveTick) == 0x000004, "Wrong alignment on Minion2_C_ReceiveTick");
static_assert(sizeof(Minion2_C_ReceiveTick) == 0x000004, "Wrong size on Minion2_C_ReceiveTick");
static_assert(offsetof(Minion2_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Minion2_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

