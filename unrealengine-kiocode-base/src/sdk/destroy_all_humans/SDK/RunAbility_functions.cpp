#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RunAbility

#include "Basic.hpp"

#include "RunAbility_classes.hpp"
#include "RunAbility_parameters.hpp"


namespace SDK
{

// Function RunAbility.RunAbility_C.ClearMoveRange
// (Public, BlueprintCallable, BlueprintEvent)

void URunAbility_C::ClearMoveRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "ClearMoveRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.ContinueAction
// (Public, BlueprintCallable, BlueprintEvent)

void URunAbility_C::ContinueAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "ContinueAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.DecreaseMovementRange
// (Public, BlueprintCallable, BlueprintEvent)

void URunAbility_C::DecreaseMovementRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "DecreaseMovementRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.DrawMoveRange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void URunAbility_C::DrawMoveRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "DrawMoveRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.DrawPath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Param_Path                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void URunAbility_C::DrawPath(TArray<struct FVector>& Param_Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "DrawPath");

	Params::RunAbility_C_DrawPath Parms{};

	Parms.Param_Path = std::move(Param_Path);

	UObject::ProcessEvent(Func, &Parms);

	Param_Path = std::move(Parms.Param_Path);
}


// Function RunAbility.RunAbility_C.ExecuteUbergraph_RunAbility
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URunAbility_C::ExecuteUbergraph_RunAbility(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "ExecuteUbergraph_RunAbility");

	Params::RunAbility_C_ExecuteUbergraph_RunAbility Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RunAbility.RunAbility_C.FindPath
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          End                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  Param_Path                                             (Parm, OutParm)

void URunAbility_C::FindPath(const struct FVector& End, TArray<struct FVector>* Param_Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "FindPath");

	Params::RunAbility_C_FindPath Parms{};

	Parms.End = std::move(End);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Path != nullptr)
		*Param_Path = std::move(Parms.Param_Path);
}


// Function RunAbility.RunAbility_C.IsValidIdx
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URunAbility_C::IsValidIdx(int32 NewParam, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "IsValidIdx");

	Params::RunAbility_C_IsValidIdx Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function RunAbility.RunAbility_C.MoveThroughPath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void URunAbility_C::MoveThroughPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "MoveThroughPath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.OnAbilitySelected
// (Public, BlueprintCallable, BlueprintEvent)

void URunAbility_C::OnAbilitySelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "OnAbilitySelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.OnEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void URunAbility_C::OnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "OnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.PreDisplayTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_Target                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URunAbility_C::PreDisplayTarget(const struct FVector& Param_Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "PreDisplayTarget");

	Params::RunAbility_C_PreDisplayTarget Parms{};

	Parms.Param_Target = std::move(Param_Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RunAbility.RunAbility_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void URunAbility_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URunAbility_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "ReceiveTick");

	Params::RunAbility_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RunAbility.RunAbility_C.ResetMoveRange
// (Public, BlueprintCallable, BlueprintEvent)

void URunAbility_C::ResetMoveRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "ResetMoveRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.UpdateIdx
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URunAbility_C::UpdateIdx(double A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "UpdateIdx");

	Params::RunAbility_C_UpdateIdx Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RunAbility.RunAbility_C.UpdateMoveRangeHUD
// (Public, BlueprintCallable, BlueprintEvent)

void URunAbility_C::UpdateMoveRangeHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "UpdateMoveRangeHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RunAbility.RunAbility_C.Use
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          AbilityTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URunAbility_C::Use(const struct FVector& AbilityTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "Use");

	Params::RunAbility_C_Use Parms{};

	Parms.AbilityTarget = std::move(AbilityTarget);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RunAbility.RunAbility_C.ValidateTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_Target                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URunAbility_C::ValidateTarget(const struct FVector& Param_Target, bool* Valid_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RunAbility_C", "ValidateTarget");

	Params::RunAbility_C_ValidateTarget Parms{};

	Parms.Param_Target = std::move(Param_Target);

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}

}

