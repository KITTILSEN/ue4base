#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MyAbilityBP

#include "Basic.hpp"

#include "MyAbilityBP_classes.hpp"
#include "MyAbilityBP_parameters.hpp"


namespace SDK
{

// Function MyAbilityBP.MyAbilityBP_C.Clear
// (Public, BlueprintCallable, BlueprintEvent)

void UMyAbilityBP_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.ContinueAction
// (Public, BlueprintCallable, BlueprintEvent)

void UMyAbilityBP_C::ContinueAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "ContinueAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.DecreasCooldown
// (Public, BlueprintCallable, BlueprintEvent)

void UMyAbilityBP_C::DecreasCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "DecreasCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.ExecuteUbergraph_MyAbilityBP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMyAbilityBP_C::ExecuteUbergraph_MyAbilityBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "ExecuteUbergraph_MyAbilityBP");

	Params::MyAbilityBP_C_ExecuteUbergraph_MyAbilityBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MyAbilityBP.MyAbilityBP_C.GetCooldown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMyAbilityBP_C::GetCooldown(int32* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "GetCooldown");

	Params::MyAbilityBP_C_GetCooldown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function MyAbilityBP.MyAbilityBP_C.OnAbilityDeselected
// (Public, BlueprintCallable, BlueprintEvent)

void UMyAbilityBP_C::OnAbilityDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "OnAbilityDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.OnAbilitySelected
// (Public, BlueprintCallable, BlueprintEvent)

void UMyAbilityBP_C::OnAbilitySelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "OnAbilitySelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.OnEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UMyAbilityBP_C::OnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "OnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.PreDisplayTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMyAbilityBP_C::PreDisplayTarget(const struct FVector& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "PreDisplayTarget");

	Params::MyAbilityBP_C_PreDisplayTarget Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MyAbilityBP.MyAbilityBP_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UMyAbilityBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.SetCooldown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMyAbilityBP_C::SetCooldown(int32 Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "SetCooldown");

	Params::MyAbilityBP_C_SetCooldown Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MyAbilityBP.MyAbilityBP_C.Unselect
// (Public, BlueprintCallable, BlueprintEvent)

void UMyAbilityBP_C::Unselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "Unselect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.UpdateCooldownHUD
// (Public, BlueprintCallable, BlueprintEvent)

void UMyAbilityBP_C::UpdateCooldownHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "UpdateCooldownHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MyAbilityBP.MyAbilityBP_C.Use
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          AbilityTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMyAbilityBP_C::Use(const struct FVector& AbilityTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "Use");

	Params::MyAbilityBP_C_Use Parms{};

	Parms.AbilityTarget = std::move(AbilityTarget);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MyAbilityBP.MyAbilityBP_C.ValidateTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMyAbilityBP_C::ValidateTarget(const struct FVector& Target, bool* Valid_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MyAbilityBP_C", "ValidateTarget");

	Params::MyAbilityBP_C_ValidateTarget Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}

}

