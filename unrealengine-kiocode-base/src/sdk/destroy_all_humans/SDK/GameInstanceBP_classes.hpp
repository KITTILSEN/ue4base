#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameInstanceBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "LanguageListEnum_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GameInstanceBP.GameInstanceBP_C
// 0x0038 (0x01F8 - 0x01C0)
class UGameInstanceBP_C final : public UGameInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        SfxVolume;                                         // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MusicVolume;                                       // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELanguageListEnum                             CurrentLanguage;                                   // 0x01D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24FD[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxReachedLevel;                                   // 0x01DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGameBP_C*                          SaveGame;                                          // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentScalability;                                // 0x01E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CurrentResolution;                                 // 0x01EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vsync;                                             // 0x01F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CurrentWindowMode;                                 // 0x01F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GameInstanceBP(int32 EntryPoint);
	void ReceiveInit();
	void ReceiveShutdown();
	void SetLanguage(ELanguageListEnum NewParam);
	void SetMaxReachedLevel(int32 Param_MaxReachedLevel);
	void SetMusicVolume(double NewParam);
	void SetResolution(const struct FIntPoint& Param_CurrentResolution);
	void SetScalability(int32 Param_CurrentScalability);
	void SetSfxVolume(double NewParam);
	void SetVsync(bool Param_Vsync);
	void SetWindowmode(EWindowMode Param_CurrentWindowMode);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameInstanceBP_C">();
	}
	static class UGameInstanceBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameInstanceBP_C>();
	}
};
static_assert(alignof(UGameInstanceBP_C) == 0x000008, "Wrong alignment on UGameInstanceBP_C");
static_assert(sizeof(UGameInstanceBP_C) == 0x0001F8, "Wrong size on UGameInstanceBP_C");
static_assert(offsetof(UGameInstanceBP_C, UberGraphFrame) == 0x0001C0, "Member 'UGameInstanceBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, SfxVolume) == 0x0001C8, "Member 'UGameInstanceBP_C::SfxVolume' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, MusicVolume) == 0x0001D0, "Member 'UGameInstanceBP_C::MusicVolume' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, CurrentLanguage) == 0x0001D8, "Member 'UGameInstanceBP_C::CurrentLanguage' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, MaxReachedLevel) == 0x0001DC, "Member 'UGameInstanceBP_C::MaxReachedLevel' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, SaveGame) == 0x0001E0, "Member 'UGameInstanceBP_C::SaveGame' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, CurrentScalability) == 0x0001E8, "Member 'UGameInstanceBP_C::CurrentScalability' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, CurrentResolution) == 0x0001EC, "Member 'UGameInstanceBP_C::CurrentResolution' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, Vsync) == 0x0001F4, "Member 'UGameInstanceBP_C::Vsync' has a wrong offset!");
static_assert(offsetof(UGameInstanceBP_C, CurrentWindowMode) == 0x0001F5, "Member 'UGameInstanceBP_C::CurrentWindowMode' has a wrong offset!");

}

