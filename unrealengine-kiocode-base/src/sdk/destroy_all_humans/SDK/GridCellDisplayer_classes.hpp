#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GridCellDisplayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GridCellDisplayer.GridCellDisplayer_C
// 0x0030 (0x02C0 - 0x0290)
class AGridCellDisplayer_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CellXYAsInGrid;                                    // 0x02A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GridCellDisplayer(int32 EntryPoint);
	void IsGrid();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GridCellDisplayer_C">();
	}
	static class AGridCellDisplayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGridCellDisplayer_C>();
	}
};
static_assert(alignof(AGridCellDisplayer_C) == 0x000008, "Wrong alignment on AGridCellDisplayer_C");
static_assert(sizeof(AGridCellDisplayer_C) == 0x0002C0, "Wrong size on AGridCellDisplayer_C");
static_assert(offsetof(AGridCellDisplayer_C, UberGraphFrame) == 0x000290, "Member 'AGridCellDisplayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGridCellDisplayer_C, Plane) == 0x000298, "Member 'AGridCellDisplayer_C::Plane' has a wrong offset!");
static_assert(offsetof(AGridCellDisplayer_C, DefaultSceneRoot) == 0x0002A0, "Member 'AGridCellDisplayer_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGridCellDisplayer_C, CellXYAsInGrid) == 0x0002A8, "Member 'AGridCellDisplayer_C::CellXYAsInGrid' has a wrong offset!");

}

