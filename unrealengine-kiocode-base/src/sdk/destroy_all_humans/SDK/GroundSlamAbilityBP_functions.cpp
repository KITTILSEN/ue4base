#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GroundSlamAbilityBP

#include "Basic.hpp"

#include "GroundSlamAbilityBP_classes.hpp"
#include "GroundSlamAbilityBP_parameters.hpp"


namespace SDK
{

// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.ContinueAction
// (Public, BlueprintCallable, BlueprintEvent)

void UGroundSlamAbilityBP_C::ContinueAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GroundSlamAbilityBP_C", "ContinueAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.ExecuteUbergraph_GroundSlamAbilityBP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGroundSlamAbilityBP_C::ExecuteUbergraph_GroundSlamAbilityBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GroundSlamAbilityBP_C", "ExecuteUbergraph_GroundSlamAbilityBP");

	Params::GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.OnEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UGroundSlamAbilityBP_C::OnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GroundSlamAbilityBP_C", "OnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.PreDisplayTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGroundSlamAbilityBP_C::PreDisplayTarget(const struct FVector& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GroundSlamAbilityBP_C", "PreDisplayTarget");

	Params::GroundSlamAbilityBP_C_PreDisplayTarget Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UGroundSlamAbilityBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GroundSlamAbilityBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.Use
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          AbilityTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGroundSlamAbilityBP_C::Use(const struct FVector& AbilityTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GroundSlamAbilityBP_C", "Use");

	Params::GroundSlamAbilityBP_C_Use Parms{};

	Parms.AbilityTarget = std::move(AbilityTarget);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.ValidateTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGroundSlamAbilityBP_C::ValidateTarget(const struct FVector& Target, bool* Valid_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GroundSlamAbilityBP_C", "ValidateTarget");

	Params::GroundSlamAbilityBP_C_ValidateTarget Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}

}

