#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LanguageManager

#include "Basic.hpp"

#include "LanguageManager_classes.hpp"
#include "LanguageManager_parameters.hpp"


namespace SDK
{

// Function LanguageManager.LanguageManager_C.ExecuteUbergraph_LanguageManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALanguageManager_C::ExecuteUbergraph_LanguageManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguageManager_C", "ExecuteUbergraph_LanguageManager");

	Params::LanguageManager_C_ExecuteUbergraph_LanguageManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LanguageManager.LanguageManager_C.GetLanguage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELanguageListEnum                       Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALanguageManager_C::GetLanguage(ELanguageListEnum* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguageManager_C", "GetLanguage");

	Params::LanguageManager_C_GetLanguage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function LanguageManager.LanguageManager_C.GetTextByKey
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Output                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ALanguageManager_C::GetTextByKey(const class FString& Key, class FString* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguageManager_C", "GetTextByKey");

	Params::LanguageManager_C_GetTextByKey Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function LanguageManager.LanguageManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ALanguageManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguageManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LanguageManager.LanguageManager_C.SetLanguage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELanguageListEnum                       NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALanguageManager_C::SetLanguage(ELanguageListEnum NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguageManager_C", "SetLanguage");

	Params::LanguageManager_C_SetLanguage Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}

}

