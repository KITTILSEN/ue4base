#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelID

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LevelID.LevelID_C
// 0x0040 (0x02D0 - 0x0290)
class ALevelID_C final : public AActor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FString                                 LevelName;                                         // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NextLevel;                                         // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequence*                         StartingSeq;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         EndingSeq;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnTurns;                                        // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LevelID_C">();
	}
	static class ALevelID_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALevelID_C>();
	}
};
static_assert(alignof(ALevelID_C) == 0x000008, "Wrong alignment on ALevelID_C");
static_assert(sizeof(ALevelID_C) == 0x0002D0, "Wrong size on ALevelID_C");
static_assert(offsetof(ALevelID_C, DefaultSceneRoot) == 0x000290, "Member 'ALevelID_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ALevelID_C, LevelName) == 0x000298, "Member 'ALevelID_C::LevelName' has a wrong offset!");
static_assert(offsetof(ALevelID_C, NextLevel) == 0x0002A8, "Member 'ALevelID_C::NextLevel' has a wrong offset!");
static_assert(offsetof(ALevelID_C, StartingSeq) == 0x0002B8, "Member 'ALevelID_C::StartingSeq' has a wrong offset!");
static_assert(offsetof(ALevelID_C, EndingSeq) == 0x0002C0, "Member 'ALevelID_C::EndingSeq' has a wrong offset!");
static_assert(offsetof(ALevelID_C, SpawnTurns) == 0x0002C8, "Member 'ALevelID_C::SpawnTurns' has a wrong offset!");

}

