#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RunAbility

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "StrategyGame_structs.hpp"


namespace SDK::Params
{

// Function RunAbility.RunAbility_C.ClearMoveRange
// 0x0010 (0x0010 - 0x0000)
struct RunAbility_C_ClearMoveRange final
{
public:
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_ClearMoveRange) == 0x000008, "Wrong alignment on RunAbility_C_ClearMoveRange");
static_assert(sizeof(RunAbility_C_ClearMoveRange) == 0x000010, "Wrong size on RunAbility_C_ClearMoveRange");
static_assert(offsetof(RunAbility_C_ClearMoveRange, CallFunc_GetRefMgr_RefMgr) == 0x000000, "Member 'RunAbility_C_ClearMoveRange::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_ClearMoveRange, CallFunc_GetDisplayManager_NewParam) == 0x000008, "Member 'RunAbility_C_ClearMoveRange::CallFunc_GetDisplayManager_NewParam' has a wrong offset!");

// Function RunAbility.RunAbility_C.ContinueAction
// 0x0008 (0x0008 - 0x0000)
struct RunAbility_C_ContinueAction final
{
public:
	double                                        CallFunc_UpdateIdx_A_ImplicitCast;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_ContinueAction) == 0x000008, "Wrong alignment on RunAbility_C_ContinueAction");
static_assert(sizeof(RunAbility_C_ContinueAction) == 0x000008, "Wrong size on RunAbility_C_ContinueAction");
static_assert(offsetof(RunAbility_C_ContinueAction, CallFunc_UpdateIdx_A_ImplicitCast) == 0x000000, "Member 'RunAbility_C_ContinueAction::CallFunc_UpdateIdx_A_ImplicitCast' has a wrong offset!");

// Function RunAbility.RunAbility_C.DecreaseMovementRange
// 0x0008 (0x0008 - 0x0000)
struct RunAbility_C_DecreaseMovementRange final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_DecreaseMovementRange) == 0x000004, "Wrong alignment on RunAbility_C_DecreaseMovementRange");
static_assert(sizeof(RunAbility_C_DecreaseMovementRange) == 0x000008, "Wrong size on RunAbility_C_DecreaseMovementRange");
static_assert(offsetof(RunAbility_C_DecreaseMovementRange, Temp_int_Variable) == 0x000000, "Member 'RunAbility_C_DecreaseMovementRange::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DecreaseMovementRange, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'RunAbility_C_DecreaseMovementRange::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function RunAbility.RunAbility_C.DrawMoveRange
// 0x0048 (0x0048 - 0x0000)
struct RunAbility_C_DrawMoveRange final
{
public:
	TArray<struct FVector>                        NewLocalVar;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_DrawMoveRange) == 0x000008, "Wrong alignment on RunAbility_C_DrawMoveRange");
static_assert(sizeof(RunAbility_C_DrawMoveRange) == 0x000048, "Wrong size on RunAbility_C_DrawMoveRange");
static_assert(offsetof(RunAbility_C_DrawMoveRange, NewLocalVar) == 0x000000, "Member 'RunAbility_C_DrawMoveRange::NewLocalVar' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawMoveRange, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'RunAbility_C_DrawMoveRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawMoveRange, CallFunc_GetRefMgr_RefMgr) == 0x000018, "Member 'RunAbility_C_DrawMoveRange::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawMoveRange, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000020, "Member 'RunAbility_C_DrawMoveRange::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawMoveRange, CallFunc_GetDisplayManager_NewParam) == 0x000028, "Member 'RunAbility_C_DrawMoveRange::CallFunc_GetDisplayManager_NewParam' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawMoveRange, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'RunAbility_C_DrawMoveRange::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function RunAbility.RunAbility_C.DrawPath
// 0x0050 (0x0050 - 0x0000)
struct RunAbility_C_DrawPath final
{
public:
	TArray<struct FVector>                        Param_Path;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A2[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_DrawPath) == 0x000008, "Wrong alignment on RunAbility_C_DrawPath");
static_assert(sizeof(RunAbility_C_DrawPath) == 0x000050, "Wrong size on RunAbility_C_DrawPath");
static_assert(offsetof(RunAbility_C_DrawPath, Param_Path) == 0x000000, "Member 'RunAbility_C_DrawPath::Param_Path' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawPath, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'RunAbility_C_DrawPath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawPath, Temp_int_Array_Index_Variable) == 0x000014, "Member 'RunAbility_C_DrawPath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawPath, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'RunAbility_C_DrawPath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawPath, CallFunc_Array_Get_Item) == 0x000020, "Member 'RunAbility_C_DrawPath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawPath, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'RunAbility_C_DrawPath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawPath, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'RunAbility_C_DrawPath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawPath, CallFunc_GetRefMgr_RefMgr) == 0x000040, "Member 'RunAbility_C_DrawPath::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_DrawPath, CallFunc_GetDisplayManager_NewParam) == 0x000048, "Member 'RunAbility_C_DrawPath::CallFunc_GetDisplayManager_NewParam' has a wrong offset!");

// Function RunAbility.RunAbility_C.ExecuteUbergraph_RunAbility
// 0x0010 (0x0010 - 0x0000)
struct RunAbility_C_ExecuteUbergraph_RunAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_ExecuteUbergraph_RunAbility) == 0x000008, "Wrong alignment on RunAbility_C_ExecuteUbergraph_RunAbility");
static_assert(sizeof(RunAbility_C_ExecuteUbergraph_RunAbility) == 0x000010, "Wrong size on RunAbility_C_ExecuteUbergraph_RunAbility");
static_assert(offsetof(RunAbility_C_ExecuteUbergraph_RunAbility, EntryPoint) == 0x000000, "Member 'RunAbility_C_ExecuteUbergraph_RunAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(RunAbility_C_ExecuteUbergraph_RunAbility, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'RunAbility_C_ExecuteUbergraph_RunAbility::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(RunAbility_C_ExecuteUbergraph_RunAbility, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'RunAbility_C_ExecuteUbergraph_RunAbility::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");

// Function RunAbility.RunAbility_C.FindPath
// 0x0138 (0x0138 - 0x0000)
struct RunAbility_C_FindPath final
{
public:
	struct FVector                                End;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Param_Path;                                        // 0x0018(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        MovePath;                                          // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid;                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_FindFullPath_ReturnValue;                 // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A3[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A4[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A5[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A6[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid_1;                    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_FindFullPath_ReturnValue_1;               // 0x00F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A7[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_FindPath) == 0x000008, "Wrong alignment on RunAbility_C_FindPath");
static_assert(sizeof(RunAbility_C_FindPath) == 0x000138, "Wrong size on RunAbility_C_FindPath");
static_assert(offsetof(RunAbility_C_FindPath, End) == 0x000000, "Member 'RunAbility_C_FindPath::End' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, Param_Path) == 0x000018, "Member 'RunAbility_C_FindPath::Param_Path' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, MovePath) == 0x000028, "Member 'RunAbility_C_FindPath::MovePath' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, Temp_int_Variable) == 0x000038, "Member 'RunAbility_C_FindPath::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'RunAbility_C_FindPath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, Temp_int_Variable_1) == 0x000040, "Member 'RunAbility_C_FindPath::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'RunAbility_C_FindPath::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_GetRefMgr_RefMgr) == 0x000048, "Member 'RunAbility_C_FindPath::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_GetGridManager_grid) == 0x000050, "Member 'RunAbility_C_FindPath::CallFunc_GetGridManager_grid' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'RunAbility_C_FindPath::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'RunAbility_C_FindPath::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_FindFullPath_ReturnValue) == 0x000078, "Member 'RunAbility_C_FindPath::CallFunc_FindFullPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Array_IsEmpty_ReturnValue) == 0x000088, "Member 'RunAbility_C_FindPath::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Array_Get_Item) == 0x000090, "Member 'RunAbility_C_FindPath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'RunAbility_C_FindPath::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'RunAbility_C_FindPath::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'RunAbility_C_FindPath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'RunAbility_C_FindPath::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Min_ReturnValue) == 0x0000B8, "Member 'RunAbility_C_FindPath::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_GetRefMgr_RefMgr_1) == 0x0000C0, "Member 'RunAbility_C_FindPath::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'RunAbility_C_FindPath::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_GetGridManager_grid_1) == 0x0000D0, "Member 'RunAbility_C_FindPath::CallFunc_GetGridManager_grid_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_GetOwner_ReturnValue_1) == 0x0000D8, "Member 'RunAbility_C_FindPath::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000E0, "Member 'RunAbility_C_FindPath::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_FindFullPath_ReturnValue_1) == 0x0000F8, "Member 'RunAbility_C_FindPath::CallFunc_FindFullPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'RunAbility_C_FindPath::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'RunAbility_C_FindPath::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000128, "Member 'RunAbility_C_FindPath::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Array_Add_ReturnValue_1) == 0x00012C, "Member 'RunAbility_C_FindPath::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_Min_ReturnValue_1) == 0x000130, "Member 'RunAbility_C_FindPath::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_FindPath, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000134, "Member 'RunAbility_C_FindPath::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function RunAbility.RunAbility_C.IsValidIdx
// 0x0010 (0x0010 - 0x0000)
struct RunAbility_C_IsValidIdx final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam1;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_IsValidIdx) == 0x000004, "Wrong alignment on RunAbility_C_IsValidIdx");
static_assert(sizeof(RunAbility_C_IsValidIdx) == 0x000010, "Wrong size on RunAbility_C_IsValidIdx");
static_assert(offsetof(RunAbility_C_IsValidIdx, NewParam) == 0x000000, "Member 'RunAbility_C_IsValidIdx::NewParam' has a wrong offset!");
static_assert(offsetof(RunAbility_C_IsValidIdx, NewParam1) == 0x000004, "Member 'RunAbility_C_IsValidIdx::NewParam1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_IsValidIdx, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'RunAbility_C_IsValidIdx::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_IsValidIdx, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'RunAbility_C_IsValidIdx::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function RunAbility.RunAbility_C.MoveThroughPath
// 0x03D8 (0x03D8 - 0x0000)
struct RunAbility_C_MoveThroughPath final
{
public:
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidIdx_NewParam1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A9[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidIdx_NewParam1_1;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26AA[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x01B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_REase_ReturnValue;                        // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x02E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VEase_Alpha_ImplicitCast;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_REase_Alpha_ImplicitCast;                 // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_MoveThroughPath) == 0x000008, "Wrong alignment on RunAbility_C_MoveThroughPath");
static_assert(sizeof(RunAbility_C_MoveThroughPath) == 0x0003D8, "Wrong size on RunAbility_C_MoveThroughPath");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_GetRefMgr_RefMgr) == 0x000000, "Member 'RunAbility_C_MoveThroughPath::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_GetPlayerController_PC) == 0x000008, "Member 'RunAbility_C_MoveThroughPath::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'RunAbility_C_MoveThroughPath::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'RunAbility_C_MoveThroughPath::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'RunAbility_C_MoveThroughPath::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000028, "Member 'RunAbility_C_MoveThroughPath::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'RunAbility_C_MoveThroughPath::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'RunAbility_C_MoveThroughPath::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_IsValidIdx_NewParam1) == 0x000060, "Member 'RunAbility_C_MoveThroughPath::CallFunc_IsValidIdx_NewParam1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'RunAbility_C_MoveThroughPath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_Array_Get_Item) == 0x000068, "Member 'RunAbility_C_MoveThroughPath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_IsValidIdx_NewParam1_1) == 0x000080, "Member 'RunAbility_C_MoveThroughPath::CallFunc_IsValidIdx_NewParam1_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'RunAbility_C_MoveThroughPath::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_VEase_ReturnValue) == 0x0000A0, "Member 'RunAbility_C_MoveThroughPath::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000B8, "Member 'RunAbility_C_MoveThroughPath::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001A0, "Member 'RunAbility_C_MoveThroughPath::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0001B8, "Member 'RunAbility_C_MoveThroughPath::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_Normal_ReturnValue) == 0x0002A0, "Member 'RunAbility_C_MoveThroughPath::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0002B8, "Member 'RunAbility_C_MoveThroughPath::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_REase_ReturnValue) == 0x0002D0, "Member 'RunAbility_C_MoveThroughPath::CallFunc_REase_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0002E8, "Member 'RunAbility_C_MoveThroughPath::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_VEase_Alpha_ImplicitCast) == 0x0003D0, "Member 'RunAbility_C_MoveThroughPath::CallFunc_VEase_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RunAbility_C_MoveThroughPath, CallFunc_REase_Alpha_ImplicitCast) == 0x0003D4, "Member 'RunAbility_C_MoveThroughPath::CallFunc_REase_Alpha_ImplicitCast' has a wrong offset!");

// Function RunAbility.RunAbility_C.OnAbilitySelected
// 0x0020 (0x0020 - 0x0000)
struct RunAbility_C_OnAbilitySelected final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMainCharacter_C*                       K2Node_DynamicCast_AsMain_Character;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_OnAbilitySelected) == 0x000008, "Wrong alignment on RunAbility_C_OnAbilitySelected");
static_assert(sizeof(RunAbility_C_OnAbilitySelected) == 0x000020, "Wrong size on RunAbility_C_OnAbilitySelected");
static_assert(offsetof(RunAbility_C_OnAbilitySelected, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'RunAbility_C_OnAbilitySelected::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnAbilitySelected, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'RunAbility_C_OnAbilitySelected::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnAbilitySelected, K2Node_DynamicCast_AsMain_Character) == 0x000010, "Member 'RunAbility_C_OnAbilitySelected::K2Node_DynamicCast_AsMain_Character' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnAbilitySelected, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'RunAbility_C_OnAbilitySelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RunAbility.RunAbility_C.OnEnd
// 0x0390 (0x0390 - 0x0000)
struct RunAbility_C_OnEnd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26AB[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGridCellModifier                             Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26AC[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager_C*                        CallFunc_GetEnemyManager_EnemyManager;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26AD[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_2;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager_C*                        CallFunc_GetEnemyManager_EnemyManager_1;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstanceBP_C*                      K2Node_DynamicCast_AsGame_Instance_BP;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26AE[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_3;                       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid_1;                    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26AF[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEnemyManager_C*                        CallFunc_GetEnemyManager_EnemyManager_2;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASpawner_C*                             CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B0[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B1[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B2[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_4;                       // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid_2;                    // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character_1;               // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B3[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWorldPosFromCellXY_ReturnValue;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldPosFromCellXY_ReturnValue_1;      // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B4[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0250(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B5[0x5];                                     // 0x033B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGridCellModifier                             CallFunc_GetCellModifierFromWorlPos_ReturnValue;   // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B6[0x3];                                     // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_5;                       // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySoundAtLocation_VolumeMultiplier_ImplicitCast; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_OnEnd) == 0x000010, "Wrong alignment on RunAbility_C_OnEnd");
static_assert(sizeof(RunAbility_C_OnEnd) == 0x000390, "Wrong size on RunAbility_C_OnEnd");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable) == 0x000000, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable_1) == 0x000001, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable_2) == 0x000002, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable_3) == 0x000003, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable_4) == 0x000004, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable_5) == 0x000005, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_int_Array_Index_Variable) == 0x000008, "Member 'RunAbility_C_OnEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable_6) == 0x00000C, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_byte_Variable) == 0x00000D, "Member 'RunAbility_C_OnEnd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetRefMgr_RefMgr) == 0x000010, "Member 'RunAbility_C_OnEnd::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetRefMgr_RefMgr_1) == 0x000018, "Member 'RunAbility_C_OnEnd::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetGridManager_grid) == 0x000020, "Member 'RunAbility_C_OnEnd::CallFunc_GetGridManager_grid' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetEnemyManager_EnemyManager) == 0x000028, "Member 'RunAbility_C_OnEnd::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'RunAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, K2Node_DynamicCast_AsMy_Character) == 0x000038, "Member 'RunAbility_C_OnEnd::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'RunAbility_C_OnEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetRefMgr_RefMgr_2) == 0x000048, "Member 'RunAbility_C_OnEnd::CallFunc_GetRefMgr_RefMgr_2' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'RunAbility_C_OnEnd::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetEnemyManager_EnemyManager_1) == 0x000058, "Member 'RunAbility_C_OnEnd::CallFunc_GetEnemyManager_EnemyManager_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, K2Node_DynamicCast_AsGame_Instance_BP) == 0x000060, "Member 'RunAbility_C_OnEnd::K2Node_DynamicCast_AsGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'RunAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable_7) == 0x000069, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetRefMgr_RefMgr_3) == 0x000070, "Member 'RunAbility_C_OnEnd::CallFunc_GetRefMgr_RefMgr_3' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetGridManager_grid_1) == 0x000078, "Member 'RunAbility_C_OnEnd::CallFunc_GetGridManager_grid_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_Array_IsEmpty_ReturnValue) == 0x000080, "Member 'RunAbility_C_OnEnd::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetEnemyManager_EnemyManager_2) == 0x000088, "Member 'RunAbility_C_OnEnd::CallFunc_GetEnemyManager_EnemyManager_2' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_Array_Get_Item) == 0x000090, "Member 'RunAbility_C_OnEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_Array_LastIndex_ReturnValue) == 0x000098, "Member 'RunAbility_C_OnEnd::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A0, "Member 'RunAbility_C_OnEnd::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'RunAbility_C_OnEnd::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetTransform_ReturnValue) == 0x0000D0, "Member 'RunAbility_C_OnEnd::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_SetStaticMesh_ReturnValue) == 0x000130, "Member 'RunAbility_C_OnEnd::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakTransform_Location) == 0x000138, "Member 'RunAbility_C_OnEnd::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakTransform_Rotation) == 0x000150, "Member 'RunAbility_C_OnEnd::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakTransform_Scale) == 0x000168, "Member 'RunAbility_C_OnEnd::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000180, "Member 'RunAbility_C_OnEnd::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'RunAbility_C_OnEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakVector_X) == 0x0001A0, "Member 'RunAbility_C_OnEnd::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakVector_Y) == 0x0001A8, "Member 'RunAbility_C_OnEnd::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakVector_Z) == 0x0001B0, "Member 'RunAbility_C_OnEnd::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetRefMgr_RefMgr_4) == 0x0001B8, "Member 'RunAbility_C_OnEnd::CallFunc_GetRefMgr_RefMgr_4' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue_1) == 0x0001C0, "Member 'RunAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetGridManager_grid_2) == 0x0001C8, "Member 'RunAbility_C_OnEnd::CallFunc_GetGridManager_grid_2' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue_2) == 0x0001D0, "Member 'RunAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x0001D8, "Member 'RunAbility_C_OnEnd::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, K2Node_DynamicCast_AsMy_Character_1) == 0x0001F0, "Member 'RunAbility_C_OnEnd::K2Node_DynamicCast_AsMy_Character_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_2) == 0x0001F8, "Member 'RunAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetWorldPosFromCellXY_ReturnValue) == 0x000200, "Member 'RunAbility_C_OnEnd::CallFunc_GetWorldPosFromCellXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakVector_X_1) == 0x000218, "Member 'RunAbility_C_OnEnd::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakVector_Y_1) == 0x000220, "Member 'RunAbility_C_OnEnd::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BreakVector_Z_1) == 0x000228, "Member 'RunAbility_C_OnEnd::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetWorldPosFromCellXY_ReturnValue_1) == 0x000230, "Member 'RunAbility_C_OnEnd::CallFunc_GetWorldPosFromCellXY_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000248, "Member 'RunAbility_C_OnEnd::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000250, "Member 'RunAbility_C_OnEnd::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000338, "Member 'RunAbility_C_OnEnd::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000339, "Member 'RunAbility_C_OnEnd::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_BooleanAND_ReturnValue) == 0x00033A, "Member 'RunAbility_C_OnEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue_3) == 0x000340, "Member 'RunAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000348, "Member 'RunAbility_C_OnEnd::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_bool_Variable_8) == 0x000360, "Member 'RunAbility_C_OnEnd::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetCellModifierFromWorlPos_ReturnValue) == 0x000361, "Member 'RunAbility_C_OnEnd::CallFunc_GetCellModifierFromWorlPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, K2Node_Select_Default) == 0x000362, "Member 'RunAbility_C_OnEnd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000363, "Member 'RunAbility_C_OnEnd::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, Temp_int_Loop_Counter_Variable) == 0x000364, "Member 'RunAbility_C_OnEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000368, "Member 'RunAbility_C_OnEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_Add_IntInt_ReturnValue) == 0x00036C, "Member 'RunAbility_C_OnEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetRefMgr_RefMgr_5) == 0x000370, "Member 'RunAbility_C_OnEnd::CallFunc_GetRefMgr_RefMgr_5' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_GetPlayerController_PC) == 0x000378, "Member 'RunAbility_C_OnEnd::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(RunAbility_C_OnEnd, CallFunc_PlaySoundAtLocation_VolumeMultiplier_ImplicitCast) == 0x000380, "Member 'RunAbility_C_OnEnd::CallFunc_PlaySoundAtLocation_VolumeMultiplier_ImplicitCast' has a wrong offset!");

// Function RunAbility.RunAbility_C.PreDisplayTarget
// 0x00D8 (0x00D8 - 0x0000)
struct RunAbility_C_PreDisplayTarget final
{
public:
	struct FVector                                Param_Target;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_target_on_pacth;                                // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_FindPath_Path;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B8[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B9[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstanceBP_C*                      K2Node_DynamicCast_AsGame_Instance_BP;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BA[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid;                      // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid_1;                    // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue_1;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BB[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SpawnSound2D_VolumeMultiplier_ImplicitCast; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_PreDisplayTarget) == 0x000008, "Wrong alignment on RunAbility_C_PreDisplayTarget");
static_assert(sizeof(RunAbility_C_PreDisplayTarget) == 0x0000D8, "Wrong size on RunAbility_C_PreDisplayTarget");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, Param_Target) == 0x000000, "Member 'RunAbility_C_PreDisplayTarget::Param_Target' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, Is_target_on_pacth) == 0x000018, "Member 'RunAbility_C_PreDisplayTarget::Is_target_on_pacth' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_FindPath_Path) == 0x000020, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_FindPath_Path' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, Temp_int_Array_Index_Variable) == 0x000034, "Member 'RunAbility_C_PreDisplayTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'RunAbility_C_PreDisplayTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_Array_Get_Item) == 0x000040, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_GetGameInstance_ReturnValue) == 0x000060, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, K2Node_DynamicCast_AsGame_Instance_BP) == 0x000068, "Member 'RunAbility_C_PreDisplayTarget::K2Node_DynamicCast_AsGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'RunAbility_C_PreDisplayTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr) == 0x000078, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_SpawnSound2D_ReturnValue) == 0x000080, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_GetGridManager_grid) == 0x000088, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_GetGridManager_grid' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr_1) == 0x000090, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000098, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_GetGridManager_grid_1) == 0x0000B0, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_GetGridManager_grid_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue_1) == 0x0000B8, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0000D0, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_PreDisplayTarget, CallFunc_SpawnSound2D_VolumeMultiplier_ImplicitCast) == 0x0000D4, "Member 'RunAbility_C_PreDisplayTarget::CallFunc_SpawnSound2D_VolumeMultiplier_ImplicitCast' has a wrong offset!");

// Function RunAbility.RunAbility_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct RunAbility_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_ReceiveTick) == 0x000004, "Wrong alignment on RunAbility_C_ReceiveTick");
static_assert(sizeof(RunAbility_C_ReceiveTick) == 0x000004, "Wrong size on RunAbility_C_ReceiveTick");
static_assert(offsetof(RunAbility_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'RunAbility_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function RunAbility.RunAbility_C.UpdateIdx
// 0x0050 (0x0050 - 0x0000)
struct RunAbility_C_UpdateIdx final
{
public:
	double                                        A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BD[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BE[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_UpdateIdx) == 0x000008, "Wrong alignment on RunAbility_C_UpdateIdx");
static_assert(sizeof(RunAbility_C_UpdateIdx) == 0x000050, "Wrong size on RunAbility_C_UpdateIdx");
static_assert(offsetof(RunAbility_C_UpdateIdx, A) == 0x000000, "Member 'RunAbility_C_UpdateIdx::A' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000008, "Member 'RunAbility_C_UpdateIdx::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'RunAbility_C_UpdateIdx::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, Temp_int_Variable) == 0x000018, "Member 'RunAbility_C_UpdateIdx::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'RunAbility_C_UpdateIdx::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_GetGridMgr_GM) == 0x000020, "Member 'RunAbility_C_UpdateIdx::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x000028, "Member 'RunAbility_C_UpdateIdx::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'RunAbility_C_UpdateIdx::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'RunAbility_C_UpdateIdx::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'RunAbility_C_UpdateIdx::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'RunAbility_C_UpdateIdx::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_UpdateIdx, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'RunAbility_C_UpdateIdx::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function RunAbility.RunAbility_C.UpdateMoveRangeHUD
// 0x0008 (0x0008 - 0x0000)
struct RunAbility_C_UpdateMoveRangeHUD final
{
public:
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_UpdateMoveRangeHUD) == 0x000008, "Wrong alignment on RunAbility_C_UpdateMoveRangeHUD");
static_assert(sizeof(RunAbility_C_UpdateMoveRangeHUD) == 0x000008, "Wrong size on RunAbility_C_UpdateMoveRangeHUD");
static_assert(offsetof(RunAbility_C_UpdateMoveRangeHUD, CallFunc_GetRefMgr_RefMgr) == 0x000000, "Member 'RunAbility_C_UpdateMoveRangeHUD::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");

// Function RunAbility.RunAbility_C.Use
// 0x00B0 (0x00B0 - 0x0000)
struct RunAbility_C_Use final
{
public:
	struct FVector                                AbilityTarget;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BF[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_FindPath_Path;                            // 0x0028(0x0010)(ReferenceParm)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCellWalkableFromWorldPos_ReturnValue;   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C0[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C1[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C2[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUDWIdget_C*                           CallFunc_GetHUD_HUD;                               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C3[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C4[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_Use) == 0x000008, "Wrong alignment on RunAbility_C_Use");
static_assert(sizeof(RunAbility_C_Use) == 0x0000B0, "Wrong size on RunAbility_C_Use");
static_assert(offsetof(RunAbility_C_Use, AbilityTarget) == 0x000000, "Member 'RunAbility_C_Use::AbilityTarget' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, Temp_int_Array_Index_Variable) == 0x000018, "Member 'RunAbility_C_Use::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'RunAbility_C_Use::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_GetRefMgr_RefMgr) == 0x000020, "Member 'RunAbility_C_Use::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_FindPath_Path) == 0x000028, "Member 'RunAbility_C_Use::CallFunc_FindPath_Path' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_GetGridManager_grid) == 0x000038, "Member 'RunAbility_C_Use::CallFunc_GetGridManager_grid' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_Array_Get_Item) == 0x000040, "Member 'RunAbility_C_Use::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'RunAbility_C_Use::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_IsCellWalkableFromWorldPos_ReturnValue) == 0x00005C, "Member 'RunAbility_C_Use::CallFunc_IsCellWalkableFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'RunAbility_C_Use::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'RunAbility_C_Use::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_GetRefMgr_RefMgr_1) == 0x000070, "Member 'RunAbility_C_Use::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'RunAbility_C_Use::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_GetHUD_HUD) == 0x000080, "Member 'RunAbility_C_Use::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'RunAbility_C_Use::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'RunAbility_C_Use::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_GetOwner_ReturnValue_1) == 0x000090, "Member 'RunAbility_C_Use::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, K2Node_DynamicCast_AsMy_Character) == 0x000098, "Member 'RunAbility_C_Use::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'RunAbility_C_Use::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'RunAbility_C_Use::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000A8, "Member 'RunAbility_C_Use::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunAbility_C_Use, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'RunAbility_C_Use::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function RunAbility.RunAbility_C.ValidateTarget
// 0x0030 (0x0030 - 0x0000)
struct RunAbility_C_ValidateTarget final
{
public:
	struct FVector                                Param_Target;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunAbility_C_ValidateTarget) == 0x000008, "Wrong alignment on RunAbility_C_ValidateTarget");
static_assert(sizeof(RunAbility_C_ValidateTarget) == 0x000030, "Wrong size on RunAbility_C_ValidateTarget");
static_assert(offsetof(RunAbility_C_ValidateTarget, Param_Target) == 0x000000, "Member 'RunAbility_C_ValidateTarget::Param_Target' has a wrong offset!");
static_assert(offsetof(RunAbility_C_ValidateTarget, Valid_) == 0x000018, "Member 'RunAbility_C_ValidateTarget::Valid_' has a wrong offset!");
static_assert(offsetof(RunAbility_C_ValidateTarget, CallFunc_GetGridMgr_GM) == 0x000020, "Member 'RunAbility_C_ValidateTarget::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(RunAbility_C_ValidateTarget, CallFunc_IsEmpty_ReturnValue) == 0x000028, "Member 'RunAbility_C_ValidateTarget::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

}

