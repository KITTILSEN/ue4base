#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GroundSlamAbilityBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.ContinueAction
// 0x0010 (0x0010 - 0x0000)
struct GroundSlamAbilityBP_C_ContinueAction final
{
public:
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GroundSlamAbilityBP_C_ContinueAction) == 0x000008, "Wrong alignment on GroundSlamAbilityBP_C_ContinueAction");
static_assert(sizeof(GroundSlamAbilityBP_C_ContinueAction) == 0x000010, "Wrong size on GroundSlamAbilityBP_C_ContinueAction");
static_assert(offsetof(GroundSlamAbilityBP_C_ContinueAction, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'GroundSlamAbilityBP_C_ContinueAction::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_ContinueAction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'GroundSlamAbilityBP_C_ContinueAction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.ExecuteUbergraph_GroundSlamAbilityBP
// 0x0020 (0x0020 - 0x0000)
struct GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP) == 0x000008, "Wrong alignment on GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP");
static_assert(sizeof(GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP) == 0x000020, "Wrong size on GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP");
static_assert(offsetof(GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP, EntryPoint) == 0x000000, "Member 'GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP, K2Node_DynamicCast_AsMy_Character) == 0x000010, "Member 'GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GroundSlamAbilityBP_C_ExecuteUbergraph_GroundSlamAbilityBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.OnEnd
// 0x0028 (0x0028 - 0x0000)
struct GroundSlamAbilityBP_C_OnEnd final
{
public:
	int32                                         CallFunc_GetCooldown_Output;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GroundSlamAbilityBP_C_OnEnd) == 0x000008, "Wrong alignment on GroundSlamAbilityBP_C_OnEnd");
static_assert(sizeof(GroundSlamAbilityBP_C_OnEnd) == 0x000028, "Wrong size on GroundSlamAbilityBP_C_OnEnd");
static_assert(offsetof(GroundSlamAbilityBP_C_OnEnd, CallFunc_GetCooldown_Output) == 0x000000, "Member 'GroundSlamAbilityBP_C_OnEnd::CallFunc_GetCooldown_Output' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_OnEnd, K2Node_DynamicCast_AsMinion_2) == 0x000008, "Member 'GroundSlamAbilityBP_C_OnEnd::K2Node_DynamicCast_AsMinion_2' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_OnEnd, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GroundSlamAbilityBP_C_OnEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_OnEnd, CallFunc_GetRefMgr_RefMgr) == 0x000018, "Member 'GroundSlamAbilityBP_C_OnEnd::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_OnEnd, CallFunc_GetPlayerController_PC) == 0x000020, "Member 'GroundSlamAbilityBP_C_OnEnd::CallFunc_GetPlayerController_PC' has a wrong offset!");

// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.PreDisplayTarget
// 0x0290 (0x0290 - 0x0000)
struct GroundSlamAbilityBP_C_PreDisplayTarget final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CellsToShow;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	struct FVector                                TargetL;                                           // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue_1;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F4[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F5[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F6[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F7[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam_1;             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             CallFunc_FTruncVector_ReturnValue;                 // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F8[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue;       // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue_1;           // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F9[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FA[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_2;                       // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid;                      // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue_1;      // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue_2;      // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldPosFromCellXY_ReturnValue;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GroundSlamAbilityBP_C_PreDisplayTarget) == 0x000008, "Wrong alignment on GroundSlamAbilityBP_C_PreDisplayTarget");
static_assert(sizeof(GroundSlamAbilityBP_C_PreDisplayTarget) == 0x000290, "Wrong size on GroundSlamAbilityBP_C_PreDisplayTarget");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, Target) == 0x000000, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::Target' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CellsToShow) == 0x000018, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CellsToShow' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, TargetL) == 0x000028, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::TargetL' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Abs_Int_ReturnValue) == 0x000040, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Divide_IntInt_ReturnValue) == 0x000044, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Abs_Int_ReturnValue_1) == 0x000050, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Abs_Int_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000070, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000078, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000080, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, Temp_int_Variable) == 0x0000A0, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr) == 0x0000A8, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetDisplayManager_NewParam) == 0x0000B8, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetDisplayManager_NewParam' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Conv_IntToVector_ReturnValue) == 0x0000C0, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr_1) == 0x0000D8, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetDisplayManager_NewParam_1) == 0x0000E0, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetDisplayManager_NewParam_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E8, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_FTruncVector_ReturnValue) == 0x000100, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_FTruncVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Cross_VectorVector_ReturnValue) == 0x000110, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Conv_IntVectorToVector_ReturnValue) == 0x000128, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Conv_IntVectorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Multiply_IntInt_ReturnValue) == 0x000140, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, Temp_int_Variable_1) == 0x000144, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Conv_IntToVector_ReturnValue_1) == 0x000148, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Conv_IntToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000160, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000168, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000180, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000184, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr_2) == 0x000188, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr_2' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetGridManager_grid) == 0x000190, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetGridManager_grid' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000198, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001B0, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_BreakVector_X) == 0x0001C8, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_BreakVector_Y) == 0x0001D0, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_BreakVector_Z) == 0x0001D8, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue_1) == 0x0001E0, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue_2) == 0x0001F8, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x000210, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_BreakVector_X_1) == 0x000228, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_BreakVector_Y_1) == 0x000230, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_BreakVector_Z_1) == 0x000238, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000240, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000258, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_GetWorldPosFromCellXY_ReturnValue) == 0x000260, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_GetWorldPosFromCellXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_FTrunc_ReturnValue) == 0x000278, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Array_Add_ReturnValue) == 0x00027C, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000280, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_PreDisplayTarget, CallFunc_FTrunc_ReturnValue_1) == 0x000288, "Member 'GroundSlamAbilityBP_C_PreDisplayTarget::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");

// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.Use
// 0x00A0 (0x00A0 - 0x0000)
struct GroundSlamAbilityBP_C_Use final
{
public:
	struct FVector                                AbilityTarget;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocalVar;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FB[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FC[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FD[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FE[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FF[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEntityFromWorldPos_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2600[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GroundSlamAbilityBP_C_Use) == 0x000008, "Wrong alignment on GroundSlamAbilityBP_C_Use");
static_assert(sizeof(GroundSlamAbilityBP_C_Use) == 0x0000A0, "Wrong size on GroundSlamAbilityBP_C_Use");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, AbilityTarget) == 0x000000, "Member 'GroundSlamAbilityBP_C_Use::AbilityTarget' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, NewLocalVar) == 0x000018, "Member 'GroundSlamAbilityBP_C_Use::NewLocalVar' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, Temp_int_Array_Index_Variable) == 0x000030, "Member 'GroundSlamAbilityBP_C_Use::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, K2Node_DynamicCast_AsMinion_2) == 0x000038, "Member 'GroundSlamAbilityBP_C_Use::K2Node_DynamicCast_AsMinion_2' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GroundSlamAbilityBP_C_Use::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'GroundSlamAbilityBP_C_Use::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'GroundSlamAbilityBP_C_Use::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, CallFunc_Array_Get_Item) == 0x000050, "Member 'GroundSlamAbilityBP_C_Use::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'GroundSlamAbilityBP_C_Use::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, CallFunc_GetRefMgr_RefMgr) == 0x000070, "Member 'GroundSlamAbilityBP_C_Use::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'GroundSlamAbilityBP_C_Use::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, CallFunc_GetEntityFromWorldPos_ReturnValue) == 0x000080, "Member 'GroundSlamAbilityBP_C_Use::CallFunc_GetEntityFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'GroundSlamAbilityBP_C_Use::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, K2Node_DynamicCast_AsMy_Character) == 0x000090, "Member 'GroundSlamAbilityBP_C_Use::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'GroundSlamAbilityBP_C_Use::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_Use, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000099, "Member 'GroundSlamAbilityBP_C_Use::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function GroundSlamAbilityBP.GroundSlamAbilityBP_C.ValidateTarget
// 0x0020 (0x0020 - 0x0000)
struct GroundSlamAbilityBP_C_ValidateTarget final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateTarget_valid_;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GroundSlamAbilityBP_C_ValidateTarget) == 0x000008, "Wrong alignment on GroundSlamAbilityBP_C_ValidateTarget");
static_assert(sizeof(GroundSlamAbilityBP_C_ValidateTarget) == 0x000020, "Wrong size on GroundSlamAbilityBP_C_ValidateTarget");
static_assert(offsetof(GroundSlamAbilityBP_C_ValidateTarget, Target) == 0x000000, "Member 'GroundSlamAbilityBP_C_ValidateTarget::Target' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_ValidateTarget, Valid_) == 0x000018, "Member 'GroundSlamAbilityBP_C_ValidateTarget::Valid_' has a wrong offset!");
static_assert(offsetof(GroundSlamAbilityBP_C_ValidateTarget, CallFunc_ValidateTarget_valid_) == 0x000019, "Member 'GroundSlamAbilityBP_C_ValidateTarget::CallFunc_ValidateTarget_valid_' has a wrong offset!");

}

