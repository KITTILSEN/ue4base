#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TurnDisplayer

#include "Basic.hpp"


namespace SDK::Params
{

// Function TurnDisplayer.TurnDisplayer_C.ExecuteUbergraph_TurnDisplayer
// 0x0004 (0x0004 - 0x0000)
struct TurnDisplayer_C_ExecuteUbergraph_TurnDisplayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnDisplayer_C_ExecuteUbergraph_TurnDisplayer) == 0x000004, "Wrong alignment on TurnDisplayer_C_ExecuteUbergraph_TurnDisplayer");
static_assert(sizeof(TurnDisplayer_C_ExecuteUbergraph_TurnDisplayer) == 0x000004, "Wrong size on TurnDisplayer_C_ExecuteUbergraph_TurnDisplayer");
static_assert(offsetof(TurnDisplayer_C_ExecuteUbergraph_TurnDisplayer, EntryPoint) == 0x000000, "Member 'TurnDisplayer_C_ExecuteUbergraph_TurnDisplayer::EntryPoint' has a wrong offset!");

// Function TurnDisplayer.TurnDisplayer_C.StartEnemyTurn
// 0x0010 (0x0010 - 0x0000)
struct TurnDisplayer_C_StartEnemyTurn final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24F5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnDisplayer_C_StartEnemyTurn) == 0x000008, "Wrong alignment on TurnDisplayer_C_StartEnemyTurn");
static_assert(sizeof(TurnDisplayer_C_StartEnemyTurn) == 0x000010, "Wrong size on TurnDisplayer_C_StartEnemyTurn");
static_assert(offsetof(TurnDisplayer_C_StartEnemyTurn, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'TurnDisplayer_C_StartEnemyTurn::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnDisplayer_C_StartEnemyTurn, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'TurnDisplayer_C_StartEnemyTurn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function TurnDisplayer.TurnDisplayer_C.StartPlayerTurn
// 0x0010 (0x0010 - 0x0000)
struct TurnDisplayer_C_StartPlayerTurn final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24F6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnDisplayer_C_StartPlayerTurn) == 0x000008, "Wrong alignment on TurnDisplayer_C_StartPlayerTurn");
static_assert(sizeof(TurnDisplayer_C_StartPlayerTurn) == 0x000010, "Wrong size on TurnDisplayer_C_StartPlayerTurn");
static_assert(offsetof(TurnDisplayer_C_StartPlayerTurn, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'TurnDisplayer_C_StartPlayerTurn::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnDisplayer_C_StartPlayerTurn, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'TurnDisplayer_C_StartPlayerTurn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function TurnDisplayer.TurnDisplayer_C.TranslateThis
// 0x0058 (0x0058 - 0x0000)
struct TurnDisplayer_C_TranslateThis final
{
public:
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTextByKey_Output;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTextByKey_Output_1;                    // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0040(0x0018)()
};
static_assert(alignof(TurnDisplayer_C_TranslateThis) == 0x000008, "Wrong alignment on TurnDisplayer_C_TranslateThis");
static_assert(sizeof(TurnDisplayer_C_TranslateThis) == 0x000058, "Wrong size on TurnDisplayer_C_TranslateThis");
static_assert(offsetof(TurnDisplayer_C_TranslateThis, CallFunc_GetRefMgr_RefMgr) == 0x000000, "Member 'TurnDisplayer_C_TranslateThis::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(TurnDisplayer_C_TranslateThis, CallFunc_GetTextByKey_Output) == 0x000008, "Member 'TurnDisplayer_C_TranslateThis::CallFunc_GetTextByKey_Output' has a wrong offset!");
static_assert(offsetof(TurnDisplayer_C_TranslateThis, CallFunc_GetTextByKey_Output_1) == 0x000018, "Member 'TurnDisplayer_C_TranslateThis::CallFunc_GetTextByKey_Output_1' has a wrong offset!");
static_assert(offsetof(TurnDisplayer_C_TranslateThis, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'TurnDisplayer_C_TranslateThis::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnDisplayer_C_TranslateThis, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000040, "Member 'TurnDisplayer_C_TranslateThis::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

}

