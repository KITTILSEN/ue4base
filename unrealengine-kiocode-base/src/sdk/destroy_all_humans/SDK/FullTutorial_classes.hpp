#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FullTutorial

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PlayerStates_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FullTutorial.FullTutorial_C
// 0x0070 (0x0300 - 0x0290)
class AFullTutorial_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Started;                                           // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CharacterSelected;                                 // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Moved;                                             // 0x02A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReachedFirstCorridor;                              // 0x02A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReachedSecondTrigger;                              // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LostTurnAfterSecondGroupAppeared;                  // 0x02A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shown_Wind;                                        // 0x02A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShownFireball;                                     // 0x02A7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsedFireball;                                      // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReachedThirdTrigger;                               // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReachedTriggerAfterCauldron;                       // 0x02AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReachedAnanasTrigger;                              // 0x02AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReachedTriggerAfterAnanas;                         // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235C[0x3];                                     // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 MinCam;                                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MaxCam;                                            // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AStandardEnemy_C*>               MStandardEnemies;                                  // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ARangedEnemy_C*>                 MRangedEnemes;                                     // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ADialogueManagerBP_C*                   DialogueMGR;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         DialogueSequence;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AExplosiveEnemy_C*>              MExplosiveEnemies;                                 // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void One0_ReachedAnanasTrigger();
	void One1_ReachedTriggerAfterAnanas();
	void One_IfSelectedChar();
	void Two_IfMoved();
	void Three_ReachedTrigger();
	void FourMinus5_CheckIfLostTurnAfterSecondTrigger();
	void Four_ReachedSecondTrigger();
	void Five_If_gained_turn_after_second_group_appears();
	void Six_showFireballifwindused();
	void Seven_if_usedfireball();
	void Eight_reachedThirdTrigger();
	void Nine_ReachedTriggerAfterCauldron();
	void ExecuteUbergraph_FullTutorial(int32 EntryPoint);
	void HideAllEnemies();
	void MainChecks();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RiseEnemyGroup(int32 Group);
	void SetEnemyActive(class AActor* Who);
	void Show_Tutorial_Dialogue(const class FString& TextKeys, bool AutoAdvance, double Duration_if_autoadvance);
	void ShowEnemy();
	void StartTutorial();
	void TriggerHandle(class ATutorialTrigger_C* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FullTutorial_C">();
	}
	static class AFullTutorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFullTutorial_C>();
	}
};
static_assert(alignof(AFullTutorial_C) == 0x000008, "Wrong alignment on AFullTutorial_C");
static_assert(sizeof(AFullTutorial_C) == 0x000300, "Wrong size on AFullTutorial_C");
static_assert(offsetof(AFullTutorial_C, UberGraphFrame) == 0x000290, "Member 'AFullTutorial_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, DefaultSceneRoot) == 0x000298, "Member 'AFullTutorial_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, Started) == 0x0002A0, "Member 'AFullTutorial_C::Started' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, CharacterSelected) == 0x0002A1, "Member 'AFullTutorial_C::CharacterSelected' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, Moved) == 0x0002A2, "Member 'AFullTutorial_C::Moved' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, ReachedFirstCorridor) == 0x0002A3, "Member 'AFullTutorial_C::ReachedFirstCorridor' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, ReachedSecondTrigger) == 0x0002A4, "Member 'AFullTutorial_C::ReachedSecondTrigger' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, LostTurnAfterSecondGroupAppeared) == 0x0002A5, "Member 'AFullTutorial_C::LostTurnAfterSecondGroupAppeared' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, Shown_Wind) == 0x0002A6, "Member 'AFullTutorial_C::Shown_Wind' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, ShownFireball) == 0x0002A7, "Member 'AFullTutorial_C::ShownFireball' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, UsedFireball) == 0x0002A8, "Member 'AFullTutorial_C::UsedFireball' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, ReachedThirdTrigger) == 0x0002A9, "Member 'AFullTutorial_C::ReachedThirdTrigger' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, ReachedTriggerAfterCauldron) == 0x0002AA, "Member 'AFullTutorial_C::ReachedTriggerAfterCauldron' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, ReachedAnanasTrigger) == 0x0002AB, "Member 'AFullTutorial_C::ReachedAnanasTrigger' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, ReachedTriggerAfterAnanas) == 0x0002AC, "Member 'AFullTutorial_C::ReachedTriggerAfterAnanas' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, MinCam) == 0x0002B0, "Member 'AFullTutorial_C::MinCam' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, MaxCam) == 0x0002B8, "Member 'AFullTutorial_C::MaxCam' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, MStandardEnemies) == 0x0002C0, "Member 'AFullTutorial_C::MStandardEnemies' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, MRangedEnemes) == 0x0002D0, "Member 'AFullTutorial_C::MRangedEnemes' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, DialogueMGR) == 0x0002E0, "Member 'AFullTutorial_C::DialogueMGR' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, DialogueSequence) == 0x0002E8, "Member 'AFullTutorial_C::DialogueSequence' has a wrong offset!");
static_assert(offsetof(AFullTutorial_C, MExplosiveEnemies) == 0x0002F0, "Member 'AFullTutorial_C::MExplosiveEnemies' has a wrong offset!");

}

