#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameInstanceBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LanguageListEnum_structs.hpp"


namespace SDK::Params
{

// Function GameInstanceBP.GameInstanceBP_C.ExecuteUbergraph_GameInstanceBP
// 0x0058 (0x0058 - 0x0000)
struct GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24FF[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGameBP_C*                          CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2500[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGameBP_C*                          K2Node_DynamicCast_AsSave_Game_BP;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2501[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP) == 0x000008, "Wrong alignment on GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP");
static_assert(sizeof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP) == 0x000058, "Wrong size on GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, EntryPoint) == 0x000000, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000028, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000030, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, CallFunc_SaveGameToSlot_ReturnValue) == 0x000038, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, K2Node_DynamicCast_AsSave_Game_BP) == 0x000040, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::K2Node_DynamicCast_AsSave_Game_BP' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000049, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP, K2Node_MakeStruct_IntPoint) == 0x00004C, "Member 'GameInstanceBP_C_ExecuteUbergraph_GameInstanceBP::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function GameInstanceBP.GameInstanceBP_C.SetLanguage
// 0x0040 (0x0040 - 0x0000)
struct GameInstanceBP_C_SetLanguage final
{
public:
	ELanguageListEnum                             NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2502[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHUDWIdget_C*                           CallFunc_GetHUD_HUD;                               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADefaultGamemodeBP_C*                   K2Node_DynamicCast_AsDefault_Gamemode_BP;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2503[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainMenuGamemodeBP_C*                  K2Node_DynamicCast_AsMain_Menu_Gamemode_BP;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_SetLanguage) == 0x000008, "Wrong alignment on GameInstanceBP_C_SetLanguage");
static_assert(sizeof(GameInstanceBP_C_SetLanguage) == 0x000040, "Wrong size on GameInstanceBP_C_SetLanguage");
static_assert(offsetof(GameInstanceBP_C_SetLanguage, NewParam) == 0x000000, "Member 'GameInstanceBP_C_SetLanguage::NewParam' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetLanguage, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'GameInstanceBP_C_SetLanguage::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetLanguage, CallFunc_GetHUD_HUD) == 0x000010, "Member 'GameInstanceBP_C_SetLanguage::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetLanguage, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'GameInstanceBP_C_SetLanguage::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetLanguage, K2Node_DynamicCast_AsDefault_Gamemode_BP) == 0x000020, "Member 'GameInstanceBP_C_SetLanguage::K2Node_DynamicCast_AsDefault_Gamemode_BP' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetLanguage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GameInstanceBP_C_SetLanguage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetLanguage, K2Node_DynamicCast_AsMain_Menu_Gamemode_BP) == 0x000030, "Member 'GameInstanceBP_C_SetLanguage::K2Node_DynamicCast_AsMain_Menu_Gamemode_BP' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetLanguage, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'GameInstanceBP_C_SetLanguage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GameInstanceBP.GameInstanceBP_C.SetMaxReachedLevel
// 0x0008 (0x0008 - 0x0000)
struct GameInstanceBP_C_SetMaxReachedLevel final
{
public:
	int32                                         Param_MaxReachedLevel;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_SetMaxReachedLevel) == 0x000004, "Wrong alignment on GameInstanceBP_C_SetMaxReachedLevel");
static_assert(sizeof(GameInstanceBP_C_SetMaxReachedLevel) == 0x000008, "Wrong size on GameInstanceBP_C_SetMaxReachedLevel");
static_assert(offsetof(GameInstanceBP_C_SetMaxReachedLevel, Param_MaxReachedLevel) == 0x000000, "Member 'GameInstanceBP_C_SetMaxReachedLevel::Param_MaxReachedLevel' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetMaxReachedLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'GameInstanceBP_C_SetMaxReachedLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function GameInstanceBP.GameInstanceBP_C.SetMusicVolume
// 0x0030 (0x0030 - 0x0000)
struct GameInstanceBP_C_SetMusicVolume final
{
public:
	double                                        NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADefaultGamemodeBP_C*                   K2Node_DynamicCast_AsDefault_Gamemode_BP;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2504[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainMenuGamemodeBP_C*                  K2Node_DynamicCast_AsMain_Menu_Gamemode_BP;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_SetMusicVolume) == 0x000008, "Wrong alignment on GameInstanceBP_C_SetMusicVolume");
static_assert(sizeof(GameInstanceBP_C_SetMusicVolume) == 0x000030, "Wrong size on GameInstanceBP_C_SetMusicVolume");
static_assert(offsetof(GameInstanceBP_C_SetMusicVolume, NewParam) == 0x000000, "Member 'GameInstanceBP_C_SetMusicVolume::NewParam' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetMusicVolume, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'GameInstanceBP_C_SetMusicVolume::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetMusicVolume, K2Node_DynamicCast_AsDefault_Gamemode_BP) == 0x000010, "Member 'GameInstanceBP_C_SetMusicVolume::K2Node_DynamicCast_AsDefault_Gamemode_BP' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetMusicVolume, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GameInstanceBP_C_SetMusicVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetMusicVolume, K2Node_DynamicCast_AsMain_Menu_Gamemode_BP) == 0x000020, "Member 'GameInstanceBP_C_SetMusicVolume::K2Node_DynamicCast_AsMain_Menu_Gamemode_BP' has a wrong offset!");
static_assert(offsetof(GameInstanceBP_C_SetMusicVolume, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GameInstanceBP_C_SetMusicVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GameInstanceBP.GameInstanceBP_C.SetResolution
// 0x0008 (0x0008 - 0x0000)
struct GameInstanceBP_C_SetResolution final
{
public:
	struct FIntPoint                              Param_CurrentResolution;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_SetResolution) == 0x000004, "Wrong alignment on GameInstanceBP_C_SetResolution");
static_assert(sizeof(GameInstanceBP_C_SetResolution) == 0x000008, "Wrong size on GameInstanceBP_C_SetResolution");
static_assert(offsetof(GameInstanceBP_C_SetResolution, Param_CurrentResolution) == 0x000000, "Member 'GameInstanceBP_C_SetResolution::Param_CurrentResolution' has a wrong offset!");

// Function GameInstanceBP.GameInstanceBP_C.SetScalability
// 0x0004 (0x0004 - 0x0000)
struct GameInstanceBP_C_SetScalability final
{
public:
	int32                                         Param_CurrentScalability;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_SetScalability) == 0x000004, "Wrong alignment on GameInstanceBP_C_SetScalability");
static_assert(sizeof(GameInstanceBP_C_SetScalability) == 0x000004, "Wrong size on GameInstanceBP_C_SetScalability");
static_assert(offsetof(GameInstanceBP_C_SetScalability, Param_CurrentScalability) == 0x000000, "Member 'GameInstanceBP_C_SetScalability::Param_CurrentScalability' has a wrong offset!");

// Function GameInstanceBP.GameInstanceBP_C.SetSfxVolume
// 0x0008 (0x0008 - 0x0000)
struct GameInstanceBP_C_SetSfxVolume final
{
public:
	double                                        NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_SetSfxVolume) == 0x000008, "Wrong alignment on GameInstanceBP_C_SetSfxVolume");
static_assert(sizeof(GameInstanceBP_C_SetSfxVolume) == 0x000008, "Wrong size on GameInstanceBP_C_SetSfxVolume");
static_assert(offsetof(GameInstanceBP_C_SetSfxVolume, NewParam) == 0x000000, "Member 'GameInstanceBP_C_SetSfxVolume::NewParam' has a wrong offset!");

// Function GameInstanceBP.GameInstanceBP_C.SetVsync
// 0x0001 (0x0001 - 0x0000)
struct GameInstanceBP_C_SetVsync final
{
public:
	bool                                          Param_Vsync;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_SetVsync) == 0x000001, "Wrong alignment on GameInstanceBP_C_SetVsync");
static_assert(sizeof(GameInstanceBP_C_SetVsync) == 0x000001, "Wrong size on GameInstanceBP_C_SetVsync");
static_assert(offsetof(GameInstanceBP_C_SetVsync, Param_Vsync) == 0x000000, "Member 'GameInstanceBP_C_SetVsync::Param_Vsync' has a wrong offset!");

// Function GameInstanceBP.GameInstanceBP_C.SetWindowmode
// 0x0001 (0x0001 - 0x0000)
struct GameInstanceBP_C_SetWindowmode final
{
public:
	EWindowMode                                   Param_CurrentWindowMode;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameInstanceBP_C_SetWindowmode) == 0x000001, "Wrong alignment on GameInstanceBP_C_SetWindowmode");
static_assert(sizeof(GameInstanceBP_C_SetWindowmode) == 0x000001, "Wrong size on GameInstanceBP_C_SetWindowmode");
static_assert(offsetof(GameInstanceBP_C_SetWindowmode, Param_CurrentWindowMode) == 0x000000, "Member 'GameInstanceBP_C_SetWindowmode::Param_CurrentWindowMode' has a wrong offset!");

}

