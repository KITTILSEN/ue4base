#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StandardAttack

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function StandardAttack.StandardAttack_C.ContinueAction
// 0x0018 (0x0018 - 0x0000)
struct StandardAttack_C_ContinueAction final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_ContinueAction) == 0x000008, "Wrong alignment on StandardAttack_C_ContinueAction");
static_assert(sizeof(StandardAttack_C_ContinueAction) == 0x000018, "Wrong size on StandardAttack_C_ContinueAction");
static_assert(offsetof(StandardAttack_C_ContinueAction, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'StandardAttack_C_ContinueAction::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ContinueAction, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'StandardAttack_C_ContinueAction::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ContinueAction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'StandardAttack_C_ContinueAction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function StandardAttack.StandardAttack_C.DrawAttackRange
// 0x0038 (0x0038 - 0x0000)
struct StandardAttack_C_DrawAttackRange final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_DrawAttackRange) == 0x000008, "Wrong alignment on StandardAttack_C_DrawAttackRange");
static_assert(sizeof(StandardAttack_C_DrawAttackRange) == 0x000038, "Wrong size on StandardAttack_C_DrawAttackRange");
static_assert(offsetof(StandardAttack_C_DrawAttackRange, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'StandardAttack_C_DrawAttackRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_DrawAttackRange, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'StandardAttack_C_DrawAttackRange::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_DrawAttackRange, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000010, "Member 'StandardAttack_C_DrawAttackRange::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_DrawAttackRange, CallFunc_GetDisplayManager_NewParam) == 0x000018, "Member 'StandardAttack_C_DrawAttackRange::CallFunc_GetDisplayManager_NewParam' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_DrawAttackRange, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'StandardAttack_C_DrawAttackRange::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function StandardAttack.StandardAttack_C.IsACharacter
// 0x0040 (0x0040 - 0x0000)
struct StandardAttack_C_IsACharacter final
{
public:
	struct FVector                                WorldPos;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEntityFromWorldPos_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_IsACharacter) == 0x000008, "Wrong alignment on StandardAttack_C_IsACharacter");
static_assert(sizeof(StandardAttack_C_IsACharacter) == 0x000040, "Wrong size on StandardAttack_C_IsACharacter");
static_assert(offsetof(StandardAttack_C_IsACharacter, WorldPos) == 0x000000, "Member 'StandardAttack_C_IsACharacter::WorldPos' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_IsACharacter, ReturnValue) == 0x000018, "Member 'StandardAttack_C_IsACharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_IsACharacter, CallFunc_GetGridMgr_GM) == 0x000020, "Member 'StandardAttack_C_IsACharacter::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_IsACharacter, CallFunc_GetEntityFromWorldPos_ReturnValue) == 0x000028, "Member 'StandardAttack_C_IsACharacter::CallFunc_GetEntityFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_IsACharacter, K2Node_DynamicCast_AsMy_Character) == 0x000030, "Member 'StandardAttack_C_IsACharacter::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_IsACharacter, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'StandardAttack_C_IsACharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function StandardAttack.StandardAttack_C.OnAbilityDeselected
// 0x0018 (0x0018 - 0x0000)
struct StandardAttack_C_OnAbilityDeselected final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMainCharacter_C*                       K2Node_DynamicCast_AsMain_Character;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_OnAbilityDeselected) == 0x000008, "Wrong alignment on StandardAttack_C_OnAbilityDeselected");
static_assert(sizeof(StandardAttack_C_OnAbilityDeselected) == 0x000018, "Wrong size on StandardAttack_C_OnAbilityDeselected");
static_assert(offsetof(StandardAttack_C_OnAbilityDeselected, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'StandardAttack_C_OnAbilityDeselected::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnAbilityDeselected, K2Node_DynamicCast_AsMain_Character) == 0x000008, "Member 'StandardAttack_C_OnAbilityDeselected::K2Node_DynamicCast_AsMain_Character' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnAbilityDeselected, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'StandardAttack_C_OnAbilityDeselected::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function StandardAttack.StandardAttack_C.OnAbilitySelected
// 0x0018 (0x0018 - 0x0000)
struct StandardAttack_C_OnAbilitySelected final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMainCharacter_C*                       K2Node_DynamicCast_AsMain_Character;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_OnAbilitySelected) == 0x000008, "Wrong alignment on StandardAttack_C_OnAbilitySelected");
static_assert(sizeof(StandardAttack_C_OnAbilitySelected) == 0x000018, "Wrong size on StandardAttack_C_OnAbilitySelected");
static_assert(offsetof(StandardAttack_C_OnAbilitySelected, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'StandardAttack_C_OnAbilitySelected::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnAbilitySelected, K2Node_DynamicCast_AsMain_Character) == 0x000008, "Member 'StandardAttack_C_OnAbilitySelected::K2Node_DynamicCast_AsMain_Character' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnAbilitySelected, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'StandardAttack_C_OnAbilitySelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function StandardAttack.StandardAttack_C.OnEnd
// 0x00B8 (0x00B8 - 0x0000)
struct StandardAttack_C_OnEnd final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2730[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAlliedCharacter_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2731[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2732[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMinion1_C*                             K2Node_DynamicCast_AsMinion_1;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2733[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHUDWIdget_C*                           CallFunc_GetHUD_HUD;                               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_2;                       // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEntityFromWorldPos_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC_1;                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_OnEnd) == 0x000008, "Wrong alignment on StandardAttack_C_OnEnd");
static_assert(sizeof(StandardAttack_C_OnEnd) == 0x0000B8, "Wrong size on StandardAttack_C_OnEnd");
static_assert(offsetof(StandardAttack_C_OnEnd, Temp_int_Array_Index_Variable) == 0x000000, "Member 'StandardAttack_C_OnEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'StandardAttack_C_OnEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'StandardAttack_C_OnEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetRefMgr_RefMgr) == 0x000010, "Member 'StandardAttack_C_OnEnd::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'StandardAttack_C_OnEnd::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetPlayerController_PC) == 0x000020, "Member 'StandardAttack_C_OnEnd::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_Array_Get_Item) == 0x000028, "Member 'StandardAttack_C_OnEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'StandardAttack_C_OnEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, K2Node_DynamicCast_AsMinion_2) == 0x000038, "Member 'StandardAttack_C_OnEnd::K2Node_DynamicCast_AsMinion_2' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'StandardAttack_C_OnEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'StandardAttack_C_OnEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'StandardAttack_C_OnEnd::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetOwner_ReturnValue_1) == 0x000060, "Member 'StandardAttack_C_OnEnd::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, K2Node_DynamicCast_AsMinion_1) == 0x000068, "Member 'StandardAttack_C_OnEnd::K2Node_DynamicCast_AsMinion_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'StandardAttack_C_OnEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetRefMgr_RefMgr_1) == 0x000078, "Member 'StandardAttack_C_OnEnd::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetHUD_HUD) == 0x000080, "Member 'StandardAttack_C_OnEnd::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetGridMgr_GM) == 0x000088, "Member 'StandardAttack_C_OnEnd::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetRefMgr_RefMgr_2) == 0x000090, "Member 'StandardAttack_C_OnEnd::CallFunc_GetRefMgr_RefMgr_2' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetEntityFromWorldPos_ReturnValue) == 0x000098, "Member 'StandardAttack_C_OnEnd::CallFunc_GetEntityFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, CallFunc_GetPlayerController_PC_1) == 0x0000A0, "Member 'StandardAttack_C_OnEnd::CallFunc_GetPlayerController_PC_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, K2Node_DynamicCast_AsMy_Character) == 0x0000A8, "Member 'StandardAttack_C_OnEnd::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_OnEnd, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'StandardAttack_C_OnEnd::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function StandardAttack.StandardAttack_C.PreDisplayTarget
// 0x0020 (0x0020 - 0x0000)
struct StandardAttack_C_PreDisplayTarget final
{
public:
	struct FVector                                Param_Target;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_PreDisplayTarget) == 0x000008, "Wrong alignment on StandardAttack_C_PreDisplayTarget");
static_assert(sizeof(StandardAttack_C_PreDisplayTarget) == 0x000020, "Wrong size on StandardAttack_C_PreDisplayTarget");
static_assert(offsetof(StandardAttack_C_PreDisplayTarget, Param_Target) == 0x000000, "Member 'StandardAttack_C_PreDisplayTarget::Param_Target' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr) == 0x000018, "Member 'StandardAttack_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");

// Function StandardAttack.StandardAttack_C.Use
// 0x0088 (0x0088 - 0x0000)
struct StandardAttack_C_Use final
{
public:
	struct FVector                                AbilityTarget;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldPosFromCellXY_ReturnValue;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2734[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character_1;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2735[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainCharacter_C*                       K2Node_DynamicCast_AsMain_Character;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_Use) == 0x000008, "Wrong alignment on StandardAttack_C_Use");
static_assert(sizeof(StandardAttack_C_Use) == 0x000088, "Wrong size on StandardAttack_C_Use");
static_assert(offsetof(StandardAttack_C_Use, AbilityTarget) == 0x000000, "Member 'StandardAttack_C_Use::AbilityTarget' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, CallFunc_GetGridMgr_GM) == 0x000018, "Member 'StandardAttack_C_Use::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'StandardAttack_C_Use::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, CallFunc_GetWorldPosFromCellXY_ReturnValue) == 0x000028, "Member 'StandardAttack_C_Use::CallFunc_GetWorldPosFromCellXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, K2Node_DynamicCast_AsMy_Character) == 0x000040, "Member 'StandardAttack_C_Use::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'StandardAttack_C_Use::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, CallFunc_GetRefMgr_RefMgr) == 0x000050, "Member 'StandardAttack_C_Use::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, CallFunc_GetPlayerController_PC) == 0x000058, "Member 'StandardAttack_C_Use::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, CallFunc_GetOwner_ReturnValue_1) == 0x000060, "Member 'StandardAttack_C_Use::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, K2Node_DynamicCast_AsMy_Character_1) == 0x000068, "Member 'StandardAttack_C_Use::K2Node_DynamicCast_AsMy_Character_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'StandardAttack_C_Use::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, K2Node_DynamicCast_AsMain_Character) == 0x000078, "Member 'StandardAttack_C_Use::K2Node_DynamicCast_AsMain_Character' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_Use, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'StandardAttack_C_Use::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function StandardAttack.StandardAttack_C.ValidateTarget
// 0x0148 (0x0148 - 0x0000)
struct StandardAttack_C_ValidateTarget final
{
public:
	struct FVector                                Param_Target;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2736[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsACharacter_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2737[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAlliedCharacter_C*                     K2Node_DynamicCast_AsAllied_Character;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2738[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEntityFromWorldPos_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2739[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue_1;      // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_273A[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAlliedCharacter_C*                     K2Node_DynamicCast_AsAllied_Character_1;           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_273B[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCellDistanceActor_ReturnValue;         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClearPath_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_273C[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(StandardAttack_C_ValidateTarget) == 0x000008, "Wrong alignment on StandardAttack_C_ValidateTarget");
static_assert(sizeof(StandardAttack_C_ValidateTarget) == 0x000148, "Wrong size on StandardAttack_C_ValidateTarget");
static_assert(offsetof(StandardAttack_C_ValidateTarget, Param_Target) == 0x000000, "Member 'StandardAttack_C_ValidateTarget::Param_Target' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, Valid_) == 0x000018, "Member 'StandardAttack_C_ValidateTarget::Valid_' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, ReturnValue) == 0x000019, "Member 'StandardAttack_C_ValidateTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'StandardAttack_C_ValidateTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_IsACharacter_ReturnValue) == 0x000028, "Member 'StandardAttack_C_ValidateTarget::CallFunc_IsACharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, K2Node_DynamicCast_AsAllied_Character) == 0x000030, "Member 'StandardAttack_C_ValidateTarget::K2Node_DynamicCast_AsAllied_Character' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'StandardAttack_C_ValidateTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_GetOwner_ReturnValue_1) == 0x000040, "Member 'StandardAttack_C_ValidateTarget::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'StandardAttack_C_ValidateTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_GetGridMgr_GM) == 0x000060, "Member 'StandardAttack_C_ValidateTarget::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000068, "Member 'StandardAttack_C_ValidateTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_GetEntityFromWorldPos_ReturnValue) == 0x000080, "Member 'StandardAttack_C_ValidateTarget::CallFunc_GetEntityFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_BreakVector_X) == 0x000088, "Member 'StandardAttack_C_ValidateTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_BreakVector_Y) == 0x000090, "Member 'StandardAttack_C_ValidateTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_BreakVector_Z) == 0x000098, "Member 'StandardAttack_C_ValidateTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'StandardAttack_C_ValidateTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_FTrunc_ReturnValue) == 0x0000B8, "Member 'StandardAttack_C_ValidateTarget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue_1) == 0x0000C0, "Member 'StandardAttack_C_ValidateTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_FTrunc_ReturnValue_1) == 0x0000D8, "Member 'StandardAttack_C_ValidateTarget::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_BreakVector_X_1) == 0x0000E0, "Member 'StandardAttack_C_ValidateTarget::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_BreakVector_Y_1) == 0x0000E8, "Member 'StandardAttack_C_ValidateTarget::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_BreakVector_Z_1) == 0x0000F0, "Member 'StandardAttack_C_ValidateTarget::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, K2Node_DynamicCast_AsAllied_Character_1) == 0x0000F8, "Member 'StandardAttack_C_ValidateTarget::K2Node_DynamicCast_AsAllied_Character_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'StandardAttack_C_ValidateTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_FTrunc_ReturnValue_2) == 0x000104, "Member 'StandardAttack_C_ValidateTarget::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_FTrunc_ReturnValue_3) == 0x000108, "Member 'StandardAttack_C_ValidateTarget::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_GetCellDistanceActor_ReturnValue) == 0x00010C, "Member 'StandardAttack_C_ValidateTarget::CallFunc_GetCellDistanceActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_IsClearPath_ReturnValue) == 0x000110, "Member 'StandardAttack_C_ValidateTarget::CallFunc_IsClearPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000111, "Member 'StandardAttack_C_ValidateTarget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_GetObjectName_ReturnValue) == 0x000118, "Member 'StandardAttack_C_ValidateTarget::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_Concat_StrStr_ReturnValue) == 0x000128, "Member 'StandardAttack_C_ValidateTarget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(StandardAttack_C_ValidateTarget, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000138, "Member 'StandardAttack_C_ValidateTarget::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

}

