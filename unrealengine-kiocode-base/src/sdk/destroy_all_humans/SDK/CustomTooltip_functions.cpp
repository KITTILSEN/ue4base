#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomTooltip

#include "Basic.hpp"

#include "CustomTooltip_classes.hpp"
#include "CustomTooltip_parameters.hpp"


namespace SDK
{

// Function CustomTooltip.CustomTooltip_C.AbilityDependant
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMyAbilityBP_C*                   Which                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UCustomTooltip_C::AbilityDependant(class UMyAbilityBP_C* Which)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomTooltip_C", "AbilityDependant");

	Params::CustomTooltip_C_AbilityDependant Parms{};

	Parms.Which = Which;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomTooltip.CustomTooltip_C.PassiveDependant
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NameKey                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           DescriptionKey                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UCustomTooltip_C::PassiveDependant(const class FString& NameKey, const class FString& DescriptionKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomTooltip_C", "PassiveDependant");

	Params::CustomTooltip_C_PassiveDependant Parms{};

	Parms.NameKey = std::move(NameKey);
	Parms.DescriptionKey = std::move(DescriptionKey);

	UObject::ProcessEvent(Func, &Parms);
}

}

