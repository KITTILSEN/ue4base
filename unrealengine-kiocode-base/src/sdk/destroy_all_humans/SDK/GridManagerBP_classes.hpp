#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GridManagerBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "StrategyGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GridManagerBP.GridManagerBP_C
// 0x0068 (0x0328 - 0x02C0)
class AGridManagerBP_C final : public AGridManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugMode;                                         // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2434[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGridDebugCellSpawnable_C*>      DebugGrid;                                         // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<int32>                                 SpawnXLocations;                                   // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 SpawnYLocations;                                   // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                SpawnCellSize;                                     // 0x0310(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Create_Grid_Debug_Array();
	void CreateBarrel(int32 X, int32 Y);
	void CreateInteractable(uint8 InteractableType, int32 X, int32 Y);
	void DisplayGridDebugMode();
	void ExecuteUbergraph_GridManagerBP(int32 EntryPoint);
	void GridDebugMode();
	void HideGridDebugMode();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetCellColorXY(const struct FVector& Pos, class UMaterialInterface* Mat);
	void SetCellHide(const struct FVector& Pos, bool Hide);
	void SetInitialValues();
	void UpdateGridDebugMaterials();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GridManagerBP_C">();
	}
	static class AGridManagerBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGridManagerBP_C>();
	}
};
static_assert(alignof(AGridManagerBP_C) == 0x000008, "Wrong alignment on AGridManagerBP_C");
static_assert(sizeof(AGridManagerBP_C) == 0x000328, "Wrong size on AGridManagerBP_C");
static_assert(offsetof(AGridManagerBP_C, UberGraphFrame) == 0x0002C0, "Member 'AGridManagerBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGridManagerBP_C, Plane) == 0x0002C8, "Member 'AGridManagerBP_C::Plane' has a wrong offset!");
static_assert(offsetof(AGridManagerBP_C, DefaultSceneRoot) == 0x0002D0, "Member 'AGridManagerBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGridManagerBP_C, DebugMode) == 0x0002D8, "Member 'AGridManagerBP_C::DebugMode' has a wrong offset!");
static_assert(offsetof(AGridManagerBP_C, DebugGrid) == 0x0002E0, "Member 'AGridManagerBP_C::DebugGrid' has a wrong offset!");
static_assert(offsetof(AGridManagerBP_C, SpawnXLocations) == 0x0002F0, "Member 'AGridManagerBP_C::SpawnXLocations' has a wrong offset!");
static_assert(offsetof(AGridManagerBP_C, SpawnYLocations) == 0x000300, "Member 'AGridManagerBP_C::SpawnYLocations' has a wrong offset!");
static_assert(offsetof(AGridManagerBP_C, SpawnCellSize) == 0x000310, "Member 'AGridManagerBP_C::SpawnCellSize' has a wrong offset!");

}

