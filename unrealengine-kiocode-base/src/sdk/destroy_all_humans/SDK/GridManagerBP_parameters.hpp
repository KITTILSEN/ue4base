#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GridManagerBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GridManagerBP.GridManagerBP_C.Create Grid Debug Array
// 0x0350 (0x0350 - 0x0000)
struct GridManagerBP_C_Create_Grid_Debug_Array final
{
public:
	struct FVector                                NewLocalVar;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CellSize;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2435[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GridSize;                                          // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2436[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2437[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2438[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridDebugCellSpawnable_C*              CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2439[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue_1;           // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243A[0x8];                                     // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridDebugCellSpawnable_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243B[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243C[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243D[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243E[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243F[0x2];                                     // 0x0326(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCellSize_ReturnValue;                  // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMapSize_ReturnValue;                   // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_Create_Grid_Debug_Array) == 0x000010, "Wrong alignment on GridManagerBP_C_Create_Grid_Debug_Array");
static_assert(sizeof(GridManagerBP_C_Create_Grid_Debug_Array) == 0x000350, "Wrong size on GridManagerBP_C_Create_Grid_Debug_Array");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, NewLocalVar) == 0x000000, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::NewLocalVar' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CellSize) == 0x000018, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CellSize' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, GridSize) == 0x000020, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::GridSize' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, Temp_int_Array_Index_Variable) == 0x000038, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Conv_IntToVector_ReturnValue) == 0x000040, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, Temp_int_Variable) == 0x000058, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, Temp_int_Variable_1) == 0x00006C, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000070, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000080, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000090, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_X) == 0x0000B0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_X_1) == 0x0000E8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_Y_1) == 0x0000F0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_Z_1) == 0x0000F8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Conv_IntToVector_ReturnValue_1) == 0x000100, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Conv_IntToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_MakeVector_ReturnValue_1) == 0x000118, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Divide_VectorVector_ReturnValue) == 0x000130, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001B0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001B8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0001C0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_K2_AttachToActor_ReturnValue) == 0x0001C8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001D0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001D8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Array_Add_ReturnValue) == 0x0001E0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x0001E8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_GetTransform_ReturnValue) == 0x0001F0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000250, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakTransform_Location) == 0x000258, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakTransform_Rotation) == 0x000270, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakTransform_Scale) == 0x000288, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0002A0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_MakeVector_ReturnValue_2) == 0x0002A8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_X_2) == 0x0002C0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_Y_2) == 0x0002C8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_BreakVector_Z_2) == 0x0002D0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Add_VectorVector_ReturnValue) == 0x0002D8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_FTrunc_ReturnValue) == 0x0002F0, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002F8, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Subtract_IntInt_ReturnValue) == 0x000310, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000314, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_FTrunc_ReturnValue_1) == 0x000318, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00031C, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, Temp_int_Loop_Counter_Variable) == 0x000320, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000324, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000325, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_Add_IntInt_ReturnValue_2) == 0x000328, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_GetCellSize_ReturnValue) == 0x00032C, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_GetCellSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_Create_Grid_Debug_Array, CallFunc_GetMapSize_ReturnValue) == 0x000330, "Member 'GridManagerBP_C_Create_Grid_Debug_Array::CallFunc_GetMapSize_ReturnValue' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.CreateBarrel
// 0x0018 (0x0018 - 0x0000)
struct GridManagerBP_C_CreateBarrel final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_CreateBarrel) == 0x000008, "Wrong alignment on GridManagerBP_C_CreateBarrel");
static_assert(sizeof(GridManagerBP_C_CreateBarrel) == 0x000018, "Wrong size on GridManagerBP_C_CreateBarrel");
static_assert(offsetof(GridManagerBP_C_CreateBarrel, X) == 0x000000, "Member 'GridManagerBP_C_CreateBarrel::X' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_CreateBarrel, Y) == 0x000004, "Member 'GridManagerBP_C_CreateBarrel::Y' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_CreateBarrel, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'GridManagerBP_C_CreateBarrel::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_CreateBarrel, CallFunc_GetGridManager_grid) == 0x000010, "Member 'GridManagerBP_C_CreateBarrel::CallFunc_GetGridManager_grid' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.CreateInteractable
// 0x0010 (0x0010 - 0x0000)
struct GridManagerBP_C_CreateInteractable final
{
public:
	uint8                                         InteractableType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2440[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         X;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_CreateInteractable) == 0x000004, "Wrong alignment on GridManagerBP_C_CreateInteractable");
static_assert(sizeof(GridManagerBP_C_CreateInteractable) == 0x000010, "Wrong size on GridManagerBP_C_CreateInteractable");
static_assert(offsetof(GridManagerBP_C_CreateInteractable, InteractableType) == 0x000000, "Member 'GridManagerBP_C_CreateInteractable::InteractableType' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_CreateInteractable, X) == 0x000004, "Member 'GridManagerBP_C_CreateInteractable::X' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_CreateInteractable, Y) == 0x000008, "Member 'GridManagerBP_C_CreateInteractable::Y' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_CreateInteractable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'GridManagerBP_C_CreateInteractable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.DisplayGridDebugMode
// 0x0020 (0x0020 - 0x0000)
struct GridManagerBP_C_DisplayGridDebugMode final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_DisplayGridDebugMode) == 0x000008, "Wrong alignment on GridManagerBP_C_DisplayGridDebugMode");
static_assert(sizeof(GridManagerBP_C_DisplayGridDebugMode) == 0x000020, "Wrong size on GridManagerBP_C_DisplayGridDebugMode");
static_assert(offsetof(GridManagerBP_C_DisplayGridDebugMode, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GridManagerBP_C_DisplayGridDebugMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_DisplayGridDebugMode, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GridManagerBP_C_DisplayGridDebugMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_DisplayGridDebugMode, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GridManagerBP_C_DisplayGridDebugMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_DisplayGridDebugMode, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'GridManagerBP_C_DisplayGridDebugMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_DisplayGridDebugMode, CallFunc_Array_Get_Item) == 0x000010, "Member 'GridManagerBP_C_DisplayGridDebugMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_DisplayGridDebugMode, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'GridManagerBP_C_DisplayGridDebugMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.ExecuteUbergraph_GridManagerBP
// 0x0008 (0x0008 - 0x0000)
struct GridManagerBP_C_ExecuteUbergraph_GridManagerBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_ExecuteUbergraph_GridManagerBP) == 0x000004, "Wrong alignment on GridManagerBP_C_ExecuteUbergraph_GridManagerBP");
static_assert(sizeof(GridManagerBP_C_ExecuteUbergraph_GridManagerBP) == 0x000008, "Wrong size on GridManagerBP_C_ExecuteUbergraph_GridManagerBP");
static_assert(offsetof(GridManagerBP_C_ExecuteUbergraph_GridManagerBP, EntryPoint) == 0x000000, "Member 'GridManagerBP_C_ExecuteUbergraph_GridManagerBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_ExecuteUbergraph_GridManagerBP, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'GridManagerBP_C_ExecuteUbergraph_GridManagerBP::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.GridDebugMode
// 0x0001 (0x0001 - 0x0000)
struct GridManagerBP_C_GridDebugMode final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_GridDebugMode) == 0x000001, "Wrong alignment on GridManagerBP_C_GridDebugMode");
static_assert(sizeof(GridManagerBP_C_GridDebugMode) == 0x000001, "Wrong size on GridManagerBP_C_GridDebugMode");
static_assert(offsetof(GridManagerBP_C_GridDebugMode, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'GridManagerBP_C_GridDebugMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.HideGridDebugMode
// 0x0020 (0x0020 - 0x0000)
struct GridManagerBP_C_HideGridDebugMode final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_HideGridDebugMode) == 0x000008, "Wrong alignment on GridManagerBP_C_HideGridDebugMode");
static_assert(sizeof(GridManagerBP_C_HideGridDebugMode) == 0x000020, "Wrong size on GridManagerBP_C_HideGridDebugMode");
static_assert(offsetof(GridManagerBP_C_HideGridDebugMode, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GridManagerBP_C_HideGridDebugMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_HideGridDebugMode, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GridManagerBP_C_HideGridDebugMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_HideGridDebugMode, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GridManagerBP_C_HideGridDebugMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_HideGridDebugMode, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'GridManagerBP_C_HideGridDebugMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_HideGridDebugMode, CallFunc_Array_Get_Item) == 0x000010, "Member 'GridManagerBP_C_HideGridDebugMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_HideGridDebugMode, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'GridManagerBP_C_HideGridDebugMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GridManagerBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_ReceiveTick) == 0x000004, "Wrong alignment on GridManagerBP_C_ReceiveTick");
static_assert(sizeof(GridManagerBP_C_ReceiveTick) == 0x000004, "Wrong size on GridManagerBP_C_ReceiveTick");
static_assert(offsetof(GridManagerBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GridManagerBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.SetCellColorXY
// 0x0088 (0x0088 - 0x0000)
struct GridManagerBP_C_SetCellColorXY final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Mat;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMapSize_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2441[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridDebugCellSpawnable_C*              CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_SetCellColorXY) == 0x000008, "Wrong alignment on GridManagerBP_C_SetCellColorXY");
static_assert(sizeof(GridManagerBP_C_SetCellColorXY) == 0x000088, "Wrong size on GridManagerBP_C_SetCellColorXY");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, Pos) == 0x000000, "Member 'GridManagerBP_C_SetCellColorXY::Pos' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, Mat) == 0x000018, "Member 'GridManagerBP_C_SetCellColorXY::Mat' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_GetMapSize_ReturnValue) == 0x000020, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_GetMapSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_BreakVector_X) == 0x000038, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_BreakVector_Y) == 0x000040, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_BreakVector_Z) == 0x000048, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_BreakVector_X_1) == 0x000050, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_BreakVector_Z_1) == 0x000060, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_FTrunc_ReturnValue) == 0x000078, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellColorXY, CallFunc_Array_Get_Item) == 0x000080, "Member 'GridManagerBP_C_SetCellColorXY::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GridManagerBP.GridManagerBP_C.SetCellHide
// 0x00A0 (0x00A0 - 0x0000)
struct GridManagerBP_C_SetCellHide final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2442[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMapSize_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2443[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridDebugCellSpawnable_C*              CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridManagerBP_C_SetCellHide) == 0x000008, "Wrong alignment on GridManagerBP_C_SetCellHide");
static_assert(sizeof(GridManagerBP_C_SetCellHide) == 0x0000A0, "Wrong size on GridManagerBP_C_SetCellHide");
static_assert(offsetof(GridManagerBP_C_SetCellHide, Pos) == 0x000000, "Member 'GridManagerBP_C_SetCellHide::Pos' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, Hide) == 0x000018, "Member 'GridManagerBP_C_SetCellHide::Hide' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_GetMapSize_ReturnValue) == 0x000020, "Member 'GridManagerBP_C_SetCellHide::CallFunc_GetMapSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000038, "Member 'GridManagerBP_C_SetCellHide::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_BreakVector_X) == 0x000050, "Member 'GridManagerBP_C_SetCellHide::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_BreakVector_Y) == 0x000058, "Member 'GridManagerBP_C_SetCellHide::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_BreakVector_Z) == 0x000060, "Member 'GridManagerBP_C_SetCellHide::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_BreakVector_X_1) == 0x000068, "Member 'GridManagerBP_C_SetCellHide::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'GridManagerBP_C_SetCellHide::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'GridManagerBP_C_SetCellHide::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'GridManagerBP_C_SetCellHide::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'GridManagerBP_C_SetCellHide::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_FTrunc_ReturnValue) == 0x000090, "Member 'GridManagerBP_C_SetCellHide::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridManagerBP_C_SetCellHide, CallFunc_Array_Get_Item) == 0x000098, "Member 'GridManagerBP_C_SetCellHide::CallFunc_Array_Get_Item' has a wrong offset!");

}

