#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainCharacter

#include "Basic.hpp"

#include "MainCharacter_classes.hpp"
#include "MainCharacter_parameters.hpp"


namespace SDK
{

// Function MainCharacter.MainCharacter_C.ExecuteUbergraph_MainCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainCharacter_C::ExecuteUbergraph_MainCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "ExecuteUbergraph_MainCharacter");

	Params::MainCharacter_C_ExecuteUbergraph_MainCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainCharacter.MainCharacter_C.GetDeselected
// (Public, BlueprintCallable, BlueprintEvent)

void AMainCharacter_C::GetDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "GetDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainCharacter.MainCharacter_C.GetSelected
// (Public, BlueprintCallable, BlueprintEvent)

void AMainCharacter_C::GetSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "GetSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainCharacter.MainCharacter_C.HideAvailableActions
// (Public, BlueprintCallable, BlueprintEvent)

void AMainCharacter_C::HideAvailableActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "HideAvailableActions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainCharacter.MainCharacter_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMainCharacter_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "ReceiveActorBeginOverlap");

	Params::MainCharacter_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainCharacter.MainCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMainCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainCharacter.MainCharacter_C.ReceiveDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMainCharacter_C::ReceiveDamage(int32 Damage, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "ReceiveDamage");

	Params::MainCharacter_C_ReceiveDamage Parms{};

	Parms.Damage = Damage;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainCharacter.MainCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "ReceiveTick");

	Params::MainCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainCharacter.MainCharacter_C.ShowAvailableActions
// (Public, BlueprintCallable, BlueprintEvent)

void AMainCharacter_C::ShowAvailableActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "ShowAvailableActions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainCharacter.MainCharacter_C.UsePassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoMinionsLeft                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainCharacter_C::UsePassive(bool* NoMinionsLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainCharacter_C", "UsePassive");

	Params::MainCharacter_C_UsePassive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoMinionsLeft != nullptr)
		*NoMinionsLeft = Parms.NoMinionsLeft;
}

}

