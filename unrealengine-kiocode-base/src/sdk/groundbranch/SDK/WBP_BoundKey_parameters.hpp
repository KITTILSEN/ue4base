#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BoundKey

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "FGBKeyIcon_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_BoundKey.WBP_BoundKey_C.ExecuteUbergraph_WBP_BoundKey
// 0x01E0 (0x01E0 - 0x0000)
struct WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Size;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0058)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Key_GetName_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFGBKeyIcon                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x00C8(0x0018)()
	class UObject*                                CallFunc_BlueprintSyncLoadAsset_ReturnValue;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x00F8(0x0058)(HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFGBKeyIcon                            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0178(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputBoundKey                         K2Node_MakeStruct_InputBoundKey;                   // 0x01C0(0x0020)()
};
static_assert(alignof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey) == 0x000008, "Wrong alignment on WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey");
static_assert(sizeof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey) == 0x0001E0, "Wrong size on WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, EntryPoint) == 0x000000, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, K2Node_CustomEvent_Size) == 0x000008, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::K2Node_CustomEvent_Size' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000068, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_Key_GetName_ReturnValue) == 0x000078, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_Key_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_Key_GetDisplayName_ReturnValue) == 0x0000C8, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_BlueprintSyncLoadAsset_ReturnValue) == 0x0000E0, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_BlueprintSyncLoadAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, K2Node_DynamicCast_AsTexture_2D) == 0x0000E8, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x0000F1, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, K2Node_MakeStruct_SlateFontInfo_1) == 0x0000F8, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000150, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_Subtract_IntInt_ReturnValue) == 0x000164, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000168, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00016C, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_Array_Get_Item) == 0x000170, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000178, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001B8, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey, K2Node_MakeStruct_InputBoundKey) == 0x0001C0, "Member 'WBP_BoundKey_C_ExecuteUbergraph_WBP_BoundKey::K2Node_MakeStruct_InputBoundKey' has a wrong offset!");

// Function WBP_BoundKey.WBP_BoundKey_C.UpdateSize
// 0x0004 (0x0004 - 0x0000)
struct WBP_BoundKey_C_UpdateSize final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoundKey_C_UpdateSize) == 0x000004, "Wrong alignment on WBP_BoundKey_C_UpdateSize");
static_assert(sizeof(WBP_BoundKey_C_UpdateSize) == 0x000004, "Wrong size on WBP_BoundKey_C_UpdateSize");
static_assert(offsetof(WBP_BoundKey_C_UpdateSize, Size) == 0x000000, "Member 'WBP_BoundKey_C_UpdateSize::Size' has a wrong offset!");

// Function WBP_BoundKey.WBP_BoundKey_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_BoundKey_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BoundKey_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_BoundKey_C_PreConstruct");
static_assert(sizeof(WBP_BoundKey_C_PreConstruct) == 0x000001, "Wrong size on WBP_BoundKey_C_PreConstruct");
static_assert(offsetof(WBP_BoundKey_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_BoundKey_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_BoundKey.WBP_BoundKey_C.DetermineInputBoudKey
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_BoundKey_C_DetermineInputBoudKey final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFoundGamepadBoundKey;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputBoundKey                         GamepadBoundKey;                                   // 0x0008(0x0020)(Edit, BlueprintVisible)
	bool                                          bFoundNonGamepadBoundKey;                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputBoundKey                         NonGamepadBoundKey;                                // 0x0030(0x0020)(Edit, BlueprintVisible)
	TArray<struct FInputBoundKey>                 LocalBoundKeys;                                    // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputBoundKey                         CallFunc_Array_Get_Item;                           // 0x0098(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputBoundKey>                 CallFunc_GetCommandBoundKeys_ReturnValue;          // 0x00C8(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_BoundKey_C_DetermineInputBoudKey) == 0x000008, "Wrong alignment on WBP_BoundKey_C_DetermineInputBoudKey");
static_assert(sizeof(WBP_BoundKey_C_DetermineInputBoudKey) == 0x0000D8, "Wrong size on WBP_BoundKey_C_DetermineInputBoudKey");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, bUsingGamepad) == 0x000000, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::bUsingGamepad' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, bFoundGamepadBoundKey) == 0x000001, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::bFoundGamepadBoundKey' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, GamepadBoundKey) == 0x000008, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::GamepadBoundKey' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, bFoundNonGamepadBoundKey) == 0x000028, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::bFoundNonGamepadBoundKey' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, NonGamepadBoundKey) == 0x000030, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::NonGamepadBoundKey' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, LocalBoundKeys) == 0x000050, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::LocalBoundKeys' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, Temp_int_Array_Index_Variable) == 0x000060, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000080, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_IsUsingGamepad_ReturnValue) == 0x000089, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008B, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_BooleanOR_ReturnValue) == 0x00008D, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Not_PreBool_ReturnValue_2) == 0x00008E, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Not_PreBool_ReturnValue_3) == 0x00008F, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_BooleanAND_ReturnValue_1) == 0x000090, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Array_Get_Item) == 0x000098, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_BooleanAND_ReturnValue_2) == 0x0000BD, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x0000BE, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x0000BF, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000C0, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_DetermineInputBoudKey, CallFunc_GetCommandBoundKeys_ReturnValue) == 0x0000C8, "Member 'WBP_BoundKey_C_DetermineInputBoudKey::CallFunc_GetCommandBoundKeys_ReturnValue' has a wrong offset!");

// Function WBP_BoundKey.WBP_BoundKey_C.SetModifierVisAndIcon
// 0x0028 (0x0028 - 0x0000)
struct WBP_BoundKey_C_SetModifierVisAndIcon final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Action_0;                                          // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Container;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetModifierIcon_Icon;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoundKey_C_SetModifierVisAndIcon) == 0x000008, "Wrong alignment on WBP_BoundKey_C_SetModifierVisAndIcon");
static_assert(sizeof(WBP_BoundKey_C_SetModifierVisAndIcon) == 0x000028, "Wrong size on WBP_BoundKey_C_SetModifierVisAndIcon");
static_assert(offsetof(WBP_BoundKey_C_SetModifierVisAndIcon, Condition) == 0x000000, "Member 'WBP_BoundKey_C_SetModifierVisAndIcon::Condition' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_SetModifierVisAndIcon, Action_0) == 0x000004, "Member 'WBP_BoundKey_C_SetModifierVisAndIcon::Action_0' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_SetModifierVisAndIcon, Image) == 0x000010, "Member 'WBP_BoundKey_C_SetModifierVisAndIcon::Image' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_SetModifierVisAndIcon, Container) == 0x000018, "Member 'WBP_BoundKey_C_SetModifierVisAndIcon::Container' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_SetModifierVisAndIcon, CallFunc_GetModifierIcon_Icon) == 0x000020, "Member 'WBP_BoundKey_C_SetModifierVisAndIcon::CallFunc_GetModifierIcon_Icon' has a wrong offset!");

// Function WBP_BoundKey.WBP_BoundKey_C.GetModifierGamepadButton
// 0x0088 (0x0088 - 0x0000)
struct WBP_BoundKey_C_GetModifierGamepadButton final
{
public:
	class FName                                   Action_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   OutModifierButton;                                 // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	struct FKey                                   ModifierButton;                                    // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FInputBoundKey>                 CallFunc_GetCommandBoundKeys_ReturnValue;          // 0x0038(0x0010)(ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputBoundKey                         CallFunc_Array_Get_Item;                           // 0x0060(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoundKey_C_GetModifierGamepadButton) == 0x000008, "Wrong alignment on WBP_BoundKey_C_GetModifierGamepadButton");
static_assert(sizeof(WBP_BoundKey_C_GetModifierGamepadButton) == 0x000088, "Wrong size on WBP_BoundKey_C_GetModifierGamepadButton");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, Action_0) == 0x000000, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::Action_0' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, OutModifierButton) == 0x000008, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::OutModifierButton' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, ModifierButton) == 0x000020, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::ModifierButton' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, CallFunc_GetCommandBoundKeys_ReturnValue) == 0x000038, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::CallFunc_GetCommandBoundKeys_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, Temp_int_Array_Index_Variable) == 0x000054, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, CallFunc_Array_Get_Item) == 0x000060, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000082, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierGamepadButton, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'WBP_BoundKey_C_GetModifierGamepadButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_BoundKey.WBP_BoundKey_C.GetModifierKey
// 0x0028 (0x0028 - 0x0000)
struct WBP_BoundKey_C_GetModifierKey final
{
public:
	class FName                                   Action_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   OutModifierKey;                                    // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BoundKey_C_GetModifierKey) == 0x000008, "Wrong alignment on WBP_BoundKey_C_GetModifierKey");
static_assert(sizeof(WBP_BoundKey_C_GetModifierKey) == 0x000028, "Wrong size on WBP_BoundKey_C_GetModifierKey");
static_assert(offsetof(WBP_BoundKey_C_GetModifierKey, Action_0) == 0x000000, "Member 'WBP_BoundKey_C_GetModifierKey::Action_0' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierKey, OutModifierKey) == 0x000008, "Member 'WBP_BoundKey_C_GetModifierKey::OutModifierKey' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierKey, K2Node_SwitchName_CmpSuccess) == 0x000020, "Member 'WBP_BoundKey_C_GetModifierKey::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function WBP_BoundKey.WBP_BoundKey_C.GetModifierIcon
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_BoundKey_C_GetModifierIcon final
{
public:
	class FName                                   Action_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   LocalKey;                                          // 0x0010(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   CallFunc_Key_GetName_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetModifierKey_OutModifierKey;            // 0x0030(0x0018)(HasGetValueTypeHash)
	struct FFGBKeyIcon                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BlueprintSyncLoadAsset_ReturnValue;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetModifierGamepadButton_OutModifierButton; // 0x0098(0x0018)(HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BlueprintSyncLoadAsset_ReturnValue_1;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BoundKey_C_GetModifierIcon) == 0x000008, "Wrong alignment on WBP_BoundKey_C_GetModifierIcon");
static_assert(sizeof(WBP_BoundKey_C_GetModifierIcon) == 0x0000E0, "Wrong size on WBP_BoundKey_C_GetModifierIcon");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, Action_0) == 0x000000, "Member 'WBP_BoundKey_C_GetModifierIcon::Action_0' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, Icon) == 0x000008, "Member 'WBP_BoundKey_C_GetModifierIcon::Icon' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, LocalKey) == 0x000010, "Member 'WBP_BoundKey_C_GetModifierIcon::LocalKey' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, CallFunc_Key_GetName_ReturnValue) == 0x000028, "Member 'WBP_BoundKey_C_GetModifierIcon::CallFunc_Key_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, CallFunc_GetModifierKey_OutModifierKey) == 0x000030, "Member 'WBP_BoundKey_C_GetModifierIcon::CallFunc_GetModifierKey_OutModifierKey' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'WBP_BoundKey_C_GetModifierIcon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'WBP_BoundKey_C_GetModifierIcon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, CallFunc_BlueprintSyncLoadAsset_ReturnValue) == 0x000090, "Member 'WBP_BoundKey_C_GetModifierIcon::CallFunc_BlueprintSyncLoadAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, CallFunc_GetModifierGamepadButton_OutModifierButton) == 0x000098, "Member 'WBP_BoundKey_C_GetModifierIcon::CallFunc_GetModifierGamepadButton_OutModifierButton' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, K2Node_DynamicCast_AsTexture_2D) == 0x0000B0, "Member 'WBP_BoundKey_C_GetModifierIcon::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'WBP_BoundKey_C_GetModifierIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, CallFunc_BlueprintSyncLoadAsset_ReturnValue_1) == 0x0000C0, "Member 'WBP_BoundKey_C_GetModifierIcon::CallFunc_BlueprintSyncLoadAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x0000C8, "Member 'WBP_BoundKey_C_GetModifierIcon::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, K2Node_DynamicCast_AsTexture_2D_1) == 0x0000D0, "Member 'WBP_BoundKey_C_GetModifierIcon::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(WBP_BoundKey_C_GetModifierIcon, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'WBP_BoundKey_C_GetModifierIcon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

