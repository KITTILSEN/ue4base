#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonLoadingScreen

#include "Basic.hpp"


namespace SDK::Params
{

// Function CommonLoadingScreen.LoadingProcessInterface.K2_ShouldShowLoadingScreen
// 0x0018 (0x0018 - 0x0000)
struct LoadingProcessInterface_K2_ShouldShowLoadingScreen final
{
public:
	class FString                                 OutDebugReason;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingProcessInterface_K2_ShouldShowLoadingScreen) == 0x000008, "Wrong alignment on LoadingProcessInterface_K2_ShouldShowLoadingScreen");
static_assert(sizeof(LoadingProcessInterface_K2_ShouldShowLoadingScreen) == 0x000018, "Wrong size on LoadingProcessInterface_K2_ShouldShowLoadingScreen");
static_assert(offsetof(LoadingProcessInterface_K2_ShouldShowLoadingScreen, OutDebugReason) == 0x000000, "Member 'LoadingProcessInterface_K2_ShouldShowLoadingScreen::OutDebugReason' has a wrong offset!");
static_assert(offsetof(LoadingProcessInterface_K2_ShouldShowLoadingScreen, ReturnValue) == 0x000010, "Member 'LoadingProcessInterface_K2_ShouldShowLoadingScreen::ReturnValue' has a wrong offset!");

// Function CommonLoadingScreen.LoadingProcessTask.CreateLoadingScreenProcessTask
// 0x0020 (0x0020 - 0x0000)
struct LoadingProcessTask_CreateLoadingScreenProcessTask final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ShowLoadingScreenReason;                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadingProcessTask*                    ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingProcessTask_CreateLoadingScreenProcessTask) == 0x000008, "Wrong alignment on LoadingProcessTask_CreateLoadingScreenProcessTask");
static_assert(sizeof(LoadingProcessTask_CreateLoadingScreenProcessTask) == 0x000020, "Wrong size on LoadingProcessTask_CreateLoadingScreenProcessTask");
static_assert(offsetof(LoadingProcessTask_CreateLoadingScreenProcessTask, WorldContextObject) == 0x000000, "Member 'LoadingProcessTask_CreateLoadingScreenProcessTask::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LoadingProcessTask_CreateLoadingScreenProcessTask, ShowLoadingScreenReason) == 0x000008, "Member 'LoadingProcessTask_CreateLoadingScreenProcessTask::ShowLoadingScreenReason' has a wrong offset!");
static_assert(offsetof(LoadingProcessTask_CreateLoadingScreenProcessTask, ReturnValue) == 0x000018, "Member 'LoadingProcessTask_CreateLoadingScreenProcessTask::ReturnValue' has a wrong offset!");

// Function CommonLoadingScreen.LoadingProcessTask.SetShowLoadingScreenReason
// 0x0010 (0x0010 - 0x0000)
struct LoadingProcessTask_SetShowLoadingScreenReason final
{
public:
	class FString                                 InDebugReason;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingProcessTask_SetShowLoadingScreenReason) == 0x000008, "Wrong alignment on LoadingProcessTask_SetShowLoadingScreenReason");
static_assert(sizeof(LoadingProcessTask_SetShowLoadingScreenReason) == 0x000010, "Wrong size on LoadingProcessTask_SetShowLoadingScreenReason");
static_assert(offsetof(LoadingProcessTask_SetShowLoadingScreenReason, InDebugReason) == 0x000000, "Member 'LoadingProcessTask_SetShowLoadingScreenReason::InDebugReason' has a wrong offset!");

// Function CommonLoadingScreen.LoadingScreenManager.K2_SetLoadingScreenCustomText
// 0x0018 (0x0018 - 0x0000)
struct LoadingScreenManager_K2_SetLoadingScreenCustomText final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewText;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenManager_K2_SetLoadingScreenCustomText) == 0x000008, "Wrong alignment on LoadingScreenManager_K2_SetLoadingScreenCustomText");
static_assert(sizeof(LoadingScreenManager_K2_SetLoadingScreenCustomText) == 0x000018, "Wrong size on LoadingScreenManager_K2_SetLoadingScreenCustomText");
static_assert(offsetof(LoadingScreenManager_K2_SetLoadingScreenCustomText, WorldContextObject) == 0x000000, "Member 'LoadingScreenManager_K2_SetLoadingScreenCustomText::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LoadingScreenManager_K2_SetLoadingScreenCustomText, NewText) == 0x000008, "Member 'LoadingScreenManager_K2_SetLoadingScreenCustomText::NewText' has a wrong offset!");

// Function CommonLoadingScreen.LoadingScreenManager.AddLoadingScreenWatcher
// 0x0008 (0x0008 - 0x0000)
struct LoadingScreenManager_AddLoadingScreenWatcher final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenManager_AddLoadingScreenWatcher) == 0x000008, "Wrong alignment on LoadingScreenManager_AddLoadingScreenWatcher");
static_assert(sizeof(LoadingScreenManager_AddLoadingScreenWatcher) == 0x000008, "Wrong size on LoadingScreenManager_AddLoadingScreenWatcher");
static_assert(offsetof(LoadingScreenManager_AddLoadingScreenWatcher, Object) == 0x000000, "Member 'LoadingScreenManager_AddLoadingScreenWatcher::Object' has a wrong offset!");

// Function CommonLoadingScreen.LoadingScreenManager.RemoveLoadingScreenWatcher
// 0x0008 (0x0008 - 0x0000)
struct LoadingScreenManager_RemoveLoadingScreenWatcher final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenManager_RemoveLoadingScreenWatcher) == 0x000008, "Wrong alignment on LoadingScreenManager_RemoveLoadingScreenWatcher");
static_assert(sizeof(LoadingScreenManager_RemoveLoadingScreenWatcher) == 0x000008, "Wrong size on LoadingScreenManager_RemoveLoadingScreenWatcher");
static_assert(offsetof(LoadingScreenManager_RemoveLoadingScreenWatcher, Object) == 0x000000, "Member 'LoadingScreenManager_RemoveLoadingScreenWatcher::Object' has a wrong offset!");

// Function CommonLoadingScreen.LoadingScreenManager.GetCurrentLoadingMap
// 0x0010 (0x0010 - 0x0000)
struct LoadingScreenManager_GetCurrentLoadingMap final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenManager_GetCurrentLoadingMap) == 0x000008, "Wrong alignment on LoadingScreenManager_GetCurrentLoadingMap");
static_assert(sizeof(LoadingScreenManager_GetCurrentLoadingMap) == 0x000010, "Wrong size on LoadingScreenManager_GetCurrentLoadingMap");
static_assert(offsetof(LoadingScreenManager_GetCurrentLoadingMap, ReturnValue) == 0x000000, "Member 'LoadingScreenManager_GetCurrentLoadingMap::ReturnValue' has a wrong offset!");

// Function CommonLoadingScreen.LoadingScreenManager.GetDebugReasonForShowingOrHidingLoadingScreen
// 0x0010 (0x0010 - 0x0000)
struct LoadingScreenManager_GetDebugReasonForShowingOrHidingLoadingScreen final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenManager_GetDebugReasonForShowingOrHidingLoadingScreen) == 0x000008, "Wrong alignment on LoadingScreenManager_GetDebugReasonForShowingOrHidingLoadingScreen");
static_assert(sizeof(LoadingScreenManager_GetDebugReasonForShowingOrHidingLoadingScreen) == 0x000010, "Wrong size on LoadingScreenManager_GetDebugReasonForShowingOrHidingLoadingScreen");
static_assert(offsetof(LoadingScreenManager_GetDebugReasonForShowingOrHidingLoadingScreen, ReturnValue) == 0x000000, "Member 'LoadingScreenManager_GetDebugReasonForShowingOrHidingLoadingScreen::ReturnValue' has a wrong offset!");

// Function CommonLoadingScreen.LoadingScreenManager.GetLoadingScreenCustomText
// 0x0010 (0x0010 - 0x0000)
struct LoadingScreenManager_GetLoadingScreenCustomText final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenManager_GetLoadingScreenCustomText) == 0x000008, "Wrong alignment on LoadingScreenManager_GetLoadingScreenCustomText");
static_assert(sizeof(LoadingScreenManager_GetLoadingScreenCustomText) == 0x000010, "Wrong size on LoadingScreenManager_GetLoadingScreenCustomText");
static_assert(offsetof(LoadingScreenManager_GetLoadingScreenCustomText, ReturnValue) == 0x000000, "Member 'LoadingScreenManager_GetLoadingScreenCustomText::ReturnValue' has a wrong offset!");

// Function CommonLoadingScreen.LoadingScreenManager.GetLoadingScreenDisplayStatus
// 0x0001 (0x0001 - 0x0000)
struct LoadingScreenManager_GetLoadingScreenDisplayStatus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenManager_GetLoadingScreenDisplayStatus) == 0x000001, "Wrong alignment on LoadingScreenManager_GetLoadingScreenDisplayStatus");
static_assert(sizeof(LoadingScreenManager_GetLoadingScreenDisplayStatus) == 0x000001, "Wrong size on LoadingScreenManager_GetLoadingScreenDisplayStatus");
static_assert(offsetof(LoadingScreenManager_GetLoadingScreenDisplayStatus, ReturnValue) == 0x000000, "Member 'LoadingScreenManager_GetLoadingScreenDisplayStatus::ReturnValue' has a wrong offset!");

}

