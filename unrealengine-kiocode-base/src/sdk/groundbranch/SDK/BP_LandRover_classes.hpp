#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LandRover

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ENUM_LandRover_Colors_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LandRover.BP_LandRover_C
// 0x00D8 (0x02F8 - 0x0220)
class ABP_LandRover_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   Glass_Side_R;                                      // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Glass_Side_L;                                      // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor3;                                       // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor2;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor1;                                       // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Glass_Windshield;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_RoofRack;                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RearDoorWheel;                                     // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Wheel_RR;                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Wheel_RF;                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Wheel_LR;                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Wheel_LF;                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Door_RR;                               // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Door_LR;                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Door_Rear;                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight_L;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight_R;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Door_RF;                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover_Door_LF;                               // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LandRover;                                       // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HeadlightsON;                                      // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasRoofRack;                                       // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_LandRover_Colors                         Color;                                             // 0x02E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E3[0x1];                                      // 0x02E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Door_RightFront;                                   // 0x02E4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Door_LeftFront;                                    // 0x02E8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Door_RightRear;                                    // 0x02EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Door_LeftRear;                                     // 0x02F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Door_Rear;                                         // 0x02F4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LandRover(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LandRover_C">();
	}
	static class ABP_LandRover_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LandRover_C>();
	}
};
static_assert(alignof(ABP_LandRover_C) == 0x000008, "Wrong alignment on ABP_LandRover_C");
static_assert(sizeof(ABP_LandRover_C) == 0x0002F8, "Wrong size on ABP_LandRover_C");
static_assert(offsetof(ABP_LandRover_C, UberGraphFrame) == 0x000220, "Member 'ABP_LandRover_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Glass_Side_R) == 0x000228, "Member 'ABP_LandRover_C::Glass_Side_R' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Glass_Side_L) == 0x000230, "Member 'ABP_LandRover_C::Glass_Side_L' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, ChildActor3) == 0x000238, "Member 'ABP_LandRover_C::ChildActor3' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, ChildActor2) == 0x000240, "Member 'ABP_LandRover_C::ChildActor2' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, ChildActor1) == 0x000248, "Member 'ABP_LandRover_C::ChildActor1' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, ChildActor) == 0x000250, "Member 'ABP_LandRover_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Glass_Windshield) == 0x000258, "Member 'ABP_LandRover_C::Glass_Windshield' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_RoofRack) == 0x000260, "Member 'ABP_LandRover_C::S_LandRover_RoofRack' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, RearDoorWheel) == 0x000268, "Member 'ABP_LandRover_C::RearDoorWheel' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Wheel_RR) == 0x000270, "Member 'ABP_LandRover_C::S_LandRover_Wheel_RR' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Wheel_RF) == 0x000278, "Member 'ABP_LandRover_C::S_LandRover_Wheel_RF' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Wheel_LR) == 0x000280, "Member 'ABP_LandRover_C::S_LandRover_Wheel_LR' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Wheel_LF) == 0x000288, "Member 'ABP_LandRover_C::S_LandRover_Wheel_LF' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Door_RR) == 0x000290, "Member 'ABP_LandRover_C::S_LandRover_Door_RR' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Door_LR) == 0x000298, "Member 'ABP_LandRover_C::S_LandRover_Door_LR' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Door_Rear) == 0x0002A0, "Member 'ABP_LandRover_C::S_LandRover_Door_Rear' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, PointLight1) == 0x0002A8, "Member 'ABP_LandRover_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, PointLight) == 0x0002B0, "Member 'ABP_LandRover_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, SpotLight_L) == 0x0002B8, "Member 'ABP_LandRover_C::SpotLight_L' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, SpotLight_R) == 0x0002C0, "Member 'ABP_LandRover_C::SpotLight_R' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Door_RF) == 0x0002C8, "Member 'ABP_LandRover_C::S_LandRover_Door_RF' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover_Door_LF) == 0x0002D0, "Member 'ABP_LandRover_C::S_LandRover_Door_LF' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, S_LandRover) == 0x0002D8, "Member 'ABP_LandRover_C::S_LandRover' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, HeadlightsON) == 0x0002E0, "Member 'ABP_LandRover_C::HeadlightsON' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, HasRoofRack) == 0x0002E1, "Member 'ABP_LandRover_C::HasRoofRack' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Color) == 0x0002E2, "Member 'ABP_LandRover_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Door_RightFront) == 0x0002E4, "Member 'ABP_LandRover_C::Door_RightFront' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Door_LeftFront) == 0x0002E8, "Member 'ABP_LandRover_C::Door_LeftFront' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Door_RightRear) == 0x0002EC, "Member 'ABP_LandRover_C::Door_RightRear' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Door_LeftRear) == 0x0002F0, "Member 'ABP_LandRover_C::Door_LeftRear' has a wrong offset!");
static_assert(offsetof(ABP_LandRover_C, Door_Rear) == 0x0002F4, "Member 'ABP_LandRover_C::Door_Rear' has a wrong offset!");

}

