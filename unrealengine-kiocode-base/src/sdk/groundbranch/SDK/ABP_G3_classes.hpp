#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_G3

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "ControlRig_structs.hpp"
#include "Engine_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_G3.ABP_G3_C
// 0x0520 (0x07E0 - 0x02C0)
class UABP_G3_C final : public UGBFirearmAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x02F8(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0340(0x0018)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0358(0x00A0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x03F8(0x0050)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0448(0x0368)()
	float                                         __CustomProperty_SafetyAngle_143DB6346F5D4E3F8B372D65535CBB0F; // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_FrontSightPostHeightOffset_143DB6346F5D4E3F8B372D65535CBB0F; // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_RearSightHeightOffset_143DB6346F5D4E3F8B372D65535CBB0F; // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bLocallyViewed_143DB6346F5D4E3F8B372D65535CBB0F; // 0x07BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BD[0x3];                                      // 0x07BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RearSightHeightOffset;                             // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrontSightPostHeightOffset;                        // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 FiringModeSafetyAngles;                            // 0x07C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SafetyAngle;                                       // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_G3(int32 EntryPoint);
	void OnFiringModeIndexChanged(uint8 FiringModeIndex);
	void OnSetFrontSightPostHeightOffset(float FrontSightPostHeightOffset_0);
	void OnIronSightZeroing(const struct FVector& ZeroRelativeToSight, const struct FVector& SightLocationOffset, const struct FRotator& SightRotationOffset);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_G3_C">();
	}
	static class UABP_G3_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_G3_C>();
	}
};
static_assert(alignof(UABP_G3_C) == 0x000010, "Wrong alignment on UABP_G3_C");
static_assert(sizeof(UABP_G3_C) == 0x0007E0, "Wrong size on UABP_G3_C");
static_assert(offsetof(UABP_G3_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_G3_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UABP_G3_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, AnimGraphNode_Slot) == 0x0002F8, "Member 'UABP_G3_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, AnimGraphNode_LocalRefPose) == 0x000340, "Member 'UABP_G3_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, AnimGraphNode_BlendListByBool) == 0x000358, "Member 'UABP_G3_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, AnimGraphNode_SequenceEvaluator) == 0x0003F8, "Member 'UABP_G3_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, AnimGraphNode_ControlRig) == 0x000448, "Member 'UABP_G3_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, __CustomProperty_SafetyAngle_143DB6346F5D4E3F8B372D65535CBB0F) == 0x0007B0, "Member 'UABP_G3_C::__CustomProperty_SafetyAngle_143DB6346F5D4E3F8B372D65535CBB0F' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, __CustomProperty_FrontSightPostHeightOffset_143DB6346F5D4E3F8B372D65535CBB0F) == 0x0007B4, "Member 'UABP_G3_C::__CustomProperty_FrontSightPostHeightOffset_143DB6346F5D4E3F8B372D65535CBB0F' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, __CustomProperty_RearSightHeightOffset_143DB6346F5D4E3F8B372D65535CBB0F) == 0x0007B8, "Member 'UABP_G3_C::__CustomProperty_RearSightHeightOffset_143DB6346F5D4E3F8B372D65535CBB0F' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, __CustomProperty_bLocallyViewed_143DB6346F5D4E3F8B372D65535CBB0F) == 0x0007BC, "Member 'UABP_G3_C::__CustomProperty_bLocallyViewed_143DB6346F5D4E3F8B372D65535CBB0F' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, RearSightHeightOffset) == 0x0007C0, "Member 'UABP_G3_C::RearSightHeightOffset' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, FrontSightPostHeightOffset) == 0x0007C4, "Member 'UABP_G3_C::FrontSightPostHeightOffset' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, FiringModeSafetyAngles) == 0x0007C8, "Member 'UABP_G3_C::FiringModeSafetyAngles' has a wrong offset!");
static_assert(offsetof(UABP_G3_C, SafetyAngle) == 0x0007D8, "Member 'UABP_G3_C::SafetyAngle' has a wrong offset!");

}

