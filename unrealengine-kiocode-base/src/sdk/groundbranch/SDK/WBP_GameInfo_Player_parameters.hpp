#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameInfo_Player

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.ExecuteUbergraph_WBP_GameInfo_Player
// 0x0130 (0x0130 - 0x0000)
struct WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGBGameModeType                               CallFunc_GetGameModeType_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Talking;                        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetOnDuty_ReturnValue;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x006C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMuted_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOnDuty_ReturnValue_1;                  // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocal_ReturnValue;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUniqueIdAsString_ReturnValue;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_3;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_2;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerVolunteered_ReturnValue;         // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_4;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_3;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMuted_ReturnValue_1;                    // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player");
static_assert(sizeof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player) == 0x000130, "Wrong size on WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, EntryPoint) == 0x000000, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, Temp_byte_Variable) == 0x000010, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000018, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000028, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, Temp_bool_Variable) == 0x000030, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_AsGBPlayer_Controller_1) == 0x000038, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_AsGBPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetGameState_ReturnValue) == 0x000048, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_AsGBGame_State) == 0x000050, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetGameModeType_ReturnValue) == 0x000059, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetGameModeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_CustomEvent_Talking) == 0x000069, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_CustomEvent_Talking' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetOnDuty_ReturnValue) == 0x00006B, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetOnDuty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_Event_MyGeometry) == 0x00006C, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_Event_InDeltaTime) == 0x0000A4, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_IsMuted_ReturnValue) == 0x0000A9, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_IsMuted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_Not_PreBool_ReturnValue) == 0x0000AA, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0000B0, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000B8, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B9, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, Temp_byte_Variable_1) == 0x0000BA, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetOnDuty_ReturnValue_1) == 0x0000BB, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetOnDuty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_IsLocal_ReturnValue) == 0x0000BC, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_IsLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_IsValid_ReturnValue_2) == 0x0000BD, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetUniqueIdAsString_ReturnValue) == 0x0000C0, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetUniqueIdAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetOwningPlayer_ReturnValue_3) == 0x0000D0, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetOwningPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_IsValid_ReturnValue_3) == 0x0000D8, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_AsGBPlayer_Controller_2) == 0x0000E0, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_AsGBPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetPlayerVolunteered_ReturnValue) == 0x0000E9, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetPlayerVolunteered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000EA, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_CreateDelegate_OutputDelegate) == 0x0000EC, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000100, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_IsStandalone_ReturnValue) == 0x000108, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_GetOwningPlayer_ReturnValue_4) == 0x000110, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_GetOwningPlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_Not_PreBool_ReturnValue_3) == 0x000118, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_AsGBPlayer_Controller_3) == 0x000120, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_AsGBPlayer_Controller_3' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_DynamicCast_bSuccess_4) == 0x000128, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_IsMuted_ReturnValue_1) == 0x00012A, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_IsMuted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, K2Node_Select_Default) == 0x00012B, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player, CallFunc_BooleanOR_ReturnValue) == 0x00012C, "Member 'WBP_GameInfo_Player_C_ExecuteUbergraph_WBP_GameInfo_Player::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_GameInfo_Player_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameInfo_Player_C_Tick) == 0x000004, "Wrong alignment on WBP_GameInfo_Player_C_Tick");
static_assert(sizeof(WBP_GameInfo_Player_C_Tick) == 0x00003C, "Wrong size on WBP_GameInfo_Player_C_Tick");
static_assert(offsetof(WBP_GameInfo_Player_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_GameInfo_Player_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_GameInfo_Player_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.UpdateVOIPPulse
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameInfo_Player_C_UpdateVOIPPulse final
{
public:
	bool                                          Talking;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameInfo_Player_C_UpdateVOIPPulse) == 0x000001, "Wrong alignment on WBP_GameInfo_Player_C_UpdateVOIPPulse");
static_assert(sizeof(WBP_GameInfo_Player_C_UpdateVOIPPulse) == 0x000001, "Wrong size on WBP_GameInfo_Player_C_UpdateVOIPPulse");
static_assert(offsetof(WBP_GameInfo_Player_C_UpdateVOIPPulse, Talking) == 0x000000, "Member 'WBP_GameInfo_Player_C_UpdateVOIPPulse::Talking' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.GetLineColour
// 0x002C (0x002C - 0x0000)
struct WBP_GameInfo_Player_C_GetLineColour final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameInfo_Player_C_GetLineColour) == 0x000004, "Wrong alignment on WBP_GameInfo_Player_C_GetLineColour");
static_assert(sizeof(WBP_GameInfo_Player_C_GetLineColour) == 0x00002C, "Wrong size on WBP_GameInfo_Player_C_GetLineColour");
static_assert(offsetof(WBP_GameInfo_Player_C_GetLineColour, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_GetLineColour::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetLineColour, Temp_bool_Variable) == 0x000010, "Member 'WBP_GameInfo_Player_C_GetLineColour::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetLineColour, CallFunc_IsHovered_ReturnValue) == 0x000011, "Member 'WBP_GameInfo_Player_C_GetLineColour::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetLineColour, CallFunc_Percent_IntInt_ReturnValue) == 0x000014, "Member 'WBP_GameInfo_Player_C_GetLineColour::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetLineColour, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_GameInfo_Player_C_GetLineColour::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetLineColour, K2Node_Select_Default) == 0x00001C, "Member 'WBP_GameInfo_Player_C_GetLineColour::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.GetPlayerName
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameInfo_Player_C_GetPlayerName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(WBP_GameInfo_Player_C_GetPlayerName) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_GetPlayerName");
static_assert(sizeof(WBP_GameInfo_Player_C_GetPlayerName) == 0x000040, "Wrong size on WBP_GameInfo_Player_C_GetPlayerName");
static_assert(offsetof(WBP_GameInfo_Player_C_GetPlayerName, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_GetPlayerName::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetPlayerName, CallFunc_GetPlayerName_ReturnValue) == 0x000018, "Member 'WBP_GameInfo_Player_C_GetPlayerName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WBP_GameInfo_Player_C_GetPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.GetPlayerPing
// 0x0038 (0x0038 - 0x0000)
struct WBP_GameInfo_Player_C_GetPlayerPing final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_GetPingInMillisecondsGetPing_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
};
static_assert(alignof(WBP_GameInfo_Player_C_GetPlayerPing) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_GetPlayerPing");
static_assert(sizeof(WBP_GameInfo_Player_C_GetPlayerPing) == 0x000038, "Wrong size on WBP_GameInfo_Player_C_GetPlayerPing");
static_assert(offsetof(WBP_GameInfo_Player_C_GetPlayerPing, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_GetPlayerPing::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetPlayerPing, CallFunc_GetPingInMillisecondsGetPing_ReturnValue) == 0x000018, "Member 'WBP_GameInfo_Player_C_GetPlayerPing::CallFunc_GetPingInMillisecondsGetPing_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetPlayerPing, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'WBP_GameInfo_Player_C_GetPlayerPing::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.GetMuteBrush
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_GameInfo_Player_C_GetMuteBrush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMuted_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameInfo_Player_C_GetMuteBrush) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_GetMuteBrush");
static_assert(sizeof(WBP_GameInfo_Player_C_GetMuteBrush) == 0x0000A0, "Wrong size on WBP_GameInfo_Player_C_GetMuteBrush");
static_assert(offsetof(WBP_GameInfo_Player_C_GetMuteBrush, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_GetMuteBrush::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetMuteBrush, CallFunc_GetOwningPlayer_ReturnValue) == 0x000088, "Member 'WBP_GameInfo_Player_C_GetMuteBrush::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetMuteBrush, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000090, "Member 'WBP_GameInfo_Player_C_GetMuteBrush::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetMuteBrush, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'WBP_GameInfo_Player_C_GetMuteBrush::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetMuteBrush, CallFunc_IsMuted_ReturnValue) == 0x000099, "Member 'WBP_GameInfo_Player_C_GetMuteBrush::CallFunc_IsMuted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetMuteBrush, CallFunc_IsValid_ReturnValue) == 0x00009A, "Member 'WBP_GameInfo_Player_C_GetMuteBrush::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.GetUniqueId
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameInfo_Player_C_GetUniqueId final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetUniqueIdAsString_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(WBP_GameInfo_Player_C_GetUniqueId) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_GetUniqueId");
static_assert(sizeof(WBP_GameInfo_Player_C_GetUniqueId) == 0x000040, "Wrong size on WBP_GameInfo_Player_C_GetUniqueId");
static_assert(offsetof(WBP_GameInfo_Player_C_GetUniqueId, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_GetUniqueId::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetUniqueId, CallFunc_GetUniqueIdAsString_ReturnValue) == 0x000018, "Member 'WBP_GameInfo_Player_C_GetUniqueId::CallFunc_GetUniqueIdAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetUniqueId, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WBP_GameInfo_Player_C_GetUniqueId::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.GetOnDutyVis
// 0x0060 (0x0060 - 0x0000)
struct WBP_GameInfo_Player_C_GetOnDutyVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGBGameModeType                               CallFunc_GetGameModeType_ReturnValue;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetOnDuty_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetQuickAdminCommands_ReturnValue;        // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameInfo_Player_C_GetOnDutyVis) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_GetOnDutyVis");
static_assert(sizeof(WBP_GameInfo_Player_C_GetOnDutyVis) == 0x000060, "Wrong size on WBP_GameInfo_Player_C_GetOnDutyVis");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, Temp_bool_Variable) == 0x000001, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, Temp_byte_Variable) == 0x000010, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, K2Node_DynamicCast_AsGBGame_State) == 0x000018, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_GetGameModeType_ReturnValue) == 0x000022, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_GetGameModeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000023, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, Temp_byte_Variable_1) == 0x000025, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, K2Node_DynamicCast_AsGBPlayer_State) == 0x000038, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_GetOnDuty_ReturnValue) == 0x000042, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_GetOnDuty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_GetQuickAdminCommands_ReturnValue) == 0x000048, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_GetQuickAdminCommands_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, CallFunc_BooleanAND_ReturnValue) == 0x00005D, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_GetOnDutyVis, K2Node_Select_Default) == 0x00005E, "Member 'WBP_GameInfo_Player_C_GetOnDutyVis::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.Get_Button_Mute_ToolTipWidget_0
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Tooltip_C*                         CallFunc_Create_ReturnValue_1;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMuted_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Tooltip_C*                         CallFunc_Create_ReturnValue_2;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0");
static_assert(sizeof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0) == 0x000040, "Wrong size on WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000010, "Member 'WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000018, "Member 'WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0, CallFunc_Create_ReturnValue_1) == 0x000028, "Member 'WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0, CallFunc_IsMuted_ReturnValue) == 0x000030, "Member 'WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0::CallFunc_IsMuted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0, CallFunc_Create_ReturnValue_2) == 0x000038, "Member 'WBP_GameInfo_Player_C_Get_Button_Mute_ToolTipWidget_0::CallFunc_Create_ReturnValue_2' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.Get_TextBlock_CallSign_Text_0
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetCallSign_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0");
static_assert(sizeof(WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0) == 0x000040, "Wrong size on WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0, CallFunc_GetCallSign_ReturnValue) == 0x000018, "Member 'WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0::CallFunc_GetCallSign_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WBP_GameInfo_Player_C_Get_TextBlock_CallSign_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.Get_Image_Volunteer_Brush_0
// 0x0230 (0x0230 - 0x0000)
struct WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0 final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x0090(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x0118(0x0088)()
	bool                                          CallFunc_GetPlayerVolunteered_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x01A8(0x0088)()
};
static_assert(alignof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0");
static_assert(sizeof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0) == 0x000230, "Wrong size on WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0, Temp_bool_Variable) == 0x000088, "Member 'WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x000090, "Member 'WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x000118, "Member 'WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0, CallFunc_GetPlayerVolunteered_ReturnValue) == 0x0001A0, "Member 'WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0::CallFunc_GetPlayerVolunteered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0, CallFunc_IsValid_ReturnValue) == 0x0001A1, "Member 'WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0, K2Node_Select_Default) == 0x0001A8, "Member 'WBP_GameInfo_Player_C_Get_Image_Volunteer_Brush_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.Get_SizeBox_Volunteer_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0) == 0x000001, "Wrong alignment on WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0");
static_assert(sizeof(WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0) == 0x000005, "Wrong size on WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'WBP_GameInfo_Player_C_Get_SizeBox_Volunteer_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameInfo_Player.WBP_GameInfo_Player_C.Get Size Box Volunteer Tool Tip Widget 0
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0) == 0x000008, "Wrong alignment on WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0");
static_assert(sizeof(WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0) == 0x000010, "Wrong size on WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0, ReturnValue) == 0x000000, "Member 'WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_GameInfo_Player_C_Get_Size_Box_Volunteer_Tool_Tip_Widget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

}

