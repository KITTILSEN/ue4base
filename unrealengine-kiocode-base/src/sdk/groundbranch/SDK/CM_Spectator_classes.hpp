#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_Spectator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CM_Spectator.CM_Spectator_C
// 0x05C8 (0x0610 - 0x0048)
class UCM_Spectator_C final : public UGBCameraModifier
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0048(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   NightVisionEnabledTag;                             // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UMaterialInstance*>   PostProcessSettingsMap;                            // 0x0058(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         PostProcessBlendWeight;                            // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   NightVisionPostProcessSettings;                    // 0x00B0(0x0560)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight_0, struct FPostProcessSettings* PostProcessSettings);
	void OnModifierDisabledEvent();
	void RemoveNightVisionEnabledTag();
	void BlueprintAddedToCamera(class AGBPlayerCameraManager* GBPlayerCameraManager);
	void AddNightVisionEnabledTag();
	void BlueprintPreApplyCameraModifier(class AGBPlayerCameraManager* GBPlayerCameraManager, float DeltaTime);
	void BlueprintRemovedFromCamera(class AGBPlayerCameraManager* GBPlayerCameraManager);
	void OnViewTargetChanged_Event_0(class AGBPlayerController* PlayerController);
	void ExecuteUbergraph_CM_Spectator(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_Spectator_C">();
	}
	static class UCM_Spectator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_Spectator_C>();
	}
};
static_assert(alignof(UCM_Spectator_C) == 0x000010, "Wrong alignment on UCM_Spectator_C");
static_assert(sizeof(UCM_Spectator_C) == 0x000610, "Wrong size on UCM_Spectator_C");
static_assert(offsetof(UCM_Spectator_C, UberGraphFrame) == 0x000048, "Member 'UCM_Spectator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCM_Spectator_C, NightVisionEnabledTag) == 0x000050, "Member 'UCM_Spectator_C::NightVisionEnabledTag' has a wrong offset!");
static_assert(offsetof(UCM_Spectator_C, PostProcessSettingsMap) == 0x000058, "Member 'UCM_Spectator_C::PostProcessSettingsMap' has a wrong offset!");
static_assert(offsetof(UCM_Spectator_C, PostProcessBlendWeight) == 0x0000A8, "Member 'UCM_Spectator_C::PostProcessBlendWeight' has a wrong offset!");
static_assert(offsetof(UCM_Spectator_C, NightVisionPostProcessSettings) == 0x0000B0, "Member 'UCM_Spectator_C::NightVisionPostProcessSettings' has a wrong offset!");

}

