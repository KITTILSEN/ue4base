#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Tablet_FreeLook

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Tablet_FreeLook.GA_Tablet_FreeLook_C.ExecuteUbergraph_GA_Tablet_FreeLook
// 0x0040 (0x0040 - 0x0000)
struct GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetCharacter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Tablet_C*                           K2Node_DynamicCast_AsBP_Tablet;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetCharacter_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetCharacter_ReturnValue_2;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook) == 0x000008, "Wrong alignment on GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook");
static_assert(sizeof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook) == 0x000040, "Wrong size on GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook");
static_assert(offsetof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook, EntryPoint) == 0x000000, "Member 'GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook, CallFunc_GetCharacter_ReturnValue) == 0x000008, "Member 'GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook, CallFunc_GetEquipped_ReturnValue) == 0x000010, "Member 'GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook, K2Node_DynamicCast_AsBP_Tablet) == 0x000018, "Member 'GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook::K2Node_DynamicCast_AsBP_Tablet' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook, CallFunc_GetCharacter_ReturnValue_1) == 0x000028, "Member 'GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook::CallFunc_GetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook, CallFunc_GetCharacter_ReturnValue_2) == 0x000030, "Member 'GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook::CallFunc_GetCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook, K2Node_Event_bWasCancelled) == 0x000038, "Member 'GA_Tablet_FreeLook_C_ExecuteUbergraph_GA_Tablet_FreeLook::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GA_Tablet_FreeLook.GA_Tablet_FreeLook_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Tablet_FreeLook_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Tablet_FreeLook_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Tablet_FreeLook_C_K2_OnEndAbility");
static_assert(sizeof(GA_Tablet_FreeLook_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Tablet_FreeLook_C_K2_OnEndAbility");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Tablet_FreeLook_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Tablet_FreeLook.GA_Tablet_FreeLook_C.K2_CanActivateAbility
// 0x0090 (0x0090 - 0x0000)
struct GA_Tablet_FreeLook_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDesiredEngagedAlpha_ReturnValue;       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Tablet_FreeLook_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Tablet_FreeLook_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Tablet_FreeLook_C_K2_CanActivateAbility) == 0x000090, "Wrong size on GA_Tablet_FreeLook_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Tablet_FreeLook_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_Tablet_FreeLook_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_Tablet_FreeLook_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_Tablet_FreeLook_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_CanActivateAbility, K2Node_DynamicCast_AsGBCharacter) == 0x000078, "Member 'GA_Tablet_FreeLook_C_K2_CanActivateAbility::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GA_Tablet_FreeLook_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_CanActivateAbility, CallFunc_GetDesiredEngagedAlpha_ReturnValue) == 0x000084, "Member 'GA_Tablet_FreeLook_C_K2_CanActivateAbility::CallFunc_GetDesiredEngagedAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_FreeLook_C_K2_CanActivateAbility, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'GA_Tablet_FreeLook_C_K2_CanActivateAbility::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

