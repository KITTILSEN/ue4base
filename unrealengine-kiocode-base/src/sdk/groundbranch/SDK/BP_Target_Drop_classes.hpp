#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Target_Drop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Target_Drop.BP_Target_Drop_C
// 0x0068 (0x0288 - 0x0220)
class ABP_Target_Drop_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PlateComponent_C*                   BP_PlateComponent;                                 // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SteelPlateTarget_Sil;                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Target_DropArm;                                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ReactiveTarget_Base_Drop;                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DropPlateTimeline_RelativeHeight_32B79A8748E08D18C37D33A6F5FCC0B5; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DropPlateTimeline__Direction_32B79A8748E08D18C37D33A6F5FCC0B5; // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DropPlateTimeline;                                 // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Period;                                            // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHeighChange;                                    // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cycle;                                             // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle_AutomaticReset;                        // 0x0268(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     ReplicatedMaterial;                                // 0x0270(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         ShotsMin;                                          // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShotsMax;                                          // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightingChannel_0;                                 // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LightingChannel_1;                                 // 0x0281(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LightingChannel_2;                                 // 0x0282(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x1];                                      // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Target_Cull_Distance;                              // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Target_Drop(int32 EntryPoint);
	void K2_OnReset();
	void RiseUp();
	void BndEvt__BP_PlateComponent_K2Node_ComponentBoundEvent_0_OnPlateSkinSet__DelegateSignature(TSoftObjectPtr<class UMaterialInterface> Skin, class UBP_PlateComponent_C* PlateComponent);
	void OnSkinLoaded_Event(class UObject* LoadedAsset);
	void BndEvt__BP_PlateComponent_K2Node_ComponentBoundEvent_11_OnPlateReset__DelegateSignature(class UBP_PlateComponent_C* PlateComponent);
	void StartSliding(float ServerTime);
	void DropDown();
	void BndEvt__BP_PlateComponent_K2Node_ComponentBoundEvent_0_OnPlateDropped__DelegateSignature(class UBP_PlateComponent_C* PlateComponent);
	void ReceiveBeginPlay();
	void DropPlateTimeline__UpdateFunc();
	void DropPlateTimeline__FinishedFunc();
	void UserConstructionScript();
	void OnRep_ReplicatedMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Target_Drop_C">();
	}
	static class ABP_Target_Drop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Target_Drop_C>();
	}
};
static_assert(alignof(ABP_Target_Drop_C) == 0x000008, "Wrong alignment on ABP_Target_Drop_C");
static_assert(sizeof(ABP_Target_Drop_C) == 0x000288, "Wrong size on ABP_Target_Drop_C");
static_assert(offsetof(ABP_Target_Drop_C, UberGraphFrame) == 0x000220, "Member 'ABP_Target_Drop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, BP_PlateComponent) == 0x000228, "Member 'ABP_Target_Drop_C::BP_PlateComponent' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, SM_SteelPlateTarget_Sil) == 0x000230, "Member 'ABP_Target_Drop_C::SM_SteelPlateTarget_Sil' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, SM_Target_DropArm) == 0x000238, "Member 'ABP_Target_Drop_C::SM_Target_DropArm' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, SM_ReactiveTarget_Base_Drop) == 0x000240, "Member 'ABP_Target_Drop_C::SM_ReactiveTarget_Base_Drop' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, DropPlateTimeline_RelativeHeight_32B79A8748E08D18C37D33A6F5FCC0B5) == 0x000248, "Member 'ABP_Target_Drop_C::DropPlateTimeline_RelativeHeight_32B79A8748E08D18C37D33A6F5FCC0B5' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, DropPlateTimeline__Direction_32B79A8748E08D18C37D33A6F5FCC0B5) == 0x00024C, "Member 'ABP_Target_Drop_C::DropPlateTimeline__Direction_32B79A8748E08D18C37D33A6F5FCC0B5' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, DropPlateTimeline) == 0x000250, "Member 'ABP_Target_Drop_C::DropPlateTimeline' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, Period) == 0x000258, "Member 'ABP_Target_Drop_C::Period' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, MaxHeighChange) == 0x00025C, "Member 'ABP_Target_Drop_C::MaxHeighChange' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, Cycle) == 0x000260, "Member 'ABP_Target_Drop_C::Cycle' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, TimerHandle_AutomaticReset) == 0x000268, "Member 'ABP_Target_Drop_C::TimerHandle_AutomaticReset' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, ReplicatedMaterial) == 0x000270, "Member 'ABP_Target_Drop_C::ReplicatedMaterial' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, ShotsMin) == 0x000278, "Member 'ABP_Target_Drop_C::ShotsMin' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, ShotsMax) == 0x00027C, "Member 'ABP_Target_Drop_C::ShotsMax' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, LightingChannel_0) == 0x000280, "Member 'ABP_Target_Drop_C::LightingChannel_0' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, LightingChannel_1) == 0x000281, "Member 'ABP_Target_Drop_C::LightingChannel_1' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, LightingChannel_2) == 0x000282, "Member 'ABP_Target_Drop_C::LightingChannel_2' has a wrong offset!");
static_assert(offsetof(ABP_Target_Drop_C, Target_Cull_Distance) == 0x000284, "Member 'ABP_Target_Drop_C::Target_Cull_Distance' has a wrong offset!");

}

