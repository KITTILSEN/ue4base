#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Grenade_Throw

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GroundBranch_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Grenade_Throw.GA_Grenade_Throw_C
// 0x00B0 (0x0468 - 0x03B8)
class UGA_Grenade_Throw_C : public UGBEquippedGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           Montage;                                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ProneMontage;                                      // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PrepareToThrowSection;                             // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AimSetion;                                         // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThrowSection;                                      // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x03E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GrenadeProjectileClass;                            // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Target_Data;                                       // 0x0400(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   SightLine;                                         // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SettingGrenadeEmptyHands;                          // 0x0430(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ReadyThrowTimeProne;                               // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReadyThrowTime;                                    // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReathThrowDelay;                                   // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HalfPingInSeconds;                                 // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReadyThrowAnimRate;                                // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighHalfPingValue;                                 // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHighPing;                                         // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThrowTimeProne;                                    // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowTime;                                         // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnimRate;                                     // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGrenade*                             Grenade;                                           // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Grenade_Throw(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void MontageInterupterOrCancelled();
	void PlayerWaitForInputRelease();
	void ServerSpawnProjectile(class AGBInvItem* Grenade_0, const struct FVector& SpawnLocation_0, const struct FVector& SpawnVelocity);
	void SpawnProjectile();
	void EquipPrevMaybe();
	void ActivateShared();
	void WaitForGrenadeThrowEvent();
	void ActivatedByAI(const struct FGameplayEventData& EventData);
	void ActivatedByPlayerInput();
	void K2_ActivateAbility();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void OnFinish_002166DE2C764FB993555047BA326CDE();
	void OnCompleted_A93F456DA9024153AF637C1C995040CA();
	void OnBlendOut_A93F456DA9024153AF637C1C995040CA();
	void OnInterrupted_A93F456DA9024153AF637C1C995040CA();
	void OnCancelled_A93F456DA9024153AF637C1C995040CA();
	void OnRelease_B56F6B0800FB46B78D82B7E6DEAF825B(float TimeHeld);
	void OnCompleted_F39B2A6BA6644109B228CF5170061C3F();
	void OnBlendOut_F39B2A6BA6644109B228CF5170061C3F();
	void OnInterrupted_F39B2A6BA6644109B228CF5170061C3F();
	void OnCancelled_F39B2A6BA6644109B228CF5170061C3F();
	void OnCompleted_C32175B3BEA543998D8ACE30E51DB4F3();
	void OnBlendOut_C32175B3BEA543998D8ACE30E51DB4F3();
	void OnInterrupted_C32175B3BEA543998D8ACE30E51DB4F3();
	void OnCancelled_C32175B3BEA543998D8ACE30E51DB4F3();
	void EventReceived_4CF83CFFA28E421E966F1934E2EFF601(const struct FGameplayEventData& Payload);
	void UpdatePingVariables();
	void GetGrenadeArc(class ABP_GrenadeArc_C** OutGrenadeArc);

	class UAnimMontage* GetMontage() const;
	void GetLaunchVelocity(struct FVector* OutVelocity) const;
	void GetDesiredSpawnLocation(struct FVector* OutDesiredSpawnLocation) const;
	struct FVector GetSafeSpawnLocation(const struct FVector& InDesiredSpawnLocation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Grenade_Throw_C">();
	}
	static class UGA_Grenade_Throw_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Grenade_Throw_C>();
	}
};
static_assert(alignof(UGA_Grenade_Throw_C) == 0x000008, "Wrong alignment on UGA_Grenade_Throw_C");
static_assert(sizeof(UGA_Grenade_Throw_C) == 0x000468, "Wrong size on UGA_Grenade_Throw_C");
static_assert(offsetof(UGA_Grenade_Throw_C, UberGraphFrame) == 0x0003B8, "Member 'UGA_Grenade_Throw_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, Montage) == 0x0003C0, "Member 'UGA_Grenade_Throw_C::Montage' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ProneMontage) == 0x0003C8, "Member 'UGA_Grenade_Throw_C::ProneMontage' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, PrepareToThrowSection) == 0x0003D0, "Member 'UGA_Grenade_Throw_C::PrepareToThrowSection' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, AimSetion) == 0x0003D8, "Member 'UGA_Grenade_Throw_C::AimSetion' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ThrowSection) == 0x0003E0, "Member 'UGA_Grenade_Throw_C::ThrowSection' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, SpawnLocation) == 0x0003E8, "Member 'UGA_Grenade_Throw_C::SpawnLocation' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, GrenadeProjectileClass) == 0x0003F8, "Member 'UGA_Grenade_Throw_C::GrenadeProjectileClass' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, Target_Data) == 0x000400, "Member 'UGA_Grenade_Throw_C::Target_Data' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, SightLine) == 0x000428, "Member 'UGA_Grenade_Throw_C::SightLine' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, SettingGrenadeEmptyHands) == 0x000430, "Member 'UGA_Grenade_Throw_C::SettingGrenadeEmptyHands' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ReadyThrowTimeProne) == 0x000438, "Member 'UGA_Grenade_Throw_C::ReadyThrowTimeProne' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ReadyThrowTime) == 0x00043C, "Member 'UGA_Grenade_Throw_C::ReadyThrowTime' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ReathThrowDelay) == 0x000440, "Member 'UGA_Grenade_Throw_C::ReathThrowDelay' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, HalfPingInSeconds) == 0x000444, "Member 'UGA_Grenade_Throw_C::HalfPingInSeconds' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ReadyThrowAnimRate) == 0x000448, "Member 'UGA_Grenade_Throw_C::ReadyThrowAnimRate' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, HighHalfPingValue) == 0x00044C, "Member 'UGA_Grenade_Throw_C::HighHalfPingValue' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, bHighPing) == 0x000450, "Member 'UGA_Grenade_Throw_C::bHighPing' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ThrowTimeProne) == 0x000454, "Member 'UGA_Grenade_Throw_C::ThrowTimeProne' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ThrowTime) == 0x000458, "Member 'UGA_Grenade_Throw_C::ThrowTime' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, ThrowAnimRate) == 0x00045C, "Member 'UGA_Grenade_Throw_C::ThrowAnimRate' has a wrong offset!");
static_assert(offsetof(UGA_Grenade_Throw_C, Grenade) == 0x000460, "Member 'UGA_Grenade_Throw_C::Grenade' has a wrong offset!");

}

