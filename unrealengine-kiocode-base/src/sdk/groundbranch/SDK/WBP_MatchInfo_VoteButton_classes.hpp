#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MatchInfo_VoteButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MatchInfo_VoteButton.WBP_MatchInfo_VoteButton_C
// 0x0110 (0x0370 - 0x0260)
class UWBP_MatchInfo_VoteButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_Background;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Vote;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_75;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_GradientOverlay;                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ScreenShot;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_GameMode;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionName;                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               WrapBox_Votes;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MapListIndex;                                      // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MapListEntry;                                      // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   MissionName;                                       // 0x02D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   GameModeName;                                      // 0x02E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         VoteCount;                                         // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocalPlayerIsVotingForThisMap;                    // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         URLKeys;                                           // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         Out_Values;                                        // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 MissionPath;                                       // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MapPath;                                           // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   ErrorText;                                         // 0x0348(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 TimeOfDay;                                         // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_MatchInfo_VoteButton(int32 EntryPoint);
	void Construct();
	void ProcessURL();
	void BndEvt__WBP_MatchInfo_VoteButton_Button_Vote_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void UpdateVotingChoice();
	void UpdateVoteCount();
	void SetVoteCount(int32 NewVoteCount);
	void PreConstruct(bool IsDesignTime);
	void GetURLValue(const class FString& Key, class FString* Value, bool* bFoundValue);
	void GetGameModeNameLookup(const class FString& ScriptName, class FText* LookupText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MatchInfo_VoteButton_C">();
	}
	static class UWBP_MatchInfo_VoteButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MatchInfo_VoteButton_C>();
	}
};
static_assert(alignof(UWBP_MatchInfo_VoteButton_C) == 0x000008, "Wrong alignment on UWBP_MatchInfo_VoteButton_C");
static_assert(sizeof(UWBP_MatchInfo_VoteButton_C) == 0x000370, "Wrong size on UWBP_MatchInfo_VoteButton_C");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, UberGraphFrame) == 0x000260, "Member 'UWBP_MatchInfo_VoteButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, Border_Background) == 0x000268, "Member 'UWBP_MatchInfo_VoteButton_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, Button_Vote) == 0x000270, "Member 'UWBP_MatchInfo_VoteButton_C::Button_Vote' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, Image) == 0x000278, "Member 'UWBP_MatchInfo_VoteButton_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, Image_1) == 0x000280, "Member 'UWBP_MatchInfo_VoteButton_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, Image_75) == 0x000288, "Member 'UWBP_MatchInfo_VoteButton_C::Image_75' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, Image_GradientOverlay) == 0x000290, "Member 'UWBP_MatchInfo_VoteButton_C::Image_GradientOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, Image_ScreenShot) == 0x000298, "Member 'UWBP_MatchInfo_VoteButton_C::Image_ScreenShot' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, TextBlock_GameMode) == 0x0002A0, "Member 'UWBP_MatchInfo_VoteButton_C::TextBlock_GameMode' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, TextBlock_MissionName) == 0x0002A8, "Member 'UWBP_MatchInfo_VoteButton_C::TextBlock_MissionName' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, WrapBox_Votes) == 0x0002B0, "Member 'UWBP_MatchInfo_VoteButton_C::WrapBox_Votes' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, MapListIndex) == 0x0002B8, "Member 'UWBP_MatchInfo_VoteButton_C::MapListIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, MapListEntry) == 0x0002C0, "Member 'UWBP_MatchInfo_VoteButton_C::MapListEntry' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, MissionName) == 0x0002D0, "Member 'UWBP_MatchInfo_VoteButton_C::MissionName' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, GameModeName) == 0x0002E8, "Member 'UWBP_MatchInfo_VoteButton_C::GameModeName' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, VoteCount) == 0x000300, "Member 'UWBP_MatchInfo_VoteButton_C::VoteCount' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, bLocalPlayerIsVotingForThisMap) == 0x000304, "Member 'UWBP_MatchInfo_VoteButton_C::bLocalPlayerIsVotingForThisMap' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, URLKeys) == 0x000308, "Member 'UWBP_MatchInfo_VoteButton_C::URLKeys' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, Out_Values) == 0x000318, "Member 'UWBP_MatchInfo_VoteButton_C::Out_Values' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, MissionPath) == 0x000328, "Member 'UWBP_MatchInfo_VoteButton_C::MissionPath' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, MapPath) == 0x000338, "Member 'UWBP_MatchInfo_VoteButton_C::MapPath' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, ErrorText) == 0x000348, "Member 'UWBP_MatchInfo_VoteButton_C::ErrorText' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_VoteButton_C, TimeOfDay) == 0x000360, "Member 'UWBP_MatchInfo_VoteButton_C::TimeOfDay' has a wrong offset!");

}

