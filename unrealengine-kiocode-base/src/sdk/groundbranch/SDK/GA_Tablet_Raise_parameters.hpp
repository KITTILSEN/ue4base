#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Tablet_Raise

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Tablet_Raise.GA_Tablet_Raise_C.ExecuteUbergraph_GA_Tablet_Raise
// 0x0368 (0x0368 - 0x0000)
struct GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetCharacter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeHeld;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitInputRelease*          CallFunc_WaitInputRelease_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float TimeWaited)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_TimeWaited;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputPress*            CallFunc_WaitInputPress_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_1; // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0060(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0110(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x01D0(0x00B0)(ConstParm)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0280(0x00B0)()
	class AGBCharacter*                           CallFunc_GetCharacter_ReturnValue_1;               // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeHeld)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0338(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetCharacter_ReturnValue_2;               // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise) == 0x000008, "Wrong alignment on GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise");
static_assert(sizeof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise) == 0x000368, "Wrong size on GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, EntryPoint) == 0x000000, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_GetCharacter_ReturnValue) == 0x000008, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_CustomEvent_TimeHeld) == 0x000010, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_CustomEvent_TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, Temp_float_Variable) == 0x000014, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_WaitInputRelease_ReturnValue) == 0x000018, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_WaitInputRelease_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_CustomEvent_TimeWaited) == 0x000034, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_CustomEvent_TimeWaited' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, Temp_float_Variable_1) == 0x000038, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_WaitInputPress_ReturnValue) == 0x000040, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_WaitInputPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_CreateDelegate_OutputDelegate_1) == 0x00004C, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_CustomEvent_Payload) == 0x000060, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, Temp_struct_Variable) == 0x000110, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0001C0, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_IsValid_ReturnValue_2) == 0x0001C8, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_Event_EventData) == 0x0001D0, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_CustomEvent_EventData) == 0x000280, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_GetCharacter_ReturnValue_1) == 0x000330, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_GetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_CreateDelegate_OutputDelegate_2) == 0x000338, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000348, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000358, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, K2Node_Event_bWasCancelled) == 0x000359, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise, CallFunc_GetCharacter_ReturnValue_2) == 0x000360, "Member 'GA_Tablet_Raise_C_ExecuteUbergraph_GA_Tablet_Raise::CallFunc_GetCharacter_ReturnValue_2' has a wrong offset!");

// Function GA_Tablet_Raise.GA_Tablet_Raise_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Tablet_Raise_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Tablet_Raise_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Tablet_Raise_C_K2_OnEndAbility");
static_assert(sizeof(GA_Tablet_Raise_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Tablet_Raise_C_K2_OnEndAbility");
static_assert(offsetof(GA_Tablet_Raise_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Tablet_Raise_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Tablet_Raise.GA_Tablet_Raise_C.ActivatedByAI
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Tablet_Raise_C_ActivatedByAI final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Tablet_Raise_C_ActivatedByAI) == 0x000008, "Wrong alignment on GA_Tablet_Raise_C_ActivatedByAI");
static_assert(sizeof(GA_Tablet_Raise_C_ActivatedByAI) == 0x0000B0, "Wrong size on GA_Tablet_Raise_C_ActivatedByAI");
static_assert(offsetof(GA_Tablet_Raise_C_ActivatedByAI, EventData) == 0x000000, "Member 'GA_Tablet_Raise_C_ActivatedByAI::EventData' has a wrong offset!");

// Function GA_Tablet_Raise.GA_Tablet_Raise_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Tablet_Raise_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Tablet_Raise_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Tablet_Raise_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Tablet_Raise_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Tablet_Raise_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Tablet_Raise_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Tablet_Raise_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Tablet_Raise.GA_Tablet_Raise_C.EventReceived_94E20FEA7E704E90AC432AAED8C63B2C
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Tablet_Raise_C_EventReceived_94E20FEA7E704E90AC432AAED8C63B2C final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Tablet_Raise_C_EventReceived_94E20FEA7E704E90AC432AAED8C63B2C) == 0x000008, "Wrong alignment on GA_Tablet_Raise_C_EventReceived_94E20FEA7E704E90AC432AAED8C63B2C");
static_assert(sizeof(GA_Tablet_Raise_C_EventReceived_94E20FEA7E704E90AC432AAED8C63B2C) == 0x0000B0, "Wrong size on GA_Tablet_Raise_C_EventReceived_94E20FEA7E704E90AC432AAED8C63B2C");
static_assert(offsetof(GA_Tablet_Raise_C_EventReceived_94E20FEA7E704E90AC432AAED8C63B2C, Payload) == 0x000000, "Member 'GA_Tablet_Raise_C_EventReceived_94E20FEA7E704E90AC432AAED8C63B2C::Payload' has a wrong offset!");

// Function GA_Tablet_Raise.GA_Tablet_Raise_C.OnPress_A98B842D63F6407B9F372224C1B2859D
// 0x0004 (0x0004 - 0x0000)
struct GA_Tablet_Raise_C_OnPress_A98B842D63F6407B9F372224C1B2859D final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Tablet_Raise_C_OnPress_A98B842D63F6407B9F372224C1B2859D) == 0x000004, "Wrong alignment on GA_Tablet_Raise_C_OnPress_A98B842D63F6407B9F372224C1B2859D");
static_assert(sizeof(GA_Tablet_Raise_C_OnPress_A98B842D63F6407B9F372224C1B2859D) == 0x000004, "Wrong size on GA_Tablet_Raise_C_OnPress_A98B842D63F6407B9F372224C1B2859D");
static_assert(offsetof(GA_Tablet_Raise_C_OnPress_A98B842D63F6407B9F372224C1B2859D, TimeWaited) == 0x000000, "Member 'GA_Tablet_Raise_C_OnPress_A98B842D63F6407B9F372224C1B2859D::TimeWaited' has a wrong offset!");

// Function GA_Tablet_Raise.GA_Tablet_Raise_C.OnRelease_F98EC6CF5CE1447F964144FC5FFB5870
// 0x0004 (0x0004 - 0x0000)
struct GA_Tablet_Raise_C_OnRelease_F98EC6CF5CE1447F964144FC5FFB5870 final
{
public:
	float                                         TimeHeld;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Tablet_Raise_C_OnRelease_F98EC6CF5CE1447F964144FC5FFB5870) == 0x000004, "Wrong alignment on GA_Tablet_Raise_C_OnRelease_F98EC6CF5CE1447F964144FC5FFB5870");
static_assert(sizeof(GA_Tablet_Raise_C_OnRelease_F98EC6CF5CE1447F964144FC5FFB5870) == 0x000004, "Wrong size on GA_Tablet_Raise_C_OnRelease_F98EC6CF5CE1447F964144FC5FFB5870");
static_assert(offsetof(GA_Tablet_Raise_C_OnRelease_F98EC6CF5CE1447F964144FC5FFB5870, TimeHeld) == 0x000000, "Member 'GA_Tablet_Raise_C_OnRelease_F98EC6CF5CE1447F964144FC5FFB5870::TimeHeld' has a wrong offset!");

}

