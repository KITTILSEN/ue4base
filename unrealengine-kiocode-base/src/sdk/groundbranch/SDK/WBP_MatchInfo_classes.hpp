#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MatchInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MatchInfo.WBP_MatchInfo_C
// 0x0118 (0x0378 - 0x0260)
class UWBP_MatchInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HorizontalBox_Voting;                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ChooseNextMissionText;                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Subtitle;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Title;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Container;                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MatchInfo_PVPFFASummary_C*         WBP_MatchInfo_PVPFFASummary;                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MatchInfo_PVPSummary_C*            WBP_MatchInfo_PVPSummary;                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_ByGameModeType;                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ChooseNextMissionText_One;                         // 0x02B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ChooseNextMissionText_Many;                        // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ChooseNextMissionText_ChangeVote;                  // 0x02E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateChildSize                        VoteButtonSize;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FMargin                                VoteButtonPadding;                                 // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         UpdateTime;                                        // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TickUpdateInterval;                                // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfNextMapVoteChoices;                        // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            NextMapVoteCounts;                                 // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bDebug;                                            // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_MatchInfo(int32 EntryPoint);
	void Update();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Destruct();
	void UnbindOnNetMapVoteChoicesChanged();
	void UpdateNextMissionText();
	void OnNextMapVoteChoicesChanged(class AGBGameState* GameState);
	void BindOnNetMapVoteChoicesChanged();
	void Construct();

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MatchInfo_C">();
	}
	static class UWBP_MatchInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MatchInfo_C>();
	}
};
static_assert(alignof(UWBP_MatchInfo_C) == 0x000008, "Wrong alignment on UWBP_MatchInfo_C");
static_assert(sizeof(UWBP_MatchInfo_C) == 0x000378, "Wrong size on UWBP_MatchInfo_C");
static_assert(offsetof(UWBP_MatchInfo_C, UberGraphFrame) == 0x000260, "Member 'UWBP_MatchInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, HorizontalBox_Voting) == 0x000268, "Member 'UWBP_MatchInfo_C::HorizontalBox_Voting' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, TextBlock_ChooseNextMissionText) == 0x000270, "Member 'UWBP_MatchInfo_C::TextBlock_ChooseNextMissionText' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, TextBlock_Subtitle) == 0x000278, "Member 'UWBP_MatchInfo_C::TextBlock_Subtitle' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, TextBlock_Title) == 0x000280, "Member 'UWBP_MatchInfo_C::TextBlock_Title' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, VerticalBox_Container) == 0x000288, "Member 'UWBP_MatchInfo_C::VerticalBox_Container' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, WBP_MatchInfo_PVPFFASummary) == 0x000290, "Member 'UWBP_MatchInfo_C::WBP_MatchInfo_PVPFFASummary' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, WBP_MatchInfo_PVPSummary) == 0x000298, "Member 'UWBP_MatchInfo_C::WBP_MatchInfo_PVPSummary' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, WidgetSwitcher_ByGameModeType) == 0x0002A0, "Member 'UWBP_MatchInfo_C::WidgetSwitcher_ByGameModeType' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, TeamId) == 0x0002A8, "Member 'UWBP_MatchInfo_C::TeamId' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, ChooseNextMissionText_One) == 0x0002B0, "Member 'UWBP_MatchInfo_C::ChooseNextMissionText_One' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, ChooseNextMissionText_Many) == 0x0002C8, "Member 'UWBP_MatchInfo_C::ChooseNextMissionText_Many' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, ChooseNextMissionText_ChangeVote) == 0x0002E0, "Member 'UWBP_MatchInfo_C::ChooseNextMissionText_ChangeVote' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, VoteButtonSize) == 0x0002F8, "Member 'UWBP_MatchInfo_C::VoteButtonSize' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, VoteButtonPadding) == 0x000300, "Member 'UWBP_MatchInfo_C::VoteButtonPadding' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, UpdateTime) == 0x000310, "Member 'UWBP_MatchInfo_C::UpdateTime' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, TickUpdateInterval) == 0x000314, "Member 'UWBP_MatchInfo_C::TickUpdateInterval' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, NumberOfNextMapVoteChoices) == 0x000318, "Member 'UWBP_MatchInfo_C::NumberOfNextMapVoteChoices' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, NextMapVoteCounts) == 0x000320, "Member 'UWBP_MatchInfo_C::NextMapVoteCounts' has a wrong offset!");
static_assert(offsetof(UWBP_MatchInfo_C, bDebug) == 0x000370, "Member 'UWBP_MatchInfo_C::bDebug' has a wrong offset!");

}

