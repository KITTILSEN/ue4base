#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ural_375_Flatbed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ural_375_Flatbed.BP_Ural_375_Flatbed_C
// 0x0040 (0x0260 - 0x0220)
class ABP_Ural_375_Flatbed_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Flatbed;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door_Right;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door_Left;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ural_375_Chassis;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TopCover;                                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFlatbed;                                        // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasTopcover;                                       // 0x0251(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RightFront;                                        // 0x0254(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftFront;                                         // 0x0258(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightingChannel_0;                                 // 0x025C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LightingChannel_1;                                 // 0x025D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LightingChannel_2;                                 // 0x025E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Ural_375_Flatbed(int32 EntryPoint);
	void Reconstruct();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ural_375_Flatbed_C">();
	}
	static class ABP_Ural_375_Flatbed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ural_375_Flatbed_C>();
	}
};
static_assert(alignof(ABP_Ural_375_Flatbed_C) == 0x000008, "Wrong alignment on ABP_Ural_375_Flatbed_C");
static_assert(sizeof(ABP_Ural_375_Flatbed_C) == 0x000260, "Wrong size on ABP_Ural_375_Flatbed_C");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, UberGraphFrame) == 0x000220, "Member 'ABP_Ural_375_Flatbed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, Flatbed) == 0x000228, "Member 'ABP_Ural_375_Flatbed_C::Flatbed' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, Door_Right) == 0x000230, "Member 'ABP_Ural_375_Flatbed_C::Door_Right' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, Door_Left) == 0x000238, "Member 'ABP_Ural_375_Flatbed_C::Door_Left' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, Ural_375_Chassis) == 0x000240, "Member 'ABP_Ural_375_Flatbed_C::Ural_375_Chassis' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, TopCover) == 0x000248, "Member 'ABP_Ural_375_Flatbed_C::TopCover' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, HasFlatbed) == 0x000250, "Member 'ABP_Ural_375_Flatbed_C::HasFlatbed' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, HasTopcover) == 0x000251, "Member 'ABP_Ural_375_Flatbed_C::HasTopcover' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, RightFront) == 0x000254, "Member 'ABP_Ural_375_Flatbed_C::RightFront' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, LeftFront) == 0x000258, "Member 'ABP_Ural_375_Flatbed_C::LeftFront' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, LightingChannel_0) == 0x00025C, "Member 'ABP_Ural_375_Flatbed_C::LightingChannel_0' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, LightingChannel_1) == 0x00025D, "Member 'ABP_Ural_375_Flatbed_C::LightingChannel_1' has a wrong offset!");
static_assert(offsetof(ABP_Ural_375_Flatbed_C, LightingChannel_2) == 0x00025E, "Member 'ABP_Ural_375_Flatbed_C::LightingChannel_2' has a wrong offset!");

}

