#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GBSkyLight

#include "Basic.hpp"

#include "FGBSkyLightSettings_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function BP_GBSkyLight.BP_GBSkyLight_C.ExecuteUbergraph_BP_GBSkyLight
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_TimeSpan;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bOverride;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBBlendedTimeSpan                     CallFunc_GetTimeSpanTagBlended_ReturnValue;        // 0x0014(0x0014)(NoDestructor)
	struct FFGBSkyLightSettings                   CallFunc_GetBlendedSkyLightSettings_BlendedSkyLightSettings; // 0x0028(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GBSkyActor_C*                       CallFunc_GetActorOfClass_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFGBSkyLightSettings                   CallFunc_Map_Find_Value;                           // 0x0060(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFGBSkyLightSettings                   CallFunc_Map_Find_Value_1;                         // 0x0098(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName Timespan)>         K2Node_CreateDelegate_OutputDelegate;              // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight) == 0x000008, "Wrong alignment on BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight");
static_assert(sizeof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight) == 0x0000E0, "Wrong size on BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, EntryPoint) == 0x000000, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, K2Node_CustomEvent_TimeSpan) == 0x000008, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::K2Node_CustomEvent_TimeSpan' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, K2Node_CustomEvent_bOverride) == 0x000010, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::K2Node_CustomEvent_bOverride' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_GetTimeSpanTagBlended_ReturnValue) == 0x000014, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_GetTimeSpanTagBlended_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_GetBlendedSkyLightSettings_BlendedSkyLightSettings) == 0x000028, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_GetBlendedSkyLightSettings_BlendedSkyLightSettings' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_GetActorOfClass_ReturnValue) == 0x000058, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_Map_Find_Value) == 0x000060, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_Map_Find_Value_1) == 0x000098, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_Map_Find_ReturnValue_1) == 0x0000C8, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000C9, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight, K2Node_CreateDelegate_OutputDelegate) == 0x0000CC, "Member 'BP_GBSkyLight_C_ExecuteUbergraph_BP_GBSkyLight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_GBSkyLight.BP_GBSkyLight_C.ShouldOverrideTOD
// 0x0001 (0x0001 - 0x0000)
struct BP_GBSkyLight_C_ShouldOverrideTOD final
{
public:
	bool                                          bOverride;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GBSkyLight_C_ShouldOverrideTOD) == 0x000001, "Wrong alignment on BP_GBSkyLight_C_ShouldOverrideTOD");
static_assert(sizeof(BP_GBSkyLight_C_ShouldOverrideTOD) == 0x000001, "Wrong size on BP_GBSkyLight_C_ShouldOverrideTOD");
static_assert(offsetof(BP_GBSkyLight_C_ShouldOverrideTOD, bOverride) == 0x000000, "Member 'BP_GBSkyLight_C_ShouldOverrideTOD::bOverride' has a wrong offset!");

// Function BP_GBSkyLight.BP_GBSkyLight_C.OnTimeSpanChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_GBSkyLight_C_OnTimeSpanChanged_Event_0 final
{
public:
	class FName                                   Timespan;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GBSkyLight_C_OnTimeSpanChanged_Event_0) == 0x000004, "Wrong alignment on BP_GBSkyLight_C_OnTimeSpanChanged_Event_0");
static_assert(sizeof(BP_GBSkyLight_C_OnTimeSpanChanged_Event_0) == 0x000008, "Wrong size on BP_GBSkyLight_C_OnTimeSpanChanged_Event_0");
static_assert(offsetof(BP_GBSkyLight_C_OnTimeSpanChanged_Event_0, Timespan) == 0x000000, "Member 'BP_GBSkyLight_C_OnTimeSpanChanged_Event_0::Timespan' has a wrong offset!");

// Function BP_GBSkyLight.BP_GBSkyLight_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_GBSkyLight_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsEditorWorld_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GBSkyLight_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_GBSkyLight_C_UserConstructionScript");
static_assert(sizeof(BP_GBSkyLight_C_UserConstructionScript) == 0x000001, "Wrong size on BP_GBSkyLight_C_UserConstructionScript");
static_assert(offsetof(BP_GBSkyLight_C_UserConstructionScript, CallFunc_IsEditorWorld_ReturnValue) == 0x000000, "Member 'BP_GBSkyLight_C_UserConstructionScript::CallFunc_IsEditorWorld_ReturnValue' has a wrong offset!");

// Function BP_GBSkyLight.BP_GBSkyLight_C.GetBlendedSkyLightSettings
// 0x0098 (0x0098 - 0x0000)
struct BP_GBSkyLight_C_GetBlendedSkyLightSettings final
{
public:
	struct FFGBSkyLightSettings                   BlendedSkyLightSettings;                           // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureCube*                           K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFGBSkyLightSettings                   K2Node_MakeStruct_FGBSkyLightSettings;             // 0x0068(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GBSkyLight_C_GetBlendedSkyLightSettings) == 0x000008, "Wrong alignment on BP_GBSkyLight_C_GetBlendedSkyLightSettings");
static_assert(sizeof(BP_GBSkyLight_C_GetBlendedSkyLightSettings) == 0x000098, "Wrong size on BP_GBSkyLight_C_GetBlendedSkyLightSettings");
static_assert(offsetof(BP_GBSkyLight_C_GetBlendedSkyLightSettings, BlendedSkyLightSettings) == 0x000000, "Member 'BP_GBSkyLight_C_GetBlendedSkyLightSettings::BlendedSkyLightSettings' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_GetBlendedSkyLightSettings, Temp_bool_Variable) == 0x000030, "Member 'BP_GBSkyLight_C_GetBlendedSkyLightSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_GetBlendedSkyLightSettings, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000031, "Member 'BP_GBSkyLight_C_GetBlendedSkyLightSettings::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_GetBlendedSkyLightSettings, K2Node_Select_Default) == 0x000038, "Member 'BP_GBSkyLight_C_GetBlendedSkyLightSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_GetBlendedSkyLightSettings, CallFunc_LinearColorLerp_ReturnValue) == 0x000040, "Member 'BP_GBSkyLight_C_GetBlendedSkyLightSettings::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_GetBlendedSkyLightSettings, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000050, "Member 'BP_GBSkyLight_C_GetBlendedSkyLightSettings::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_GetBlendedSkyLightSettings, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'BP_GBSkyLight_C_GetBlendedSkyLightSettings::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBSkyLight_C_GetBlendedSkyLightSettings, K2Node_MakeStruct_FGBSkyLightSettings) == 0x000068, "Member 'BP_GBSkyLight_C_GetBlendedSkyLightSettings::K2Node_MakeStruct_FGBSkyLightSettings' has a wrong offset!");

}

