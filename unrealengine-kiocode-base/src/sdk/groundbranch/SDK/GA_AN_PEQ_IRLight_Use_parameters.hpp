#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AN_PEQ_IRLight_Use

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_AN_PEQ_IRLight_Use.GA_AN_PEQ_IRLight_Use_C.InitReferences
// 0x0028 (0x0028 - 0x0000)
struct GA_AN_PEQ_IRLight_Use_C_InitReferences final
{
public:
	bool                                          bOutSuccess;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetCharacter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AN_PEQ_Master_C*                    CallFunc_GetFirstChildInvItemOfClass_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AN_PEQ_IRLight_Use_C_InitReferences) == 0x000008, "Wrong alignment on GA_AN_PEQ_IRLight_Use_C_InitReferences");
static_assert(sizeof(GA_AN_PEQ_IRLight_Use_C_InitReferences) == 0x000028, "Wrong size on GA_AN_PEQ_IRLight_Use_C_InitReferences");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_InitReferences, bOutSuccess) == 0x000000, "Member 'GA_AN_PEQ_IRLight_Use_C_InitReferences::bOutSuccess' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_InitReferences, CallFunc_GetCharacter_ReturnValue) == 0x000008, "Member 'GA_AN_PEQ_IRLight_Use_C_InitReferences::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_InitReferences, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GA_AN_PEQ_IRLight_Use_C_InitReferences::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_InitReferences, CallFunc_GetEquipped_ReturnValue) == 0x000018, "Member 'GA_AN_PEQ_IRLight_Use_C_InitReferences::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_InitReferences, CallFunc_GetFirstChildInvItemOfClass_ReturnValue) == 0x000020, "Member 'GA_AN_PEQ_IRLight_Use_C_InitReferences::CallFunc_GetFirstChildInvItemOfClass_ReturnValue' has a wrong offset!");

// Function GA_AN_PEQ_IRLight_Use.GA_AN_PEQ_IRLight_Use_C.StartUsing
// 0x0010 (0x0010 - 0x0000)
struct GA_AN_PEQ_IRLight_Use_C_StartUsing final
{
public:
	class ABP_AN_PEQ_Master_C*                    K2Node_DynamicCast_AsBP_AN_PEQ_Master;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_AN_PEQ_IRLight_Use_C_StartUsing) == 0x000008, "Wrong alignment on GA_AN_PEQ_IRLight_Use_C_StartUsing");
static_assert(sizeof(GA_AN_PEQ_IRLight_Use_C_StartUsing) == 0x000010, "Wrong size on GA_AN_PEQ_IRLight_Use_C_StartUsing");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_StartUsing, K2Node_DynamicCast_AsBP_AN_PEQ_Master) == 0x000000, "Member 'GA_AN_PEQ_IRLight_Use_C_StartUsing::K2Node_DynamicCast_AsBP_AN_PEQ_Master' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_StartUsing, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'GA_AN_PEQ_IRLight_Use_C_StartUsing::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_AN_PEQ_IRLight_Use.GA_AN_PEQ_IRLight_Use_C.StopUsing
// 0x0010 (0x0010 - 0x0000)
struct GA_AN_PEQ_IRLight_Use_C_StopUsing final
{
public:
	class ABP_AN_PEQ_Master_C*                    K2Node_DynamicCast_AsBP_AN_PEQ_Master;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_AN_PEQ_IRLight_Use_C_StopUsing) == 0x000008, "Wrong alignment on GA_AN_PEQ_IRLight_Use_C_StopUsing");
static_assert(sizeof(GA_AN_PEQ_IRLight_Use_C_StopUsing) == 0x000010, "Wrong size on GA_AN_PEQ_IRLight_Use_C_StopUsing");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_StopUsing, K2Node_DynamicCast_AsBP_AN_PEQ_Master) == 0x000000, "Member 'GA_AN_PEQ_IRLight_Use_C_StopUsing::K2Node_DynamicCast_AsBP_AN_PEQ_Master' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_StopUsing, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'GA_AN_PEQ_IRLight_Use_C_StopUsing::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_AN_PEQ_IRLight_Use.GA_AN_PEQ_IRLight_Use_C.K2_CanActivateAbility
// 0x00A0 (0x00A0 - 0x0000)
struct GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AN_PEQ_Master_C*                    CallFunc_GetFirstChildInvItemOfClass_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility");
static_assert(sizeof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility) == 0x0000A0, "Wrong size on GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, K2Node_DynamicCast_AsGBCharacter) == 0x000078, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, CallFunc_GetEquipped_ReturnValue) == 0x000088, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, CallFunc_GetFirstChildInvItemOfClass_ReturnValue) == 0x000090, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::CallFunc_GetFirstChildInvItemOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'GA_AN_PEQ_IRLight_Use_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

