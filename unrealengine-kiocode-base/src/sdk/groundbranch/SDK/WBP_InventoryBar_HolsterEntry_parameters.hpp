#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryBar_HolsterEntry

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "UMG_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryBar_HolsterEntry.WBP_InventoryBar_HolsterEntry_C.ExecuteUbergraph_WBP_InventoryBar_HolsterEntry
// 0x0228 (0x0228 - 0x0000)
struct WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter_1;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_2;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter_2;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsSelected;                           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0018)()
	class AGBInvItem*                             K2Node_Event_InItem;                               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBHolster*                             K2Node_DynamicCast_AsGBHolster;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_LoadedAsset;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bMainhand;                            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bImmediate;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_ReturnValue_1;             // 0x00A8(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIcon_ReturnValue;                      // 0x00C0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHand                                         Temp_byte_Variable;                                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHand                                         Temp_byte_Variable_1;                              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x00F0(0x0020)()
	class UObject*                                K2Node_CustomEvent_InLeftHandItem;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_InRightHandItem;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHand                                         K2Node_Select_Default;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0128(0x00B0)()
	EHand                                         CallFunc_GetHandEnum_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetInvItemTags_ReturnValue;               // 0x01E8(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* LoadedAsset)>   K2Node_CreateDelegate_OutputDelegate;              // 0x020C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetHolsteredItem_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry) == 0x000008, "Wrong alignment on WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry");
static_assert(sizeof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry) == 0x000228, "Wrong size on WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, EntryPoint) == 0x000000, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, Temp_bool_Variable) == 0x000010, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_AsGBCharacter) == 0x000018, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x000028, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_AsGBCharacter_1) == 0x000030, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_AsGBCharacter_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetOwningPlayerPawn_ReturnValue_2) == 0x000040, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetOwningPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_AsGBCharacter_2) == 0x000048, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_AsGBCharacter_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_ComponentBoundEvent_bIsChecked) == 0x000051, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_Event_IsSelected) == 0x000052, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_Event_IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_Event_InItem) == 0x000070, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_Event_InItem' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_AsGBHolster) == 0x000078, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_AsGBHolster' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_CustomEvent_LoadedAsset) == 0x000088, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_CustomEvent_LoadedAsset' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_Event_bMainhand) == 0x000090, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_Event_bMainhand' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_Event_bImmediate) == 0x000091, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_Event_bImmediate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_AsTexture_2D) == 0x000098, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000A8, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetIcon_ReturnValue) == 0x0000C0, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, Temp_byte_Variable) == 0x0000E9, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, Temp_byte_Variable_1) == 0x0000EA, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0000F0, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_CustomEvent_InLeftHandItem) == 0x000110, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_CustomEvent_InLeftHandItem' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_CustomEvent_InRightHandItem) == 0x000118, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_CustomEvent_InRightHandItem' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_Select_Default) == 0x000120, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_MakeStruct_GameplayEventData) == 0x000128, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetHandEnum_ReturnValue) == 0x0001D8, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetHandEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D9, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetEquipped_ReturnValue) == 0x0001E0, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetInvItemTags_ReturnValue) == 0x0001E8, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetInvItemTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_IsValid_ReturnValue_2) == 0x000208, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_HasAllTags_ReturnValue) == 0x000209, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, K2Node_CreateDelegate_OutputDelegate) == 0x00020C, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry, CallFunc_GetHolsteredItem_ReturnValue) == 0x000220, "Member 'WBP_InventoryBar_HolsterEntry_C_ExecuteUbergraph_WBP_InventoryBar_HolsterEntry::CallFunc_GetHolsteredItem_ReturnValue' has a wrong offset!");

// Function WBP_InventoryBar_HolsterEntry.WBP_InventoryBar_HolsterEntry_C.SwitchItems
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryBar_HolsterEntry_C_SwitchItems final
{
public:
	class UObject*                                InLeftHandItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                InRightHandItem;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBar_HolsterEntry_C_SwitchItems) == 0x000008, "Wrong alignment on WBP_InventoryBar_HolsterEntry_C_SwitchItems");
static_assert(sizeof(WBP_InventoryBar_HolsterEntry_C_SwitchItems) == 0x000010, "Wrong size on WBP_InventoryBar_HolsterEntry_C_SwitchItems");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_SwitchItems, InLeftHandItem) == 0x000000, "Member 'WBP_InventoryBar_HolsterEntry_C_SwitchItems::InLeftHandItem' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_SwitchItems, InRightHandItem) == 0x000008, "Member 'WBP_InventoryBar_HolsterEntry_C_SwitchItems::InRightHandItem' has a wrong offset!");

// Function WBP_InventoryBar_HolsterEntry.WBP_InventoryBar_HolsterEntry_C.EquipInventorySlotItem
// 0x0002 (0x0002 - 0x0000)
struct WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem final
{
public:
	bool                                          bMainHand;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bImmediate;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem) == 0x000001, "Wrong alignment on WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem");
static_assert(sizeof(WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem) == 0x000002, "Wrong size on WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem, bMainHand) == 0x000000, "Member 'WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem::bMainHand' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem, bImmediate) == 0x000001, "Member 'WBP_InventoryBar_HolsterEntry_C_EquipInventorySlotItem::bImmediate' has a wrong offset!");

// Function WBP_InventoryBar_HolsterEntry.WBP_InventoryBar_HolsterEntry_C.OnIconLoaded
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBar_HolsterEntry_C_OnIconLoaded final
{
public:
	class UObject*                                LoadedAsset;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBar_HolsterEntry_C_OnIconLoaded) == 0x000008, "Wrong alignment on WBP_InventoryBar_HolsterEntry_C_OnIconLoaded");
static_assert(sizeof(WBP_InventoryBar_HolsterEntry_C_OnIconLoaded) == 0x000008, "Wrong size on WBP_InventoryBar_HolsterEntry_C_OnIconLoaded");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_OnIconLoaded, LoadedAsset) == 0x000000, "Member 'WBP_InventoryBar_HolsterEntry_C_OnIconLoaded::LoadedAsset' has a wrong offset!");

// Function WBP_InventoryBar_HolsterEntry.WBP_InventoryBar_HolsterEntry_C.SetInventorySlotItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBar_HolsterEntry_C_SetInventorySlotItem final
{
public:
	class AGBInvItem*                             InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBar_HolsterEntry_C_SetInventorySlotItem) == 0x000008, "Wrong alignment on WBP_InventoryBar_HolsterEntry_C_SetInventorySlotItem");
static_assert(sizeof(WBP_InventoryBar_HolsterEntry_C_SetInventorySlotItem) == 0x000008, "Wrong size on WBP_InventoryBar_HolsterEntry_C_SetInventorySlotItem");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_SetInventorySlotItem, InItem) == 0x000000, "Member 'WBP_InventoryBar_HolsterEntry_C_SetInventorySlotItem::InItem' has a wrong offset!");

// Function WBP_InventoryBar_HolsterEntry.WBP_InventoryBar_HolsterEntry_C.InternalSetSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBar_HolsterEntry_C_InternalSetSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_HolsterEntry_C_InternalSetSelected) == 0x000001, "Wrong alignment on WBP_InventoryBar_HolsterEntry_C_InternalSetSelected");
static_assert(sizeof(WBP_InventoryBar_HolsterEntry_C_InternalSetSelected) == 0x000001, "Wrong size on WBP_InventoryBar_HolsterEntry_C_InternalSetSelected");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_InternalSetSelected, IsSelected) == 0x000000, "Member 'WBP_InventoryBar_HolsterEntry_C_InternalSetSelected::IsSelected' has a wrong offset!");

// Function WBP_InventoryBar_HolsterEntry.WBP_InventoryBar_HolsterEntry_C.BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBar_HolsterEntry_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_HolsterEntry_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_InventoryBar_HolsterEntry_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WBP_InventoryBar_HolsterEntry_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_InventoryBar_HolsterEntry_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WBP_InventoryBar_HolsterEntry_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WBP_InventoryBar_HolsterEntry.WBP_InventoryBar_HolsterEntry_C.GetVisibility_0
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBar_HolsterEntry_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBar_HolsterEntry_C_GetVisibility_0) == 0x000001, "Wrong alignment on WBP_InventoryBar_HolsterEntry_C_GetVisibility_0");
static_assert(sizeof(WBP_InventoryBar_HolsterEntry_C_GetVisibility_0) == 0x000001, "Wrong size on WBP_InventoryBar_HolsterEntry_C_GetVisibility_0");
static_assert(offsetof(WBP_InventoryBar_HolsterEntry_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WBP_InventoryBar_HolsterEntry_C_GetVisibility_0::ReturnValue' has a wrong offset!");

}

