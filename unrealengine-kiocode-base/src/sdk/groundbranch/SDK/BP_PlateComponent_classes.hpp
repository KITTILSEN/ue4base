#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlateComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlateComponent.BP_PlateComponent_C
// 0x0080 (0x0280 - 0x0200)
class UBP_PlateComponent_C final : public USceneComponent
{
public:
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0200(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMulticastInlineDelegate<void(class UBP_PlateComponent_C* PlateComponent, class AGBBulletProjectile* Bullet)> OnPlateHit; // 0x0208(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UBP_PlateComponent_C* PlateComponent)> OnPlateDropped;       // 0x0218(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UBP_PlateComponent_C* PlateComponent)> OnPlateReset;         // 0x0228(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         ShotsRemaining;                                    // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle_AutomaticReset;                        // 0x0240(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ShotsToDrop;                                       // 0x0248(0x0010)(Edit, BlueprintVisible)
	bool                                          bAutoReset;                                        // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ResetTimeMin;                                      // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResetTimeMax;                                      // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(TSoftObjectPtr<class UMaterialInterface> Skin, class UBP_PlateComponent_C* PlateComponent)> OnPlateSkinSet; // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         ShotsTaken;                                        // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlateComponent(int32 EntryPoint);
	void SetSkin(TSoftObjectPtr<class UMaterialInterface> Skin);
	void CheckAutoReset();
	void Reset();
	void AutomaticReset();
	void OnComponentHit_Event(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlateComponent_C">();
	}
	static class UBP_PlateComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlateComponent_C>();
	}
};
static_assert(alignof(UBP_PlateComponent_C) == 0x000010, "Wrong alignment on UBP_PlateComponent_C");
static_assert(sizeof(UBP_PlateComponent_C) == 0x000280, "Wrong size on UBP_PlateComponent_C");
static_assert(offsetof(UBP_PlateComponent_C, UberGraphFrame) == 0x000200, "Member 'UBP_PlateComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, OnPlateHit) == 0x000208, "Member 'UBP_PlateComponent_C::OnPlateHit' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, OnPlateDropped) == 0x000218, "Member 'UBP_PlateComponent_C::OnPlateDropped' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, OnPlateReset) == 0x000228, "Member 'UBP_PlateComponent_C::OnPlateReset' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, ShotsRemaining) == 0x000238, "Member 'UBP_PlateComponent_C::ShotsRemaining' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, TimerHandle_AutomaticReset) == 0x000240, "Member 'UBP_PlateComponent_C::TimerHandle_AutomaticReset' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, ShotsToDrop) == 0x000248, "Member 'UBP_PlateComponent_C::ShotsToDrop' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, bAutoReset) == 0x000258, "Member 'UBP_PlateComponent_C::bAutoReset' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, ResetTimeMin) == 0x00025C, "Member 'UBP_PlateComponent_C::ResetTimeMin' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, ResetTimeMax) == 0x000260, "Member 'UBP_PlateComponent_C::ResetTimeMax' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, OnPlateSkinSet) == 0x000268, "Member 'UBP_PlateComponent_C::OnPlateSkinSet' has a wrong offset!");
static_assert(offsetof(UBP_PlateComponent_C, ShotsTaken) == 0x000278, "Member 'UBP_PlateComponent_C::ShotsTaken' has a wrong offset!");

}

