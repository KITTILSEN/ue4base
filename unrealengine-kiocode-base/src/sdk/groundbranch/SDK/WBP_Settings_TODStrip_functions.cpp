#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_TODStrip

#include "Basic.hpp"

#include "WBP_Settings_TODStrip_classes.hpp"
#include "WBP_Settings_TODStrip_parameters.hpp"


namespace SDK
{

// Function WBP_Settings_TODStrip.WBP_Settings_TODStrip_C.ExecuteUbergraph_WBP_Settings_TODStrip
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_TODStrip_C::ExecuteUbergraph_WBP_Settings_TODStrip(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_TODStrip_C", "ExecuteUbergraph_WBP_Settings_TODStrip");

	Params::WBP_Settings_TODStrip_C_ExecuteUbergraph_WBP_Settings_TODStrip Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_TODStrip.WBP_Settings_TODStrip_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Settings_TODStrip_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_TODStrip_C", "OnMouseButtonDown");

	Params::WBP_Settings_TODStrip_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Settings_TODStrip.WBP_Settings_TODStrip_C.GetColourForTOD
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   SunPitch                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MoonPitch                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MoonPhase                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Colour                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_TODStrip_C::GetColourForTOD(float SunPitch, float MoonPitch, float MoonPhase, struct FLinearColor* Colour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_TODStrip_C", "GetColourForTOD");

	Params::WBP_Settings_TODStrip_C_GetColourForTOD Parms{};

	Parms.SunPitch = SunPitch;
	Parms.MoonPitch = MoonPitch;
	Parms.MoonPhase = MoonPhase;

	UObject::ProcessEvent(Func, &Parms);

	if (Colour != nullptr)
		*Colour = std::move(Parms.Colour);
}


// Function WBP_Settings_TODStrip.WBP_Settings_TODStrip_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Settings_TODStrip_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_TODStrip_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_TODStrip.WBP_Settings_TODStrip_C.CreateTODStrip
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumberOfSteps                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<float>&                    SunPositions                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<float>&                    MoonPositions                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   MoonPhase                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_TODStrip_C::CreateTODStrip(int32 NumberOfSteps, const TArray<float>& SunPositions, const TArray<float>& MoonPositions, float MoonPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_TODStrip_C", "CreateTODStrip");

	Params::WBP_Settings_TODStrip_C_CreateTODStrip Parms{};

	Parms.NumberOfSteps = NumberOfSteps;
	Parms.SunPositions = std::move(SunPositions);
	Parms.MoonPositions = std::move(MoonPositions);
	Parms.MoonPhase = MoonPhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_TODStrip.WBP_Settings_TODStrip_C.UpdateDisplayedMissionTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewMissionTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_TODStrip_C::UpdateDisplayedMissionTime(float NewMissionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_TODStrip_C", "UpdateDisplayedMissionTime");

	Params::WBP_Settings_TODStrip_C_UpdateDisplayedMissionTime Parms{};

	Parms.NewMissionTime = NewMissionTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

