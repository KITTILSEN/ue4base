#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD

#include "Basic.hpp"

#include "BP_HUD_classes.hpp"
#include "BP_HUD_parameters.hpp"


namespace SDK
{

// Function BP_HUD.BP_HUD_C.ExecuteUbergraph_BP_HUD
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::ExecuteUbergraph_BP_HUD(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ExecuteUbergraph_BP_HUD");

	Params::BP_HUD_C_ExecuteUbergraph_BP_HUD Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowRadialMenuEvent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UUserWidget*>&       RadialMenuEntries                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_HUD_C::ShowRadialMenuEvent(const TArray<class UUserWidget*>& RadialMenuEntries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowRadialMenuEvent");

	Params::BP_HUD_C_ShowRadialMenuEvent Parms{};

	Parms.RadialMenuEntries = std::move(RadialMenuEntries);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnPlayerReadyRoomStatusChanged_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::OnPlayerReadyRoomStatusChanged_Event_0(class AGBPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnPlayerReadyRoomStatusChanged_Event_0");

	Params::BP_HUD_C_OnPlayerReadyRoomStatusChanged_Event_0 Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.AddHint
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             UserWidgetClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HUD_C::AddHint(TSoftClassPtr<class UClass> UserWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "AddHint");

	Params::BP_HUD_C_AddHint Parms{};

	Parms.UserWidgetClass = UserWidgetClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowWarningEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WarningName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::ShowWarningEvent(class FName WarningName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowWarningEvent");

	Params::BP_HUD_C_ShowWarningEvent Parms{};

	Parms.WarningName = WarningName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnColourBlindnessFilterUpdateEvent
// (Event, Protected, BlueprintEvent)

void ABP_HUD_C::OnColourBlindnessFilterUpdateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnColourBlindnessFilterUpdateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.HideFriendlyPlayerNameEvent
// (Event, Protected, BlueprintEvent)

void ABP_HUD_C::HideFriendlyPlayerNameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideFriendlyPlayerNameEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.ShowFriendlyPlayerNameEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const ETeamElement&                     PlayerTeamElement                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::ShowFriendlyPlayerNameEvent(const class FString& PlayerName, const ETeamElement& PlayerTeamElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowFriendlyPlayerNameEvent");

	Params::BP_HUD_C_ShowFriendlyPlayerNameEvent Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.PlayerTeamElement = PlayerTeamElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ForceHidePlayerNames
// (BlueprintCallable, BlueprintEvent)

void ABP_HUD_C::ForceHidePlayerNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ForceHidePlayerNames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.PreventPlayerNameCleanUp
// (BlueprintCallable, BlueprintEvent)

void ABP_HUD_C::PreventPlayerNameCleanUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "PreventPlayerNameCleanUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.DelayedPlayerNameCleanUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::DelayedPlayerNameCleanUp(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "DelayedPlayerNameCleanUp");

	Params::BP_HUD_C_DelayedPlayerNameCleanUp Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.PlayerNameCleanUp
// (BlueprintCallable, BlueprintEvent)

void ABP_HUD_C::PlayerNameCleanUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "PlayerNameCleanUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.ApplyPlayerSettingsEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UGBPlayerSettings*                GBPlayerSettings                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::ApplyPlayerSettingsEvent(class UGBPlayerSettings* GBPlayerSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ApplyPlayerSettingsEvent");

	Params::BP_HUD_C_ApplyPlayerSettingsEvent Parms{};

	Parms.GBPlayerSettings = GBPlayerSettings;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnShowHUDEvent
// (Event, Protected, BlueprintEvent)

void ABP_HUD_C::OnShowHUDEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowHUDEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.InternalOpenUserMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MenuName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             MenuType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::InternalOpenUserMenu(const class FString& MenuName, class FName MenuType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "InternalOpenUserMenu");

	Params::BP_HUD_C_InternalOpenUserMenu Parms{};

	Parms.MenuName = std::move(MenuName);
	Parms.MenuType = MenuType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OpenUserMenu
// (Exec, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MenuName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_HUD_C::OpenUserMenu(const class FString& MenuName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OpenUserMenu");

	Params::BP_HUD_C_OpenUserMenu Parms{};

	Parms.MenuName = std::move(MenuName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OpenRadialUserMenu
// (Exec, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MenuName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_HUD_C::OpenRadialUserMenu(const class FString& MenuName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OpenRadialUserMenu");

	Params::BP_HUD_C_OpenRadialUserMenu Parms{};

	Parms.MenuName = std::move(MenuName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OpenLinearUserMenu
// (Exec, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MenuName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_HUD_C::OpenLinearUserMenu(const class FString& MenuName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OpenLinearUserMenu");

	Params::BP_HUD_C_OpenLinearUserMenu Parms{};

	Parms.MenuName = std::move(MenuName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.HideGamePlayRelated
// (BlueprintCallable, BlueprintEvent)

void ABP_HUD_C::HideGamePlayRelated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideGamePlayRelated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.HideRadialItemsMenuEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_HUD_C::HideRadialItemsMenuEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideRadialItemsMenuEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.ShowRadialItemsMenuEvent
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class AGBInvItem*>&        Items                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_HUD_C::ShowRadialItemsMenuEvent(const TArray<class AGBInvItem*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowRadialItemsMenuEvent");

	Params::BP_HUD_C_ShowRadialItemsMenuEvent Parms{};

	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnInventorySlotEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bImmediate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HUD_C::OnInventorySlotEvent(int32 Index_0, bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnInventorySlotEvent");

	Params::BP_HUD_C_OnInventorySlotEvent Parms{};

	Parms.Index_0 = Index_0;
	Parms.bImmediate = bImmediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.HideReadyRoomPlayerNameEvent
// (Event, Protected, BlueprintEvent)

void ABP_HUD_C::HideReadyRoomPlayerNameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideReadyRoomPlayerNameEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.ShowReadyRoomPlayerNameEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const ETeamElement&                     PlayerTeamElement                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::ShowReadyRoomPlayerNameEvent(const class FString& PlayerName, const ETeamElement& PlayerTeamElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowReadyRoomPlayerNameEvent");

	Params::BP_HUD_C_ShowReadyRoomPlayerNameEvent Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.PlayerTeamElement = PlayerTeamElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnChatLineAddedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AGBPlayerState*                   SenderGBPlayerState                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DisplayTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_HUD_C::OnChatLineAddedEvent(class AGBPlayerState* SenderGBPlayerState, class FName Type, float DisplayTime, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnChatLineAddedEvent");

	Params::BP_HUD_C_OnChatLineAddedEvent Parms{};

	Parms.SenderGBPlayerState = SenderGBPlayerState;
	Parms.Type = Type;
	Parms.DisplayTime = DisplayTime;
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.HideMenuEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MenuType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::HideMenuEvent(class FName MenuType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideMenuEvent");

	Params::BP_HUD_C_HideMenuEvent Parms{};

	Parms.MenuType = MenuType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowChatInput
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTeamChat                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HUD_C::ShowChatInput(bool bTeamChat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowChatInput");

	Params::BP_HUD_C_ShowChatInput Parms{};

	Parms.bTeamChat = bTeamChat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowMenuEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MenuType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::ShowMenuEvent(class FName MenuType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowMenuEvent");

	Params::BP_HUD_C_ShowMenuEvent Parms{};

	Parms.MenuType = MenuType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSuggestHintEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             HintName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::OnSuggestHintEvent(class FName HintName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSuggestHintEvent");

	Params::BP_HUD_C_OnSuggestHintEvent Parms{};

	Parms.HintName = HintName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnShowHintEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TSoftClassPtr<class UClass>&      HintWidgetClass                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)

void ABP_HUD_C::OnShowHintEvent(const TSoftClassPtr<class UClass>& HintWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowHintEvent");

	Params::BP_HUD_C_OnShowHintEvent Parms{};

	Parms.HintWidgetClass = HintWidgetClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_HUD_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HUD_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.OnLoaded_B00F4E19A9F84D66A6AC71A67BEBA963
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_HUD_C::OnLoaded_B00F4E19A9F84D66A6AC71A67BEBA963(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnLoaded_B00F4E19A9F84D66A6AC71A67BEBA963");

	Params::BP_HUD_C_OnLoaded_B00F4E19A9F84D66A6AC71A67BEBA963 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.GetReadyRoomPlayerNameChecked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ReadyRoomPlayerName_C**      ReadyRoomPlayerName_0                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::GetReadyRoomPlayerNameChecked(class UWBP_ReadyRoomPlayerName_C** ReadyRoomPlayerName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "GetReadyRoomPlayerNameChecked");

	Params::BP_HUD_C_GetReadyRoomPlayerNameChecked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReadyRoomPlayerName_0 != nullptr)
		*ReadyRoomPlayerName_0 = Parms.ReadyRoomPlayerName_0;
}


// Function BP_HUD.BP_HUD_C.GetFriendlyPlayerNameChecked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_FriendlyPlayer_C**           FriendlytPlayerName                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HUD_C::GetFriendlyPlayerNameChecked(class UWBP_FriendlyPlayer_C** FriendlytPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "GetFriendlyPlayerNameChecked");

	Params::BP_HUD_C_GetFriendlyPlayerNameChecked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FriendlytPlayerName != nullptr)
		*FriendlytPlayerName = Parms.FriendlytPlayerName;
}


// Function BP_HUD.BP_HUD_C.InternalOnChatLineAdded
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBPlayerState*                   InSenderPlayerState                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDisplayTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    InMessage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_HUD_C::InternalOnChatLineAdded(class AGBPlayerState* InSenderPlayerState, class FName InType, float InDisplayTime, const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "InternalOnChatLineAdded");

	Params::BP_HUD_C_InternalOnChatLineAdded Parms{};

	Parms.InSenderPlayerState = InSenderPlayerState;
	Parms.InType = InType;
	Parms.InDisplayTime = InDisplayTime;
	Parms.InMessage = std::move(InMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.IsMenuVisibleEvent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             MenuType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HUD_C::IsMenuVisibleEvent(class FName MenuType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "IsMenuVisibleEvent");

	Params::BP_HUD_C_IsMenuVisibleEvent Parms{};

	Parms.MenuType = MenuType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

