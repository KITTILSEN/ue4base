#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_VOIP_Indicator

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_VOIP_Indicator.WBP_VOIP_Indicator_C.GetTalkVis
// 0x0040 (0x0040 - 0x0000)
struct WBP_VOIP_Indicator_C_GetTalkVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasTalking;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTalking_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBPlayerSettings*                      CallFunc_GetPlayerSettings_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VOIP_Indicator_C_GetTalkVis) == 0x000008, "Wrong alignment on WBP_VOIP_Indicator_C_GetTalkVis");
static_assert(sizeof(WBP_VOIP_Indicator_C_GetTalkVis) == 0x000040, "Wrong size on WBP_VOIP_Indicator_C_GetTalkVis");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, ReturnValue) == 0x000000, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, bWasTalking) == 0x000001, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::bWasTalking' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, Temp_byte_Variable) == 0x000002, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, Temp_bool_Variable) == 0x000004, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000010, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_IsTalking_ReturnValue) == 0x000019, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_IsTalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_GetPlayerSettings_ReturnValue) == 0x000020, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_GetPlayerSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_BooleanAND_ReturnValue_1) == 0x000029, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, CallFunc_BooleanAND_ReturnValue_2) == 0x000039, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetTalkVis, K2Node_Select_Default) == 0x00003A, "Member 'WBP_VOIP_Indicator_C_GetTalkVis::K2Node_Select_Default' has a wrong offset!");

// Function WBP_VOIP_Indicator.WBP_VOIP_Indicator_C.GetRadioVis
// 0x0040 (0x0040 - 0x0000)
struct WBP_VOIP_Indicator_C_GetRadioVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasUsingRadio;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingRadio_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBPlayerSettings*                      CallFunc_GetPlayerSettings_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VOIP_Indicator_C_GetRadioVis) == 0x000008, "Wrong alignment on WBP_VOIP_Indicator_C_GetRadioVis");
static_assert(sizeof(WBP_VOIP_Indicator_C_GetRadioVis) == 0x000040, "Wrong size on WBP_VOIP_Indicator_C_GetRadioVis");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, ReturnValue) == 0x000000, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, bWasUsingRadio) == 0x000001, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::bWasUsingRadio' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, Temp_byte_Variable) == 0x000002, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, Temp_bool_Variable) == 0x000004, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000010, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_IsUsingRadio_ReturnValue) == 0x000019, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_IsUsingRadio_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_GetPlayerSettings_ReturnValue) == 0x000020, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_GetPlayerSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, K2Node_Select_Default) == 0x000029, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_BooleanAND_ReturnValue_1) == 0x000039, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003A, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetRadioVis, CallFunc_BooleanAND_ReturnValue_2) == 0x00003B, "Member 'WBP_VOIP_Indicator_C_GetRadioVis::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function WBP_VOIP_Indicator.WBP_VOIP_Indicator_C.GetHearingNoteVis
// 0x0028 (0x0028 - 0x0000)
struct WBP_VOIP_Indicator_C_GetHearingNoteVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetStateName_ReturnValue;                 // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VOIP_Indicator_C_GetHearingNoteVis) == 0x000008, "Wrong alignment on WBP_VOIP_Indicator_C_GetHearingNoteVis");
static_assert(sizeof(WBP_VOIP_Indicator_C_GetHearingNoteVis) == 0x000028, "Wrong size on WBP_VOIP_Indicator_C_GetHearingNoteVis");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, ReturnValue) == 0x000000, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, Temp_bool_Variable) == 0x000001, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, Temp_byte_Variable) == 0x000002, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000010, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, CallFunc_GetStateName_ReturnValue) == 0x00001C, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::CallFunc_GetStateName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, CallFunc_NotEqual_NameName_ReturnValue) == 0x000025, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetHearingNoteVis, K2Node_Select_Default) == 0x000026, "Member 'WBP_VOIP_Indicator_C_GetHearingNoteVis::K2Node_Select_Default' has a wrong offset!");

// Function WBP_VOIP_Indicator.WBP_VOIP_Indicator_C.GetDeadChatNote
// 0x0068 (0x0068 - 0x0000)
struct WBP_VOIP_Indicator_C_GetDeadChatNote final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0020(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameRuleEnabled_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(WBP_VOIP_Indicator_C_GetDeadChatNote) == 0x000008, "Wrong alignment on WBP_VOIP_Indicator_C_GetDeadChatNote");
static_assert(sizeof(WBP_VOIP_Indicator_C_GetDeadChatNote) == 0x000068, "Wrong size on WBP_VOIP_Indicator_C_GetDeadChatNote");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetDeadChatNote, ReturnValue) == 0x000000, "Member 'WBP_VOIP_Indicator_C_GetDeadChatNote::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetDeadChatNote, Temp_bool_Variable) == 0x000018, "Member 'WBP_VOIP_Indicator_C_GetDeadChatNote::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetDeadChatNote, CallFunc_GetEmptyText_ReturnValue) == 0x000020, "Member 'WBP_VOIP_Indicator_C_GetDeadChatNote::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetDeadChatNote, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'WBP_VOIP_Indicator_C_GetDeadChatNote::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetDeadChatNote, K2Node_DynamicCast_AsGBGame_State) == 0x000040, "Member 'WBP_VOIP_Indicator_C_GetDeadChatNote::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetDeadChatNote, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_VOIP_Indicator_C_GetDeadChatNote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetDeadChatNote, CallFunc_IsGameRuleEnabled_ReturnValue) == 0x000049, "Member 'WBP_VOIP_Indicator_C_GetDeadChatNote::CallFunc_IsGameRuleEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VOIP_Indicator_C_GetDeadChatNote, K2Node_Select_Default) == 0x000050, "Member 'WBP_VOIP_Indicator_C_GetDeadChatNote::K2Node_Select_Default' has a wrong offset!");

}

