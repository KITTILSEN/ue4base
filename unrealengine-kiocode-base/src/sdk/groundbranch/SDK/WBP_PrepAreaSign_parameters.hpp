#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PrepAreaSign

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_PrepAreaSign.WBP_PrepAreaSign_C.ExecuteUbergraph_WBP_PrepAreaSign
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0058(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
};
static_assert(alignof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign) == 0x000008, "Wrong alignment on WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign");
static_assert(sizeof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign) == 0x0000D8, "Wrong size on WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, EntryPoint) == 0x000000, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, CallFunc_GetDesiredSize_ReturnValue) == 0x000008, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, K2Node_Event_MyGeometry) == 0x000018, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, K2Node_Event_InDeltaTime) == 0x000050, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, K2Node_CustomEvent_InText) == 0x000058, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, K2Node_MakeArray_Array) == 0x0000B0, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WBP_PrepAreaSign_C_ExecuteUbergraph_WBP_PrepAreaSign::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_PrepAreaSign.WBP_PrepAreaSign_C.UpdateText
// 0x0018 (0x0018 - 0x0000)
struct WBP_PrepAreaSign_C_UpdateText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_PrepAreaSign_C_UpdateText) == 0x000008, "Wrong alignment on WBP_PrepAreaSign_C_UpdateText");
static_assert(sizeof(WBP_PrepAreaSign_C_UpdateText) == 0x000018, "Wrong size on WBP_PrepAreaSign_C_UpdateText");
static_assert(offsetof(WBP_PrepAreaSign_C_UpdateText, InText) == 0x000000, "Member 'WBP_PrepAreaSign_C_UpdateText::InText' has a wrong offset!");

// Function WBP_PrepAreaSign.WBP_PrepAreaSign_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_PrepAreaSign_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PrepAreaSign_C_Tick) == 0x000004, "Wrong alignment on WBP_PrepAreaSign_C_Tick");
static_assert(sizeof(WBP_PrepAreaSign_C_Tick) == 0x00003C, "Wrong size on WBP_PrepAreaSign_C_Tick");
static_assert(offsetof(WBP_PrepAreaSign_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_PrepAreaSign_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_PrepAreaSign_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_PrepAreaSign.WBP_PrepAreaSign_C.Update
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_PrepAreaSign_C_Update final
{
public:
	uint8                                         LocalTeamId;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamCount_ReturnValue;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetPlayerTeamIdSafe_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBTeamInfo                            CallFunc_GetPlayerTeamInfo_ReturnValue;            // 0x003C(0x0018)(NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
};
static_assert(alignof(WBP_PrepAreaSign_C_Update) == 0x000008, "Wrong alignment on WBP_PrepAreaSign_C_Update");
static_assert(sizeof(WBP_PrepAreaSign_C_Update) == 0x0000F8, "Wrong size on WBP_PrepAreaSign_C_Update");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, LocalTeamId) == 0x000000, "Member 'WBP_PrepAreaSign_C_Update::LocalTeamId' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_GetGameState_ReturnValue_1) == 0x000010, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, K2Node_DynamicCast_AsGBGame_State) == 0x000018, "Member 'WBP_PrepAreaSign_C_Update::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_PrepAreaSign_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, K2Node_DynamicCast_AsGBGame_State_1) == 0x000028, "Member 'WBP_PrepAreaSign_C_Update::K2Node_DynamicCast_AsGBGame_State_1' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_PrepAreaSign_C_Update::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_GetPlayerTeamCount_ReturnValue) == 0x000034, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_GetPlayerTeamCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_GetPlayerTeamIdSafe_ReturnValue) == 0x000039, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_GetPlayerTeamIdSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_GetPlayerTeamInfo_ReturnValue) == 0x00003C, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_GetPlayerTeamInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_ToUpper_ReturnValue) == 0x000068, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'WBP_PrepAreaSign_C_Update::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, K2Node_MakeArray_Array) == 0x0000D0, "Member 'WBP_PrepAreaSign_C_Update::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PrepAreaSign_C_Update, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'WBP_PrepAreaSign_C_Update::CallFunc_Format_ReturnValue' has a wrong offset!");

}

