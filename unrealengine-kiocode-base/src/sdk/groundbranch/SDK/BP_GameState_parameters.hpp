#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState

#include "Basic.hpp"

#include "ModKit_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GameState.BP_GameState_C.InternalOnGameMessage
// 0x00D0 (0x00D0 - 0x0000)
struct BP_GameState_C_InternalOnGameMessage final
{
public:
	class FName                                   InGameMessageId;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InType;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDuration;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUInt64                                InModId;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlushMessages;                                    // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisplayTime;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           EmptyTags;                                         // 0x0028(0x0010)(Edit, BlueprintVisible)
	class FText                                   Message;                                           // 0x0038(0x0018)(Edit, BlueprintVisible)
	class UWBP_HUD_C*                             HudWidget;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalisedGameText_ReturnValue;         // 0x0090(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_C_InternalOnGameMessage) == 0x000008, "Wrong alignment on BP_GameState_C_InternalOnGameMessage");
static_assert(sizeof(BP_GameState_C_InternalOnGameMessage) == 0x0000D0, "Wrong size on BP_GameState_C_InternalOnGameMessage");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, InGameMessageId) == 0x000000, "Member 'BP_GameState_C_InternalOnGameMessage::InGameMessageId' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, InType) == 0x000008, "Member 'BP_GameState_C_InternalOnGameMessage::InType' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, InDuration) == 0x000010, "Member 'BP_GameState_C_InternalOnGameMessage::InDuration' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, InModId) == 0x000018, "Member 'BP_GameState_C_InternalOnGameMessage::InModId' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, bFlushMessages) == 0x000020, "Member 'BP_GameState_C_InternalOnGameMessage::bFlushMessages' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, DisplayTime) == 0x000024, "Member 'BP_GameState_C_InternalOnGameMessage::DisplayTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, EmptyTags) == 0x000028, "Member 'BP_GameState_C_InternalOnGameMessage::EmptyTags' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, Message) == 0x000038, "Member 'BP_GameState_C_InternalOnGameMessage::Message' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, HudWidget) == 0x000050, "Member 'BP_GameState_C_InternalOnGameMessage::HudWidget' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_NotEqual_NameName_ReturnValue) == 0x000068, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_ToLower_ReturnValue) == 0x000070, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_GetLocalisedGameText_ReturnValue) == 0x000090, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_GetLocalisedGameText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_GetPlayerController_ReturnValue) == 0x0000A8, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_GetHUD_ReturnValue) == 0x0000B0, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, K2Node_DynamicCast_AsBP_HUD) == 0x0000B8, "Member 'BP_GameState_C_InternalOnGameMessage::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_GameState_C_InternalOnGameMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, K2Node_SwitchName_CmpSuccess) == 0x0000C2, "Member 'BP_GameState_C_InternalOnGameMessage::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_Abs_ReturnValue) == 0x0000C4, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_InternalOnGameMessage, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_GameState_C_InternalOnGameMessage::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.RefreshPlayerStats
// 0x00D8 (0x00D8 - 0x0000)
struct BP_GameState_C_RefreshPlayerStats final
{
public:
	class AGBPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTotalStatValue_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalStatValue_ReturnValue_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalStatValue_ReturnValue_2;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundBased_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInPlay_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_C_RefreshPlayerStats) == 0x000008, "Wrong alignment on BP_GameState_C_RefreshPlayerStats");
static_assert(sizeof(BP_GameState_C_RefreshPlayerStats) == 0x0000D8, "Wrong size on BP_GameState_C_RefreshPlayerStats");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, PlayerState) == 0x000000, "Member 'BP_GameState_C_RefreshPlayerStats::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GameState_C_RefreshPlayerStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_GameState_C_RefreshPlayerStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, K2Node_DynamicCast_AsGBCharacter) == 0x000018, "Member 'BP_GameState_C_RefreshPlayerStats::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameState_C_RefreshPlayerStats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Not_PreBool_ReturnValue_1) == 0x000021, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000022, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_IsAlive_ReturnValue) == 0x000023, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_GetTotalStatValue_ReturnValue) == 0x000024, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_GetTotalStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_GetTotalStatValue_ReturnValue_1) == 0x000038, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_GetTotalStatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000050, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_GetTotalStatValue_ReturnValue_2) == 0x000070, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_GetTotalStatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000078, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_IsRoundBased_ReturnValue) == 0x000098, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_IsRoundBased_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Not_PreBool_ReturnValue_2) == 0x000099, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A0, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_WasInPlay_ReturnValue) == 0x0000B0, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_WasInPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_BooleanOR_ReturnValue) == 0x0000B1, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B2, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, K2Node_DynamicCast_AsGBPlayer_State) == 0x0000C0, "Member 'BP_GameState_C_RefreshPlayerStats::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BP_GameState_C_RefreshPlayerStats::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_RefreshPlayerStats, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_GameState_C_RefreshPlayerStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.ShowMOTD
// 0x0198 (0x0198 - 0x0000)
struct BP_GameState_C_ShowMOTD final
{
public:
	class FString                                 LocalCleanString;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LocalMOTD;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LocalServerName;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD_1;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	struct FGBServerBasicInfo                     CallFunc_GetServerBasicInfo_ReturnValue;           // 0x00D8(0x0030)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0108(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_157[0x1];                                      // 0x0157(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0168(0x0018)()
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_C_ShowMOTD) == 0x000008, "Wrong alignment on BP_GameState_C_ShowMOTD");
static_assert(sizeof(BP_GameState_C_ShowMOTD) == 0x000198, "Wrong size on BP_GameState_C_ShowMOTD");
static_assert(offsetof(BP_GameState_C_ShowMOTD, LocalCleanString) == 0x000000, "Member 'BP_GameState_C_ShowMOTD::LocalCleanString' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, LocalMOTD) == 0x000010, "Member 'BP_GameState_C_ShowMOTD::LocalMOTD' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, LocalServerName) == 0x000020, "Member 'BP_GameState_C_ShowMOTD::LocalServerName' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_GameState_C_ShowMOTD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_GameState_C_ShowMOTD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_GetHUD_ReturnValue) == 0x000048, "Member 'BP_GameState_C_ShowMOTD::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, K2Node_DynamicCast_AsBP_HUD) == 0x000050, "Member 'BP_GameState_C_ShowMOTD::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_GameState_C_ShowMOTD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_GetPlayerController_ReturnValue_1) == 0x000060, "Member 'BP_GameState_C_ShowMOTD::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_GetHUD_ReturnValue_1) == 0x000068, "Member 'BP_GameState_C_ShowMOTD::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BP_GameState_C_ShowMOTD::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, K2Node_DynamicCast_AsBP_HUD_1) == 0x000078, "Member 'BP_GameState_C_ShowMOTD::K2Node_DynamicCast_AsBP_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_GameState_C_ShowMOTD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_GameState_C_ShowMOTD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BP_GameState_C_ShowMOTD::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Conv_IntToString_ReturnValue) == 0x000090, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Conv_StringToName_ReturnValue) == 0x0000B0, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_GameState_C_ShowMOTD::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'BP_GameState_C_ShowMOTD::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_GetServerBasicInfo_ReturnValue) == 0x0000D8, "Member 'BP_GameState_C_ShowMOTD::CallFunc_GetServerBasicInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Conv_StringToText_ReturnValue) == 0x000108, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_IsEmpty_ReturnValue) == 0x000120, "Member 'BP_GameState_C_ShowMOTD::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_ParseIntoArray_ReturnValue) == 0x000128, "Member 'BP_GameState_C_ShowMOTD::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_IsEmpty_ReturnValue_1) == 0x000155, "Member 'BP_GameState_C_ShowMOTD::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Not_PreBool_ReturnValue_1) == 0x000156, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000168, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Replace_ReturnValue) == 0x000180, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Array_Length_ReturnValue_1) == 0x000190, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ShowMOTD, CallFunc_Less_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_GameState_C_ShowMOTD::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.GetTimeToNextTimeReminder
// 0x002C (0x002C - 0x0000)
struct BP_GameState_C_GetTimeToNextTimeReminder final
{
public:
	float                                         CurrentRoundTime;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToNextTimeReminder;                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_C_GetTimeToNextTimeReminder) == 0x000004, "Wrong alignment on BP_GameState_C_GetTimeToNextTimeReminder");
static_assert(sizeof(BP_GameState_C_GetTimeToNextTimeReminder) == 0x00002C, "Wrong size on BP_GameState_C_GetTimeToNextTimeReminder");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CurrentRoundTime) == 0x000000, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CurrentRoundTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, TimeToNextTimeReminder) == 0x000004, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::TimeToNextTimeReminder' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CurrentIndex) == 0x000008, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, Temp_int_Variable) == 0x000010, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetTimeToNextTimeReminder, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_GameState_C_GetTimeToNextTimeReminder::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.GetRoundStageText
// 0x0108 (0x0108 - 0x0000)
struct BP_GameState_C_GetRoundStageText final
{
public:
	class FText                                   OutText;                                           // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   LocalRoundStageText;                               // 0x0018(0x0018)(Edit, BlueprintVisible)
	struct FUInt64                                CallFunc_GetGameModeModID_ReturnValue;             // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FUInt64                                CallFunc_GetGameModeModID_ReturnValue_1;           // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRoundStage_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalisedGameText_ReturnValue;         // 0x0070(0x0018)()
	class FName                                   CallFunc_GetRoundStage_ReturnValue_1;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalisedGameText_ReturnValue_1;       // 0x00F0(0x0018)()
};
static_assert(alignof(BP_GameState_C_GetRoundStageText) == 0x000008, "Wrong alignment on BP_GameState_C_GetRoundStageText");
static_assert(sizeof(BP_GameState_C_GetRoundStageText) == 0x000108, "Wrong size on BP_GameState_C_GetRoundStageText");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, OutText) == 0x000000, "Member 'BP_GameState_C_GetRoundStageText::OutText' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, LocalRoundStageText) == 0x000018, "Member 'BP_GameState_C_GetRoundStageText::LocalRoundStageText' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_GetGameModeModID_ReturnValue) == 0x000030, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_GetGameModeModID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_GetGameModeModID_ReturnValue_1) == 0x000038, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_GetGameModeModID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_GetRoundStage_ReturnValue) == 0x000040, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_GetRoundStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_TextIsEmpty_ReturnValue) == 0x000068, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_GetLocalisedGameText_ReturnValue) == 0x000070, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_GetLocalisedGameText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_GetRoundStage_ReturnValue_1) == 0x000088, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_GetRoundStage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000098, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_GetGenericTeamId_ReturnValue) == 0x0000A8, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_Conv_ByteToString_ReturnValue) == 0x0000C0, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D0, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E0, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetRoundStageText, CallFunc_GetLocalisedGameText_ReturnValue_1) == 0x0000F0, "Member 'BP_GameState_C_GetRoundStageText::CallFunc_GetLocalisedGameText_ReturnValue_1' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.GetSpectatorOptions
// 0x0130 (0x0130 - 0x0000)
struct BP_GameState_C_GetSpectatorOptions final
{
public:
	TArray<TSoftClassPtr<class UClass>>           OutOptionClasses;                                  // 0x0000(0x0010)(Parm, OutParm)
	TArray<TSoftClassPtr<class UClass>>           LocalOptionClasses;                                // 0x0010(0x0010)(Edit, BlueprintVisible)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x0020(0x0028)(ConstParm, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_1;                         // 0x0050(0x0028)(ConstParm, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnlyASpectatorBP_ReturnValue;           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State_1;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AllowedToRestart_ReturnValue;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State_2;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_2;                         // 0x00C0(0x0028)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnlyASpectatorBP_ReturnValue_1;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameRuleEnabled_ReturnValue;            // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameRuleEnabled_ReturnValue_1;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UsesReadyRoom_ReturnValue;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_3;                         // 0x0100(0x0028)(ConstParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_C_GetSpectatorOptions) == 0x000008, "Wrong alignment on BP_GameState_C_GetSpectatorOptions");
static_assert(sizeof(BP_GameState_C_GetSpectatorOptions) == 0x000130, "Wrong size on BP_GameState_C_GetSpectatorOptions");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, OutOptionClasses) == 0x000000, "Member 'BP_GameState_C_GetSpectatorOptions::OutOptionClasses' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, LocalOptionClasses) == 0x000010, "Member 'BP_GameState_C_GetSpectatorOptions::LocalOptionClasses' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, Temp_softclass_Variable) == 0x000020, "Member 'BP_GameState_C_GetSpectatorOptions::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, Temp_softclass_Variable_1) == 0x000050, "Member 'BP_GameState_C_GetSpectatorOptions::Temp_softclass_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, K2Node_DynamicCast_AsGBPlayer_State) == 0x000078, "Member 'BP_GameState_C_GetSpectatorOptions::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_GameState_C_GetSpectatorOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_IsOnlyASpectatorBP_ReturnValue) == 0x000081, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_IsOnlyASpectatorBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_GetPlayerController_ReturnValue_1) == 0x000088, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_GetPlayerController_ReturnValue_2) == 0x000098, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, K2Node_DynamicCast_AsGBPlayer_State_1) == 0x0000A0, "Member 'BP_GameState_C_GetSpectatorOptions::K2Node_DynamicCast_AsGBPlayer_State_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_GameState_C_GetSpectatorOptions::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_AllowedToRestart_ReturnValue) == 0x0000A9, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_AllowedToRestart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, K2Node_DynamicCast_AsGBPlayer_State_2) == 0x0000B0, "Member 'BP_GameState_C_GetSpectatorOptions::K2Node_DynamicCast_AsGBPlayer_State_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'BP_GameState_C_GetSpectatorOptions::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, Temp_softclass_Variable_2) == 0x0000C0, "Member 'BP_GameState_C_GetSpectatorOptions::Temp_softclass_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_IsOnlyASpectatorBP_ReturnValue_1) == 0x0000E8, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_IsOnlyASpectatorBP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E9, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_IsGameRuleEnabled_ReturnValue) == 0x0000EA, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_IsGameRuleEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_BooleanAND_ReturnValue) == 0x0000EB, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_Array_Add_ReturnValue) == 0x0000EC, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_Array_Add_ReturnValue_1) == 0x0000F0, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_Array_Add_ReturnValue_2) == 0x0000F4, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_IsGameRuleEnabled_ReturnValue_1) == 0x0000F8, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_IsGameRuleEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_UsesReadyRoom_ReturnValue) == 0x0000F9, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_UsesReadyRoom_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_BooleanAND_ReturnValue_1) == 0x0000FA, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, Temp_softclass_Variable_3) == 0x000100, "Member 'BP_GameState_C_GetSpectatorOptions::Temp_softclass_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_GetSpectatorOptions, CallFunc_Array_Add_ReturnValue_3) == 0x000128, "Member 'BP_GameState_C_GetSpectatorOptions::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.OnVoteStartedEvent
// 0x0030 (0x0030 - 0x0000)
struct BP_GameState_C_OnVoteStartedEvent final
{
public:
	class APlayerState*                           VoteStarter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Command;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Params_0;                                          // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         VoteTime;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_C_OnVoteStartedEvent) == 0x000008, "Wrong alignment on BP_GameState_C_OnVoteStartedEvent");
static_assert(sizeof(BP_GameState_C_OnVoteStartedEvent) == 0x000030, "Wrong size on BP_GameState_C_OnVoteStartedEvent");
static_assert(offsetof(BP_GameState_C_OnVoteStartedEvent, VoteStarter) == 0x000000, "Member 'BP_GameState_C_OnVoteStartedEvent::VoteStarter' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnVoteStartedEvent, Command) == 0x000008, "Member 'BP_GameState_C_OnVoteStartedEvent::Command' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnVoteStartedEvent, Params_0) == 0x000018, "Member 'BP_GameState_C_OnVoteStartedEvent::Params_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnVoteStartedEvent, VoteTime) == 0x000028, "Member 'BP_GameState_C_OnVoteStartedEvent::VoteTime' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.OnVoteCountUpdatedEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_GameState_C_OnVoteCountUpdatedEvent final
{
public:
	int32                                         YesVotes;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NoVotes;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_C_OnVoteCountUpdatedEvent) == 0x000004, "Wrong alignment on BP_GameState_C_OnVoteCountUpdatedEvent");
static_assert(sizeof(BP_GameState_C_OnVoteCountUpdatedEvent) == 0x000008, "Wrong size on BP_GameState_C_OnVoteCountUpdatedEvent");
static_assert(offsetof(BP_GameState_C_OnVoteCountUpdatedEvent, YesVotes) == 0x000000, "Member 'BP_GameState_C_OnVoteCountUpdatedEvent::YesVotes' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnVoteCountUpdatedEvent, NoVotes) == 0x000004, "Member 'BP_GameState_C_OnVoteCountUpdatedEvent::NoVotes' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.OnVoteEndedEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_GameState_C_OnVoteEndedEvent final
{
public:
	bool                                          bPassed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NextVoteDelay;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_C_OnVoteEndedEvent) == 0x000004, "Wrong alignment on BP_GameState_C_OnVoteEndedEvent");
static_assert(sizeof(BP_GameState_C_OnVoteEndedEvent) == 0x000008, "Wrong size on BP_GameState_C_OnVoteEndedEvent");
static_assert(offsetof(BP_GameState_C_OnVoteEndedEvent, bPassed) == 0x000000, "Member 'BP_GameState_C_OnVoteEndedEvent::bPassed' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnVoteEndedEvent, NextVoteDelay) == 0x000004, "Member 'BP_GameState_C_OnVoteEndedEvent::NextVoteDelay' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.OnPlayerControllerStateChanged_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_C_OnPlayerControllerStateChanged_Event_0 final
{
public:
	class FName                                   OldState;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewState;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_C_OnPlayerControllerStateChanged_Event_0) == 0x000004, "Wrong alignment on BP_GameState_C_OnPlayerControllerStateChanged_Event_0");
static_assert(sizeof(BP_GameState_C_OnPlayerControllerStateChanged_Event_0) == 0x000010, "Wrong size on BP_GameState_C_OnPlayerControllerStateChanged_Event_0");
static_assert(offsetof(BP_GameState_C_OnPlayerControllerStateChanged_Event_0, OldState) == 0x000000, "Member 'BP_GameState_C_OnPlayerControllerStateChanged_Event_0::OldState' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnPlayerControllerStateChanged_Event_0, NewState) == 0x000008, "Member 'BP_GameState_C_OnPlayerControllerStateChanged_Event_0::NewState' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.OnGameMessageEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_GameState_C_OnGameMessageEvent final
{
public:
	class FName                                   GameMessageId;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Type;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUInt64                                ModID;                                             // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_C_OnGameMessageEvent) == 0x000008, "Wrong alignment on BP_GameState_C_OnGameMessageEvent");
static_assert(sizeof(BP_GameState_C_OnGameMessageEvent) == 0x000020, "Wrong size on BP_GameState_C_OnGameMessageEvent");
static_assert(offsetof(BP_GameState_C_OnGameMessageEvent, GameMessageId) == 0x000000, "Member 'BP_GameState_C_OnGameMessageEvent::GameMessageId' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnGameMessageEvent, Type) == 0x000008, "Member 'BP_GameState_C_OnGameMessageEvent::Type' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnGameMessageEvent, Duration) == 0x000010, "Member 'BP_GameState_C_OnGameMessageEvent::Duration' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnGameMessageEvent, ModID) == 0x000018, "Member 'BP_GameState_C_OnGameMessageEvent::ModID' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.ExecuteUbergraph_BP_GameState
// 0x02A0 (0x02A0 - 0x0000)
struct BP_GameState_C_ExecuteUbergraph_BP_GameState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MissionSummary_C*                  CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_RoundStage_C*                      CallFunc_Create_ReturnValue_1;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UWBP_Vote_C*                            CallFunc_Create_ReturnValue_2;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_Event_VoteStarter;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Command;                              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Params;                               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_VoteTime;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInPlay_ReturnValue;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_YesVotes;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NoVotes;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPassed;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NextVoteDelay;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Vote_C*                            CallFunc_GetFirstWidgetOfClass_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Vote_C*                            CallFunc_GetFirstWidgetOfClass_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetRoundStage_ReturnValue;                // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RoundStage_C*                      CallFunc_Create_ReturnValue_3;                     // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRoundStage_ReturnValue_1;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_OldState;                       // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NewState;                       // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RoundStage_C*                      CallFunc_Create_ReturnValue_4;                     // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetRoundStageText_OutText;                // 0x0120(0x0018)()
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_GameMessageId;                        // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Type;                                 // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Duration;                             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUInt64                                K2Node_Event_ModID;                                // 0x0158(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundBased_ReturnValue;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RoundStage_C*                      CallFunc_Create_ReturnValue_5;                     // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRoundStage_ReturnValue_2;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_RoundStage_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchName_CmpSuccess_3;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RoundStage_C*                      CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetRoundStage_ReturnValue_3;              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_DeathOverlay_C*                    CallFunc_Create_ReturnValue_6;                     // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName OldState, class FName NewState)> K2Node_CreateDelegate_OutputDelegate_1; // 0x01D0(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_1;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01F4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0208(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RoundStage_C*                      CallFunc_Create_ReturnValue_7;                     // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_EndGameMessage_C*                  CallFunc_Create_ReturnValue_8;                     // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_2;        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBCharacter_ReturnValue;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_EndGameMessage_C*                  CallFunc_Create_ReturnValue_9;                     // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_3;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x028C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_GameState_C_ExecuteUbergraph_BP_GameState) == 0x000008, "Wrong alignment on BP_GameState_C_ExecuteUbergraph_BP_GameState");
static_assert(sizeof(BP_GameState_C_ExecuteUbergraph_BP_GameState) == 0x0002A0, "Wrong size on BP_GameState_C_ExecuteUbergraph_BP_GameState");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, EntryPoint) == 0x000000, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_1) == 0x000010, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_2) == 0x000038, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_AsGBPlayer_State) == 0x000048, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_VoteStarter) == 0x000058, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_VoteStarter' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_Command) == 0x000060, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_Command' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_Params) == 0x000070, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_Params' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_VoteTime) == 0x000080, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_VoteTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_WasInPlay_ReturnValue) == 0x000084, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_WasInPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_YesVotes) == 0x000088, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_YesVotes' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_NoVotes) == 0x00008C, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_NoVotes' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_bPassed) == 0x000090, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_bPassed' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_NextVoteDelay) == 0x000094, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_NextVoteDelay' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetFirstWidgetOfClass_ReturnValue) == 0x000098, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetFirstWidgetOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000A0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A8, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetFirstWidgetOfClass_ReturnValue_1) == 0x0000B8, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetFirstWidgetOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetRoundStage_ReturnValue) == 0x0000C4, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetRoundStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_SwitchName_CmpSuccess) == 0x0000CC, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_3) == 0x0000D0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetRoundStage_ReturnValue_1) == 0x0000D8, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetRoundStage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Conv_NameToString_ReturnValue) == 0x0000E0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Contains_ReturnValue) == 0x0000F0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_CustomEvent_OldState) == 0x0000F4, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_CustomEvent_NewState) == 0x0000FC, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_4) == 0x000108, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_SwitchName_CmpSuccess_1) == 0x000110, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetPlayerController_ReturnValue_1) == 0x000118, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetRoundStageText_OutText) == 0x000120, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetRoundStageText_OutText' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000138, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_GameMessageId) == 0x000144, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_GameMessageId' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_Type) == 0x00014C, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_Duration) == 0x000154, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_ModID) == 0x000158, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_ModID' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsRoundBased_ReturnValue) == 0x000160, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsRoundBased_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_SwitchName_CmpSuccess_2) == 0x000161, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_5) == 0x000168, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetRoundStage_ReturnValue_2) == 0x000170, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetRoundStage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000178, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_SwitchName_CmpSuccess_3) == 0x000188, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_SwitchName_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Array_Get_Item) == 0x000190, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Less_IntInt_ReturnValue) == 0x00019C, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetRoundStage_ReturnValue_3) == 0x0001A0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetRoundStage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_6) == 0x0001A8, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0001B0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0001C0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Contains_ReturnValue_1) == 0x0001C1, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Not_PreBool_ReturnValue) == 0x0001C2, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001C3, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Contains_ReturnValue_2) == 0x0001C4, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_SelectFloat_ReturnValue) == 0x0001C8, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsServer_ReturnValue) == 0x0001CC, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001D0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetPlayerController_ReturnValue_2) == 0x0001E0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_AsGBPlayer_Controller_1) == 0x0001E8, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_AsGBPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_bSuccess_2) == 0x0001F0, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001F4, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000208, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsStandalone_ReturnValue) == 0x000210, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_7) == 0x000218, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_8) == 0x000220, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetPlayerController_ReturnValue_3) == 0x000228, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_AsGBPlayer_Controller_2) == 0x000230, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_AsGBPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_bSuccess_3) == 0x000238, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetViewTarget_ReturnValue) == 0x000240, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetGBCharacter_ReturnValue) == 0x000248, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetGBCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Create_ReturnValue_9) == 0x000250, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Create_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsAlive_ReturnValue) == 0x000258, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_Not_PreBool_ReturnValue_2) == 0x000259, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00025A, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsValid_ReturnValue_2) == 0x00025B, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetGameState_ReturnValue) == 0x000260, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_GetPlayerController_ReturnValue_4) == 0x000268, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_AsGBGame_State) == 0x000270, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_bSuccess_4) == 0x000278, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_AsGBPlayer_Controller_3) == 0x000280, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_AsGBPlayer_Controller_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_DynamicCast_bSuccess_5) == 0x000288, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsValidClass_ReturnValue) == 0x000289, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsValid_ReturnValue_3) == 0x00028A, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, CallFunc_IsValid_ReturnValue_4) == 0x00028B, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_CreateDelegate_OutputDelegate_3) == 0x00028C, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

}

