#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestructibleWindowPane_Master

#include "Basic.hpp"

#include "BP_DestructibleWindowPane_Master_classes.hpp"
#include "BP_DestructibleWindowPane_Master_parameters.hpp"


namespace SDK
{

// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.ExecuteUbergraph_BP_DestructibleWindowPane_Master
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleWindowPane_Master_C::ExecuteUbergraph_BP_DestructibleWindowPane_Master(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "ExecuteUbergraph_BP_DestructibleWindowPane_Master");

	Params::BP_DestructibleWindowPane_Master_C_ExecuteUbergraph_BP_DestructibleWindowPane_Master Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.ObliteratePanes
// (Net, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<bool>&                     bObliterated                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FVector&                   Origin                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleWindowPane_Master_C::ObliteratePanes(const TArray<bool>& bObliterated, const struct FVector& Origin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "ObliteratePanes");

	Params::BP_DestructibleWindowPane_Master_C_ObliteratePanes Parms{};

	Parms.bObliterated = std::move(bObliterated);
	Parms.Origin = std::move(Origin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.ReceiveRadialDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DamageReceived                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Origin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleWindowPane_Master_C::ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "ReceiveRadialDamage");

	Params::BP_DestructibleWindowPane_Master_C_ReceiveRadialDamage Parms{};

	Parms.DamageReceived = DamageReceived;
	Parms.DamageType = DamageType;
	Parms.Origin = std::move(Origin);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.OpenAcousticPortal
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::OpenAcousticPortal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "OpenAcousticPortal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.CloseAcousticPortal
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::CloseAcousticPortal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "CloseAcousticPortal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.K2_OnReset
// (Event, Public, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::K2_OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "K2_OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.BindHits
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::BindHits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "BindHits");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.OnComponentHit_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DestructibleWindowPane_Master_C::OnComponentHit_Event(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "OnComponentHit_Event");

	Params::BP_DestructibleWindowPane_Master_C_OnComponentHit_Event Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.RemoveDestructiblePaneComponents
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::RemoveDestructiblePaneComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "RemoveDestructiblePaneComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.RemoveDecalMeshes
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::RemoveDecalMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "RemoveDecalMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.AddDecal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DestructibleWindowPane_Master_C::AddDecal(const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "AddDecal");

	Params::BP_DestructibleWindowPane_Master_C_AddDecal Parms{};

	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.BindOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleWindowPane_Master_C::BindOverlap(class UPrimitiveComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "BindOverlap");

	Params::BP_DestructibleWindowPane_Master_C_BindOverlap Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.OnComponentBeginOverlap_Event_0
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DestructibleWindowPane_Master_C::OnComponentBeginOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "OnComponentBeginOverlap_Event_0");

	Params::BP_DestructibleWindowPane_Master_C_OnComponentBeginOverlap_Event_0 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.Unbreak
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::Unbreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "Unbreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.BreakFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             InPane                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleWindowPane_Master_C::BreakFX(class UStaticMeshComponent* InPane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "BreakFX");

	Params::BP_DestructibleWindowPane_Master_C_BreakFX Parms{};

	Parms.InPane = InPane;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.BreakPane
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChildIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleWindowPane_Master_C::BreakPane(int32 ChildIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "BreakPane");

	Params::BP_DestructibleWindowPane_Master_C_BreakPane Parms{};

	Parms.ChildIndex = ChildIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.OnRep_bIsBroken
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::OnRep_bIsBroken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "OnRep_bIsBroken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.CreateAcousticPortal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::CreateAcousticPortal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "CreateAcousticPortal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.RotateAcousticPoral
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::RotateAcousticPoral()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "RotateAcousticPoral");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.OnRep_bIsObliterated
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleWindowPane_Master_C::OnRep_bIsObliterated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "OnRep_bIsObliterated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C.ObliteratePlane
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChildIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InOrigin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleWindowPane_Master_C::ObliteratePlane(int32 ChildIndex, const struct FVector& InOrigin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleWindowPane_Master_C", "ObliteratePlane");

	Params::BP_DestructibleWindowPane_Master_C_ObliteratePlane Parms{};

	Parms.ChildIndex = ChildIndex;
	Parms.InOrigin = std::move(InOrigin);

	UObject::ProcessEvent(Func, &Parms);
}

}

