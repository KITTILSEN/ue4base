#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CampaignMissionListEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CampaignMissionListEntry.WBP_CampaignMissionListEntry_C
// 0x00A8 (0x0308 - 0x0260)
class UWBP_CampaignMissionListEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCheckBox*                              CheckBox_WholeItem;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Circle;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionName;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionType;                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   MissionName;                                       // 0x0288(0x0018)(Edit, BlueprintVisible)
	class FText                                   MissionType;                                       // 0x02A0(0x0018)(Edit, BlueprintVisible)
	int32                                         MissionSequenceNumber;                             // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   HotspotCodename;                                   // 0x02BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bShowCircle;                                       // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 SelectedMissionNumber)> OnSelected;                          // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 SelectedMissionNumber)> OnHovered;                           // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         DoubleClickMaxDelayTime;                           // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastClickTime;                                     // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 SelectedMissionNumber)> OnDoubleClicked;                     // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   MissionDetailsTableId;                             // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class UWidget* Get_CheckBox_WholeItem_ToolTipWidget_0();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void BndEvt__WBP_HotspotListEntry_CheckBox_WholeItem_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void LookupMissionNameAndType();
	void ExecuteUbergraph_WBP_CampaignMissionListEntry(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CampaignMissionListEntry_C">();
	}
	static class UWBP_CampaignMissionListEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CampaignMissionListEntry_C>();
	}
};
static_assert(alignof(UWBP_CampaignMissionListEntry_C) == 0x000008, "Wrong alignment on UWBP_CampaignMissionListEntry_C");
static_assert(sizeof(UWBP_CampaignMissionListEntry_C) == 0x000308, "Wrong size on UWBP_CampaignMissionListEntry_C");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, UberGraphFrame) == 0x000260, "Member 'UWBP_CampaignMissionListEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, CheckBox_WholeItem) == 0x000268, "Member 'UWBP_CampaignMissionListEntry_C::CheckBox_WholeItem' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, Image_Circle) == 0x000270, "Member 'UWBP_CampaignMissionListEntry_C::Image_Circle' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, TextBlock_MissionName) == 0x000278, "Member 'UWBP_CampaignMissionListEntry_C::TextBlock_MissionName' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, TextBlock_MissionType) == 0x000280, "Member 'UWBP_CampaignMissionListEntry_C::TextBlock_MissionType' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, MissionName) == 0x000288, "Member 'UWBP_CampaignMissionListEntry_C::MissionName' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, MissionType) == 0x0002A0, "Member 'UWBP_CampaignMissionListEntry_C::MissionType' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, MissionSequenceNumber) == 0x0002B8, "Member 'UWBP_CampaignMissionListEntry_C::MissionSequenceNumber' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, HotspotCodename) == 0x0002BC, "Member 'UWBP_CampaignMissionListEntry_C::HotspotCodename' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, bShowCircle) == 0x0002C4, "Member 'UWBP_CampaignMissionListEntry_C::bShowCircle' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, OnSelected) == 0x0002C8, "Member 'UWBP_CampaignMissionListEntry_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, OnHovered) == 0x0002D8, "Member 'UWBP_CampaignMissionListEntry_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, DoubleClickMaxDelayTime) == 0x0002E8, "Member 'UWBP_CampaignMissionListEntry_C::DoubleClickMaxDelayTime' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, LastClickTime) == 0x0002EC, "Member 'UWBP_CampaignMissionListEntry_C::LastClickTime' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, OnDoubleClicked) == 0x0002F0, "Member 'UWBP_CampaignMissionListEntry_C::OnDoubleClicked' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignMissionListEntry_C, MissionDetailsTableId) == 0x000300, "Member 'UWBP_CampaignMissionListEntry_C::MissionDetailsTableId' has a wrong offset!");

}

