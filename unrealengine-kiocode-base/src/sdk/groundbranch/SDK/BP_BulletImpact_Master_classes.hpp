#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BulletImpact_Master

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BulletImpact_Master.BP_BulletImpact_Master_C
// 0x0150 (0x0370 - 0x0220)
class ABP_BulletImpact_Master_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NiagaraImpactFX;                                   // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParticleFXScale;                                   // 0x0238(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DecalMaterial;                                     // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalSize;                                         // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalLife;                                         // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0258(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0264(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Impact_Speed;                                      // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalisedRangeMin;                                // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalisedRangeMax;                                // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBone;                                           // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStart;                                        // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PhysMatName;                                       // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         SenseHearingLoudness;                              // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SenseTag;                                          // 0x02B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SplashAngle;                                       // 0x02BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplashSpread;                                      // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x02CC(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                UnitDir;                                           // 0x0354(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NiagaraImpactFX_DevOverride;                       // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeScreenSize;                                    // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BulletImpact_Master(int32 EntryPoint);
	void K2_OnReset();
	void ReportSenseEvents();
	void SpawnDecal();
	void SpawnImpactSound();
	void SpawnImpactParticleFX();
	void SetHitResult(class UObject* InHitResultSource, const struct FHitResult& InHitResult);
	void ReceiveBeginPlay();
	void SetPhysicCollisionInfo(class AActor* InSourceActor, class UPrimitiveComponent* InSourceComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& InContactPosition, const struct FVector& InContactNormal);
	void SpawnNiagaraEffect(class UNiagaraSystem* NiagaraEffect);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BulletImpact_Master_C">();
	}
	static class ABP_BulletImpact_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BulletImpact_Master_C>();
	}
};
static_assert(alignof(ABP_BulletImpact_Master_C) == 0x000008, "Wrong alignment on ABP_BulletImpact_Master_C");
static_assert(sizeof(ABP_BulletImpact_Master_C) == 0x000370, "Wrong size on ABP_BulletImpact_Master_C");
static_assert(offsetof(ABP_BulletImpact_Master_C, UberGraphFrame) == 0x000220, "Member 'ABP_BulletImpact_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_BulletImpact_Master_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, NiagaraImpactFX) == 0x000230, "Member 'ABP_BulletImpact_Master_C::NiagaraImpactFX' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, ParticleFXScale) == 0x000238, "Member 'ABP_BulletImpact_Master_C::ParticleFXScale' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, DecalMaterial) == 0x000248, "Member 'ABP_BulletImpact_Master_C::DecalMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, DecalSize) == 0x000250, "Member 'ABP_BulletImpact_Master_C::DecalSize' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, DecalLife) == 0x000254, "Member 'ABP_BulletImpact_Master_C::DecalLife' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, ImpactPoint) == 0x000258, "Member 'ABP_BulletImpact_Master_C::ImpactPoint' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, ImpactNormal) == 0x000264, "Member 'ABP_BulletImpact_Master_C::ImpactNormal' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, Impact_Speed) == 0x000270, "Member 'ABP_BulletImpact_Master_C::Impact_Speed' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, NormalisedRangeMin) == 0x000274, "Member 'ABP_BulletImpact_Master_C::NormalisedRangeMin' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, NormalisedRangeMax) == 0x000278, "Member 'ABP_BulletImpact_Master_C::NormalisedRangeMax' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, HitComponent) == 0x000280, "Member 'ABP_BulletImpact_Master_C::HitComponent' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, HitBone) == 0x000288, "Member 'ABP_BulletImpact_Master_C::HitBone' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, TraceStart) == 0x000290, "Member 'ABP_BulletImpact_Master_C::TraceStart' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, PhysMatName) == 0x0002A0, "Member 'ABP_BulletImpact_Master_C::PhysMatName' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, SenseHearingLoudness) == 0x0002B0, "Member 'ABP_BulletImpact_Master_C::SenseHearingLoudness' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, SenseTag) == 0x0002B4, "Member 'ABP_BulletImpact_Master_C::SenseTag' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, SplashAngle) == 0x0002BC, "Member 'ABP_BulletImpact_Master_C::SplashAngle' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, SplashSpread) == 0x0002C8, "Member 'ABP_BulletImpact_Master_C::SplashSpread' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, HitResult) == 0x0002CC, "Member 'ABP_BulletImpact_Master_C::HitResult' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, UnitDir) == 0x000354, "Member 'ABP_BulletImpact_Master_C::UnitDir' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, NiagaraImpactFX_DevOverride) == 0x000360, "Member 'ABP_BulletImpact_Master_C::NiagaraImpactFX_DevOverride' has a wrong offset!");
static_assert(offsetof(ABP_BulletImpact_Master_C, FadeScreenSize) == 0x000368, "Member 'ABP_BulletImpact_Master_C::FadeScreenSize' has a wrong offset!");

}

