#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ME_MapAnnotator

#include "Basic.hpp"

#include "GroundBranch_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FMEMapSymbols_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ExecuteUbergraph_WBP_ME_MapAnnotator
// 0x1EF0 (0x1EF0 - 0x0000)
struct WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	int32                                         K2Node_CustomEvent_ImageIndex;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByClass_OutAssetData;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByClass_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index_2;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index_1;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetComboBoxEntryText_ReturnValue;         // 0x0068(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0140(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0180(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01E0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01F8(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerControllerBase*                K2Node_DynamicCast_AsGBPlayer_Controller_Base;     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0228(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0268(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0278(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0290(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerControllerBase*                K2Node_DynamicCast_AsGBPlayer_Controller_Base_1;   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default;                             // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGBMissionObjective*>            CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x02E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ME_MapWidgetListItem_C*            CallFunc_Create_ReturnValue;                       // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   K2Node_CustomEvent_WidgetClassRef;                 // 0x0308(0x0028)(HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_ViewportCoordinates_1;          // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMapMarkerRenderTranslationFromScreenPosition_RenderTranslation; // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMapMarkerRenderTranslationFromScreenPosition_bWasOutOfRange; // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_BlueprintSyncLoadClass_ReturnValue;       // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol;       // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x0370(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FGBMapMarker                           K2Node_CustomEvent_MapMarkerInfo;                  // 0x0398(0x00B0)()
	int32                                         K2Node_CustomEvent_MapWidgetIndex_1;               // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetObjectiveInfoFromObjectiveSoftRef_bIsPrimary; // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectiveInfoFromObjectiveSoftRef_ObjectiveTitle; // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_BlueprintSyncLoadClass_ReturnValue_1;     // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_1;     // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ME_MapSymbol_C*                    CallFunc_Create_ReturnValue_1;                     // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0488(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetBaseFilename_ReturnValue;              // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetBaseFilename_ReturnValue_1;            // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWBP_ME_MapSymbol_C*                    K2Node_CustomEvent_MapWidget_1;                    // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_ViewportCoordinates;            // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MapWidgetIndex;                 // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetPaintSpaceGeometry_ReturnValue;        // 0x04F8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BreakGeometry_OutPosition;                // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BreakGeometry_OutAbsolutePosition;        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BreakGeometry_OutSize;                    // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGeometry_OutScale;                   // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMEMapSymbols                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0558(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x05AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x05B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampAxes2D_ReturnValue;                  // 0x05BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x05C8(0x0018)()
	struct FGBMapMarker                           CallFunc_Array_Get_Item_1;                         // 0x05E0(0x00B0)()
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0690(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ME_MapSymbol_C*                    K2Node_DynamicCast_AsWBP_ME_Map_Symbol;            // 0x0698(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker;                     // 0x06A8(0x00B0)()
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ME_MapSymbol_C*                    K2Node_CustomEvent_MapWidget;                      // 0x0760(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerControllerBase*                K2Node_DynamicCast_AsGBPlayer_Controller_Base_2;   // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779[0x3];                                      // 0x0779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_785[0x3];                                      // 0x0785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetData                             CallFunc_Array_Get_Item_2;                         // 0x0798(0x0060)(HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_InitialText;                    // 0x07F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0808(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0818(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndsWith_ReturnValue;                     // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetBaseFilename_ReturnValue_2;            // 0x0830(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0840(0x0018)()
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x0858(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86C[0x4];                                      // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0870(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0898(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_FileName_1;                     // 0x08D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E1[0x3];                                      // 0x08E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MapMarkerIndex_1;               // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           K2Node_CustomEvent_NewMapMarkerInfo;               // 0x08F8(0x00B0)()
	int32                                         Temp_int_Variable_2;                               // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x09AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C9[0x7];                                      // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x09D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMissionSequenceNumber_ReturnValue;     // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9DC[0x4];                                      // 0x09DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ME_MapSymbol_C*                    K2Node_DynamicCast_AsWBP_ME_Map_Symbol_1;          // 0x09E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E9[0x3];                                      // 0x09E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetHotspotName_ReturnValue;               // 0x09EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F9[0x3];                                      // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_1;           // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A02[0x6];                                      // 0x0A02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ME_MapSymbol_C*                    K2Node_CustomEvent_SelectedMapSymbol;              // 0x0A08(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A13[0x5];                                      // 0x0A13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_3;                 // 0x0A18(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_3;         // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A31[0x7];                                      // 0x0A31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0A38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0A55(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A56[0x2];                                      // 0x0A56(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_4;                         // 0x0A58(0x00B0)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B09[0x7];                                      // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_1;                   // 0x0B10(0x00B0)()
	class UObject*                                Temp_object_Variable;                              // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_5;                         // 0x0BD8(0x00B0)()
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_2;                   // 0x0C88(0x00B0)()
	struct FGBMapMarker                           CallFunc_Array_Get_Item_6;                         // 0x0D38(0x00B0)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF4[0x4];                                      // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerControllerBase*                K2Node_DynamicCast_AsGBPlayer_Controller_Base_3;   // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E01[0x7];                                      // 0x0E01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_7;                         // 0x0E08(0x00B0)()
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0EB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC9[0x7];                                      // 0x0EC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBaseFilename_ReturnValue_3;            // 0x0ED0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0EE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0EE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0EE3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0EE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0EE5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE6[0x2];                                      // 0x0EE6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_8;                         // 0x0EE8(0x00B0)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0F98(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0FB0(0x0018)()
	int32                                         K2Node_CustomEvent_WidgetIndex;                    // 0x0FC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FCC[0x4];                                      // 0x0FCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_9;                         // 0x0FD0(0x00B0)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x1080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1081[0x3];                                     // 0x1081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComboBoxIndexForLinkedObjectiveRef_ComboBoxIndex; // 0x1084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AGBMissionObjective>     CallFunc_GetComboBoxIndexForLinkedObjectiveRef_UpdatedRef; // 0x1088(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x10B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x10B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B5[0x3];                                     // 0x10B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x10B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10BC[0x4];                                     // 0x10BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x10C0(0x0018)()
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10DC[0x4];                                     // 0x10DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x10E0(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x10F8(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x1110(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x1128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x112C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112D[0x3];                                     // 0x112D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x1130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x1134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGBMapMarker                           CallFunc_Array_Get_Item_10;                        // 0x1138(0x00B0)()
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x11E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x11E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x11EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x11EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x11EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11ED[0x3];                                     // 0x11ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_2;                 // 0x11F0(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_2;         // 0x1208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1209[0x7];                                     // 0x1209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x1210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x1220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x1224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x1228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1229[0x7];                                     // 0x1229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_11;                        // 0x1230(0x00B0)()
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x12E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E1[0x7];                                     // 0x12E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_3;                   // 0x12E8(0x00B0)()
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x1398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139C[0x4];                                     // 0x139C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBMissionObjective*                    CallFunc_Array_Get_Item_12;                        // 0x13A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_2;              // 0x13A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x13B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BC[0x4];                                     // 0x13BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBaseFilename_ReturnValue_4;            // 0x13C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x13D0(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x13E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x13EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13ED[0x3];                                     // 0x13ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x13F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AGBMissionObjective>     Temp_softobject_Variable;                          // 0x13F8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x1420(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_1;         // 0x1438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1439[0x7];                                     // 0x1439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x1440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue_1;         // 0x1450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x1454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x1458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1459[0x7];                                     // 0x1459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_DialogueBox_C*                     CallFunc_Create_ReturnValue_2;                     // 0x1460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x1468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_146C[0x4];                                     // 0x146C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFilenameForImageNumber_Filename;       // 0x1470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Filename)> K2Node_CreateDelegate_OutputDelegate;             // 0x1480(0x0010)(ZeroConstructor, NoDestructor)
	class UWBP_DialogueBox_TextInput_C*           CallFunc_Create_ReturnValue_3;                     // 0x1490(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGBMapMarker                           CallFunc_Array_Get_Item_13;                        // 0x1498(0x00B0)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x1548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x1549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_154A[0x6];                                     // 0x154A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_4;                   // 0x1550(0x00B0)()
	TSoftObjectPtr<class AGBMissionObjective>     CallFunc_GetLinkedObjectiveFromComboBox_LinkedObjectiveRef; // 0x1600(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetObjectiveInfoFromObjectiveSoftRef_bIsPrimary_1; // 0x1628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1629[0x7];                                     // 0x1629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectiveInfoFromObjectiveSoftRef_ObjectiveTitle_1; // 0x1630(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_5;                   // 0x1640(0x00B0)()
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x16F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16F1[0x7];                                     // 0x16F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x16F8(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x1710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1711[0x7];                                     // 0x1711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x1718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue_2;         // 0x1728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x172C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x1730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x1731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x1732(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1733[0x5];                                     // 0x1733(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_14;                        // 0x1738(0x00B0)()
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_6;                   // 0x17E8(0x00B0)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0x1898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x1899(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189A[0x2];                                     // 0x189A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PhotoNumber;                    // 0x189C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MapMarkerIndex;                 // 0x18A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A4[0x4];                                     // 0x18A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFilenameForImageNumber_Filename_1;     // 0x18A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGBMapMarker                           CallFunc_Array_Get_Item_15;                        // 0x18B8(0x00B0)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x1968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1969[0x7];                                     // 0x1969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_7;                   // 0x1970(0x00B0)()
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x1A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x1A21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x1A22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A23[0x5];                                     // 0x1A23(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_16;                        // 0x1A28(0x00B0)()
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x1AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x1ADC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ADD[0x3];                                     // 0x1ADD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_BlueprintSyncLoadClass_ReturnValue_2;     // 0x1AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_2;     // 0x1AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x1AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AF1[0x3];                                     // 0x1AF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x1AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x1AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AF9[0x7];                                     // 0x1AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_8;                   // 0x1B00(0x00B0)()
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x1BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x1BB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB2[0x2];                                     // 0x1BB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x1BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x1BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x1BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BBD[0x3];                                     // 0x1BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMissionImage                        CallFunc_Array_Get_Item_17;                        // 0x1BC0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x1BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMapImage_bIsMapImage;                   // 0x1BEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x1BED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1BEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BEF[0x1];                                     // 0x1BEF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x1BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF4[0x4];                                     // 0x1BF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_18;                        // 0x1BF8(0x00B0)()
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x1CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CAC[0x4];                                     // 0x1CAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_BlueprintSyncLoadClass_ReturnValue_3;     // 0x1CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_3;     // 0x1CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x1CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CC1[0x3];                                     // 0x1CC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x1CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x1CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CC9[0x7];                                     // 0x1CC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_DialogueBox_TextInput_C*           CallFunc_Create_ReturnValue_4;                     // 0x1CD0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Filename)> K2Node_CreateDelegate_OutputDelegate_1;           // 0x1CD8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_CustomEvent_FileName;                       // 0x1CE8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue_3;         // 0x1CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x1CFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue_1;                   // 0x1CFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1CFE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CFF[0x1];                                     // 0x1CFF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AGBMissionObjective>     K2Node_Select_Default_2;                           // 0x1D00(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FGBMapMarker                           K2Node_MakeStruct_GBMapMarker_9;                   // 0x1D28(0x00B0)()
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x1DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDC[0x4];                                     // 0x1DDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           CallFunc_Array_Get_Item_19;                        // 0x1DE0(0x00B0)()
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x1E90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_BlueprintSyncLoadClass_ReturnValue_4;     // 0x1EA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x1EA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x1EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB9[0x7];                                     // 0x1EB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x1EC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x1ED1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED2[0x2];                                     // 0x1ED2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x1ED4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x1ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x1EDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x1EE0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator");
static_assert(sizeof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator) == 0x001EF0, "Wrong size on WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, EntryPoint) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_text_Variable) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_ImageIndex) == 0x000020, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_ImageIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetAssetRegistry_ReturnValue) == 0x000028, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_MakeLiteralName_ReturnValue) == 0x000038, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetAssetsByClass_OutAssetData) == 0x000040, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetAssetsByClass_OutAssetData' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetAssetsByClass_ReturnValue) == 0x000050, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetAssetsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Array_Index_Variable) == 0x000058, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_Index_2) == 0x00005C, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_Index_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_Index_1) == 0x000060, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_Index_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetComboBoxEntryText_ReturnValue) == 0x000068, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetComboBoxEntryText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_TextToString_ReturnValue) == 0x000080, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000090, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000A0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000A8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0000A9, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Variable) == 0x0000AC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_byte_Variable) == 0x0000B0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_3) == 0x0000CC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeArray_Array) == 0x000118, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Format_ReturnValue) == 0x000128, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_FormatArgumentData_1) == 0x000140, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_FormatArgumentData_2) == 0x000180, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeArray_Array_1) == 0x0001C0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeArray_Array_2) == 0x0001D0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Format_ReturnValue_1) == 0x0001E0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Format_ReturnValue_2) == 0x0001F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetPlayerController_ReturnValue) == 0x000210, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_AsGBPlayer_Controller_Base) == 0x000218, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_AsGBPlayer_Controller_Base' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_FormatArgumentData_3) == 0x000228, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeArray_Array_3) == 0x000268, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Format_ReturnValue_3) == 0x000278, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000290, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetPlayerController_ReturnValue_1) == 0x0002B8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_AsGBPlayer_Controller_Base_1) == 0x0002C0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_AsGBPlayer_Controller_Base_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_bSuccess_1) == 0x0002C8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002CC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_bool_Variable) == 0x0002D0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002D4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_Select_Default) == 0x0002D8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x0002E0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_4) == 0x0002F0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Add_ReturnValue) == 0x0002F4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Create_ReturnValue) == 0x0002F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_AddChild_ReturnValue) == 0x000300, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_WidgetClassRef) == 0x000308, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_WidgetClassRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_ViewportCoordinates_1) == 0x000330, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_ViewportCoordinates_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetMapMarkerRenderTranslationFromScreenPosition_RenderTranslation) == 0x000338, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetMapMarkerRenderTranslationFromScreenPosition_RenderTranslation' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetMapMarkerRenderTranslationFromScreenPosition_bWasOutOfRange) == 0x000340, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetMapMarkerRenderTranslationFromScreenPosition_bWasOutOfRange' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BlueprintSyncLoadClass_ReturnValue) == 0x000348, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BlueprintSyncLoadClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Not_PreBool_ReturnValue) == 0x000350, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol) == 0x000358, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ClassDynamicCast_bSuccess) == 0x000360, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_Index) == 0x000364, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Array_Index_Variable_1) == 0x000368, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x000370, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_MapMarkerInfo) == 0x000398, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_MapMarkerInfo' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_MapWidgetIndex_1) == 0x000448, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_MapWidgetIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetObjectiveInfoFromObjectiveSoftRef_bIsPrimary) == 0x00044C, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetObjectiveInfoFromObjectiveSoftRef_bIsPrimary' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetObjectiveInfoFromObjectiveSoftRef_ObjectiveTitle) == 0x000450, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetObjectiveInfoFromObjectiveSoftRef_ObjectiveTitle' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BlueprintSyncLoadClass_ReturnValue_1) == 0x000460, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BlueprintSyncLoadClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_1) == 0x000468, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ClassDynamicCast_bSuccess_1) == 0x000470, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Create_ReturnValue_1) == 0x000478, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_5) == 0x000480, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_AddChildToOverlay_ReturnValue) == 0x000488, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Loop_Counter_Variable_2) == 0x000490, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000494, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_3) == 0x000498, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetObjectName_ReturnValue) == 0x0004A0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetObjectName_ReturnValue_1) == 0x0004B0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetBaseFilename_ReturnValue) == 0x0004C0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetBaseFilename_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetBaseFilename_ReturnValue_1) == 0x0004D0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetBaseFilename_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_MapWidget_1) == 0x0004E0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_MapWidget_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_ViewportCoordinates) == 0x0004E8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_ViewportCoordinates' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_MapWidgetIndex) == 0x0004F0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_MapWidgetIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Array_Index_Variable_2) == 0x0004F4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetPaintSpaceGeometry_ReturnValue) == 0x0004F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetPaintSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item) == 0x000530, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BreakGeometry_OutPosition) == 0x000538, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BreakGeometry_OutPosition' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BreakGeometry_OutAbsolutePosition) == 0x000540, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BreakGeometry_OutAbsolutePosition' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BreakGeometry_OutSize) == 0x000548, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BreakGeometry_OutSize' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BreakGeometry_OutScale) == 0x000550, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BreakGeometry_OutScale' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetDataTableRowFromName_OutRow) == 0x000558, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0005A8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0005AC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0005B4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_ClampAxes2D_ReturnValue) == 0x0005BC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_ClampAxes2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_NameToText_ReturnValue) == 0x0005C8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_1) == 0x0005E0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetChildAt_ReturnValue) == 0x000690, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_AsWBP_ME_Map_Symbol) == 0x000698, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_AsWBP_ME_Map_Symbol' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_bSuccess_2) == 0x0006A0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker) == 0x0006A8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Array_Index_Variable_3) == 0x000758, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_MapWidget) == 0x000760, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_MapWidget' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetPlayerController_ReturnValue_2) == 0x000768, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_AsGBPlayer_Controller_Base_2) == 0x000770, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_AsGBPlayer_Controller_Base_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_bSuccess_3) == 0x000778, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Loop_Counter_Variable_3) == 0x00077C, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Loop_Counter_Variable_4) == 0x000780, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Less_IntInt_ReturnValue_1) == 0x000784, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_4) == 0x000788, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_5) == 0x00078C, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Array_Index_Variable_4) == 0x000790, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_2) == 0x000798, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_InitialText) == 0x0007F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_InitialText' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_NameToString_ReturnValue) == 0x000808, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000818, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EndsWith_ReturnValue) == 0x000828, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EndsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Add_ReturnValue_1) == 0x00082C, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetBaseFilename_ReturnValue_2) == 0x000830, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetBaseFilename_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToText_ReturnValue) == 0x000840, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_3) == 0x000858, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Add_ReturnValue_2) == 0x000868, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000870, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Map_Find_Value) == 0x000888, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Map_Find_ReturnValue) == 0x000890, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000898, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x0008C0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Variable_1) == 0x0008C4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Loop_Counter_Variable_5) == 0x0008C8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_FileName_1) == 0x0008D0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_FileName_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Less_IntInt_ReturnValue_2) == 0x0008E0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_6) == 0x0008E4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToName_ReturnValue) == 0x0008E8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_MapMarkerIndex_1) == 0x0008F0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_MapMarkerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_NewMapMarkerInfo) == 0x0008F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_NewMapMarkerInfo' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Variable_2) == 0x0009A8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_7) == 0x0009AC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0009B0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetGameState_ReturnValue) == 0x0009B8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_AsGBGame_State) == 0x0009C0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_bSuccess_4) == 0x0009C8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetChildAt_ReturnValue_1) == 0x0009D0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetMissionSequenceNumber_ReturnValue) == 0x0009D8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetMissionSequenceNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_AsWBP_ME_Map_Symbol_1) == 0x0009E0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_AsWBP_ME_Map_Symbol_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_bSuccess_5) == 0x0009E8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetHotspotName_ReturnValue) == 0x0009EC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetHotspotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Loop_Counter_Variable_6) == 0x0009F4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Less_IntInt_ReturnValue_3) == 0x0009F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_8) == 0x0009FC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_bIsChecked_1) == 0x000A00, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_bIsChecked_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_bIsChecked) == 0x000A01, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_SelectedMapSymbol) == 0x000A08, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_SelectedMapSymbol' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue) == 0x000A10, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000A11, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_1) == 0x000A12, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_Text_3) == 0x000A18, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_Text_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_CommitMethod_3) == 0x000A30, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_CommitMethod_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000A38, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000A48, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Len_ReturnValue) == 0x000A50, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Greater_IntInt_ReturnValue) == 0x000A54, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BooleanAND_ReturnValue) == 0x000A55, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_4) == 0x000A58, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_2) == 0x000B08, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_1) == 0x000B10, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_object_Variable) == 0x000BC0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_AsTexture_2D) == 0x000BC8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_bSuccess_6) == 0x000BD0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_5) == 0x000BD8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_2) == 0x000C88, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_6) == 0x000D38, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetPlayerController_ReturnValue_3) == 0x000DE8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Array_Index_Variable_5) == 0x000DF0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_AsGBPlayer_Controller_Base_3) == 0x000DF8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_AsGBPlayer_Controller_Base_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_DynamicCast_bSuccess_7) == 0x000E00, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_7) == 0x000E08, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000EB8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000EC8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetBaseFilename_ReturnValue_3) == 0x000ED0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetBaseFilename_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000EE0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000EE1, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BooleanOR_ReturnValue) == 0x000EE2, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BooleanOR_ReturnValue_1) == 0x000EE3, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BooleanAND_ReturnValue_1) == 0x000EE4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_3) == 0x000EE5, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_8) == 0x000EE8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_FloatToText_ReturnValue) == 0x000F98, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000FB0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_WidgetIndex) == 0x000FC8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_WidgetIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_9) == 0x000FD0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x001080, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetComboBoxIndexForLinkedObjectiveRef_ComboBoxIndex) == 0x001084, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetComboBoxIndexForLinkedObjectiveRef_ComboBoxIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetComboBoxIndexForLinkedObjectiveRef_UpdatedRef) == 0x001088, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetComboBoxIndexForLinkedObjectiveRef_UpdatedRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0010B0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0010B4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0010B8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x0010C0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_SelectInt_ReturnValue) == 0x0010D8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_NameToText_ReturnValue_2) == 0x0010E0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x0010F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x001110, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Loop_Counter_Variable_7) == 0x001128, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Less_IntInt_ReturnValue_4) == 0x00112C, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_9) == 0x001130, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Array_Index_Variable_6) == 0x001134, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_10) == 0x001138, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0011E8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0011E9, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0011EA, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0011EB, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BooleanAND_ReturnValue_2) == 0x0011EC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_Text_2) == 0x0011F0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_Text_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_CommitMethod_2) == 0x001208, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_CommitMethod_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_TextToString_ReturnValue_2) == 0x001210, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToFloat_ReturnValue) == 0x001220, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_FClamp_ReturnValue) == 0x001224, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x001228, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_11) == 0x001230, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BooleanAND_ReturnValue_3) == 0x0012E0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_3) == 0x0012E8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Array_Index_Variable_7) == 0x001398, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_12) == 0x0013A0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetObjectName_ReturnValue_2) == 0x0013A8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetObjectName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Add_ReturnValue_3) == 0x0013B8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetBaseFilename_ReturnValue_4) == 0x0013C0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetBaseFilename_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0013D0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Add_ReturnValue_4) == 0x0013E8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_4) == 0x0013EC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_Loaded) == 0x0013F0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_softobject_Variable) == 0x0013F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_Text_1) == 0x001420, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_CommitMethod_1) == 0x001438, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_TextToString_ReturnValue_3) == 0x001440, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToFloat_ReturnValue_1) == 0x001450, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_FClamp_ReturnValue_1) == 0x001454, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_bool_Variable_1) == 0x001458, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Create_ReturnValue_2) == 0x001460, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_FTrunc_ReturnValue) == 0x001468, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetFilenameForImageNumber_Filename) == 0x001470, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetFilenameForImageNumber_Filename' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CreateDelegate_OutputDelegate) == 0x001480, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Create_ReturnValue_3) == 0x001490, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_13) == 0x001498, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x001548, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BooleanAND_ReturnValue_4) == 0x001549, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_4) == 0x001550, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetLinkedObjectiveFromComboBox_LinkedObjectiveRef) == 0x001600, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetLinkedObjectiveFromComboBox_LinkedObjectiveRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetObjectiveInfoFromObjectiveSoftRef_bIsPrimary_1) == 0x001628, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetObjectiveInfoFromObjectiveSoftRef_bIsPrimary_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetObjectiveInfoFromObjectiveSoftRef_ObjectiveTitle_1) == 0x001630, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetObjectiveInfoFromObjectiveSoftRef_ObjectiveTitle_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_5) == 0x001640, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_5) == 0x0016F0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_Text) == 0x0016F8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ComponentBoundEvent_CommitMethod) == 0x001710, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_TextToString_ReturnValue_4) == 0x001718, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToFloat_ReturnValue_2) == 0x001728, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_FTrunc_ReturnValue_1) == 0x00172C, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_6) == 0x001730, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_7) == 0x001731, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_8) == 0x001732, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_14) == 0x001738, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_6) == 0x0017E8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x001898, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BooleanAND_ReturnValue_5) == 0x001899, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_PhotoNumber) == 0x00189C, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_PhotoNumber' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_MapMarkerIndex) == 0x0018A0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_MapMarkerIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_GetFilenameForImageNumber_Filename_1) == 0x0018A8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_GetFilenameForImageNumber_Filename_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_15) == 0x0018B8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_byte_Variable_1) == 0x001968, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_7) == 0x001970, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_7' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_byte_Variable_2) == 0x001A20, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_bool_Variable_2) == 0x001A21, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_Select_Default_1) == 0x001A22, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_16) == 0x001A28, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_6) == 0x001AD8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Greater_IntInt_ReturnValue_1) == 0x001ADC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BlueprintSyncLoadClass_ReturnValue_2) == 0x001AE0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BlueprintSyncLoadClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_2) == 0x001AE8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ClassDynamicCast_bSuccess_2) == 0x001AF0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x001AF4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_LessEqual_IntInt_ReturnValue) == 0x001AF8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_8) == 0x001B00, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_8' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_9) == 0x001BB0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_10) == 0x001BB1, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Add_ReturnValue_5) == 0x001BB4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Add_IntInt_ReturnValue_10) == 0x001BB8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValid_ReturnValue_11) == 0x001BBC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_17) == 0x001BC0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_7) == 0x001BE8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsMapImage_bIsMapImage) == 0x001BEC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsMapImage_bIsMapImage' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Less_IntInt_ReturnValue_5) == 0x001BED, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Not_PreBool_ReturnValue_1) == 0x001BEE, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, Temp_int_Variable_3) == 0x001BF0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_18) == 0x001BF8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_FTrunc_ReturnValue_2) == 0x001CA8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BlueprintSyncLoadClass_ReturnValue_3) == 0x001CB0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BlueprintSyncLoadClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_3) == 0x001CB8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ClassDynamicCast_AsWBP_ME_Map_Symbol_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_ClassDynamicCast_bSuccess_3) == 0x001CC0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_8) == 0x001CC4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Less_IntInt_ReturnValue_6) == 0x001CC8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Create_ReturnValue_4) == 0x001CD0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CreateDelegate_OutputDelegate_1) == 0x001CD8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CustomEvent_FileName) == 0x001CE8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CustomEvent_FileName' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_StringToFloat_ReturnValue_3) == 0x001CF8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_StringToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsEditor_ReturnValue) == 0x001CFC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsEditor_ReturnValue_1) == 0x001CFD, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Not_PreBool_ReturnValue_2) == 0x001CFE, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_Select_Default_2) == 0x001D00, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_MakeStruct_GBMapMarker_9) == 0x001D28, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_MakeStruct_GBMapMarker_9' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Add_ReturnValue_6) == 0x001DD8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Get_Item_19) == 0x001DE0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x001E90, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_BlueprintSyncLoadClass_ReturnValue_4) == 0x001EA0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_BlueprintSyncLoadClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Concat_StrStr_ReturnValue) == 0x001EA8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValidClass_ReturnValue) == 0x001EB8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Concat_StrStr_ReturnValue_1) == 0x001EC0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Not_PreBool_ReturnValue_3) == 0x001ED0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x001ED1, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Array_Length_ReturnValue_9) == 0x001ED4, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x001ED8, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, CallFunc_Max_ReturnValue) == 0x001EDC, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator, K2Node_CreateDelegate_OutputDelegate_2) == 0x001EE0, "Member 'WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.OnClickedOkUserFloatInput
// 0x0010 (0x0010 - 0x0000)
struct WBP_ME_MapAnnotator_C_OnClickedOkUserFloatInput final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_OnClickedOkUserFloatInput) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_OnClickedOkUserFloatInput");
static_assert(sizeof(WBP_ME_MapAnnotator_C_OnClickedOkUserFloatInput) == 0x000010, "Wrong size on WBP_ME_MapAnnotator_C_OnClickedOkUserFloatInput");
static_assert(offsetof(WBP_ME_MapAnnotator_C_OnClickedOkUserFloatInput, Filename) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_OnClickedOkUserFloatInput::Filename' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.StorePhotoFilename
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MapAnnotator_C_StorePhotoFilename final
{
public:
	int32                                         PhotoNumber;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapMarkerIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_StorePhotoFilename) == 0x000004, "Wrong alignment on WBP_ME_MapAnnotator_C_StorePhotoFilename");
static_assert(sizeof(WBP_ME_MapAnnotator_C_StorePhotoFilename) == 0x000008, "Wrong size on WBP_ME_MapAnnotator_C_StorePhotoFilename");
static_assert(offsetof(WBP_ME_MapAnnotator_C_StorePhotoFilename, PhotoNumber) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_StorePhotoFilename::PhotoNumber' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_StorePhotoFilename, MapMarkerIndex) == 0x000004, "Member 'WBP_ME_MapAnnotator_C_StorePhotoFilename::MapMarkerIndex' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ReadPropertiesFromWidget
// 0x0004 (0x0004 - 0x0000)
struct WBP_ME_MapAnnotator_C_ReadPropertiesFromWidget final
{
public:
	int32                                         WidgetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_ReadPropertiesFromWidget) == 0x000004, "Wrong alignment on WBP_ME_MapAnnotator_C_ReadPropertiesFromWidget");
static_assert(sizeof(WBP_ME_MapAnnotator_C_ReadPropertiesFromWidget) == 0x000004, "Wrong size on WBP_ME_MapAnnotator_C_ReadPropertiesFromWidget");
static_assert(offsetof(WBP_ME_MapAnnotator_C_ReadPropertiesFromWidget, WidgetIndex) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_ReadPropertiesFromWidget::WidgetIndex' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.SetSelectedMapSymbol
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MapAnnotator_C_SetSelectedMapSymbol final
{
public:
	class UWBP_ME_MapSymbol_C*                    SelectedMapSymbol;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_SetSelectedMapSymbol) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_SetSelectedMapSymbol");
static_assert(sizeof(WBP_ME_MapAnnotator_C_SetSelectedMapSymbol) == 0x000008, "Wrong size on WBP_ME_MapAnnotator_C_SetSelectedMapSymbol");
static_assert(offsetof(WBP_ME_MapAnnotator_C_SetSelectedMapSymbol, SelectedMapSymbol) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_SetSelectedMapSymbol::SelectedMapSymbol' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.MapMarkerPropertiesUpdated
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated final
{
public:
	int32                                         MapMarkerIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMapMarker                           NewMapMarkerInfo;                                  // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated");
static_assert(sizeof(WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated) == 0x0000B8, "Wrong size on WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated");
static_assert(offsetof(WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated, MapMarkerIndex) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated::MapMarkerIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated, NewMapMarkerInfo) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated::NewMapMarkerInfo' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.OnClickedOkUserTextInput
// 0x0010 (0x0010 - 0x0000)
struct WBP_ME_MapAnnotator_C_OnClickedOkUserTextInput final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_OnClickedOkUserTextInput) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_OnClickedOkUserTextInput");
static_assert(sizeof(WBP_ME_MapAnnotator_C_OnClickedOkUserTextInput) == 0x000010, "Wrong size on WBP_ME_MapAnnotator_C_OnClickedOkUserTextInput");
static_assert(offsetof(WBP_ME_MapAnnotator_C_OnClickedOkUserTextInput, Filename) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_OnClickedOkUserTextInput::Filename' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetUserTextInput
// 0x0010 (0x0010 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetUserTextInput final
{
public:
	class FString                                 InitialText;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetUserTextInput) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_GetUserTextInput");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetUserTextInput) == 0x000010, "Wrong size on WBP_ME_MapAnnotator_C_GetUserTextInput");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetUserTextInput, InitialText) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetUserTextInput::InitialText' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.MapSymbolClicked
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MapAnnotator_C_MapSymbolClicked final
{
public:
	class UWBP_ME_MapSymbol_C*                    MapWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_MapSymbolClicked) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_MapSymbolClicked");
static_assert(sizeof(WBP_ME_MapAnnotator_C_MapSymbolClicked) == 0x000008, "Wrong size on WBP_ME_MapAnnotator_C_MapSymbolClicked");
static_assert(offsetof(WBP_ME_MapAnnotator_C_MapSymbolClicked, MapWidget) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_MapSymbolClicked::MapWidget' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.OnDraggingExistingMapWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget final
{
public:
	class UWBP_ME_MapSymbol_C*                    MapWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ViewportCoordinates;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapWidgetIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget");
static_assert(sizeof(WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget) == 0x000018, "Wrong size on WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget");
static_assert(offsetof(WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget, MapWidget) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget::MapWidget' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget, ViewportCoordinates) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget::ViewportCoordinates' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget, MapWidgetIndex) == 0x000010, "Member 'WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget::MapWidgetIndex' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.SpawnMapWidget
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_ME_MapAnnotator_C_SpawnMapWidget final
{
public:
	struct FGBMapMarker                           MapMarkerInfo;                                     // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         MapWidgetIndex;                                    // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_SpawnMapWidget) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_SpawnMapWidget");
static_assert(sizeof(WBP_ME_MapAnnotator_C_SpawnMapWidget) == 0x0000B8, "Wrong size on WBP_ME_MapAnnotator_C_SpawnMapWidget");
static_assert(offsetof(WBP_ME_MapAnnotator_C_SpawnMapWidget, MapMarkerInfo) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_SpawnMapWidget::MapMarkerInfo' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_SpawnMapWidget, MapWidgetIndex) == 0x0000B0, "Member 'WBP_ME_MapAnnotator_C_SpawnMapWidget::MapWidgetIndex' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature, Index_0) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.DragEventFinished
// 0x0030 (0x0030 - 0x0000)
struct WBP_ME_MapAnnotator_C_DragEventFinished final
{
public:
	TSoftClassPtr<class UClass>                   WidgetClassRef;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector2D                              ViewportCoordinates;                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_DragEventFinished) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_DragEventFinished");
static_assert(sizeof(WBP_ME_MapAnnotator_C_DragEventFinished) == 0x000030, "Wrong size on WBP_ME_MapAnnotator_C_DragEventFinished");
static_assert(offsetof(WBP_ME_MapAnnotator_C_DragEventFinished, WidgetClassRef) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_DragEventFinished::WidgetClassRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_DragEventFinished, ViewportCoordinates) == 0x000028, "Member 'WBP_ME_MapAnnotator_C_DragEventFinished::ViewportCoordinates' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature, Index_0) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature");
static_assert(sizeof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature");
static_assert(offsetof(WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature, Index_0) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.DisplayImage
// 0x0004 (0x0004 - 0x0000)
struct WBP_ME_MapAnnotator_C_DisplayImage final
{
public:
	int32                                         ImageIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_DisplayImage) == 0x000004, "Wrong alignment on WBP_ME_MapAnnotator_C_DisplayImage");
static_assert(sizeof(WBP_ME_MapAnnotator_C_DisplayImage) == 0x000004, "Wrong size on WBP_ME_MapAnnotator_C_DisplayImage");
static_assert(offsetof(WBP_ME_MapAnnotator_C_DisplayImage, ImageIndex) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_DisplayImage::ImageIndex' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.OnLoaded_46AAD6A842FE33F224B5EBAB9042543C
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MapAnnotator_C_OnLoaded_46AAD6A842FE33F224B5EBAB9042543C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_OnLoaded_46AAD6A842FE33F224B5EBAB9042543C) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_OnLoaded_46AAD6A842FE33F224B5EBAB9042543C");
static_assert(sizeof(WBP_ME_MapAnnotator_C_OnLoaded_46AAD6A842FE33F224B5EBAB9042543C) == 0x000008, "Wrong size on WBP_ME_MapAnnotator_C_OnLoaded_46AAD6A842FE33F224B5EBAB9042543C");
static_assert(offsetof(WBP_ME_MapAnnotator_C_OnLoaded_46AAD6A842FE33F224B5EBAB9042543C, Loaded) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_OnLoaded_46AAD6A842FE33F224B5EBAB9042543C::Loaded' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetVisibility_0
// 0x0006 (0x0006 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetVisibility_0) == 0x000001, "Wrong alignment on WBP_ME_MapAnnotator_C_GetVisibility_0");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetVisibility_0) == 0x000006, "Wrong size on WBP_ME_MapAnnotator_C_GetVisibility_0");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'WBP_ME_MapAnnotator_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'WBP_ME_MapAnnotator_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ME_MapAnnotator_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetVisibility_0, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WBP_ME_MapAnnotator_C_GetVisibility_0::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetVisibility_0, K2Node_Select_Default) == 0x000005, "Member 'WBP_ME_MapAnnotator_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetToolTipWidget_0
// 0x0028 (0x0028 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class UWBP_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetToolTipWidget_0) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_GetToolTipWidget_0");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetToolTipWidget_0) == 0x000028, "Wrong size on WBP_ME_MapAnnotator_C_GetToolTipWidget_0");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetToolTipWidget_0, ReturnValue) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetToolTipWidget_0, Temp_text_Variable) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_GetToolTipWidget_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_ME_MapAnnotator_C_GetToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Get_Image_WarnMap_Visibility_0
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0) == 0x000001, "Wrong alignment on WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0");
static_assert(sizeof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0) == 0x000008, "Wrong size on WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0, ReturnValue) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000005, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0, K2Node_Select_Default) == 0x000007, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Get_Image_WarnMap_ToolTipWidget_0
// 0x0028 (0x0028 - 0x0000)
struct WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class UWBP_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0");
static_assert(sizeof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0) == 0x000028, "Wrong size on WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0, Temp_text_Variable) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetMapMarkerRenderTranslationFromScreenPosition
// 0x0090 (0x0090 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RenderTranslation;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasOutOfRange;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetPaintSpaceGeometry_ReturnValue;        // 0x0014(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_BreakGeometry_OutPosition;                // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BreakGeometry_OutAbsolutePosition;        // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BreakGeometry_OutSize;                    // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGeometry_OutScale;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampAxes2D_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition) == 0x000004, "Wrong alignment on WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition) == 0x000090, "Wrong size on WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, ScreenPosition) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, RenderTranslation) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::RenderTranslation' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, bWasOutOfRange) == 0x000010, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::bWasOutOfRange' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_GetPaintSpaceGeometry_ReturnValue) == 0x000014, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_GetPaintSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BreakGeometry_OutPosition) == 0x00004C, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BreakGeometry_OutPosition' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BreakGeometry_OutAbsolutePosition) == 0x000054, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BreakGeometry_OutAbsolutePosition' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BreakGeometry_OutSize) == 0x00005C, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BreakGeometry_OutSize' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BreakGeometry_OutScale) == 0x000064, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BreakGeometry_OutScale' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000070, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_ClampAxes2D_ReturnValue) == 0x000078, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_ClampAxes2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BreakVector2D_X) == 0x000080, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BreakVector2D_Y) == 0x000084, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000088, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000089, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00008A, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00008B, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BooleanOR_ReturnValue) == 0x00008C, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BooleanOR_ReturnValue_1) == 0x00008D, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition, CallFunc_BooleanOR_ReturnValue_2) == 0x00008E, "Member 'WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Get_CheckBox_EditExistingMarker_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0");
static_assert(sizeof(WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0) == 0x000010, "Wrong size on WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetLinkedObjectiveFromComboBox
// 0x0060 (0x0060 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox final
{
public:
	TSoftObjectPtr<class AGBMissionObjective>     LinkedObjectiveRef;                                // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBMissionObjective*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AGBMissionObjective>     CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox) == 0x000060, "Wrong size on WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox, LinkedObjectiveRef) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox::LinkedObjectiveRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000038, "Member 'WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetComboBoxIndexForLinkedObjectiveRef
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef final
{
public:
	TSoftObjectPtr<class AGBMissionObjective>     LinkedObjectiveRef;                                // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         ComboBoxIndex;                                     // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AGBMissionObjective>     UpdatedRef;                                        // 0x0030(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBMissionObjective*                    CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AGBMissionObjective>     CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0090(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue_1; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef) == 0x0000D8, "Wrong size on WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, LinkedObjectiveRef) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::LinkedObjectiveRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, ComboBoxIndex) == 0x000028, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::ComboBoxIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, UpdatedRef) == 0x000030, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::UpdatedRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, Temp_int_Array_Index_Variable) == 0x000058, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000060, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000090, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue_1) == 0x0000C0, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0000D0, "Member 'WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.IsMapImage
// 0x0030 (0x0030 - 0x0000)
struct WBP_ME_MapAnnotator_C_IsMapImage final
{
public:
	struct FGBMissionImage                        InMissionImage;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsMapImage;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_IsMapImage) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_IsMapImage");
static_assert(sizeof(WBP_ME_MapAnnotator_C_IsMapImage) == 0x000030, "Wrong size on WBP_ME_MapAnnotator_C_IsMapImage");
static_assert(offsetof(WBP_ME_MapAnnotator_C_IsMapImage, InMissionImage) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_IsMapImage::InMissionImage' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_IsMapImage, bIsMapImage) == 0x000028, "Member 'WBP_ME_MapAnnotator_C_IsMapImage::bIsMapImage' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_IsMapImage, CallFunc_StartsWith_ReturnValue) == 0x000029, "Member 'WBP_ME_MapAnnotator_C_IsMapImage::CallFunc_StartsWith_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetImageListIndexForPhotoNumber
// 0x0050 (0x0050 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber final
{
public:
	int32                                         PhotoNumber;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ImageListIndex;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMissionImage                        CallFunc_Array_Get_Item;                           // 0x0018(0x0028)()
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMapImage_bIsMapImage;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber) == 0x000050, "Wrong size on WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, PhotoNumber) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::PhotoNumber' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, ImageListIndex) == 0x000004, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::ImageListIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_IsMapImage_bIsMapImage) == 0x000044, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_IsMapImage_bIsMapImage' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000045, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_Not_PreBool_ReturnValue) == 0x000046, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetFilenameForImageNumber
// 0x0050 (0x0050 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetFilenameForImageNumber final
{
public:
	int32                                         ImageNumber;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetImageListIndexForPhotoNumber_ImageListIndex; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBMissionImage                        CallFunc_Array_Get_Item;                           // 0x0020(0x0028)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetFilenameForImageNumber) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_GetFilenameForImageNumber");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetFilenameForImageNumber) == 0x000050, "Wrong size on WBP_ME_MapAnnotator_C_GetFilenameForImageNumber");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetFilenameForImageNumber, ImageNumber) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetFilenameForImageNumber::ImageNumber' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetFilenameForImageNumber, Filename) == 0x000008, "Member 'WBP_ME_MapAnnotator_C_GetFilenameForImageNumber::Filename' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetFilenameForImageNumber, CallFunc_GetImageListIndexForPhotoNumber_ImageListIndex) == 0x000018, "Member 'WBP_ME_MapAnnotator_C_GetFilenameForImageNumber::CallFunc_GetImageListIndexForPhotoNumber_ImageListIndex' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetFilenameForImageNumber, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_ME_MapAnnotator_C_GetFilenameForImageNumber::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetFilenameForImageNumber, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'WBP_ME_MapAnnotator_C_GetFilenameForImageNumber::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetObjectiveInfoFromObjectiveSoftRef
// 0x0070 (0x0070 - 0x0000)
struct WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef final
{
public:
	TSoftObjectPtr<class AGBMissionObjective>     MissionObjectiveSoftRef;                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsPrimary;                                        // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ObjectiveTitle;                                    // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBMissionObjective*                    K2Node_DynamicCast_AsGBMission_Objective;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectiveTitle_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPrimaryObjective_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef) == 0x000008, "Wrong alignment on WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef");
static_assert(sizeof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef) == 0x000070, "Wrong size on WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, MissionObjectiveSoftRef) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::MissionObjectiveSoftRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, bIsPrimary) == 0x000028, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::bIsPrimary' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, ObjectiveTitle) == 0x000030, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::ObjectiveTitle' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, K2Node_DynamicCast_AsGBMission_Objective) == 0x000048, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::K2Node_DynamicCast_AsGBMission_Objective' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, CallFunc_GetObjectiveTitle_ReturnValue) == 0x000058, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::CallFunc_GetObjectiveTitle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef, CallFunc_GetIsPrimaryObjective_ReturnValue) == 0x000068, "Member 'WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef::CallFunc_GetIsPrimaryObjective_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0
// 0x0003 (0x0003 - 0x0000)
struct WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0) == 0x000001, "Wrong alignment on WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0");
static_assert(sizeof(WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0) == 0x000003, "Wrong size on WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0, ReturnValue) == 0x000000, "Member 'WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0, CallFunc_IsEditor_ReturnValue) == 0x000001, "Member 'WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

