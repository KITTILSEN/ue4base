#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CampaignNewsFeed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CampaignNewsFeed.WBP_CampaignNewsFeed_C
// 0x0068 (0x02C8 - 0x0260)
class UWBP_CampaignNewsFeed_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UScrollBox*                             ScrollBox_NewsItems;                               // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGBHotspotDataAsset*                    CurrentHotspotRef;                                 // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         NumberOfItemsToDisplay;                            // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           RelevantNewsItems;                                 // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentHotspotProgression;                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentNewsCount;                                  // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              StartDate;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CurrentDate;                                       // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         NewsDelay;                                         // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           NewsItemTimerHandle;                               // 0x02B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomSeed;                                        // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FRandomStream                          RandomStream;                                      // 0x02BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	int32                                         IndexToDelete;                                     // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void SetCurrentHotspot(class UGBHotspotDataAsset* NewHotspotRef);
	void AdvanceDate();
	void PostNewsItem();
	void ExecuteUbergraph_WBP_CampaignNewsFeed(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CampaignNewsFeed_C">();
	}
	static class UWBP_CampaignNewsFeed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CampaignNewsFeed_C>();
	}
};
static_assert(alignof(UWBP_CampaignNewsFeed_C) == 0x000008, "Wrong alignment on UWBP_CampaignNewsFeed_C");
static_assert(sizeof(UWBP_CampaignNewsFeed_C) == 0x0002C8, "Wrong size on UWBP_CampaignNewsFeed_C");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, UberGraphFrame) == 0x000260, "Member 'UWBP_CampaignNewsFeed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, ScrollBox_NewsItems) == 0x000268, "Member 'UWBP_CampaignNewsFeed_C::ScrollBox_NewsItems' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, CurrentHotspotRef) == 0x000270, "Member 'UWBP_CampaignNewsFeed_C::CurrentHotspotRef' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, NumberOfItemsToDisplay) == 0x000278, "Member 'UWBP_CampaignNewsFeed_C::NumberOfItemsToDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, RelevantNewsItems) == 0x000280, "Member 'UWBP_CampaignNewsFeed_C::RelevantNewsItems' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, CurrentHotspotProgression) == 0x000290, "Member 'UWBP_CampaignNewsFeed_C::CurrentHotspotProgression' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, CurrentNewsCount) == 0x000294, "Member 'UWBP_CampaignNewsFeed_C::CurrentNewsCount' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, StartDate) == 0x000298, "Member 'UWBP_CampaignNewsFeed_C::StartDate' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, CurrentDate) == 0x0002A0, "Member 'UWBP_CampaignNewsFeed_C::CurrentDate' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, NewsDelay) == 0x0002A8, "Member 'UWBP_CampaignNewsFeed_C::NewsDelay' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, NewsItemTimerHandle) == 0x0002B0, "Member 'UWBP_CampaignNewsFeed_C::NewsItemTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, RandomSeed) == 0x0002B8, "Member 'UWBP_CampaignNewsFeed_C::RandomSeed' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, RandomStream) == 0x0002BC, "Member 'UWBP_CampaignNewsFeed_C::RandomStream' has a wrong offset!");
static_assert(offsetof(UWBP_CampaignNewsFeed_C, IndexToDelete) == 0x0002C4, "Member 'UWBP_CampaignNewsFeed_C::IndexToDelete' has a wrong offset!");

}

