#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WallClock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_WallClock.BP_WallClock_C.ExecuteUbergraph_BP_WallClock
// 0x0270 (0x0270 - 0x0000)
struct BP_WallClock_C_ExecuteUbergraph_BP_WallClock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 K2Node_CustomEvent_SkyActor;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHoursMinutesSeconds_OutHours;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHoursMinutesSeconds_OutMinutes;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHoursMinutesSeconds_OutSeconds;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0044(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0138(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x01C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGBSky* SkyActor)>       K2Node_CreateDelegate_OutputDelegate;              // 0x024C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GBSkyActor_C*                       CallFunc_GetActorOfClass_ReturnValue;              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock) == 0x000008, "Wrong alignment on BP_WallClock_C_ExecuteUbergraph_BP_WallClock");
static_assert(sizeof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock) == 0x000270, "Wrong size on BP_WallClock_C_ExecuteUbergraph_BP_WallClock");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, EntryPoint) == 0x000000, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, K2Node_Event_Damage) == 0x000008, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, K2Node_Event_DamageType) == 0x000010, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, K2Node_Event_InstigatedBy) == 0x000018, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, K2Node_Event_DamageCauser) == 0x000020, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000028, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, K2Node_CustomEvent_SkyActor) == 0x000030, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::K2Node_CustomEvent_SkyActor' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_GetHoursMinutesSeconds_OutHours) == 0x000038, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_GetHoursMinutesSeconds_OutHours' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_GetHoursMinutesSeconds_OutMinutes) == 0x00003C, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_GetHoursMinutesSeconds_OutMinutes' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_GetHoursMinutesSeconds_OutSeconds) == 0x000040, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_GetHoursMinutesSeconds_OutSeconds' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, Temp_delegate_Variable) == 0x000044, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000054, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000058, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_MakeRotator_ReturnValue) == 0x000064, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000074, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000078, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000084, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_MakeRotator_ReturnValue_1) == 0x000088, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000094, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000098, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00009C, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000124, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000128, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_MakeRotator_ReturnValue_2) == 0x00012C, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000138, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x0001C0, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_IsValid_ReturnValue) == 0x000248, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_IsValid_ReturnValue_1) == 0x000249, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, K2Node_CreateDelegate_OutputDelegate) == 0x00024C, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_Not_PreBool_ReturnValue) == 0x00025C, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_GetActorOfClass_ReturnValue) == 0x000260, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ExecuteUbergraph_BP_WallClock, CallFunc_PostAkEvent_ReturnValue) == 0x000268, "Member 'BP_WallClock_C_ExecuteUbergraph_BP_WallClock::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function BP_WallClock.BP_WallClock_C.OnSkyUpdate_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_WallClock_C_OnSkyUpdate_Event_0 final
{
public:
	class AGBSky*                                 SkyActor_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WallClock_C_OnSkyUpdate_Event_0) == 0x000008, "Wrong alignment on BP_WallClock_C_OnSkyUpdate_Event_0");
static_assert(sizeof(BP_WallClock_C_OnSkyUpdate_Event_0) == 0x000008, "Wrong size on BP_WallClock_C_OnSkyUpdate_Event_0");
static_assert(offsetof(BP_WallClock_C_OnSkyUpdate_Event_0, SkyActor_0) == 0x000000, "Member 'BP_WallClock_C_OnSkyUpdate_Event_0::SkyActor_0' has a wrong offset!");

// Function BP_WallClock.BP_WallClock_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_WallClock_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WallClock_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_WallClock_C_ReceiveAnyDamage");
static_assert(sizeof(BP_WallClock_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_WallClock_C_ReceiveAnyDamage");
static_assert(offsetof(BP_WallClock_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_WallClock_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_WallClock_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_WallClock_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_WallClock_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_WallClock_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

}

