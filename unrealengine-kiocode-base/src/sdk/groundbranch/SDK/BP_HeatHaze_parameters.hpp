#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HeatHaze

#include "Basic.hpp"

#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function BP_HeatHaze.BP_HeatHaze_C.ExecuteUbergraph_BP_HeatHaze
// 0x00D8 (0x00D8 - 0x0000)
struct BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditorWorld_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_CustomEvent_PlayerState;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 CallFunc_GetSkyActor_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 K2Node_CustomEvent_SkyActor;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGBSky* SkyActor)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AGBPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 CallFunc_GetSkyActor_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStandardHour_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State_1;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EReadyRoomStatus                              CallFunc_GetReadyRoomStatus_ReturnValue;           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditorWorld_ReturnValue_1;              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalScaling_GlobalScaling;           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze) == 0x000008, "Wrong alignment on BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze");
static_assert(sizeof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze) == 0x0000D8, "Wrong size on BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, EntryPoint) == 0x000000, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsEditorWorld_ReturnValue) == 0x000011, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsEditorWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsValid_ReturnValue_1) == 0x000013, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, K2Node_CustomEvent_PlayerState) == 0x000020, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, K2Node_DynamicCast_AsGBPlayer_State) == 0x000028, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_GetSkyActor_ReturnValue) == 0x000038, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_GetSkyActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsValid_ReturnValue_3) == 0x000041, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, K2Node_CustomEvent_SkyActor) == 0x000048, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::K2Node_CustomEvent_SkyActor' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsDedicatedServer_ReturnValue) == 0x000075, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_GetSkyActor_ReturnValue_1) == 0x000078, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_GetSkyActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsValid_ReturnValue_4) == 0x000080, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_GetStandardHour_ReturnValue) == 0x000084, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_GetStandardHour_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_GetPlayerController_ReturnValue_2) == 0x000088, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, K2Node_DynamicCast_AsGBPlayer_State_1) == 0x000090, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::K2Node_DynamicCast_AsGBPlayer_State_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsValid_ReturnValue_5) == 0x000099, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_GetReadyRoomStatus_ReturnValue) == 0x00009A, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_GetReadyRoomStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00009B, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00009C, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_BooleanOR_ReturnValue) == 0x00009D, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsValid_ReturnValue_6) == 0x00009E, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_FMax_ReturnValue_1) == 0x0000A4, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_FClamp_ReturnValue_1) == 0x0000B8, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_FMin_ReturnValue) == 0x0000BC, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_FMax_ReturnValue_2) == 0x0000C0, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_IsEditorWorld_ReturnValue_1) == 0x0000C4, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_IsEditorWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_GetGlobalScaling_GlobalScaling) == 0x0000C8, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_GetGlobalScaling_GlobalScaling' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_BooleanOR_ReturnValue_1) == 0x0000CC, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze, CallFunc_BooleanAND_ReturnValue) == 0x0000D4, "Member 'BP_HeatHaze_C_ExecuteUbergraph_BP_HeatHaze::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HeatHaze.BP_HeatHaze_C.OnTimeOfDayChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_HeatHaze_C_OnTimeOfDayChanged final
{
public:
	class AGBSky*                                 SkyActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeatHaze_C_OnTimeOfDayChanged) == 0x000008, "Wrong alignment on BP_HeatHaze_C_OnTimeOfDayChanged");
static_assert(sizeof(BP_HeatHaze_C_OnTimeOfDayChanged) == 0x000008, "Wrong size on BP_HeatHaze_C_OnTimeOfDayChanged");
static_assert(offsetof(BP_HeatHaze_C_OnTimeOfDayChanged, SkyActor) == 0x000000, "Member 'BP_HeatHaze_C_OnTimeOfDayChanged::SkyActor' has a wrong offset!");

// Function BP_HeatHaze.BP_HeatHaze_C.OnReadyRoomStatusChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_HeatHaze_C_OnReadyRoomStatusChanged final
{
public:
	class AGBPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeatHaze_C_OnReadyRoomStatusChanged) == 0x000008, "Wrong alignment on BP_HeatHaze_C_OnReadyRoomStatusChanged");
static_assert(sizeof(BP_HeatHaze_C_OnReadyRoomStatusChanged) == 0x000008, "Wrong size on BP_HeatHaze_C_OnReadyRoomStatusChanged");
static_assert(offsetof(BP_HeatHaze_C_OnReadyRoomStatusChanged, PlayerState) == 0x000000, "Member 'BP_HeatHaze_C_OnReadyRoomStatusChanged::PlayerState' has a wrong offset!");

// Function BP_HeatHaze.BP_HeatHaze_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_HeatHaze_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsEditorWorld_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 CallFunc_GetSkyActor_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HeatHaze_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_HeatHaze_C_UserConstructionScript");
static_assert(sizeof(BP_HeatHaze_C_UserConstructionScript) == 0x000018, "Wrong size on BP_HeatHaze_C_UserConstructionScript");
static_assert(offsetof(BP_HeatHaze_C_UserConstructionScript, CallFunc_IsEditorWorld_ReturnValue) == 0x000000, "Member 'BP_HeatHaze_C_UserConstructionScript::CallFunc_IsEditorWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_UserConstructionScript, CallFunc_GetSkyActor_ReturnValue) == 0x000008, "Member 'BP_HeatHaze_C_UserConstructionScript::CallFunc_GetSkyActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HeatHaze_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HeatHaze.BP_HeatHaze_C.GetSeasonalFactor
// 0x0040 (0x0040 - 0x0000)
struct BP_HeatHaze_C_GetSeasonalFactor final
{
public:
	float                                         SeasonalFactor;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 CallFunc_GetSkyActor_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetYearMonthDay_OutYear;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetYearMonthDay_OutMonth;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetYearMonthDay_OutDay;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeatHaze_C_GetSeasonalFactor) == 0x000008, "Wrong alignment on BP_HeatHaze_C_GetSeasonalFactor");
static_assert(sizeof(BP_HeatHaze_C_GetSeasonalFactor) == 0x000040, "Wrong size on BP_HeatHaze_C_GetSeasonalFactor");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, SeasonalFactor) == 0x000000, "Member 'BP_HeatHaze_C_GetSeasonalFactor::SeasonalFactor' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_GetSkyActor_ReturnValue) == 0x000008, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_GetSkyActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_GetYearMonthDay_OutYear) == 0x000010, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_GetYearMonthDay_OutYear' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_GetYearMonthDay_OutMonth) == 0x000014, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_GetYearMonthDay_OutMonth' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_GetYearMonthDay_OutDay) == 0x000018, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_GetYearMonthDay_OutDay' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00002C, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetSeasonalFactor, CallFunc_DegSin_ReturnValue) == 0x000038, "Member 'BP_HeatHaze_C_GetSeasonalFactor::CallFunc_DegSin_ReturnValue' has a wrong offset!");

// Function BP_HeatHaze.BP_HeatHaze_C.GetGlobalScaling
// 0x000C (0x000C - 0x0000)
struct BP_HeatHaze_C_GetGlobalScaling final
{
public:
	float                                         GlobalScaling;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSeasonalFactor_SeasonalFactor;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeatHaze_C_GetGlobalScaling) == 0x000004, "Wrong alignment on BP_HeatHaze_C_GetGlobalScaling");
static_assert(sizeof(BP_HeatHaze_C_GetGlobalScaling) == 0x00000C, "Wrong size on BP_HeatHaze_C_GetGlobalScaling");
static_assert(offsetof(BP_HeatHaze_C_GetGlobalScaling, GlobalScaling) == 0x000000, "Member 'BP_HeatHaze_C_GetGlobalScaling::GlobalScaling' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetGlobalScaling, CallFunc_GetSeasonalFactor_SeasonalFactor) == 0x000004, "Member 'BP_HeatHaze_C_GetGlobalScaling::CallFunc_GetSeasonalFactor_SeasonalFactor' has a wrong offset!");
static_assert(offsetof(BP_HeatHaze_C_GetGlobalScaling, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_HeatHaze_C_GetGlobalScaling::CallFunc_Lerp_ReturnValue' has a wrong offset!");

}

