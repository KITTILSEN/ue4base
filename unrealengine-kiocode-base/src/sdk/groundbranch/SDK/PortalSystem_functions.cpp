#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PortalSystem

#include "Basic.hpp"

#include "PortalSystem_classes.hpp"
#include "PortalSystem_parameters.hpp"


namespace SDK
{

// Function PortalSystem.PortalSystemManager.GetPortalSystemManagerInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APortalSystemManager*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APortalSystemManager* APortalSystemManager::GetPortalSystemManagerInstance(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PortalSystemManager", "GetPortalSystemManagerInstance");

	Params::PortalSystemManager_GetPortalSystemManagerInstance Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PortalSystem.PortalSystemManager.AddLight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULightComponent*                  LightComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APortalSystemManager::AddLight(class ULightComponent* LightComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemManager", "AddLight");

	Params::PortalSystemManager_AddLight Parms{};

	Parms.LightComponent = LightComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PortalSystem.PortalSystemManager.AddLightFromActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APortalSystemManager::AddLightFromActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemManager", "AddLightFromActor");

	Params::PortalSystemManager_AddLightFromActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PortalSystem.PortalSystemManager.ForceUpdatePortalSystem
// (Final, Native, Public, BlueprintCallable)

void APortalSystemManager::ForceUpdatePortalSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemManager", "ForceUpdatePortalSystem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PortalSystem.PortalSystemManager.NotifyLightMoved
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULightComponent*                  LightComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APortalSystemManager::NotifyLightMoved(class ULightComponent* LightComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemManager", "NotifyLightMoved");

	Params::PortalSystemManager_NotifyLightMoved Parms{};

	Parms.LightComponent = LightComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PortalSystem.PortalSystemManager.OnZonesVisibilityChanged
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class APortalSystemZone*>& zonesNewlyEnabled                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class APortalSystemZone*>& zonesNewlyDisabled                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void APortalSystemManager::OnZonesVisibilityChanged(const TArray<class APortalSystemZone*>& zonesNewlyEnabled, const TArray<class APortalSystemZone*>& zonesNewlyDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemManager", "OnZonesVisibilityChanged");

	Params::PortalSystemManager_OnZonesVisibilityChanged Parms{};

	Parms.zonesNewlyEnabled = std::move(zonesNewlyEnabled);
	Parms.zonesNewlyDisabled = std::move(zonesNewlyDisabled);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PortalSystem.PortalSystemManager.RebuildPortalSystemData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    fromBeginPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APortalSystemManager::RebuildPortalSystemData(bool fromBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemManager", "RebuildPortalSystemData");

	Params::PortalSystemManager_RebuildPortalSystemData Parms{};

	Parms.fromBeginPlay = fromBeginPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PortalSystem.PortalSystemManager.RegisterOccluder
// (Final, Native, Public)
// Parameters:
// class UPortalSystemOccluderComponent*   occluder                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APortalSystemManager::RegisterOccluder(class UPortalSystemOccluderComponent* occluder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemManager", "RegisterOccluder");

	Params::PortalSystemManager_RegisterOccluder Parms{};

	Parms.occluder = occluder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PortalSystem.PortalSystemZone.IsZoneVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APortalSystemZone::IsZoneVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemZone", "IsZoneVisible");

	Params::PortalSystemZone_IsZoneVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PortalSystem.PortalSystemZone.OnZoneVisibilityChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    newVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APortalSystemZone::OnZoneVisibilityChange(bool newVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemZone", "OnZoneVisibilityChange");

	Params::PortalSystemZone_OnZoneVisibilityChange Parms{};

	Parms.newVisibility = newVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PortalSystem.PortalSystemZone.ContainPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APortalSystemZone::ContainPoint(const struct FVector& Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalSystemZone", "ContainPoint");

	Params::PortalSystemZone_ContainPoint Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

