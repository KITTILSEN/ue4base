#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBTeamPlugin

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function RBTeamPlugin.RBTeamComponent.OnRep_TeamId
// 0x0001 (0x0001 - 0x0000)
struct RBTeamComponent_OnRep_TeamId final
{
public:
	uint8                                         OldTeamId;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RBTeamComponent_OnRep_TeamId) == 0x000001, "Wrong alignment on RBTeamComponent_OnRep_TeamId");
static_assert(sizeof(RBTeamComponent_OnRep_TeamId) == 0x000001, "Wrong size on RBTeamComponent_OnRep_TeamId");
static_assert(offsetof(RBTeamComponent_OnRep_TeamId, OldTeamId) == 0x000000, "Member 'RBTeamComponent_OnRep_TeamId::OldTeamId' has a wrong offset!");

// Function RBTeamPlugin.RBTeamFunctionLibrary.GetTeamAttitude
// 0x0018 (0x0018 - 0x0000)
struct RBTeamFunctionLibrary_GetTeamAttitude final
{
public:
	const class AActor*                           ActorA;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           ActorB;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamAttitude                                 ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RBTeamFunctionLibrary_GetTeamAttitude) == 0x000008, "Wrong alignment on RBTeamFunctionLibrary_GetTeamAttitude");
static_assert(sizeof(RBTeamFunctionLibrary_GetTeamAttitude) == 0x000018, "Wrong size on RBTeamFunctionLibrary_GetTeamAttitude");
static_assert(offsetof(RBTeamFunctionLibrary_GetTeamAttitude, ActorA) == 0x000000, "Member 'RBTeamFunctionLibrary_GetTeamAttitude::ActorA' has a wrong offset!");
static_assert(offsetof(RBTeamFunctionLibrary_GetTeamAttitude, ActorB) == 0x000008, "Member 'RBTeamFunctionLibrary_GetTeamAttitude::ActorB' has a wrong offset!");
static_assert(offsetof(RBTeamFunctionLibrary_GetTeamAttitude, ReturnValue) == 0x000010, "Member 'RBTeamFunctionLibrary_GetTeamAttitude::ReturnValue' has a wrong offset!");

// Function RBTeamPlugin.RBTeamFunctionLibrary.GetTeamId
// 0x0010 (0x0010 - 0x0000)
struct RBTeamFunctionLibrary_GetTeamId final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RBTeamFunctionLibrary_GetTeamId) == 0x000008, "Wrong alignment on RBTeamFunctionLibrary_GetTeamId");
static_assert(sizeof(RBTeamFunctionLibrary_GetTeamId) == 0x000010, "Wrong size on RBTeamFunctionLibrary_GetTeamId");
static_assert(offsetof(RBTeamFunctionLibrary_GetTeamId, Actor) == 0x000000, "Member 'RBTeamFunctionLibrary_GetTeamId::Actor' has a wrong offset!");
static_assert(offsetof(RBTeamFunctionLibrary_GetTeamId, ReturnValue) == 0x000008, "Member 'RBTeamFunctionLibrary_GetTeamId::ReturnValue' has a wrong offset!");

// Function RBTeamPlugin.RBTeamFunctionLibrary.OnSameTeam
// 0x0018 (0x0018 - 0x0000)
struct RBTeamFunctionLibrary_OnSameTeam final
{
public:
	const class AActor*                           ActorA;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           ActorB;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RBTeamFunctionLibrary_OnSameTeam) == 0x000008, "Wrong alignment on RBTeamFunctionLibrary_OnSameTeam");
static_assert(sizeof(RBTeamFunctionLibrary_OnSameTeam) == 0x000018, "Wrong size on RBTeamFunctionLibrary_OnSameTeam");
static_assert(offsetof(RBTeamFunctionLibrary_OnSameTeam, ActorA) == 0x000000, "Member 'RBTeamFunctionLibrary_OnSameTeam::ActorA' has a wrong offset!");
static_assert(offsetof(RBTeamFunctionLibrary_OnSameTeam, ActorB) == 0x000008, "Member 'RBTeamFunctionLibrary_OnSameTeam::ActorB' has a wrong offset!");
static_assert(offsetof(RBTeamFunctionLibrary_OnSameTeam, ReturnValue) == 0x000010, "Member 'RBTeamFunctionLibrary_OnSameTeam::ReturnValue' has a wrong offset!");

// Function RBTeamPlugin.RBTeamFunctionLibrary.SetTeamId
// 0x0010 (0x0010 - 0x0000)
struct RBTeamFunctionLibrary_SetTeamId final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         NewTeamId;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RBTeamFunctionLibrary_SetTeamId) == 0x000008, "Wrong alignment on RBTeamFunctionLibrary_SetTeamId");
static_assert(sizeof(RBTeamFunctionLibrary_SetTeamId) == 0x000010, "Wrong size on RBTeamFunctionLibrary_SetTeamId");
static_assert(offsetof(RBTeamFunctionLibrary_SetTeamId, Actor) == 0x000000, "Member 'RBTeamFunctionLibrary_SetTeamId::Actor' has a wrong offset!");
static_assert(offsetof(RBTeamFunctionLibrary_SetTeamId, NewTeamId) == 0x000008, "Member 'RBTeamFunctionLibrary_SetTeamId::NewTeamId' has a wrong offset!");

}

