#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnimNotifyState_AttachedInvItemByTags

#include "Basic.hpp"

#include "GroundBranch_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AnimNotifyState_AttachedInvItemByTags.BP_AnimNotifyState_AttachedInvItemByTags_C
// 0x0030 (0x0060 - 0x0030)
class UBP_AnimNotifyState_AttachedInvItemByTags_C final : public UAnimNotifyState
{
public:
	EHand                                         TargetHand;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  InvItemTags;                                       // 0x0038(0x0020)(Edit, BlueprintVisible)
	class FName                                   Name_0;                                            // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetNotifyName() const;
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;
	bool Received_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AnimNotifyState_AttachedInvItemByTags_C">();
	}
	static class UBP_AnimNotifyState_AttachedInvItemByTags_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AnimNotifyState_AttachedInvItemByTags_C>();
	}
};
static_assert(alignof(UBP_AnimNotifyState_AttachedInvItemByTags_C) == 0x000008, "Wrong alignment on UBP_AnimNotifyState_AttachedInvItemByTags_C");
static_assert(sizeof(UBP_AnimNotifyState_AttachedInvItemByTags_C) == 0x000060, "Wrong size on UBP_AnimNotifyState_AttachedInvItemByTags_C");
static_assert(offsetof(UBP_AnimNotifyState_AttachedInvItemByTags_C, TargetHand) == 0x000030, "Member 'UBP_AnimNotifyState_AttachedInvItemByTags_C::TargetHand' has a wrong offset!");
static_assert(offsetof(UBP_AnimNotifyState_AttachedInvItemByTags_C, InvItemTags) == 0x000038, "Member 'UBP_AnimNotifyState_AttachedInvItemByTags_C::InvItemTags' has a wrong offset!");
static_assert(offsetof(UBP_AnimNotifyState_AttachedInvItemByTags_C, Name_0) == 0x000058, "Member 'UBP_AnimNotifyState_AttachedInvItemByTags_C::Name_0' has a wrong offset!");

}

