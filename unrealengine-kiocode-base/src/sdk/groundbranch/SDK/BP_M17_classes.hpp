#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_M17

#include "Basic.hpp"

#include "BP_Handgun_Master_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_M17.BP_M17_C
// 0x0030 (0x05D0 - 0x05A0)
class ABP_M17_C final : public ABP_Handgun_Master_C
{
public:
	class UGBFrontSightPostComponent*             FrontSightPost;                                    // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGBRailComponent*                       BottomRail;                                        // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGBSightComponent*                      IronSight;                                         // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGBEjectComponent*                      EjectionPort;                                      // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGBExternalMagazineComponent*           MagWell;                                           // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGBBarrelComponent*                     Barrel;                                            // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_M17_C">();
	}
	static class ABP_M17_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_M17_C>();
	}
};
static_assert(alignof(ABP_M17_C) == 0x000008, "Wrong alignment on ABP_M17_C");
static_assert(sizeof(ABP_M17_C) == 0x0005D0, "Wrong size on ABP_M17_C");
static_assert(offsetof(ABP_M17_C, FrontSightPost) == 0x0005A0, "Member 'ABP_M17_C::FrontSightPost' has a wrong offset!");
static_assert(offsetof(ABP_M17_C, BottomRail) == 0x0005A8, "Member 'ABP_M17_C::BottomRail' has a wrong offset!");
static_assert(offsetof(ABP_M17_C, IronSight) == 0x0005B0, "Member 'ABP_M17_C::IronSight' has a wrong offset!");
static_assert(offsetof(ABP_M17_C, EjectionPort) == 0x0005B8, "Member 'ABP_M17_C::EjectionPort' has a wrong offset!");
static_assert(offsetof(ABP_M17_C, MagWell) == 0x0005C0, "Member 'ABP_M17_C::MagWell' has a wrong offset!");
static_assert(offsetof(ABP_M17_C, Barrel) == 0x0005C8, "Member 'ABP_M17_C::Barrel' has a wrong offset!");

}

