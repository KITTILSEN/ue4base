#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Minimap_Origin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Minimap_Origin.BP_Minimap_Origin_C.Get2dPosition
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Minimap_Origin_C_Get2dPosition final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWantSideView;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OutCanvasPosition;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelLocFromOrigin;                                  // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_1;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_2;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_3;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_2;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_3;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minimap_Origin_C_Get2dPosition) == 0x000004, "Wrong alignment on BP_Minimap_Origin_C_Get2dPosition");
static_assert(sizeof(BP_Minimap_Origin_C_Get2dPosition) == 0x0000F8, "Wrong size on BP_Minimap_Origin_C_Get2dPosition");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, SourceLocation) == 0x000000, "Member 'BP_Minimap_Origin_C_Get2dPosition::SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, bWantSideView) == 0x00000C, "Member 'BP_Minimap_Origin_C_Get2dPosition::bWantSideView' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, OutCanvasPosition) == 0x000010, "Member 'BP_Minimap_Origin_C_Get2dPosition::OutCanvasPosition' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, RelLocFromOrigin) == 0x000018, "Member 'BP_Minimap_Origin_C_Get2dPosition::RelLocFromOrigin' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_NegateFloat_ReturnValue) == 0x000030, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_NegateFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_X_1) == 0x000034, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_Z_1) == 0x00003C, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_NegateFloat_ReturnValue_1) == 0x000040, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_NegateFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_NegateFloat_ReturnValue_2) == 0x000044, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_NegateFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000050, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_X_2) == 0x000058, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_Y_2) == 0x00005C, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector_Z_2) == 0x000060, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000064, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_NegateFloat_ReturnValue_3) == 0x00006C, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_NegateFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x000070, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000078, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000080, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000088, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000090, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_2) == 0x000098, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector2D_Y) == 0x0000A4, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_3) == 0x0000A8, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector2D_X_1) == 0x0000B4, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BreakVector2D_Y_1) == 0x0000B8, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000BC, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_MakeVector2D_ReturnValue_4) == 0x0000C8, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D4, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Get2dPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000EC, "Member 'BP_Minimap_Origin_C_Get2dPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_Minimap_Origin.BP_Minimap_Origin_C.SaveImageToDisk
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Minimap_Origin_C_SaveImageToDisk final
{
public:
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameDir_ReturnValue;                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_1;        // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CaptureComponent2D_SaveImage_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameDir_ReturnValue_1;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CaptureComponent2D_SaveImage_ReturnValue_1; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Minimap_Origin_C_SaveImageToDisk) == 0x000008, "Wrong alignment on BP_Minimap_Origin_C_SaveImageToDisk");
static_assert(sizeof(BP_Minimap_Origin_C_SaveImageToDisk) == 0x0000B0, "Wrong size on BP_Minimap_Origin_C_SaveImageToDisk");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000000, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_GetGameDir_ReturnValue) == 0x000010, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_GetGameDir_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000040, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_GetCurrentLevelName_ReturnValue_1) == 0x000050, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_GetCurrentLevelName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_CaptureComponent2D_SaveImage_ReturnValue) == 0x000060, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_CaptureComponent2D_SaveImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_GetGameDir_ReturnValue_1) == 0x000068, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_GetGameDir_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000088, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000098, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SaveImageToDisk, CallFunc_CaptureComponent2D_SaveImage_ReturnValue_1) == 0x0000A8, "Member 'BP_Minimap_Origin_C_SaveImageToDisk::CallFunc_CaptureComponent2D_SaveImage_ReturnValue_1' has a wrong offset!");

// Function BP_Minimap_Origin.BP_Minimap_Origin_C.SetupCaptureComp
// 0x02D0 (0x02D0 - 0x0000)
struct BP_Minimap_Origin_C_SetupCaptureComp final
{
public:
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue_1;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Tan_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Tan_ReturnValue_1;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0188(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x01A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x0244(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Minimap_Origin_C_SetupCaptureComp) == 0x000008, "Wrong alignment on BP_Minimap_Origin_C_SetupCaptureComp");
static_assert(sizeof(BP_Minimap_Origin_C_SetupCaptureComp) == 0x0002D0, "Wrong size on BP_Minimap_Origin_C_SetupCaptureComp");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_DegreesToRadians_ReturnValue) == 0x000000, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_DegreesToRadians_ReturnValue_1) == 0x000004, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_DegreesToRadians_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Tan_ReturnValue) == 0x000010, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Tan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Tan_ReturnValue_1) == 0x000014, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Tan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000020, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000024, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000048, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00004C, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_BreakVector_Y) == 0x000054, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_MakeVector_ReturnValue_1) == 0x00005C, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000074, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000FC, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, K2Node_MakeArray_Array_1) == 0x000188, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000198, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0001A4, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00022C, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000238, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_SetupCaptureComp, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x000244, "Member 'BP_Minimap_Origin_C_SetupCaptureComp::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");

// Function BP_Minimap_Origin.BP_Minimap_Origin_C.Setup
// 0x03E8 (0x03E8 - 0x0000)
struct BP_Minimap_Origin_C_Setup final
{
public:
	float                                         LocalHeight;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalWidth;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x006C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x01CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x027C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_4;  // 0x032C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minimap_Origin_C_Setup) == 0x000008, "Wrong alignment on BP_Minimap_Origin_C_Setup");
static_assert(sizeof(BP_Minimap_Origin_C_Setup) == 0x0003E8, "Wrong size on BP_Minimap_Origin_C_Setup");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, LocalHeight) == 0x000000, "Member 'BP_Minimap_Origin_C_Setup::LocalHeight' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, LocalWidth) == 0x000004, "Member 'BP_Minimap_Origin_C_Setup::LocalWidth' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, Temp_object_Variable) == 0x000008, "Member 'BP_Minimap_Origin_C_Setup::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, Temp_object_Variable_1) == 0x000010, "Member 'BP_Minimap_Origin_C_Setup::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, Temp_bool_Variable) == 0x000018, "Member 'BP_Minimap_Origin_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, K2Node_Select_Default) == 0x000020, "Member 'BP_Minimap_Origin_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue) == 0x00002C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Y) == 0x00003C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_X_1) == 0x000044, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Z_1) == 0x00004C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_X_2) == 0x000050, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Y_2) == 0x000054, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Z_2) == 0x000058, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_X_3) == 0x00005C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Y_3) == 0x000060, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Z_3) == 0x000064, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00006C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000F4, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000F8, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000100, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue_1) == 0x000104, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue_2) == 0x000110, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00011C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000120, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000124, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000128, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue_3) == 0x00012C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue_4) == 0x000138, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000144, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0001CC, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000254, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000258, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x00025C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue_5) == 0x000260, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00026C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue_6) == 0x000270, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x00027C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x000304, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000308, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue_7) == 0x00030C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x000318, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00031C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_MakeVector_ReturnValue_8) == 0x000320, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_K2_SetRelativeLocation_SweepHitResult_4) == 0x00032C, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_K2_SetRelativeLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003B4, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_X_4) == 0x0003C0, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Y_4) == 0x0003C4, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_BreakVector_Z_4) == 0x0003C8, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Add_VectorVector_ReturnValue) == 0x0003CC, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_Setup, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0003D8, "Member 'BP_Minimap_Origin_C_Setup::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_Minimap_Origin.BP_Minimap_Origin_C.UserConstructionScript
// 0x011C (0x011C - 0x0000)
struct BP_Minimap_Origin_C_UserConstructionScript final
{
public:
	float                                         LocalHeight;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalWidth;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0008(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult_1;  // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsEditorWorld_ReturnValue;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Minimap_Origin_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_Minimap_Origin_C_UserConstructionScript");
static_assert(sizeof(BP_Minimap_Origin_C_UserConstructionScript) == 0x00011C, "Wrong size on BP_Minimap_Origin_C_UserConstructionScript");
static_assert(offsetof(BP_Minimap_Origin_C_UserConstructionScript, LocalHeight) == 0x000000, "Member 'BP_Minimap_Origin_C_UserConstructionScript::LocalHeight' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_UserConstructionScript, LocalWidth) == 0x000004, "Member 'BP_Minimap_Origin_C_UserConstructionScript::LocalWidth' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_UserConstructionScript, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000008, "Member 'BP_Minimap_Origin_C_UserConstructionScript::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_UserConstructionScript, CallFunc_K2_AddRelativeRotation_SweepHitResult_1) == 0x000090, "Member 'BP_Minimap_Origin_C_UserConstructionScript::CallFunc_K2_AddRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_UserConstructionScript, CallFunc_IsEditorWorld_ReturnValue) == 0x000118, "Member 'BP_Minimap_Origin_C_UserConstructionScript::CallFunc_IsEditorWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minimap_Origin_C_UserConstructionScript, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000119, "Member 'BP_Minimap_Origin_C_UserConstructionScript::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

}

