#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Optical_EOTech_Vudu

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.ExecuteUbergraph_BP_Optical_EOTech_Vudu
// 0x02B8 (0x02B8 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Event_InName;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_FrameDeltaTime;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBSightComponent*                      K2Node_ComponentBoundEvent_SightComponent;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MagnificationLevel_1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMagnificationLevel_ReturnValue;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_FrameDeltaTime_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_1;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte_1;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_MagnificationLevel;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_2;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_TotalDuration;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue;              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x01AC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_ComponentBoundEvent_CurrentMID;             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_ComponentBoundEvent_TargetMID;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue;  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_InEnumAsByte_2;                       // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_TotalDuration_1;                      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_3;                             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte_3;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Array_Get_Item_1;                         // 0x0200(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_Asset;                          // 0x0228(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Array_Get_Item_2;                         // 0x0250(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu) == 0x000008, "Wrong alignment on BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu) == 0x0002B8, "Wrong size on BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, EntryPoint) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_MakeRotator_ReturnValue) == 0x000004, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_InName) == 0x000010, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_FrameDeltaTime) == 0x000018, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_FrameDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_ComponentBoundEvent_SightComponent) == 0x000020, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_ComponentBoundEvent_SightComponent' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_ComponentBoundEvent_Value) == 0x000028, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_CustomEvent_MagnificationLevel_1) == 0x00002C, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_CustomEvent_MagnificationLevel_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_GetMagnificationLevel_ReturnValue) == 0x00003C, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_GetMagnificationLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_InEnumAsByte) == 0x000040, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_FrameDeltaTime_1) == 0x000044, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_FrameDeltaTime_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_InName_1) == 0x000050, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_InName_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_InEnumAsByte_1) == 0x000058, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_InEnumAsByte_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_CustomEvent_MagnificationLevel) == 0x00005C, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_CustomEvent_MagnificationLevel' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_InName_2) == 0x000060, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_InName_2' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_TotalDuration) == 0x000068, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_TotalDuration' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_FTrunc_ReturnValue_1) == 0x00006C, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000070, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00007C, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_MakeRotator_ReturnValue_1) == 0x000080, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00008C, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000114, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_GetGBInstigator_ReturnValue) == 0x0001A0, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_GetGBInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_IsPlayerControlled_ReturnValue) == 0x0001A8, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_CreateDelegate_OutputDelegate) == 0x0001AC, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_IsLocallyControlled_ReturnValue) == 0x0001BC, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_ComponentBoundEvent_CurrentMID) == 0x0001C0, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_ComponentBoundEvent_CurrentMID' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_ComponentBoundEvent_TargetMID) == 0x0001C8, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_ComponentBoundEvent_TargetMID' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_BooleanAND_ReturnValue) == 0x0001D0, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_K2_GetTextureParameterValue_ReturnValue) == 0x0001D8, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_K2_GetTextureParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_InEnumAsByte_2) == 0x0001E1, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_InEnumAsByte_2' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_TotalDuration_1) == 0x0001E4, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_TotalDuration_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_InName_3) == 0x0001E8, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_InName_3' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_Event_InEnumAsByte_3) == 0x0001F0, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_Event_InEnumAsByte_3' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Array_Length_ReturnValue) == 0x0001F4, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0001F8, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001FC, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Array_Get_Item_1) == 0x000200, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_CustomEvent_Asset) == 0x000228, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_CustomEvent_Asset' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_Array_Get_Item_2) == 0x000250, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_IsDedicatedServer_ReturnValue) == 0x000278, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, CallFunc_GetMaterial_ReturnValue) == 0x000280, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000288, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, Temp_object_Variable) == 0x000298, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_CustomEvent_Loaded) == 0x0002A0, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_DynamicCast_AsTexture_2D) == 0x0002A8, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu, K2Node_DynamicCast_bSuccess_1) == 0x0002B0, "Member 'BP_Optical_EOTech_Vudu_C_ExecuteUbergraph_BP_Optical_EOTech_Vudu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.LoadAndApplyReticleTexture
// 0x0028 (0x0028 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_LoadAndApplyReticleTexture final
{
public:
	TSoftObjectPtr<class UObject>                 Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_LoadAndApplyReticleTexture) == 0x000008, "Wrong alignment on BP_Optical_EOTech_Vudu_C_LoadAndApplyReticleTexture");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_LoadAndApplyReticleTexture) == 0x000028, "Wrong size on BP_Optical_EOTech_Vudu_C_LoadAndApplyReticleTexture");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_LoadAndApplyReticleTexture, Asset) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_LoadAndApplyReticleTexture::Asset' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature final
{
public:
	class UMaterialInstanceDynamic*               CurrentMID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TargetMID;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature) == 0x000008, "Wrong alignment on BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature) == 0x000010, "Wrong size on BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature, CurrentMID) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature::CurrentMID' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature, TargetMID) == 0x000008, "Member 'BP_Optical_EOTech_Vudu_C_BndEvt__BP_Optical_EOTech_Vudu_Vudu_OpticalSightComponent_K2Node_ComponentBoundEvent_3_OnSightMeshMaterialUpdate__DelegateSignature::TargetMID' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.UpdateRing
// 0x0004 (0x0004 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_UpdateRing final
{
public:
	float                                         MagnificationLevel;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_UpdateRing) == 0x000004, "Wrong alignment on BP_Optical_EOTech_Vudu_C_UpdateRing");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_UpdateRing) == 0x000004, "Wrong size on BP_Optical_EOTech_Vudu_C_UpdateRing");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_UpdateRing, MagnificationLevel) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_UpdateRing::MagnificationLevel' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.UpdateReticle
// 0x0004 (0x0004 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_UpdateReticle final
{
public:
	float                                         MagnificationLevel;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_UpdateReticle) == 0x000004, "Wrong alignment on BP_Optical_EOTech_Vudu_C_UpdateReticle");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_UpdateReticle) == 0x000004, "Wrong size on BP_Optical_EOTech_Vudu_C_UpdateReticle");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_UpdateReticle, MagnificationLevel) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_UpdateReticle::MagnificationLevel' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature final
{
public:
	class UGBSightComponent*                      SightComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature) == 0x000008, "Wrong alignment on BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature) == 0x000010, "Wrong size on BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature, SightComponent) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature::SightComponent' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature, Value) == 0x000008, "Member 'BP_Optical_EOTech_Vudu_C_BndEvt__AccuPower_OpticalSightComponent_K2Node_ComponentBoundEvent_0_OnSightSettingIndex__DelegateSignature::Value' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.NotifyStateTickName
// 0x000C (0x000C - 0x0000)
struct BP_Optical_EOTech_Vudu_C_NotifyStateTickName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDeltaTime;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_NotifyStateTickName) == 0x000004, "Wrong alignment on BP_Optical_EOTech_Vudu_C_NotifyStateTickName");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_NotifyStateTickName) == 0x00000C, "Wrong size on BP_Optical_EOTech_Vudu_C_NotifyStateTickName");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateTickName, InName) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateTickName::InName' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateTickName, FrameDeltaTime) == 0x000008, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateTickName::FrameDeltaTime' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.NotifyStateTickEnum
// 0x0008 (0x0008 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FrameDeltaTime;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum) == 0x000004, "Wrong alignment on BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum) == 0x000008, "Wrong size on BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum, InEnumAsByte) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum::InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum, FrameDeltaTime) == 0x000004, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateTickEnum::FrameDeltaTime' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.NotifyStateEndName
// 0x0008 (0x0008 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_NotifyStateEndName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_NotifyStateEndName) == 0x000004, "Wrong alignment on BP_Optical_EOTech_Vudu_C_NotifyStateEndName");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_NotifyStateEndName) == 0x000008, "Wrong size on BP_Optical_EOTech_Vudu_C_NotifyStateEndName");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateEndName, InName) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateEndName::InName' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.NotifyStateEndEnum
// 0x0001 (0x0001 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_NotifyStateEndEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_NotifyStateEndEnum) == 0x000001, "Wrong alignment on BP_Optical_EOTech_Vudu_C_NotifyStateEndEnum");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_NotifyStateEndEnum) == 0x000001, "Wrong size on BP_Optical_EOTech_Vudu_C_NotifyStateEndEnum");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateEndEnum, InEnumAsByte) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateEndEnum::InEnumAsByte' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.NotifyStateBeginName
// 0x000C (0x000C - 0x0000)
struct BP_Optical_EOTech_Vudu_C_NotifyStateBeginName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_NotifyStateBeginName) == 0x000004, "Wrong alignment on BP_Optical_EOTech_Vudu_C_NotifyStateBeginName");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_NotifyStateBeginName) == 0x00000C, "Wrong size on BP_Optical_EOTech_Vudu_C_NotifyStateBeginName");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateBeginName, InName) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateBeginName::InName' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateBeginName, TotalDuration) == 0x000008, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateBeginName::TotalDuration' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.NotifyStateBeginEnum
// 0x0008 (0x0008 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalDuration;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum) == 0x000004, "Wrong alignment on BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum) == 0x000008, "Wrong size on BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum, InEnumAsByte) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum::InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum, TotalDuration) == 0x000004, "Member 'BP_Optical_EOTech_Vudu_C_NotifyStateBeginEnum::TotalDuration' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.NotifyName
// 0x0008 (0x0008 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_NotifyName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_NotifyName) == 0x000004, "Wrong alignment on BP_Optical_EOTech_Vudu_C_NotifyName");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_NotifyName) == 0x000008, "Wrong size on BP_Optical_EOTech_Vudu_C_NotifyName");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyName, InName) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_NotifyName::InName' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.NotifyEnum
// 0x0001 (0x0001 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_NotifyEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_NotifyEnum) == 0x000001, "Wrong alignment on BP_Optical_EOTech_Vudu_C_NotifyEnum");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_NotifyEnum) == 0x000001, "Wrong size on BP_Optical_EOTech_Vudu_C_NotifyEnum");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_NotifyEnum, InEnumAsByte) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_NotifyEnum::InEnumAsByte' has a wrong offset!");

// Function BP_Optical_EOTech_Vudu.BP_Optical_EOTech_Vudu_C.OnLoaded_D2FA3FECD871453C96D60172AB2ED72C
// 0x0008 (0x0008 - 0x0000)
struct BP_Optical_EOTech_Vudu_C_OnLoaded_D2FA3FECD871453C96D60172AB2ED72C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Optical_EOTech_Vudu_C_OnLoaded_D2FA3FECD871453C96D60172AB2ED72C) == 0x000008, "Wrong alignment on BP_Optical_EOTech_Vudu_C_OnLoaded_D2FA3FECD871453C96D60172AB2ED72C");
static_assert(sizeof(BP_Optical_EOTech_Vudu_C_OnLoaded_D2FA3FECD871453C96D60172AB2ED72C) == 0x000008, "Wrong size on BP_Optical_EOTech_Vudu_C_OnLoaded_D2FA3FECD871453C96D60172AB2ED72C");
static_assert(offsetof(BP_Optical_EOTech_Vudu_C_OnLoaded_D2FA3FECD871453C96D60172AB2ED72C, Loaded) == 0x000000, "Member 'BP_Optical_EOTech_Vudu_C_OnLoaded_D2FA3FECD871453C96D60172AB2ED72C::Loaded' has a wrong offset!");

}

