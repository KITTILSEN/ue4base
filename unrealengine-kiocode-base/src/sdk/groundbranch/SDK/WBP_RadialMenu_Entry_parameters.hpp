#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RadialMenu_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_RadialMenu_Entry.WBP_RadialMenu_Entry_C.ExecuteUbergraph_WBP_RadialMenu_Entry
// 0x0048 (0x0048 - 0x0000)
struct WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* LoadedAsset)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_InAngle;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InAngleChangePerEntry;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InSelectAngle;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSelect_OutResult;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_LoadedAsset;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry) == 0x000008, "Wrong alignment on WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry");
static_assert(sizeof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry) == 0x000048, "Wrong size on WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, EntryPoint) == 0x000000, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000004, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, K2Node_CustomEvent_InAngle) == 0x000018, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::K2Node_CustomEvent_InAngle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, K2Node_CustomEvent_InAngleChangePerEntry) == 0x00001C, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::K2Node_CustomEvent_InAngleChangePerEntry' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, K2Node_CustomEvent_InSelectAngle) == 0x000028, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::K2Node_CustomEvent_InSelectAngle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, CallFunc_CanSelect_OutResult) == 0x00002C, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::CallFunc_CanSelect_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, K2Node_CustomEvent_LoadedAsset) == 0x000030, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::K2Node_CustomEvent_LoadedAsset' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, K2Node_DynamicCast_AsTexture_2D) == 0x000038, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_RadialMenu_Entry_C_ExecuteUbergraph_WBP_RadialMenu_Entry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_RadialMenu_Entry.WBP_RadialMenu_Entry_C.CustomEvent_0
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadialMenu_Entry_C_CustomEvent_0 final
{
public:
	class UObject*                                LoadedAsset;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenu_Entry_C_CustomEvent_0) == 0x000008, "Wrong alignment on WBP_RadialMenu_Entry_C_CustomEvent_0");
static_assert(sizeof(WBP_RadialMenu_Entry_C_CustomEvent_0) == 0x000008, "Wrong size on WBP_RadialMenu_Entry_C_CustomEvent_0");
static_assert(offsetof(WBP_RadialMenu_Entry_C_CustomEvent_0, LoadedAsset) == 0x000000, "Member 'WBP_RadialMenu_Entry_C_CustomEvent_0::LoadedAsset' has a wrong offset!");

// Function WBP_RadialMenu_Entry.WBP_RadialMenu_Entry_C.CheckSelect
// 0x0004 (0x0004 - 0x0000)
struct WBP_RadialMenu_Entry_C_CheckSelect final
{
public:
	float                                         InSelectAngle;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenu_Entry_C_CheckSelect) == 0x000004, "Wrong alignment on WBP_RadialMenu_Entry_C_CheckSelect");
static_assert(sizeof(WBP_RadialMenu_Entry_C_CheckSelect) == 0x000004, "Wrong size on WBP_RadialMenu_Entry_C_CheckSelect");
static_assert(offsetof(WBP_RadialMenu_Entry_C_CheckSelect, InSelectAngle) == 0x000000, "Member 'WBP_RadialMenu_Entry_C_CheckSelect::InSelectAngle' has a wrong offset!");

// Function WBP_RadialMenu_Entry.WBP_RadialMenu_Entry_C.Setup
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadialMenu_Entry_C_Setup final
{
public:
	float                                         InAngle;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAngleChangePerEntry;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenu_Entry_C_Setup) == 0x000004, "Wrong alignment on WBP_RadialMenu_Entry_C_Setup");
static_assert(sizeof(WBP_RadialMenu_Entry_C_Setup) == 0x000008, "Wrong size on WBP_RadialMenu_Entry_C_Setup");
static_assert(offsetof(WBP_RadialMenu_Entry_C_Setup, InAngle) == 0x000000, "Member 'WBP_RadialMenu_Entry_C_Setup::InAngle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_Setup, InAngleChangePerEntry) == 0x000004, "Member 'WBP_RadialMenu_Entry_C_Setup::InAngleChangePerEntry' has a wrong offset!");

// Function WBP_RadialMenu_Entry.WBP_RadialMenu_Entry_C.GetImageSliceColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct WBP_RadialMenu_Entry_C_GetImageSliceColorAndOpacity final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenu_Entry_C_GetImageSliceColorAndOpacity) == 0x000004, "Wrong alignment on WBP_RadialMenu_Entry_C_GetImageSliceColorAndOpacity");
static_assert(sizeof(WBP_RadialMenu_Entry_C_GetImageSliceColorAndOpacity) == 0x000010, "Wrong size on WBP_RadialMenu_Entry_C_GetImageSliceColorAndOpacity");
static_assert(offsetof(WBP_RadialMenu_Entry_C_GetImageSliceColorAndOpacity, ReturnValue) == 0x000000, "Member 'WBP_RadialMenu_Entry_C_GetImageSliceColorAndOpacity::ReturnValue' has a wrong offset!");

// Function WBP_RadialMenu_Entry.WBP_RadialMenu_Entry_C.CanSelect
// 0x0014 (0x0014 - 0x0000)
struct WBP_RadialMenu_Entry_C_CanSelect final
{
public:
	float                                         AngleDegrees;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutResult;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleWithin_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_RadialMenu_Entry_C_CanSelect) == 0x000004, "Wrong alignment on WBP_RadialMenu_Entry_C_CanSelect");
static_assert(sizeof(WBP_RadialMenu_Entry_C_CanSelect) == 0x000014, "Wrong size on WBP_RadialMenu_Entry_C_CanSelect");
static_assert(offsetof(WBP_RadialMenu_Entry_C_CanSelect, AngleDegrees) == 0x000000, "Member 'WBP_RadialMenu_Entry_C_CanSelect::AngleDegrees' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_CanSelect, OutResult) == 0x000004, "Member 'WBP_RadialMenu_Entry_C_CanSelect::OutResult' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_CanSelect, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_RadialMenu_Entry_C_CanSelect::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_CanSelect, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'WBP_RadialMenu_Entry_C_CanSelect::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenu_Entry_C_CanSelect, CallFunc_AngleWithin_ReturnValue) == 0x000010, "Member 'WBP_RadialMenu_Entry_C_CanSelect::CallFunc_AngleWithin_ReturnValue' has a wrong offset!");

}

