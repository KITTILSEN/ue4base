#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_G3

#include "Basic.hpp"

#include "ABP_G3_classes.hpp"
#include "ABP_G3_parameters.hpp"


namespace SDK
{

// Function ABP_G3.ABP_G3_C.ExecuteUbergraph_ABP_G3
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_G3_C::ExecuteUbergraph_ABP_G3(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_G3_C", "ExecuteUbergraph_ABP_G3");

	Params::ABP_G3_C_ExecuteUbergraph_ABP_G3 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_G3.ABP_G3_C.OnFiringModeIndexChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint8                                   FiringModeIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_G3_C::OnFiringModeIndexChanged(uint8 FiringModeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_G3_C", "OnFiringModeIndexChanged");

	Params::ABP_G3_C_OnFiringModeIndexChanged Parms{};

	Parms.FiringModeIndex = FiringModeIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_G3.ABP_G3_C.OnSetFrontSightPostHeightOffset
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   FrontSightPostHeightOffset_0                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_G3_C::OnSetFrontSightPostHeightOffset(float FrontSightPostHeightOffset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_G3_C", "OnSetFrontSightPostHeightOffset");

	Params::ABP_G3_C_OnSetFrontSightPostHeightOffset Parms{};

	Parms.FrontSightPostHeightOffset_0 = FrontSightPostHeightOffset_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_G3.ABP_G3_C.OnIronSightZeroing
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FVector&                   ZeroRelativeToSight                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SightLocationOffset                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  SightRotationOffset                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void UABP_G3_C::OnIronSightZeroing(const struct FVector& ZeroRelativeToSight, const struct FVector& SightLocationOffset, const struct FRotator& SightRotationOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_G3_C", "OnIronSightZeroing");

	Params::ABP_G3_C_OnIronSightZeroing Parms{};

	Parms.ZeroRelativeToSight = std::move(ZeroRelativeToSight);
	Parms.SightLocationOffset = std::move(SightLocationOffset);
	Parms.SightRotationOffset = std::move(SightRotationOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_G3.ABP_G3_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UABP_G3_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_G3_C", "AnimGraph");

	Params::ABP_G3_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}

}

