#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InventoryBar.WBP_InventoryBar_C
// 0x0050 (0x02B0 - 0x0260)
class UWBP_InventoryBar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_BoundKey_C*                        BoundKey_Close;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_InventoryBar;                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryBar_Heading_C*            WBP_InventoryBar_Equipment;                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryBar_Heading_C*            WBP_InventoryBar_Grenades;                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryBar_Heading_C*            WBP_InventoryBar_Primary;                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryBar_Heading_C*            WBP_InventoryBar_Sidearm;                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FName>                           SlingPoints;                                       // 0x0298(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentSlot;                                       // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActionsBound;                                     // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_InventoryBar(int32 EntryPoint);
	void OnUseOffHandReleased_Event();
	void OnUseOffHandPressed_Event();
	void OnUseMainHandRelease_Event();
	void OnUseMainHandPressed_Event();
	void ShowInventoryBar();
	void HideInventoryBar();
	void OnPrevPosPressed_Event();
	void OnNextPosPressed_Event();
	void BindActions();
	void OnCycleCat_Event_0(bool bNext);
	void Construct();
	void PopulateSubMenu(int32 Index_0, class UWBP_InventoryBar_SubMenu_Content_C* SubMenuContent);
	void SetSlingPoints();
	void Cycle(bool bNext, bool bRestricted);
	void Select(int32 Index_0, bool bImmediate);
	void GetItemsByItemSlot(int32 InventorySlot, TArray<class AGBInvItem*>* ItemsInSlot1);
	void GenerateEntries(int32 InventorySlot, class UWBP_InventoryBar_SubMenu_Content_C* SubMenuContent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InventoryBar_C">();
	}
	static class UWBP_InventoryBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InventoryBar_C>();
	}
};
static_assert(alignof(UWBP_InventoryBar_C) == 0x000008, "Wrong alignment on UWBP_InventoryBar_C");
static_assert(sizeof(UWBP_InventoryBar_C) == 0x0002B0, "Wrong size on UWBP_InventoryBar_C");
static_assert(offsetof(UWBP_InventoryBar_C, UberGraphFrame) == 0x000260, "Member 'UWBP_InventoryBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, BoundKey_Close) == 0x000268, "Member 'UWBP_InventoryBar_C::BoundKey_Close' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, HorizontalBox_InventoryBar) == 0x000270, "Member 'UWBP_InventoryBar_C::HorizontalBox_InventoryBar' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, WBP_InventoryBar_Equipment) == 0x000278, "Member 'UWBP_InventoryBar_C::WBP_InventoryBar_Equipment' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, WBP_InventoryBar_Grenades) == 0x000280, "Member 'UWBP_InventoryBar_C::WBP_InventoryBar_Grenades' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, WBP_InventoryBar_Primary) == 0x000288, "Member 'UWBP_InventoryBar_C::WBP_InventoryBar_Primary' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, WBP_InventoryBar_Sidearm) == 0x000290, "Member 'UWBP_InventoryBar_C::WBP_InventoryBar_Sidearm' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, SlingPoints) == 0x000298, "Member 'UWBP_InventoryBar_C::SlingPoints' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, CurrentSlot) == 0x0002A8, "Member 'UWBP_InventoryBar_C::CurrentSlot' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBar_C, bActionsBound) == 0x0002AC, "Member 'UWBP_InventoryBar_C::bActionsBound' has a wrong offset!");

}

