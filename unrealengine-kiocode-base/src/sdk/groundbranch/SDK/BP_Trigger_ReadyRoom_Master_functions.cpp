#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Trigger_ReadyRoom_Master

#include "Basic.hpp"

#include "BP_Trigger_ReadyRoom_Master_classes.hpp"
#include "BP_Trigger_ReadyRoom_Master_parameters.hpp"


namespace SDK
{

// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.ExecuteUbergraph_BP_Trigger_ReadyRoom_Master
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Trigger_ReadyRoom_Master_C::ExecuteUbergraph_BP_Trigger_ReadyRoom_Master(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "ExecuteUbergraph_BP_Trigger_ReadyRoom_Master");

	Params::BP_Trigger_ReadyRoom_Master_C_ExecuteUbergraph_BP_Trigger_ReadyRoom_Master Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.BindServerAndClient
// (BlueprintCallable, BlueprintEvent)

void ABP_Trigger_ReadyRoom_Master_C::BindServerAndClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "BindServerAndClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.OnComponentEndOverlap_ServerAndClient
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Trigger_ReadyRoom_Master_C::OnComponentEndOverlap_ServerAndClient(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "OnComponentEndOverlap_ServerAndClient");

	Params::BP_Trigger_ReadyRoom_Master_C_OnComponentEndOverlap_ServerAndClient Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.OnComponentBeginOverlap_ServerAndClient
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Trigger_ReadyRoom_Master_C::OnComponentBeginOverlap_ServerAndClient(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "OnComponentBeginOverlap_ServerAndClient");

	Params::BP_Trigger_ReadyRoom_Master_C_OnComponentBeginOverlap_ServerAndClient Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.BindClientOnly
// (BlueprintCallable, BlueprintEvent)

void ABP_Trigger_ReadyRoom_Master_C::BindClientOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "BindClientOnly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.OnComponentEndOverlap_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Trigger_ReadyRoom_Master_C::OnComponentEndOverlap_Local(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "OnComponentEndOverlap_Local");

	Params::BP_Trigger_ReadyRoom_Master_C_OnComponentEndOverlap_Local Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.OnComponentBeginOverlap_Local
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Trigger_ReadyRoom_Master_C::OnComponentBeginOverlap_Local(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "OnComponentBeginOverlap_Local");

	Params::BP_Trigger_ReadyRoom_Master_C_OnComponentBeginOverlap_Local Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.BindServerOnly
// (BlueprintCallable, BlueprintEvent)

void ABP_Trigger_ReadyRoom_Master_C::BindServerOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "BindServerOnly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.OnComponentEndOverlap_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Trigger_ReadyRoom_Master_C::OnComponentEndOverlap_Server(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "OnComponentEndOverlap_Server");

	Params::BP_Trigger_ReadyRoom_Master_C_OnComponentEndOverlap_Server Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.OnComponentBeginOverlap_Server
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Trigger_ReadyRoom_Master_C::OnComponentBeginOverlap_Server(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "OnComponentBeginOverlap_Server");

	Params::BP_Trigger_ReadyRoom_Master_C_OnComponentBeginOverlap_Server Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Trigger_ReadyRoom_Master_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.ExitedOnLocal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBPlayerController*              GBPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPositiveExit                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Trigger_ReadyRoom_Master_C::ExitedOnLocal(class AGBPlayerController* GBPlayerController, bool bPositiveExit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "ExitedOnLocal");

	Params::BP_Trigger_ReadyRoom_Master_C_ExitedOnLocal Parms{};

	Parms.GBPlayerController = GBPlayerController;
	Parms.bPositiveExit = bPositiveExit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.EnteredOnLocal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBPlayerController*              GBPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Trigger_ReadyRoom_Master_C::EnteredOnLocal(class AGBPlayerController* GBPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "EnteredOnLocal");

	Params::BP_Trigger_ReadyRoom_Master_C_EnteredOnLocal Parms{};

	Parms.GBPlayerController = GBPlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.ExitedOnServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBPlayerController*              GBPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPositiveExit                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Trigger_ReadyRoom_Master_C::ExitedOnServer(class AGBPlayerController* GBPlayerController, bool bPositiveExit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "ExitedOnServer");

	Params::BP_Trigger_ReadyRoom_Master_C_ExitedOnServer Parms{};

	Parms.GBPlayerController = GBPlayerController;
	Parms.bPositiveExit = bPositiveExit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.EnteredOnServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBPlayerController*              GBPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Trigger_ReadyRoom_Master_C::EnteredOnServer(class AGBPlayerController* GBPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "EnteredOnServer");

	Params::BP_Trigger_ReadyRoom_Master_C_EnteredOnServer Parms{};

	Parms.GBPlayerController = GBPlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.TraceToPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Origin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Invalid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Trigger_ReadyRoom_Master_C::TraceToPlayer(const struct FVector& Origin, bool* Invalid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "TraceToPlayer");

	Params::BP_Trigger_ReadyRoom_Master_C_TraceToPlayer Parms{};

	Parms.Origin = std::move(Origin);

	UObject::ProcessEvent(Func, &Parms);

	if (Invalid != nullptr)
		*Invalid = Parms.Invalid;
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.CloseToPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Trigger_ReadyRoom_Master_C::CloseToPlayer(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "CloseToPlayer");

	Params::BP_Trigger_ReadyRoom_Master_C_CloseToPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Trigger_ReadyRoom_Master.BP_Trigger_ReadyRoom_Master_C.GetPositiveExit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   OutPositiveExit                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Trigger_ReadyRoom_Master_C::GetPositiveExit(class AActor* InActor, bool* OutPositiveExit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Trigger_ReadyRoom_Master_C", "GetPositiveExit");

	Params::BP_Trigger_ReadyRoom_Master_C_GetPositiveExit Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutPositiveExit != nullptr)
		*OutPositiveExit = Parms.OutPositiveExit;
}

}

