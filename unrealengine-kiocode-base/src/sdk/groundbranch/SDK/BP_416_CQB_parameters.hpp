#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_416_CQB

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_416_CQB.BP_416_CQB_C.UserConstructionScript
// 0x0028 (0x0028 - 0x0000)
struct BP_416_CQB_C_UserConstructionScript final
{
public:
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	class UGBFirearmAnimInstance*                 CallFunc_GetFirearmAnimInstance_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_AR15_C*                            K2Node_DynamicCast_AsABP_AR15;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_416_CQB_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_416_CQB_C_UserConstructionScript");
static_assert(sizeof(BP_416_CQB_C_UserConstructionScript) == 0x000028, "Wrong size on BP_416_CQB_C_UserConstructionScript");
static_assert(offsetof(BP_416_CQB_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_416_CQB_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_416_CQB_C_UserConstructionScript, CallFunc_GetFirearmAnimInstance_ReturnValue) == 0x000010, "Member 'BP_416_CQB_C_UserConstructionScript::CallFunc_GetFirearmAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_416_CQB_C_UserConstructionScript, K2Node_DynamicCast_AsABP_AR15) == 0x000018, "Member 'BP_416_CQB_C_UserConstructionScript::K2Node_DynamicCast_AsABP_AR15' has a wrong offset!");
static_assert(offsetof(BP_416_CQB_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_416_CQB_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

