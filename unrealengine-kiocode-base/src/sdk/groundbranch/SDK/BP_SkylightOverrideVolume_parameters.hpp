#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkylightOverrideVolume

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.ExecuteUbergraph_BP_SkylightOverrideVolume
// 0x0428 (0x0428 - 0x0000)
struct BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGBGameMode* GameMode, class AGBCharacter* GBCharacter)> K2Node_CreateDelegate_OutputDelegate; // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State_1;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State_2;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetCharacter_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetObjectFName_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SkylightOverrideVolume_C*           CallFunc_GetActorOfClass_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_OldState;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NewState;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State_1;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGBPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0150(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn_1;                       // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter_1;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 CallFunc_GetSkyActor_ReturnValue;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State_2;               // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_CustomEvent_PlayerState;                    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EReadyRoomStatus                              CallFunc_GetReadyRoomStatus_ReturnValue;           // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_1;        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_2;        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CB[0x1];                                      // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGBSky* SkyActor)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x02CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName OldState, class FName NewState)> K2Node_CreateDelegate_OutputDelegate_5; // 0x02E0(0x0010)(ZeroConstructor, NoDestructor)
	class AGBCharacter*                           K2Node_CustomEvent_GBCharacter_2;                  // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CallingVolumeName_1;            // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CallingVolumeName;              // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVolumeDataFromOverlaps_MinLightLevel;  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVolumeDataFromOverlaps_SkylightFadeIntensity; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVolumeDataFromOverlaps_VolumeName;     // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVolumeDataFromOverlaps_FadeSpeed;      // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewMinLightLevelForCharacter;   // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_VolumeName_1;                   // 0x032C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_CustomEvent_GBCharacter_1;                  // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVolumeDataFromOverlaps_MinLightLevel_1; // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVolumeDataFromOverlaps_SkylightFadeIntensity_1; // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVolumeDataFromOverlaps_VolumeName_1;   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVolumeDataFromOverlaps_FadeSpeed_1;    // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetObjectFName_ReturnValue_1;             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameMode*                            K2Node_DynamicCast_AsGBGame_Mode;                  // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMinLightLevel_ReturnValue;             // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewSkylightAlphaIntensity;      // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_VolumeName;                     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameMode*                            K2Node_CustomEvent_GameMode;                       // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_CustomEvent_GBCharacter;                    // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetObjectFName_ReturnValue_2;             // 0x03D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameMode*                            K2Node_DynamicCast_AsGBGame_Mode_1;                // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3[0x5];                                      // 0x03F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller_3;        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x040D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40E[0x2];                                      // 0x040E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 K2Node_CustomEvent_SkyActor;                       // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetObjectFName_ReturnValue_3;             // 0x041C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0426(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume");
static_assert(sizeof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume) == 0x000428, "Wrong size on BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, EntryPoint) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBPlayer_State) == 0x000010, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBGame_State) == 0x000028, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsDedicatedServer_ReturnValue) == 0x000044, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerController_ReturnValue_1) == 0x000050, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBPlayer_State_1) == 0x000060, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBPlayer_State_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBPlayer_State_2) == 0x000080, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBPlayer_State_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetCharacter_ReturnValue) == 0x000090, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetObjectClass_ReturnValue) == 0x0000A0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetObjectFName_ReturnValue) == 0x0000A8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetObjectFName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetActorOfClass_ReturnValue) == 0x0000B0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OldState) == 0x0000B8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_NewState) == 0x0000C0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000C8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerController_ReturnValue_2) == 0x0000D0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x0000D8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_2) == 0x0000E1, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000E8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetGameState_ReturnValue_1) == 0x0000F0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_3) == 0x0000F8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBGame_State_1) == 0x000100, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBGame_State_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_5) == 0x000108, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValidClass_ReturnValue) == 0x000109, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CreateDelegate_OutputDelegate_1) == 0x00010C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00011C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CreateDelegate_OutputDelegate_2) == 0x000120, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OverlappedComponent_1) == 0x000130, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OtherActor_1) == 0x000138, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OtherComp_1) == 0x000140, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000148, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_bFromSweep) == 0x00014C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_SweepResult) == 0x000150, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsPawn) == 0x0001D8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_6) == 0x0001E0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OverlappedComponent) == 0x0001E8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OtherActor) == 0x0001F0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OtherComp) == 0x0001F8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_OtherBodyIndex) == 0x000200, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBCharacter) == 0x000208, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_7) == 0x000210, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsPawn_1) == 0x000218, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsPawn_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_8) == 0x000220, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_HasAuthority_ReturnValue) == 0x000221, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBCharacter_1) == 0x000228, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_9) == 0x000230, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerPawn_ReturnValue) == 0x000238, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000240, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_4) == 0x000241, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetSkyActor_ReturnValue) == 0x000248, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetSkyActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CreateDelegate_OutputDelegate_3) == 0x000250, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_Event_EndPlayReason) == 0x000260, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetGameState_ReturnValue_2) == 0x000268, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_5) == 0x000270, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBGame_State_2) == 0x000278, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBGame_State_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_10) == 0x000280, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValidClass_ReturnValue_1) == 0x000281, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_PlayerState) == 0x000288, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetReadyRoomStatus_ReturnValue) == 0x000290, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetReadyRoomStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerController_ReturnValue_3) == 0x000298, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBPlayer_Controller_1) == 0x0002A8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_11) == 0x0002B0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_6) == 0x0002B1, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerController_ReturnValue_4) == 0x0002B8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBPlayer_Controller_2) == 0x0002C0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_12) == 0x0002C8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_7) == 0x0002C9, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_HasAuthority_ReturnValue_1) == 0x0002CA, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002CC, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_HasAuthority_ReturnValue_2) == 0x0002DC, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002E0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_GBCharacter_2) == 0x0002F0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_GBCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_CallingVolumeName_1) == 0x0002F8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_CallingVolumeName_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_CallingVolumeName) == 0x000300, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_CallingVolumeName' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetVolumeDataFromOverlaps_MinLightLevel) == 0x000308, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetVolumeDataFromOverlaps_MinLightLevel' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetVolumeDataFromOverlaps_SkylightFadeIntensity) == 0x00030C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetVolumeDataFromOverlaps_SkylightFadeIntensity' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetVolumeDataFromOverlaps_VolumeName) == 0x000310, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetVolumeDataFromOverlaps_VolumeName' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetVolumeDataFromOverlaps_FadeSpeed) == 0x000318, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetVolumeDataFromOverlaps_FadeSpeed' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00031C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000320, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_NewMinLightLevelForCharacter) == 0x000328, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_NewMinLightLevelForCharacter' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_VolumeName_1) == 0x00032C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_VolumeName_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_GBCharacter_1) == 0x000338, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_GBCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetVolumeDataFromOverlaps_MinLightLevel_1) == 0x000340, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetVolumeDataFromOverlaps_MinLightLevel_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetVolumeDataFromOverlaps_SkylightFadeIntensity_1) == 0x000344, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetVolumeDataFromOverlaps_SkylightFadeIntensity_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetVolumeDataFromOverlaps_VolumeName_1) == 0x000348, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetVolumeDataFromOverlaps_VolumeName_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetVolumeDataFromOverlaps_FadeSpeed_1) == 0x000350, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetVolumeDataFromOverlaps_FadeSpeed_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_8) == 0x000354, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_FClamp_ReturnValue_1) == 0x000358, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00035C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetObjectFName_ReturnValue_1) == 0x000360, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetObjectFName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetGameMode_ReturnValue) == 0x000368, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBGame_Mode) == 0x000370, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBGame_Mode' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_13) == 0x000378, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetMinLightLevel_ReturnValue) == 0x00037C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetMinLightLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_9) == 0x000380, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_NewSkylightAlphaIntensity) == 0x000384, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_NewSkylightAlphaIntensity' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_VolumeName) == 0x000388, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_VolumeName' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000390, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Not_PreBool_ReturnValue) == 0x000391, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000392, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Not_PreBool_ReturnValue_1) == 0x000393, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_GameMode) == 0x000398, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_GameMode' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_GBCharacter) == 0x0003A0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_GBCharacter' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0003A8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_10) == 0x0003B0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0003B1, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetObjectName_ReturnValue) == 0x0003B8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Conv_StringToName_ReturnValue) == 0x0003C8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0003D0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetObjectFName_ReturnValue_2) == 0x0003D4, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetObjectFName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetGameMode_ReturnValue_1) == 0x0003E0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBGame_Mode_1) == 0x0003E8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBGame_Mode_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_14) == 0x0003F0, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsServer_ReturnValue) == 0x0003F1, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_11) == 0x0003F2, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetPlayerController_ReturnValue_5) == 0x0003F8, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_AsGBPlayer_Controller_3) == 0x000400, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_AsGBPlayer_Controller_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_DynamicCast_bSuccess_15) == 0x000408, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000409, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_12) == 0x00040A, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x00040B, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x00040C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Not_PreBool_ReturnValue_2) == 0x00040D, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, K2Node_CustomEvent_SkyActor) == 0x000410, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::K2Node_CustomEvent_SkyActor' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000418, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_Not_PreBool_ReturnValue_3) == 0x000419, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_GetObjectFName_ReturnValue_3) == 0x00041C, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_GetObjectFName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000424, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsServer_ReturnValue_1) == 0x000425, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume, CallFunc_IsValid_ReturnValue_13) == 0x000426, "Member 'BP_SkylightOverrideVolume_C_ExecuteUbergraph_BP_SkylightOverrideVolume::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.OnTimeOfDayChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_SkylightOverrideVolume_C_OnTimeOfDayChanged final
{
public:
	class AGBSky*                                 SkyActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_OnTimeOfDayChanged) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_OnTimeOfDayChanged");
static_assert(sizeof(BP_SkylightOverrideVolume_C_OnTimeOfDayChanged) == 0x000008, "Wrong size on BP_SkylightOverrideVolume_C_OnTimeOfDayChanged");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnTimeOfDayChanged, SkyActor) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_OnTimeOfDayChanged::SkyActor' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.OnCharacterEnteredPlayArea
// 0x0010 (0x0010 - 0x0000)
struct BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea final
{
public:
	class AGBGameMode*                            GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           GBCharacter;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea");
static_assert(sizeof(BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea) == 0x000010, "Wrong size on BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea, GameMode) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea::GameMode' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea, GBCharacter) == 0x000008, "Member 'BP_SkylightOverrideVolume_C_OnCharacterEnteredPlayArea::GBCharacter' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.ClientProcessNewSkylightAlphaIntensity
// 0x000C (0x000C - 0x0000)
struct BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity final
{
public:
	float                                         NewSkylightAlphaIntensity;                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VolumeName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity) == 0x000004, "Wrong alignment on BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity");
static_assert(sizeof(BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity) == 0x00000C, "Wrong size on BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity, NewSkylightAlphaIntensity) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity::NewSkylightAlphaIntensity' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity, VolumeName) == 0x000004, "Member 'BP_SkylightOverrideVolume_C_ClientProcessNewSkylightAlphaIntensity::VolumeName' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.ServerProcessNewMinLightLevel
// 0x0018 (0x0018 - 0x0000)
struct BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel final
{
public:
	float                                         NewMinLightLevelForCharacter;                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VolumeName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           GBCharacter;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel");
static_assert(sizeof(BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel) == 0x000018, "Wrong size on BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel, NewMinLightLevelForCharacter) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel::NewMinLightLevelForCharacter' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel, VolumeName) == 0x000004, "Member 'BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel::VolumeName' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel, GBCharacter) == 0x000010, "Member 'BP_SkylightOverrideVolume_C_ServerProcessNewMinLightLevel::GBCharacter' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.ClientCheckOverlaps
// 0x0008 (0x0008 - 0x0000)
struct BP_SkylightOverrideVolume_C_ClientCheckOverlaps final
{
public:
	class FName                                   CallingVolumeName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_ClientCheckOverlaps) == 0x000004, "Wrong alignment on BP_SkylightOverrideVolume_C_ClientCheckOverlaps");
static_assert(sizeof(BP_SkylightOverrideVolume_C_ClientCheckOverlaps) == 0x000008, "Wrong size on BP_SkylightOverrideVolume_C_ClientCheckOverlaps");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ClientCheckOverlaps, CallingVolumeName) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_ClientCheckOverlaps::CallingVolumeName' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.ServerCheckOverlaps
// 0x0010 (0x0010 - 0x0000)
struct BP_SkylightOverrideVolume_C_ServerCheckOverlaps final
{
public:
	class AGBCharacter*                           GBCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallingVolumeName;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_ServerCheckOverlaps) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_ServerCheckOverlaps");
static_assert(sizeof(BP_SkylightOverrideVolume_C_ServerCheckOverlaps) == 0x000010, "Wrong size on BP_SkylightOverrideVolume_C_ServerCheckOverlaps");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ServerCheckOverlaps, GBCharacter) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_ServerCheckOverlaps::GBCharacter' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ServerCheckOverlaps, CallingVolumeName) == 0x000008, "Member 'BP_SkylightOverrideVolume_C_ServerCheckOverlaps::CallingVolumeName' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.OnReadyRoomStatusChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_SkylightOverrideVolume_C_OnReadyRoomStatusChanged final
{
public:
	class AGBPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_OnReadyRoomStatusChanged) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_OnReadyRoomStatusChanged");
static_assert(sizeof(BP_SkylightOverrideVolume_C_OnReadyRoomStatusChanged) == 0x000008, "Wrong size on BP_SkylightOverrideVolume_C_OnReadyRoomStatusChanged");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnReadyRoomStatusChanged, PlayerState) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_OnReadyRoomStatusChanged::PlayerState' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SkylightOverrideVolume_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SkylightOverrideVolume_C_ReceiveEndPlay");
static_assert(sizeof(BP_SkylightOverrideVolume_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SkylightOverrideVolume_C_ReceiveEndPlay");
static_assert(offsetof(BP_SkylightOverrideVolume_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.OnComponentEndOverlap_Event_0
// 0x0020 (0x0020 - 0x0000)
struct BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0");
static_assert(sizeof(BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0) == 0x000020, "Wrong size on BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0, OverlappedComponent) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0, OtherActor) == 0x000008, "Member 'BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0, OtherComp) == 0x000010, "Member 'BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0, OtherBodyIndex) == 0x000018, "Member 'BP_SkylightOverrideVolume_C_OnComponentEndOverlap_Event_0::OtherBodyIndex' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.OnComponentBeginOverlap_Event_0
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0");
static_assert(sizeof(BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0) == 0x0000A8, "Wrong size on BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0, OverlappedComponent) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0, OtherActor) == 0x000008, "Member 'BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0, OtherComp) == 0x000010, "Member 'BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0, OtherBodyIndex) == 0x000018, "Member 'BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0, bFromSweep) == 0x00001C, "Member 'BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0, SweepResult) == 0x000020, "Member 'BP_SkylightOverrideVolume_C_OnComponentBeginOverlap_Event_0::SweepResult' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.OnPlayerControllerStateChanged_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0 final
{
public:
	class FName                                   OldState;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewState;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0) == 0x000004, "Wrong alignment on BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0");
static_assert(sizeof(BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0) == 0x000010, "Wrong size on BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0, OldState) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0::OldState' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0, NewState) == 0x000008, "Member 'BP_SkylightOverrideVolume_C_OnPlayerControllerStateChanged_Event_0::NewState' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct BP_SkylightOverrideVolume_C_UserConstructionScript final
{
public:
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUnscaledBoxExtent_ReturnValue;         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_UserConstructionScript");
static_assert(sizeof(BP_SkylightOverrideVolume_C_UserConstructionScript) == 0x000040, "Wrong size on BP_SkylightOverrideVolume_C_UserConstructionScript");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, K2Node_DynamicCast_AsBox_Collision) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, CallFunc_GetUnscaledBoxExtent_ReturnValue) == 0x00000C, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::CallFunc_GetUnscaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000018, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x00001C, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000020, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_SkylightOverrideVolume_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_SkylightOverrideVolume.BP_SkylightOverrideVolume_C.GetVolumeDataFromOverlaps
// 0x00E0 (0x00E0 - 0x0000)
struct BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinLightLevel_0;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkylightFadeIntensity;                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VolumeName;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeSpeed_0;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentTimeSpanTag;                                // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeSpeedFound;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowerHemisphereDesaturationFound;                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkylightFadeIntensityFound;                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OverrideVolumeNameFound;                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinLightLevelFound;                                // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SkylightOverrideVolume_C*           K2Node_DynamicCast_AsBP_Skylight_Override_Volume;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTimeSpanTag_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps) == 0x000008, "Wrong alignment on BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps");
static_assert(sizeof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps) == 0x0000E0, "Wrong size on BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, Actor) == 0x000000, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::Actor' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, MinLightLevel_0) == 0x000008, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::MinLightLevel_0' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, SkylightFadeIntensity) == 0x00000C, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::SkylightFadeIntensity' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, VolumeName) == 0x000010, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::VolumeName' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, FadeSpeed_0) == 0x000018, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::FadeSpeed_0' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CurrentTimeSpanTag) == 0x00001C, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CurrentTimeSpanTag' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, FadeSpeedFound) == 0x000024, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::FadeSpeedFound' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, LowerHemisphereDesaturationFound) == 0x000028, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::LowerHemisphereDesaturationFound' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, SkylightFadeIntensityFound) == 0x00002C, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::SkylightFadeIntensityFound' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, OverrideVolumeNameFound) == 0x000030, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::OverrideVolumeNameFound' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, MinLightLevelFound) == 0x000038, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::MinLightLevelFound' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000040, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, K2Node_DynamicCast_AsBP_Skylight_Override_Volume) == 0x000070, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::K2Node_DynamicCast_AsBP_Skylight_Override_Volume' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_GetObjectName_ReturnValue) == 0x000080, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Conv_StringToName_ReturnValue) == 0x000090, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Map_Find_Value) == 0x000098, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Map_Find_ReturnValue) == 0x000099, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00009B, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_BooleanOR_ReturnValue) == 0x00009C, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00009D, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_GetObjectName_ReturnValue_1) == 0x0000A0, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_IsValid_ReturnValue_1) == 0x0000CC, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_GetTimeSpanTag_ReturnValue) == 0x0000D0, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_GetTimeSpanTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000D9, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps, CallFunc_BooleanOR_ReturnValue_1) == 0x0000DA, "Member 'BP_SkylightOverrideVolume_C_GetVolumeDataFromOverlaps::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

}

