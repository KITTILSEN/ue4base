#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightZoneController_Generator

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_LightZoneController_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightZoneController_Generator.BP_LightZoneController_Generator_C
// 0x0028 (0x0328 - 0x0300)
class ABP_LightZoneController_Generator_C final : public ABP_LightZoneController_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LightZoneController_Generator_C; // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AkEngineComponent;                                 // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratorSoundId;                                  // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          StartGeneratorEvent;                               // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          StopGeneratorEvent;                                // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LightZoneController_Generator(int32 EntryPoint);
	void StopSounds();
	void StartSounds();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightZoneController_Generator_C">();
	}
	static class ABP_LightZoneController_Generator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightZoneController_Generator_C>();
	}
};
static_assert(alignof(ABP_LightZoneController_Generator_C) == 0x000008, "Wrong alignment on ABP_LightZoneController_Generator_C");
static_assert(sizeof(ABP_LightZoneController_Generator_C) == 0x000328, "Wrong size on ABP_LightZoneController_Generator_C");
static_assert(offsetof(ABP_LightZoneController_Generator_C, UberGraphFrame_BP_LightZoneController_Generator_C) == 0x000300, "Member 'ABP_LightZoneController_Generator_C::UberGraphFrame_BP_LightZoneController_Generator_C' has a wrong offset!");
static_assert(offsetof(ABP_LightZoneController_Generator_C, AkEngineComponent) == 0x000308, "Member 'ABP_LightZoneController_Generator_C::AkEngineComponent' has a wrong offset!");
static_assert(offsetof(ABP_LightZoneController_Generator_C, GeneratorSoundId) == 0x000310, "Member 'ABP_LightZoneController_Generator_C::GeneratorSoundId' has a wrong offset!");
static_assert(offsetof(ABP_LightZoneController_Generator_C, StartGeneratorEvent) == 0x000318, "Member 'ABP_LightZoneController_Generator_C::StartGeneratorEvent' has a wrong offset!");
static_assert(offsetof(ABP_LightZoneController_Generator_C, StopGeneratorEvent) == 0x000320, "Member 'ABP_LightZoneController_Generator_C::StopGeneratorEvent' has a wrong offset!");

}

