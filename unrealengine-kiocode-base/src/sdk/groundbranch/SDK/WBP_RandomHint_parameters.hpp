#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RandomHint

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_RandomHint.WBP_RandomHint_C.ExecuteUbergraph_WBP_RandomHint
// 0x0030 (0x0030 - 0x0000)
struct WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_UseHint_Output;                           // 0x0010(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint) == 0x000008, "Wrong alignment on WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint");
static_assert(sizeof(WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint) == 0x000030, "Wrong size on WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint");
static_assert(offsetof(WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint, EntryPoint) == 0x000000, "Member 'WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint, CallFunc_UseHint_Output) == 0x000010, "Member 'WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint::CallFunc_UseHint_Output' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'WBP_RandomHint_C_ExecuteUbergraph_WBP_RandomHint::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_RandomHint.WBP_RandomHint_C.UseHint
// 0x0040 (0x0040 - 0x0000)
struct WBP_RandomHint_C_UseHint final
{
public:
	class FText                                   Output;                                            // 0x0000(0x0018)(Parm, OutParm)
	int32                                         HintIndex;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RandomHint_C_UseHint) == 0x000008, "Wrong alignment on WBP_RandomHint_C_UseHint");
static_assert(sizeof(WBP_RandomHint_C_UseHint) == 0x000040, "Wrong size on WBP_RandomHint_C_UseHint");
static_assert(offsetof(WBP_RandomHint_C_UseHint, Output) == 0x000000, "Member 'WBP_RandomHint_C_UseHint::Output' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, HintIndex) == 0x000018, "Member 'WBP_RandomHint_C_UseHint::HintIndex' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, Temp_bool_Variable) == 0x00001C, "Member 'WBP_RandomHint_C_UseHint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, Temp_int_Variable) == 0x000020, "Member 'WBP_RandomHint_C_UseHint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_RandomHint_C_UseHint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_RandomHint_C_UseHint::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'WBP_RandomHint_C_UseHint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'WBP_RandomHint_C_UseHint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'WBP_RandomHint_C_UseHint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'WBP_RandomHint_C_UseHint::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_Not_PreBool_ReturnValue_1) == 0x000031, "Member 'WBP_RandomHint_C_UseHint::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WBP_RandomHint_C_UseHint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'WBP_RandomHint_C_UseHint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_UseHint, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00003C, "Member 'WBP_RandomHint_C_UseHint::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function WBP_RandomHint.WBP_RandomHint_C.LoadUsedHints
// 0x0068 (0x0068 - 0x0000)
struct WBP_RandomHint_C_LoadUsedHints final
{
public:
	int32                                         LastUsed;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Config_GetArray_bValid;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Config_GetArray_ReturnValue;              // 0x0010(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_RandomHint_C_LoadUsedHints) == 0x000008, "Wrong alignment on WBP_RandomHint_C_LoadUsedHints");
static_assert(sizeof(WBP_RandomHint_C_LoadUsedHints) == 0x000068, "Wrong size on WBP_RandomHint_C_LoadUsedHints");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, LastUsed) == 0x000000, "Member 'WBP_RandomHint_C_LoadUsedHints::LastUsed' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_RandomHint_C_LoadUsedHints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Config_GetArray_bValid) == 0x000008, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Config_GetArray_bValid' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Config_GetArray_ReturnValue) == 0x000010, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Config_GetArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Conv_StringToInt_ReturnValue) == 0x000034, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_RandomHint_C_LoadUsedHints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Array_Length_ReturnValue_2) == 0x000054, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Array_Length_ReturnValue_3) == 0x000058, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_Array_Add_ReturnValue_1) == 0x00005C, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_LoadUsedHints, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'WBP_RandomHint_C_LoadUsedHints::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_RandomHint.WBP_RandomHint_C.SaveUsedHint
// 0x0040 (0x0040 - 0x0000)
struct WBP_RandomHint_C_SaveUsedHint final
{
public:
	TArray<class FString>                         StringArray;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RandomHint_C_SaveUsedHint) == 0x000008, "Wrong alignment on WBP_RandomHint_C_SaveUsedHint");
static_assert(sizeof(WBP_RandomHint_C_SaveUsedHint) == 0x000040, "Wrong size on WBP_RandomHint_C_SaveUsedHint");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, StringArray) == 0x000000, "Member 'WBP_RandomHint_C_SaveUsedHint::StringArray' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_RandomHint_C_SaveUsedHint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_RandomHint_C_SaveUsedHint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_RandomHint_C_SaveUsedHint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_RandomHint_C_SaveUsedHint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_RandomHint_C_SaveUsedHint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WBP_RandomHint_C_SaveUsedHint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'WBP_RandomHint_C_SaveUsedHint::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RandomHint_C_SaveUsedHint, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'WBP_RandomHint_C_SaveUsedHint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

