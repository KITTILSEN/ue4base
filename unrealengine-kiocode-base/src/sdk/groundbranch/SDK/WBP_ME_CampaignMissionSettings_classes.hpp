#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ME_CampaignMissionSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ME_CampaignMissionSettings.WBP_ME_CampaignMissionSettings_C
// 0x01C8 (0x0428 - 0x0260)
class UWBP_ME_CampaignMissionSettings_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_MapMarkers;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_PickMissionImages;                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_UseCurrentTimeAndDate;                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_HotspotCodename;                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_InitialTCount;                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_MissionSequenceNumber;             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MapMarkerCount;                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionBriefingFull;                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionBriefingLookup;                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionImageCount;                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionNameFull;                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionNameLookup;                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionTypeFull;                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionTypeLookup;                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_TimeString;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const class FString& Filename, const class FString& Variant, const class FString& Tags, float Version, const class FString& ScreenshotNames, const class FString& Author)> OnSaveAs; // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   PickScreenshotsMessage;                            // 0x02F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   PickScreenshotsTitle;                              // 0x0308(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NoScreenshotsFoundTitle;                           // 0x0320(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NoScreenshotsFoundMessage;                         // 0x0338(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   HotspotCodename;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissionSequenceNumber;                             // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CampaignMissionNameToken;                          // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 CampaignMissionTypeToken;                          // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 CampaignMissionBriefingToken;                      // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   MissionStringTableId;                              // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   MissionNameNotFoundText;                           // 0x0398(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   InvalidHotspotOrSequenceNumberText;                // 0x03B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   PickMissionImagesDialogTitle;                      // 0x03C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGBMissionImage>                WorkingMissionImageList;                           // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGBMapMarker>                   WorkingMapMarkerList;                              // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 CampaignTimeDateString;                            // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FText>                           Months;                                            // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CampaignTCount;                                    // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void SetMissionDataProperties(class UGBMissionData* Target);
	void OnPostRunMissionScript_Event_0(class AGBGameMode* GameMode);
	void BindOnPostRunMissionScript();
	void BndEvt__WBP_ME_CampaignMissionSettings_EditableTextBox_HotspotCodename_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void UpdateHotspotCodenameAndSequenceText();
	void BndEvt__WBP_ME_CampaignMissionSettings_EditableTextBox_MissionSequenceNumber_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void UpdateMissionTextLookups();
	void BndEvt__WBP_ME_CampaignMissionSettings_Button_PickMissionImages_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void UpdateMissionImageAndMapMarkerCounts();
	void OnNewMissionImagesPicked(TArray<struct FGBMissionImage>& NewMissionImageList);
	void BndEvt__WBP_ME_CampaignMissionSettings_Button_MapMarkers_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void OnSetNewMapMarkers(TArray<struct FGBMapMarker>& NewMapMarkers);
	void BndEvt__WBP_ME_CampaignMissionSettings_Button_UseCurrentTimeAndDate_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void UpdateTimeDateDisplay();
	void BndEvt__WBP_ME_CampaignMissionSettings_EditableTextBox_InitialTCount_K2Node_ComponentBoundEvent_5_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void UpdateTCountText();
	void ExecuteUbergraph_WBP_ME_CampaignMissionSettings(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ME_CampaignMissionSettings_C">();
	}
	static class UWBP_ME_CampaignMissionSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ME_CampaignMissionSettings_C>();
	}
};
static_assert(alignof(UWBP_ME_CampaignMissionSettings_C) == 0x000008, "Wrong alignment on UWBP_ME_CampaignMissionSettings_C");
static_assert(sizeof(UWBP_ME_CampaignMissionSettings_C) == 0x000428, "Wrong size on UWBP_ME_CampaignMissionSettings_C");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, UberGraphFrame) == 0x000260, "Member 'UWBP_ME_CampaignMissionSettings_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, Button_MapMarkers) == 0x000268, "Member 'UWBP_ME_CampaignMissionSettings_C::Button_MapMarkers' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, Button_PickMissionImages) == 0x000270, "Member 'UWBP_ME_CampaignMissionSettings_C::Button_PickMissionImages' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, Button_UseCurrentTimeAndDate) == 0x000278, "Member 'UWBP_ME_CampaignMissionSettings_C::Button_UseCurrentTimeAndDate' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, EditableTextBox_HotspotCodename) == 0x000280, "Member 'UWBP_ME_CampaignMissionSettings_C::EditableTextBox_HotspotCodename' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, EditableTextBox_InitialTCount) == 0x000288, "Member 'UWBP_ME_CampaignMissionSettings_C::EditableTextBox_InitialTCount' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, EditableTextBox_MissionSequenceNumber) == 0x000290, "Member 'UWBP_ME_CampaignMissionSettings_C::EditableTextBox_MissionSequenceNumber' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_MapMarkerCount) == 0x000298, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_MapMarkerCount' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_MissionBriefingFull) == 0x0002A0, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_MissionBriefingFull' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_MissionBriefingLookup) == 0x0002A8, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_MissionBriefingLookup' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_MissionImageCount) == 0x0002B0, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_MissionImageCount' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_MissionNameFull) == 0x0002B8, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_MissionNameFull' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_MissionNameLookup) == 0x0002C0, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_MissionNameLookup' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_MissionTypeFull) == 0x0002C8, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_MissionTypeFull' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_MissionTypeLookup) == 0x0002D0, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_MissionTypeLookup' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, TextBlock_TimeString) == 0x0002D8, "Member 'UWBP_ME_CampaignMissionSettings_C::TextBlock_TimeString' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, OnSaveAs) == 0x0002E0, "Member 'UWBP_ME_CampaignMissionSettings_C::OnSaveAs' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, PickScreenshotsMessage) == 0x0002F0, "Member 'UWBP_ME_CampaignMissionSettings_C::PickScreenshotsMessage' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, PickScreenshotsTitle) == 0x000308, "Member 'UWBP_ME_CampaignMissionSettings_C::PickScreenshotsTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, NoScreenshotsFoundTitle) == 0x000320, "Member 'UWBP_ME_CampaignMissionSettings_C::NoScreenshotsFoundTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, NoScreenshotsFoundMessage) == 0x000338, "Member 'UWBP_ME_CampaignMissionSettings_C::NoScreenshotsFoundMessage' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, HotspotCodename) == 0x000350, "Member 'UWBP_ME_CampaignMissionSettings_C::HotspotCodename' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, MissionSequenceNumber) == 0x000358, "Member 'UWBP_ME_CampaignMissionSettings_C::MissionSequenceNumber' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, CampaignMissionNameToken) == 0x000360, "Member 'UWBP_ME_CampaignMissionSettings_C::CampaignMissionNameToken' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, CampaignMissionTypeToken) == 0x000370, "Member 'UWBP_ME_CampaignMissionSettings_C::CampaignMissionTypeToken' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, CampaignMissionBriefingToken) == 0x000380, "Member 'UWBP_ME_CampaignMissionSettings_C::CampaignMissionBriefingToken' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, MissionStringTableId) == 0x000390, "Member 'UWBP_ME_CampaignMissionSettings_C::MissionStringTableId' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, MissionNameNotFoundText) == 0x000398, "Member 'UWBP_ME_CampaignMissionSettings_C::MissionNameNotFoundText' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, InvalidHotspotOrSequenceNumberText) == 0x0003B0, "Member 'UWBP_ME_CampaignMissionSettings_C::InvalidHotspotOrSequenceNumberText' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, PickMissionImagesDialogTitle) == 0x0003C8, "Member 'UWBP_ME_CampaignMissionSettings_C::PickMissionImagesDialogTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, WorkingMissionImageList) == 0x0003E0, "Member 'UWBP_ME_CampaignMissionSettings_C::WorkingMissionImageList' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, WorkingMapMarkerList) == 0x0003F0, "Member 'UWBP_ME_CampaignMissionSettings_C::WorkingMapMarkerList' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, CampaignTimeDateString) == 0x000400, "Member 'UWBP_ME_CampaignMissionSettings_C::CampaignTimeDateString' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, Months) == 0x000410, "Member 'UWBP_ME_CampaignMissionSettings_C::Months' has a wrong offset!");
static_assert(offsetof(UWBP_ME_CampaignMissionSettings_C, CampaignTCount) == 0x000420, "Member 'UWBP_ME_CampaignMissionSettings_C::CampaignTCount' has a wrong offset!");

}

