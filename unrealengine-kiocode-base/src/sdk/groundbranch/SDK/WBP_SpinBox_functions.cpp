#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpinBox

#include "Basic.hpp"

#include "WBP_SpinBox_classes.hpp"
#include "WBP_SpinBox_parameters.hpp"


namespace SDK
{

// Function WBP_SpinBox.WBP_SpinBox_C.ExecuteUbergraph_WBP_SpinBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpinBox_C::ExecuteUbergraph_WBP_SpinBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "ExecuteUbergraph_WBP_SpinBox");

	Params::WBP_SpinBox_C_ExecuteUbergraph_WBP_SpinBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpinBox.WBP_SpinBox_C.BndEvt__WBP_SpinBox_Button_Decrease_K2Node_ComponentBoundEvent_6_OnButtonReleasedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_SpinBox_C::BndEvt__WBP_SpinBox_Button_Decrease_K2Node_ComponentBoundEvent_6_OnButtonReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "BndEvt__WBP_SpinBox_Button_Decrease_K2Node_ComponentBoundEvent_6_OnButtonReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.BndEvt__WBP_SpinBox_Button_Increase_K2Node_ComponentBoundEvent_5_OnButtonReleasedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_SpinBox_C::BndEvt__WBP_SpinBox_Button_Increase_K2Node_ComponentBoundEvent_5_OnButtonReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "BndEvt__WBP_SpinBox_Button_Increase_K2Node_ComponentBoundEvent_5_OnButtonReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.StopButtonPressTimer
// (BlueprintCallable, BlueprintEvent)

void UWBP_SpinBox_C::StopButtonPressTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "StopButtonPressTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.ButtonPressTimer
// (BlueprintCallable, BlueprintEvent)

void UWBP_SpinBox_C::ButtonPressTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "ButtonPressTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.StartButtonPressTimer
// (BlueprintCallable, BlueprintEvent)

void UWBP_SpinBox_C::StartButtonPressTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "StartButtonPressTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.BndEvt__WBP_SpinBox_Button_Increase_K2Node_ComponentBoundEvent_4_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_SpinBox_C::BndEvt__WBP_SpinBox_Button_Increase_K2Node_ComponentBoundEvent_4_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "BndEvt__WBP_SpinBox_Button_Increase_K2Node_ComponentBoundEvent_4_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.IncreaseNumber
// (BlueprintCallable, BlueprintEvent)

void UWBP_SpinBox_C::IncreaseNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "IncreaseNumber");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.DecreaseNumber
// (BlueprintCallable, BlueprintEvent)

void UWBP_SpinBox_C::DecreaseNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "DecreaseNumber");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.BndEvt__WBP_SpinBox_Button_Decrease_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_SpinBox_C::BndEvt__WBP_SpinBox_Button_Decrease_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "BndEvt__WBP_SpinBox_Button_Decrease_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpinBox.WBP_SpinBox_C.BndEvt__EditableTextBox_2_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_SpinBox_C::BndEvt__EditableTextBox_2_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "BndEvt__EditableTextBox_2_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");

	Params::WBP_SpinBox_C_BndEvt__EditableTextBox_2_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpinBox.WBP_SpinBox_C.BndEvt__EditableTextBox_2_K2Node_ComponentBoundEvent_65_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpinBox_C::BndEvt__EditableTextBox_2_K2Node_ComponentBoundEvent_65_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "BndEvt__EditableTextBox_2_K2Node_ComponentBoundEvent_65_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_SpinBox_C_BndEvt__EditableTextBox_2_K2Node_ComponentBoundEvent_65_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpinBox.WBP_SpinBox_C.GetText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWBP_SpinBox_C::GetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "GetText");

	Params::WBP_SpinBox_C_GetText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SpinBox.WBP_SpinBox_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_SpinBox_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "OnMouseButtonDown");

	Params::WBP_SpinBox_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SpinBox.WBP_SpinBox_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_SpinBox_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "OnMouseButtonUp");

	Params::WBP_SpinBox_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SpinBox.WBP_SpinBox_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_SpinBox_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "OnMouseMove");

	Params::WBP_SpinBox_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SpinBox.WBP_SpinBox_C.SetValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpinBox_C::SetValue(float Value_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "SetValue");

	Params::WBP_SpinBox_C_SetValue Parms{};

	Parms.Value_0 = Value_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpinBox.WBP_SpinBox_C.GetValue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpinBox_C::GetValue(float* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "GetValue");

	Params::WBP_SpinBox_C_GetValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function WBP_SpinBox.WBP_SpinBox_C.CheckForValueChange
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SpinBox_C::CheckForValueChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpinBox_C", "CheckForValueChange");

	UObject::ProcessEvent(Func, nullptr);
}

}

