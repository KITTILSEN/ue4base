#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ObjectiveMarker_Hotspot

#include "Basic.hpp"

#include "WBP_ObjectiveMarker_Hotspot_classes.hpp"
#include "WBP_ObjectiveMarker_Hotspot_parameters.hpp"


namespace SDK
{

// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ObjectiveMarker_Hotspot_C::ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ObjectiveMarker_Hotspot_C", "ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot");

	Params::WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ObjectiveMarker_Hotspot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ObjectiveMarker_Hotspot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.CalcPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutCanvasPosition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ObjectiveMarker_Hotspot_C::CalcPosition(const struct FVector& InLocation, struct FVector2D* OutCanvasPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ObjectiveMarker_Hotspot_C", "CalcPosition");

	Params::WBP_ObjectiveMarker_Hotspot_C_CalcPosition Parms{};

	Parms.InLocation = std::move(InLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutCanvasPosition != nullptr)
		*OutCanvasPosition = std::move(Parms.OutCanvasPosition);
}


// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.GetBackground_Border
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateBrush UWBP_ObjectiveMarker_Hotspot_C::GetBackground_Border()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ObjectiveMarker_Hotspot_C", "GetBackground_Border");

	Params::WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.ParseObjectiveNameForModifier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ObjectiveName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          CleanObjectiveName                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class UTexture2D**                      ModifierSprite                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   DisplayStaircaseIcon                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   DisplayLevelNumberText                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  LevelNumber                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  ModifierSpriteRotation                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ObjectiveMarker_Hotspot_C::ParseObjectiveNameForModifier(const class FString& ObjectiveName, class FString* CleanObjectiveName, class UTexture2D** ModifierSprite, bool* DisplayStaircaseIcon, bool* DisplayLevelNumberText, int32* LevelNumber, float* ModifierSpriteRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ObjectiveMarker_Hotspot_C", "ParseObjectiveNameForModifier");

	Params::WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier Parms{};

	Parms.ObjectiveName = std::move(ObjectiveName);

	UObject::ProcessEvent(Func, &Parms);

	if (CleanObjectiveName != nullptr)
		*CleanObjectiveName = std::move(Parms.CleanObjectiveName);

	if (ModifierSprite != nullptr)
		*ModifierSprite = Parms.ModifierSprite;

	if (DisplayStaircaseIcon != nullptr)
		*DisplayStaircaseIcon = Parms.DisplayStaircaseIcon;

	if (DisplayLevelNumberText != nullptr)
		*DisplayLevelNumberText = Parms.DisplayLevelNumberText;

	if (LevelNumber != nullptr)
		*LevelNumber = Parms.LevelNumber;

	if (ModifierSpriteRotation != nullptr)
		*ModifierSpriteRotation = Parms.ModifierSpriteRotation;
}


// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.GetHotspotMatchingHotspotName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             HotspotName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGBAIHotspot**                    HotspotRef                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ObjectiveMarker_Hotspot_C::GetHotspotMatchingHotspotName(class FName HotspotName, class AGBAIHotspot** HotspotRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ObjectiveMarker_Hotspot_C", "GetHotspotMatchingHotspotName");

	Params::WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName Parms{};

	Parms.HotspotName = HotspotName;

	UObject::ProcessEvent(Func, &Parms);

	if (HotspotRef != nullptr)
		*HotspotRef = Parms.HotspotRef;
}

}

