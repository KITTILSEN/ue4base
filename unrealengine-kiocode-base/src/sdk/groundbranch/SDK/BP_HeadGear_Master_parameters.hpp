#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HeadGear_Master

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.ExecuteUbergraph_BP_HeadGear_Master
// 0x0130 (0x0130 - 0x0000)
struct BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTagContainer& InCosmeticTags)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_Event_NewParentCharacter;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_Event_OldParentCharacter;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_OldSocketName;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DroppedCosmetic_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_Event_Character_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUICharacter_ReturnValue;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_Event_Character;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUICharacter_ReturnValue_1;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_CustomEvent_Character;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_InCosmeticTags;                 // 0x00C8(0x0020)(ConstParm)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGBCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_1;           // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetCosmeticTags_ReturnValue;              // 0x0100(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master) == 0x000010, "Wrong alignment on BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master");
static_assert(sizeof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master) == 0x000130, "Wrong size on BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, EntryPoint) == 0x000000, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_RandomFloatInRange_ReturnValue) == 0x000014, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_Event_NewParentCharacter) == 0x000018, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_Event_NewParentCharacter' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_Event_OldParentCharacter) == 0x000020, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_Event_OldParentCharacter' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_Event_OldSocketName) == 0x000028, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_Event_OldSocketName' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_GetUpVector_ReturnValue) == 0x000070, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_Event_Character_1) == 0x000080, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_Event_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_IsUICharacter_ReturnValue) == 0x000094, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_IsUICharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_Event_Character) == 0x000098, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_IsUICharacter_ReturnValue_1) == 0x0000A1, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_IsUICharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_CustomEvent_Character) == 0x0000A8, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_GetMaterial_ReturnValue) == 0x0000B0, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C0, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_CustomEvent_InCosmeticTags) == 0x0000C8, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_CustomEvent_InCosmeticTags' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E8, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_HasTag_ReturnValue) == 0x0000E9, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0000EA, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000EC, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_GetCosmeticTags_ReturnValue) == 0x000100, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_GetCosmeticTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master, CallFunc_HasTag_ReturnValue_1) == 0x000120, "Member 'BP_HeadGear_Master_C_ExecuteUbergraph_BP_HeadGear_Master::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.OnCosmeticTagsUpdated_Event_0
// 0x0020 (0x0020 - 0x0000)
struct BP_HeadGear_Master_C_OnCosmeticTagsUpdated_Event_0 final
{
public:
	struct FGameplayTagContainer                  InCosmeticTags;                                    // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HeadGear_Master_C_OnCosmeticTagsUpdated_Event_0) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_OnCosmeticTagsUpdated_Event_0");
static_assert(sizeof(BP_HeadGear_Master_C_OnCosmeticTagsUpdated_Event_0) == 0x000020, "Wrong size on BP_HeadGear_Master_C_OnCosmeticTagsUpdated_Event_0");
static_assert(offsetof(BP_HeadGear_Master_C_OnCosmeticTagsUpdated_Event_0, InCosmeticTags) == 0x000000, "Member 'BP_HeadGear_Master_C_OnCosmeticTagsUpdated_Event_0::InCosmeticTags' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.OnDeathStarted_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_HeadGear_Master_C_OnDeathStarted_Event_0 final
{
public:
	class AGBCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeadGear_Master_C_OnDeathStarted_Event_0) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_OnDeathStarted_Event_0");
static_assert(sizeof(BP_HeadGear_Master_C_OnDeathStarted_Event_0) == 0x000008, "Wrong size on BP_HeadGear_Master_C_OnDeathStarted_Event_0");
static_assert(offsetof(BP_HeadGear_Master_C_OnDeathStarted_Event_0, Character) == 0x000000, "Member 'BP_HeadGear_Master_C_OnDeathStarted_Event_0::Character' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.OnAddedToInventoryEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_HeadGear_Master_C_OnAddedToInventoryEvent final
{
public:
	class AGBCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeadGear_Master_C_OnAddedToInventoryEvent) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_OnAddedToInventoryEvent");
static_assert(sizeof(BP_HeadGear_Master_C_OnAddedToInventoryEvent) == 0x000008, "Wrong size on BP_HeadGear_Master_C_OnAddedToInventoryEvent");
static_assert(offsetof(BP_HeadGear_Master_C_OnAddedToInventoryEvent, Character) == 0x000000, "Member 'BP_HeadGear_Master_C_OnAddedToInventoryEvent::Character' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.OnRemovedFromInventoryEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_HeadGear_Master_C_OnRemovedFromInventoryEvent final
{
public:
	class AGBCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeadGear_Master_C_OnRemovedFromInventoryEvent) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_OnRemovedFromInventoryEvent");
static_assert(sizeof(BP_HeadGear_Master_C_OnRemovedFromInventoryEvent) == 0x000008, "Wrong size on BP_HeadGear_Master_C_OnRemovedFromInventoryEvent");
static_assert(offsetof(BP_HeadGear_Master_C_OnRemovedFromInventoryEvent, Character) == 0x000000, "Member 'BP_HeadGear_Master_C_OnRemovedFromInventoryEvent::Character' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.OnRemovedFromCharacter
// 0x0010 (0x0010 - 0x0000)
struct BP_HeadGear_Master_C_OnRemovedFromCharacter final
{
public:
	class AGBCharacter*                           OldParentCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OldSocketName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeadGear_Master_C_OnRemovedFromCharacter) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_OnRemovedFromCharacter");
static_assert(sizeof(BP_HeadGear_Master_C_OnRemovedFromCharacter) == 0x000010, "Wrong size on BP_HeadGear_Master_C_OnRemovedFromCharacter");
static_assert(offsetof(BP_HeadGear_Master_C_OnRemovedFromCharacter, OldParentCharacter) == 0x000000, "Member 'BP_HeadGear_Master_C_OnRemovedFromCharacter::OldParentCharacter' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_OnRemovedFromCharacter, OldSocketName) == 0x000008, "Member 'BP_HeadGear_Master_C_OnRemovedFromCharacter::OldSocketName' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.OnAddedToCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_HeadGear_Master_C_OnAddedToCharacter final
{
public:
	class AGBCharacter*                           NewParentCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeadGear_Master_C_OnAddedToCharacter) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_OnAddedToCharacter");
static_assert(sizeof(BP_HeadGear_Master_C_OnAddedToCharacter) == 0x000008, "Wrong size on BP_HeadGear_Master_C_OnAddedToCharacter");
static_assert(offsetof(BP_HeadGear_Master_C_OnAddedToCharacter, NewParentCharacter) == 0x000000, "Member 'BP_HeadGear_Master_C_OnAddedToCharacter::NewParentCharacter' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_HeadGear_Master_C_UserConstructionScript final
{
public:
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HeadGear_Master_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_UserConstructionScript");
static_assert(sizeof(BP_HeadGear_Master_C_UserConstructionScript) == 0x000018, "Wrong size on BP_HeadGear_Master_C_UserConstructionScript");
static_assert(offsetof(BP_HeadGear_Master_C_UserConstructionScript, CallFunc_GetChildComponent_ReturnValue) == 0x000000, "Member 'BP_HeadGear_Master_C_UserConstructionScript::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_UserConstructionScript, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000008, "Member 'BP_HeadGear_Master_C_UserConstructionScript::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HeadGear_Master_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.DecodeKit
// 0x0038 (0x0038 - 0x0000)
struct BP_HeadGear_Master_C_DecodeKit final
{
public:
	class UVaRestJsonObject*                      ItemAsJson;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DecodedOwner;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             DecodedParentItem;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ProfileName;                                       // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DecodeKit_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_AttachItemTo_ReturnValue;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HeadGear_Master_C_DecodeKit) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_DecodeKit");
static_assert(sizeof(BP_HeadGear_Master_C_DecodeKit) == 0x000038, "Wrong size on BP_HeadGear_Master_C_DecodeKit");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, ItemAsJson) == 0x000000, "Member 'BP_HeadGear_Master_C_DecodeKit::ItemAsJson' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, DecodedOwner) == 0x000008, "Member 'BP_HeadGear_Master_C_DecodeKit::DecodedOwner' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, DecodedParentItem) == 0x000010, "Member 'BP_HeadGear_Master_C_DecodeKit::DecodedParentItem' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, ProfileName) == 0x000018, "Member 'BP_HeadGear_Master_C_DecodeKit::ProfileName' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, ReturnValue) == 0x000020, "Member 'BP_HeadGear_Master_C_DecodeKit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, CallFunc_DecodeKit_ReturnValue) == 0x000021, "Member 'BP_HeadGear_Master_C_DecodeKit::CallFunc_DecodeKit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, K2Node_DynamicCast_AsGBCharacter) == 0x000028, "Member 'BP_HeadGear_Master_C_DecodeKit::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HeadGear_Master_C_DecodeKit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_DecodeKit, CallFunc_BP_AttachItemTo_ReturnValue) == 0x000031, "Member 'BP_HeadGear_Master_C_DecodeKit::CallFunc_BP_AttachItemTo_ReturnValue' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.GetHiddenComponents
// 0x0038 (0x0038 - 0x0000)
struct BP_HeadGear_Master_C_GetHiddenComponents final
{
public:
	TArray<class UPrimitiveComponent*>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_HeadGear_Master_C_GetHiddenComponents) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_GetHiddenComponents");
static_assert(sizeof(BP_HeadGear_Master_C_GetHiddenComponents) == 0x000038, "Wrong size on BP_HeadGear_Master_C_GetHiddenComponents");
static_assert(offsetof(BP_HeadGear_Master_C_GetHiddenComponents, ReturnValue) == 0x000000, "Member 'BP_HeadGear_Master_C_GetHiddenComponents::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_GetHiddenComponents, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HeadGear_Master_C_GetHiddenComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_GetHiddenComponents, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_HeadGear_Master_C_GetHiddenComponents::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HeadGear_Master_C_GetHiddenComponents, K2Node_MakeArray_Array_1) == 0x000028, "Member 'BP_HeadGear_Master_C_GetHiddenComponents::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_HeadGear_Master.BP_HeadGear_Master_C.GetStaticMeshPatchMaterial
// 0x0028 (0x0028 - 0x0000)
struct BP_HeadGear_Master_C_GetStaticMeshPatchMaterial final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_HeadGear_Master_C_GetStaticMeshPatchMaterial) == 0x000008, "Wrong alignment on BP_HeadGear_Master_C_GetStaticMeshPatchMaterial");
static_assert(sizeof(BP_HeadGear_Master_C_GetStaticMeshPatchMaterial) == 0x000028, "Wrong size on BP_HeadGear_Master_C_GetStaticMeshPatchMaterial");
static_assert(offsetof(BP_HeadGear_Master_C_GetStaticMeshPatchMaterial, ReturnValue) == 0x000000, "Member 'BP_HeadGear_Master_C_GetStaticMeshPatchMaterial::ReturnValue' has a wrong offset!");

}

