#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowerCoordinator

#include "Basic.hpp"

#include "EGBPowerSourceStatus_structs.hpp"


namespace SDK::Params
{

// Function BP_PowerCoordinator.BP_PowerCoordinator_C.ExecuteUbergraph_BP_PowerCoordinator
// 0x0030 (0x0030 - 0x0000)
struct BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PowerSourceComponent_C*             K2Node_CustomEvent_InPowerSourceComp;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_PowerSourceComponent_C* InPowerSourceComp)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UBP_PowerSourceComponent_C*             K2Node_CustomEvent_InPowerSourceComp_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator) == 0x000008, "Wrong alignment on BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator");
static_assert(sizeof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator) == 0x000030, "Wrong size on BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator");
static_assert(offsetof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator, EntryPoint) == 0x000000, "Member 'BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator, K2Node_CustomEvent_InPowerSourceComp) == 0x000008, "Member 'BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator::K2Node_CustomEvent_InPowerSourceComp' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator, K2Node_CustomEvent_InPowerSourceComp_1) == 0x000020, "Member 'BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator::K2Node_CustomEvent_InPowerSourceComp_1' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator, CallFunc_IsServer_ReturnValue) == 0x000028, "Member 'BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002A, "Member 'BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_PowerCoordinator.BP_PowerCoordinator_C.OnPowerSourceStatucChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_PowerCoordinator_C_OnPowerSourceStatucChanged_Event_0 final
{
public:
	class UBP_PowerSourceComponent_C*             InPowerSourceComp;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PowerCoordinator_C_OnPowerSourceStatucChanged_Event_0) == 0x000008, "Wrong alignment on BP_PowerCoordinator_C_OnPowerSourceStatucChanged_Event_0");
static_assert(sizeof(BP_PowerCoordinator_C_OnPowerSourceStatucChanged_Event_0) == 0x000008, "Wrong size on BP_PowerCoordinator_C_OnPowerSourceStatucChanged_Event_0");
static_assert(offsetof(BP_PowerCoordinator_C_OnPowerSourceStatucChanged_Event_0, InPowerSourceComp) == 0x000000, "Member 'BP_PowerCoordinator_C_OnPowerSourceStatucChanged_Event_0::InPowerSourceComp' has a wrong offset!");

// Function BP_PowerCoordinator.BP_PowerCoordinator_C.BindPowerSourceComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_PowerCoordinator_C_BindPowerSourceComponent final
{
public:
	class UBP_PowerSourceComponent_C*             InPowerSourceComp;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PowerCoordinator_C_BindPowerSourceComponent) == 0x000008, "Wrong alignment on BP_PowerCoordinator_C_BindPowerSourceComponent");
static_assert(sizeof(BP_PowerCoordinator_C_BindPowerSourceComponent) == 0x000008, "Wrong size on BP_PowerCoordinator_C_BindPowerSourceComponent");
static_assert(offsetof(BP_PowerCoordinator_C_BindPowerSourceComponent, InPowerSourceComp) == 0x000000, "Member 'BP_PowerCoordinator_C_BindPowerSourceComponent::InPowerSourceComp' has a wrong offset!");

// Function BP_PowerCoordinator.BP_PowerCoordinator_C.InernalClientAssociatedWithGroup
// 0x0058 (0x0058 - 0x0000)
struct BP_PowerCoordinator_C_InernalClientAssociatedWithGroup final
{
public:
	class UBP_PowerUserComponent_C*               CurrentPowerUserComponent;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PowerSourceComponent_C*             CurrentPowerSourceComp;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PowerUserComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PowerSourceComponent_C*             CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup) == 0x000008, "Wrong alignment on BP_PowerCoordinator_C_InernalClientAssociatedWithGroup");
static_assert(sizeof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup) == 0x000058, "Wrong size on BP_PowerCoordinator_C_InernalClientAssociatedWithGroup");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CurrentPowerUserComponent) == 0x000000, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CurrentPowerUserComponent' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CurrentPowerSourceComp) == 0x000008, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CurrentPowerSourceComp' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_IsValid_ReturnValue_1) == 0x00001D, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00001E, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00001F, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_InernalClientAssociatedWithGroup, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000050, "Member 'BP_PowerCoordinator_C_InernalClientAssociatedWithGroup::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function BP_PowerCoordinator.BP_PowerCoordinator_C.UpdatePowerSourceStatus
// 0x0040 (0x0040 - 0x0000)
struct BP_PowerCoordinator_C_UpdatePowerSourceStatus final
{
public:
	class UBP_PowerSourceComponent_C*             InPowerSource;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGBPowerSourceStatus                          NewSharedPowerSourceStatus;                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EGBPowerSourceStatus>                  CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGBPowerSourceStatus                          CallFunc_Array_Get_Item;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGBPowerSourceStatus                          CallFunc_GetPowerSourceStatus_PowerSourceStatus;   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGBPowerSourceStatus                          CallFunc_GetPowerSourceStatus_PowerSourceStatus_1; // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PowerCoordinator_C_UpdatePowerSourceStatus) == 0x000008, "Wrong alignment on BP_PowerCoordinator_C_UpdatePowerSourceStatus");
static_assert(sizeof(BP_PowerCoordinator_C_UpdatePowerSourceStatus) == 0x000040, "Wrong size on BP_PowerCoordinator_C_UpdatePowerSourceStatus");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, InPowerSource) == 0x000000, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::InPowerSource' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, NewSharedPowerSourceStatus) == 0x000008, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::NewSharedPowerSourceStatus' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Map_Length_ReturnValue) == 0x00001C, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Map_Values_Values) == 0x000020, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Array_Get_Item) == 0x000031, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Less_ByteByte_ReturnValue) == 0x000032, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_GetPowerSourceStatus_PowerSourceStatus) == 0x00003A, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_GetPowerSourceStatus_PowerSourceStatus' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_GetPowerSourceStatus_PowerSourceStatus_1) == 0x00003B, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_GetPowerSourceStatus_PowerSourceStatus_1' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_Map_Remove_ReturnValue) == 0x00003D, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerCoordinator_C_UpdatePowerSourceStatus, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003E, "Member 'BP_PowerCoordinator_C_UpdatePowerSourceStatus::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_PowerCoordinator.BP_PowerCoordinator_C.GetSharedPowerSourceStatus
// 0x0001 (0x0001 - 0x0000)
struct BP_PowerCoordinator_C_GetSharedPowerSourceStatus final
{
public:
	EGBPowerSourceStatus                          PowerSourceStatus;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PowerCoordinator_C_GetSharedPowerSourceStatus) == 0x000001, "Wrong alignment on BP_PowerCoordinator_C_GetSharedPowerSourceStatus");
static_assert(sizeof(BP_PowerCoordinator_C_GetSharedPowerSourceStatus) == 0x000001, "Wrong size on BP_PowerCoordinator_C_GetSharedPowerSourceStatus");
static_assert(offsetof(BP_PowerCoordinator_C_GetSharedPowerSourceStatus, PowerSourceStatus) == 0x000000, "Member 'BP_PowerCoordinator_C_GetSharedPowerSourceStatus::PowerSourceStatus' has a wrong offset!");

}

