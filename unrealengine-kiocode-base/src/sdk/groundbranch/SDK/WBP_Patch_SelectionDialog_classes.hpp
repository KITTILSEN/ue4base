#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Patch_SelectionDialog

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FMModdingPlugin_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Patch_SelectionDialog.WBP_Patch_SelectionDialog_C
// 0x0268 (0x04C8 - 0x0260)
class UWBP_Patch_SelectionDialog_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_Apply;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Cancel;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_ClearNameFilter;                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_RemoveCensorship;                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_IncludeMods;                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ComboBox_C*                        ComboBox_PatchTint;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableText_NameFilter;                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGBCustomTileView*                      GBCustomTileView_List;                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_IncludeMods;                         // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HorizontalLine1;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Cross;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_PatchTypes;                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_CategoryTitle;                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_CensorshipWarning;                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_PatchVisibilityWarning_NoModded;         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_PatchVisibilityWarning_OnlySubscribed;   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_PatchVisibilityWarning_SeeSettings;      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_CensoredPatches;                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_PatchBrowsing;                         // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_PatchVisibilitySettings;               // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_PatchVisibilityWarning;                // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget*                                ButtonPatchContainerRef;                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UBP_Patch_ListObj_C*>            CachedPatchObjs;                                   // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  AllowedPatchNameTags;                              // 0x0328(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class UWBP_Patch_Detail_C*>            DetailWidgets;                                     // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UWBP_Patch_Button_C*                    SelectedPatch;                                     // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NameFilter;                                        // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 TypeFilter;                                        // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AllTypesEntry;                                     // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UBP_Patch_ListObj_C*>            PatchFileObjList;                                  // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FPrimaryAssetId>                PatchTintList;                                     // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPrimaryAssetId                        DefaultPatchTint;                                  // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         NativePatchFileList;                               // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         ModdedPatchFileList;                               // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         NativeFolderList;                                  // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         ModdedPatchFolderList;                             // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UVaRestJsonObject* PathJsonObj)> OnApply;                    // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   PatchBrowserDisabledTooltip;                       // 0x0410(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ConfirmRemoveCensorshipTitle;                      // 0x0428(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ConfirmRemoveCensorshipMessage;                    // 0x0440(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TooManyPatchesWarningTitle;                        // 0x0458(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TooManyPatchesWarningMessage;                      // 0x0470(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_AdminMessageOverlay_C*             AdminMessageOverlay;                               // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   UpdatingPatchesText;                               // 0x0490(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   DisplayNameTagKey;                                 // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Bundles;                                           // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           PatchTintInvItemSkinTypeTag;                       // 0x04C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Patch_SelectionDialog(int32 EntryPoint);
	void BndEvt__WBP_Patches_Dialog_EditableText_NameFilter_K2Node_ComponentBoundEvent_7_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void OnTintMaterialLoaded_Event_1();
	void OnTintMaterialLoaded_Event_0();
	void BndEvt__WBP_Patches_Dialog_GBCustomTileView_List_K2Node_ComponentBoundEvent_6_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void HidePatchesUpdatingDialog();
	void ShowPatchesUpdatingDialog();
	void UpdateMainPatches();
	void CensoredStateChanged(bool bNewCensoredState);
	void OnRemoveCensorshipFromAllPatches(class UWBP_DialogueBox_C* Dialogue);
	void BndEvt__WBP_Patches_Dialog_Button_Apply_1_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void UpdatePatchVisibilityWarning();
	void OnPatchIsClicked_Event_0(class UWBP_Patch_Button_C* PatchThumbnail);
	void BindPatchDetailButton(class UWBP_Patch_Detail_C* Target);
	void BndEvt__WBP_Patches_Dialog_Button_ClearNameFilter_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_Patches_Dialog_ComboBox_PatchTint_K2Node_ComponentBoundEvent_8_OnIndexChanged__DelegateSignature(int32 Index_0);
	void AddPatchType(const class FString& PatchTypeName, bool bNativePatch);
	void OnSelectedNewPatchType(const class FString& ScriptFilename);
	void BndEvt__WBP_Patches_Dialog_CheckBox_IncludeMods_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void UpdatePatchList();
	void UpdatePatchTypes();
	void Close();
	void BndEvt__WBP_Patches_Dialog_Button_Apply_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_Patches_Dialog_Button_Cancel_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Completed_97A0FC74252B4066977C18627F96F3FB(const TArray<class UObject*>& Loaded);
	void InitPatchTintList();
	void InitPatchFolderAndFileLists();
	void InitDetails();
	void CachePatchObjs();
	void GetIncludeMods(bool* bIncludeMods);
	bool GetIncludeModsEnabled();
	void PatchObjPassedFilter(class UBP_Patch_ListObj_C* InPatchObj, bool* bPassed);
	void GetFilteredPatchObjs(TArray<class UBP_Patch_ListObj_C*>* OutPatchObjs);
	ESlateVisibility GetTintWarningVis();
	void GetPatchFolderList(TArray<class FString>* OutFolderList, int32* OutModFolderIndex);
	bool GetApplyEnabled();
	void CreateJsonObj(class UVaRestJsonObject** OutJsonObj);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	ESlateVisibility GetPatchBrowsingVis();
	bool GetPatchBrowsingEnabled();
	class UWidget* Get_VerticalBox_PatchBrowsing_ToolTipWidget_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Patch_SelectionDialog_C">();
	}
	static class UWBP_Patch_SelectionDialog_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Patch_SelectionDialog_C>();
	}
};
static_assert(alignof(UWBP_Patch_SelectionDialog_C) == 0x000008, "Wrong alignment on UWBP_Patch_SelectionDialog_C");
static_assert(sizeof(UWBP_Patch_SelectionDialog_C) == 0x0004C8, "Wrong size on UWBP_Patch_SelectionDialog_C");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, UberGraphFrame) == 0x000260, "Member 'UWBP_Patch_SelectionDialog_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, Button_Apply) == 0x000268, "Member 'UWBP_Patch_SelectionDialog_C::Button_Apply' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, Button_Cancel) == 0x000270, "Member 'UWBP_Patch_SelectionDialog_C::Button_Cancel' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, Button_ClearNameFilter) == 0x000278, "Member 'UWBP_Patch_SelectionDialog_C::Button_ClearNameFilter' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, Button_RemoveCensorship) == 0x000280, "Member 'UWBP_Patch_SelectionDialog_C::Button_RemoveCensorship' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, CheckBox_IncludeMods) == 0x000288, "Member 'UWBP_Patch_SelectionDialog_C::CheckBox_IncludeMods' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, ComboBox_PatchTint) == 0x000290, "Member 'UWBP_Patch_SelectionDialog_C::ComboBox_PatchTint' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, EditableText_NameFilter) == 0x000298, "Member 'UWBP_Patch_SelectionDialog_C::EditableText_NameFilter' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, GBCustomTileView_List) == 0x0002A0, "Member 'UWBP_Patch_SelectionDialog_C::GBCustomTileView_List' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, HorizontalBox_IncludeMods) == 0x0002A8, "Member 'UWBP_Patch_SelectionDialog_C::HorizontalBox_IncludeMods' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, HorizontalLine1) == 0x0002B0, "Member 'UWBP_Patch_SelectionDialog_C::HorizontalLine1' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, Image_Cross) == 0x0002B8, "Member 'UWBP_Patch_SelectionDialog_C::Image_Cross' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, ScrollBox_PatchTypes) == 0x0002C0, "Member 'UWBP_Patch_SelectionDialog_C::ScrollBox_PatchTypes' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, TextBlock_CategoryTitle) == 0x0002C8, "Member 'UWBP_Patch_SelectionDialog_C::TextBlock_CategoryTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, TextBlock_CensorshipWarning) == 0x0002D0, "Member 'UWBP_Patch_SelectionDialog_C::TextBlock_CensorshipWarning' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, TextBlock_PatchVisibilityWarning_NoModded) == 0x0002D8, "Member 'UWBP_Patch_SelectionDialog_C::TextBlock_PatchVisibilityWarning_NoModded' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, TextBlock_PatchVisibilityWarning_OnlySubscribed) == 0x0002E0, "Member 'UWBP_Patch_SelectionDialog_C::TextBlock_PatchVisibilityWarning_OnlySubscribed' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, TextBlock_PatchVisibilityWarning_SeeSettings) == 0x0002E8, "Member 'UWBP_Patch_SelectionDialog_C::TextBlock_PatchVisibilityWarning_SeeSettings' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, VerticalBox_CensoredPatches) == 0x0002F0, "Member 'UWBP_Patch_SelectionDialog_C::VerticalBox_CensoredPatches' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, VerticalBox_PatchBrowsing) == 0x0002F8, "Member 'UWBP_Patch_SelectionDialog_C::VerticalBox_PatchBrowsing' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, VerticalBox_PatchVisibilitySettings) == 0x000300, "Member 'UWBP_Patch_SelectionDialog_C::VerticalBox_PatchVisibilitySettings' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, VerticalBox_PatchVisibilityWarning) == 0x000308, "Member 'UWBP_Patch_SelectionDialog_C::VerticalBox_PatchVisibilityWarning' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, ButtonPatchContainerRef) == 0x000310, "Member 'UWBP_Patch_SelectionDialog_C::ButtonPatchContainerRef' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, CachedPatchObjs) == 0x000318, "Member 'UWBP_Patch_SelectionDialog_C::CachedPatchObjs' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, AllowedPatchNameTags) == 0x000328, "Member 'UWBP_Patch_SelectionDialog_C::AllowedPatchNameTags' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, DetailWidgets) == 0x000348, "Member 'UWBP_Patch_SelectionDialog_C::DetailWidgets' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, SelectedPatch) == 0x000358, "Member 'UWBP_Patch_SelectionDialog_C::SelectedPatch' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, NameFilter) == 0x000360, "Member 'UWBP_Patch_SelectionDialog_C::NameFilter' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, TypeFilter) == 0x000370, "Member 'UWBP_Patch_SelectionDialog_C::TypeFilter' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, AllTypesEntry) == 0x000380, "Member 'UWBP_Patch_SelectionDialog_C::AllTypesEntry' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, PatchFileObjList) == 0x000390, "Member 'UWBP_Patch_SelectionDialog_C::PatchFileObjList' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, PatchTintList) == 0x0003A0, "Member 'UWBP_Patch_SelectionDialog_C::PatchTintList' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, DefaultPatchTint) == 0x0003B0, "Member 'UWBP_Patch_SelectionDialog_C::DefaultPatchTint' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, NativePatchFileList) == 0x0003C0, "Member 'UWBP_Patch_SelectionDialog_C::NativePatchFileList' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, ModdedPatchFileList) == 0x0003D0, "Member 'UWBP_Patch_SelectionDialog_C::ModdedPatchFileList' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, NativeFolderList) == 0x0003E0, "Member 'UWBP_Patch_SelectionDialog_C::NativeFolderList' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, ModdedPatchFolderList) == 0x0003F0, "Member 'UWBP_Patch_SelectionDialog_C::ModdedPatchFolderList' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, OnApply) == 0x000400, "Member 'UWBP_Patch_SelectionDialog_C::OnApply' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, PatchBrowserDisabledTooltip) == 0x000410, "Member 'UWBP_Patch_SelectionDialog_C::PatchBrowserDisabledTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, ConfirmRemoveCensorshipTitle) == 0x000428, "Member 'UWBP_Patch_SelectionDialog_C::ConfirmRemoveCensorshipTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, ConfirmRemoveCensorshipMessage) == 0x000440, "Member 'UWBP_Patch_SelectionDialog_C::ConfirmRemoveCensorshipMessage' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, TooManyPatchesWarningTitle) == 0x000458, "Member 'UWBP_Patch_SelectionDialog_C::TooManyPatchesWarningTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, TooManyPatchesWarningMessage) == 0x000470, "Member 'UWBP_Patch_SelectionDialog_C::TooManyPatchesWarningMessage' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, AdminMessageOverlay) == 0x000488, "Member 'UWBP_Patch_SelectionDialog_C::AdminMessageOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, UpdatingPatchesText) == 0x000490, "Member 'UWBP_Patch_SelectionDialog_C::UpdatingPatchesText' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, DisplayNameTagKey) == 0x0004A8, "Member 'UWBP_Patch_SelectionDialog_C::DisplayNameTagKey' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, Bundles) == 0x0004B0, "Member 'UWBP_Patch_SelectionDialog_C::Bundles' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_SelectionDialog_C, PatchTintInvItemSkinTypeTag) == 0x0004C0, "Member 'UWBP_Patch_SelectionDialog_C::PatchTintInvItemSkinTypeTag' has a wrong offset!");

}

