#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ME_MissionImageTile_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ME_MissionImageTile_Entry.WBP_ME_MissionImageTile_Entry_C.Get_Border_Selected_BrushColor_0
// 0x0024 (0x0024 - 0x0000)
struct WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsListItemSelected_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0) == 0x000004, "Wrong alignment on WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0");
static_assert(sizeof(WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0) == 0x000024, "Wrong size on WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0, ReturnValue) == 0x000000, "Member 'WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0, Temp_bool_Variable) == 0x000010, "Member 'WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0, CallFunc_IsListItemSelected_ReturnValue) == 0x000011, "Member 'WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0::CallFunc_IsListItemSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0, K2Node_Select_Default) == 0x000014, "Member 'WBP_ME_MissionImageTile_Entry_C_Get_Border_Selected_BrushColor_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ME_MissionImageTile_Entry.WBP_ME_MissionImageTile_Entry_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_ME_MissionImageTile_Entry_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MissionImageTile_Entry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_ME_MissionImageTile_Entry_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_ME_MissionImageTile_Entry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_ME_MissionImageTile_Entry_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_ME_MissionImageTile_Entry_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_ME_MissionImageTile_Entry.WBP_ME_MissionImageTile_Entry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_ME_MissionImageTile_Entry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MissionImageTile_Entry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_ME_MissionImageTile_Entry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_ME_MissionImageTile_Entry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_ME_MissionImageTile_Entry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_ME_MissionImageTile_Entry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_ME_MissionImageTile_Entry.WBP_ME_MissionImageTile_Entry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MissionImageTile_Entry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MissionImageTile_Entry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_ME_MissionImageTile_Entry_C_OnListItemObjectSet");
static_assert(sizeof(WBP_ME_MissionImageTile_Entry_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_ME_MissionImageTile_Entry_C_OnListItemObjectSet");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_ME_MissionImageTile_Entry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_ME_MissionImageTile_Entry.WBP_ME_MissionImageTile_Entry_C.ExecuteUbergraph_WBP_ME_MissionImageTile_Entry
// 0x0038 (0x0038 - 0x0000)
struct WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ME_ImageFileObj_C*                  K2Node_DynamicCast_AsBP_ME_Image_File_Obj;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_LoadExternalImage_OutImage;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LoadExternalImage_OutWidth;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LoadExternalImage_OutHeight;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadExternalImage_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry) == 0x000008, "Wrong alignment on WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry");
static_assert(sizeof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry) == 0x000038, "Wrong size on WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, EntryPoint) == 0x000000, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, K2Node_Event_bIsExpanded) == 0x000004, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, K2Node_Event_bIsSelected) == 0x000005, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, K2Node_Event_ListItemObject) == 0x000008, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, K2Node_DynamicCast_AsBP_ME_Image_File_Obj) == 0x000010, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::K2Node_DynamicCast_AsBP_ME_Image_File_Obj' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000019, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, CallFunc_LoadExternalImage_OutImage) == 0x000020, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::CallFunc_LoadExternalImage_OutImage' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, CallFunc_LoadExternalImage_OutWidth) == 0x000028, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::CallFunc_LoadExternalImage_OutWidth' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, CallFunc_LoadExternalImage_OutHeight) == 0x00002C, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::CallFunc_LoadExternalImage_OutHeight' has a wrong offset!");
static_assert(offsetof(WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry, CallFunc_LoadExternalImage_ReturnValue) == 0x000030, "Member 'WBP_ME_MissionImageTile_Entry_C_ExecuteUbergraph_WBP_ME_MissionImageTile_Entry::CallFunc_LoadExternalImage_ReturnValue' has a wrong offset!");

}

