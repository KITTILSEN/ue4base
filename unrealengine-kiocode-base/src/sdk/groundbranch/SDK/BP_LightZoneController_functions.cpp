#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightZoneController

#include "Basic.hpp"

#include "BP_LightZoneController_classes.hpp"
#include "BP_LightZoneController_parameters.hpp"


namespace SDK
{

// Function BP_LightZoneController.BP_LightZoneController_C.ExecuteUbergraph_BP_LightZoneController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::ExecuteUbergraph_BP_LightZoneController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "ExecuteUbergraph_BP_LightZoneController");

	Params::BP_LightZoneController_C_ExecuteUbergraph_BP_LightZoneController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.OnPostEventCalback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAkCallbackType                         CallbackType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkCallbackInfo*                  CallbackInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::OnPostEventCalback(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "OnPostEventCalback");

	Params::BP_LightZoneController_C_OnPostEventCalback Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.TurnOnIfNotDestroyed
// (BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::TurnOnIfNotDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "TurnOnIfNotDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.TurnOffIfNotDestroyed
// (BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::TurnOffIfNotDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "TurnOffIfNotDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.BndEvt__BP_LightZoneController_BP_Power_SourceComponent_K2Node_ComponentBoundEvent_1_OnSharedPowerStatusChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EGBPowerSourceStatus                    InSharedPowerStatus                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::BndEvt__BP_LightZoneController_BP_Power_SourceComponent_K2Node_ComponentBoundEvent_1_OnSharedPowerStatusChanged__DelegateSignature(EGBPowerSourceStatus InSharedPowerStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "BndEvt__BP_LightZoneController_BP_Power_SourceComponent_K2Node_ComponentBoundEvent_1_OnSharedPowerStatusChanged__DelegateSignature");

	Params::BP_LightZoneController_C_BndEvt__BP_LightZoneController_BP_Power_SourceComponent_K2Node_ComponentBoundEvent_1_OnSharedPowerStatusChanged__DelegateSignature Parms{};

	Parms.InSharedPowerStatus = InSharedPowerStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.BndEvt__BP_LightZoneController_BP_Power_SourceComponent_K2Node_ComponentBoundEvent_0_OnPowerSourceStatucChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UBP_PowerSourceComponent_C*       InPowerSourceComp                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::BndEvt__BP_LightZoneController_BP_Power_SourceComponent_K2Node_ComponentBoundEvent_0_OnPowerSourceStatucChanged__DelegateSignature(class UBP_PowerSourceComponent_C* InPowerSourceComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "BndEvt__BP_LightZoneController_BP_Power_SourceComponent_K2Node_ComponentBoundEvent_0_OnPowerSourceStatucChanged__DelegateSignature");

	Params::BP_LightZoneController_C_BndEvt__BP_LightZoneController_BP_Power_SourceComponent_K2Node_ComponentBoundEvent_0_OnPowerSourceStatucChanged__DelegateSignature Parms{};

	Parms.InPowerSourceComp = InPowerSourceComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.StopSounds
// (BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::StopSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "StopSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.StartSounds
// (BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::StartSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "StartSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.OnPlayerReadyRoomStatusChanged_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::OnPlayerReadyRoomStatusChanged_Event_0(class AGBPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "OnPlayerReadyRoomStatusChanged_Event_0");

	Params::BP_LightZoneController_C_OnPlayerReadyRoomStatusChanged_Event_0 Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.BindToReadyRoomDelegate
// (BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::BindToReadyRoomDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "BindToReadyRoomDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.BindCollisionDelegates
// (BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::BindCollisionDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "BindCollisionDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.UpdateAssetsShared
// (BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::UpdateAssetsShared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "UpdateAssetsShared");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.SetSwitchPosition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SwitchAngle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::SetSwitchPosition(float SwitchAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "SetSwitchPosition");

	Params::BP_LightZoneController_C_SetSwitchPosition Parms{};

	Parms.SwitchAngle = SwitchAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.Unbreak
// (BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::Unbreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "Unbreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.K2_OnReset
// (Event, Public, BlueprintEvent)

void ABP_LightZoneController_C::K2_OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "K2_OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.OnComponentHit_Event_1
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_LightZoneController_C::OnComponentHit_Event_1(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "OnComponentHit_Event_1");

	Params::BP_LightZoneController_C_OnComponentHit_Event_1 Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndCursorOverSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              TouchedComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndCursorOverSignature__DelegateSignature(class UPrimitiveComponent* TouchedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndCursorOverSignature__DelegateSignature");

	Params::BP_LightZoneController_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndCursorOverSignature__DelegateSignature Parms{};

	Parms.TouchedComponent = TouchedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              TouchedComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature(class UPrimitiveComponent* TouchedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature");

	Params::BP_LightZoneController_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature Parms{};

	Parms.TouchedComponent = TouchedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.AnimateMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPullDown                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_LightZoneController_C::AnimateMulticast(bool bPullDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "AnimateMulticast");

	Params::BP_LightZoneController_C_AnimateMulticast Parms{};

	Parms.bPullDown = bPullDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.ServerUse
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::ServerUse(class AController* Controller, class FName UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "ServerUse");

	Params::BP_LightZoneController_C_ServerUse Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.Break
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::Break()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "Break");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LightZoneController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.ServerUseWithParams
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::ServerUseWithParams(class AController* Controller, class FName UseType, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "ServerUseWithParams");

	Params::BP_LightZoneController_C_ServerUseWithParams Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.RemoveUser
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::RemoveUser(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "RemoveUser");

	Params::BP_LightZoneController_C_RemoveUser Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.ClientUseWithParams
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::ClientUseWithParams(class AController* Controller, class FName UseType, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "ClientUseWithParams");

	Params::BP_LightZoneController_C_ClientUseWithParams Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.ClientUse
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::ClientUse(class AController* Controller, class FName UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "ClientUse");

	Params::BP_LightZoneController_C_ClientUse Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.AIUseWithParams
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::AIUseWithParams(class AController* Controller, class FName UseType, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "AIUseWithParams");

	Params::BP_LightZoneController_C_AIUseWithParams Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.AIUse
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::AIUse(class AController* Controller, class FName UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "AIUse");

	Params::BP_LightZoneController_C_AIUse Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.AddUser
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightZoneController_C::AddUser(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "AddUser");

	Params::BP_LightZoneController_C_AddUser Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.InpActEvt_Interact_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_LightZoneController_C::InpActEvt_Interact_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "InpActEvt_Interact_K2Node_InputActionEvent_0");

	Params::BP_LightZoneController_C_InpActEvt_Interact_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightZoneController.BP_LightZoneController_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_LightZoneController_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_LightZoneController_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_LightZoneController_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightZoneController.BP_LightZoneController_C.AIQuestionWithParams
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_LightZoneController_C::AIQuestionWithParams(class AController* Controller, class FName UseType, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "AIQuestionWithParams");

	Params::BP_LightZoneController_C_AIQuestionWithParams Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LightZoneController.BP_LightZoneController_C.AIQuestion
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_LightZoneController_C::AIQuestion(class AController* Controller, class FName UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "AIQuestion");

	Params::BP_LightZoneController_C_AIQuestion Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LightZoneController.BP_LightZoneController_C.GetNumUsers
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_LightZoneController_C::GetNumUsers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "GetNumUsers");

	Params::BP_LightZoneController_C_GetNumUsers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LightZoneController.BP_LightZoneController_C.IsTeamSpecific
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_LightZoneController_C::IsTeamSpecific() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightZoneController_C", "IsTeamSpecific");

	Params::BP_LightZoneController_C_IsTeamSpecific Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

