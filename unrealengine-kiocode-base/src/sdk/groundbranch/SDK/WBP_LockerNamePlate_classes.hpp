#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LockerNamePlate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LockerNamePlate.WBP_LockerNamePlate_C
// 0x0030 (0x0290 - 0x0260)
class UWBP_LockerNamePlate_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             TextBlock_0;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Width;                                             // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebug;                                            // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScrollWidth;                                       // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scroll;                                            // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bScrolling;                                        // 0x0284(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdateTime;                                        // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_LockerNamePlate(int32 EntryPoint);
	void UpdateScrolling();
	void SetPlayerName(const class FString& inString);
	void Construct();
	void ClearName();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LockerNamePlate_C">();
	}
	static class UWBP_LockerNamePlate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LockerNamePlate_C>();
	}
};
static_assert(alignof(UWBP_LockerNamePlate_C) == 0x000008, "Wrong alignment on UWBP_LockerNamePlate_C");
static_assert(sizeof(UWBP_LockerNamePlate_C) == 0x000290, "Wrong size on UWBP_LockerNamePlate_C");
static_assert(offsetof(UWBP_LockerNamePlate_C, UberGraphFrame) == 0x000260, "Member 'UWBP_LockerNamePlate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, TextBlock_0) == 0x000268, "Member 'UWBP_LockerNamePlate_C::TextBlock_0' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, TeamId) == 0x000270, "Member 'UWBP_LockerNamePlate_C::TeamId' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, Width) == 0x000274, "Member 'UWBP_LockerNamePlate_C::Width' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, bDebug) == 0x000278, "Member 'UWBP_LockerNamePlate_C::bDebug' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, ScrollWidth) == 0x00027C, "Member 'UWBP_LockerNamePlate_C::ScrollWidth' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, Scroll) == 0x000280, "Member 'UWBP_LockerNamePlate_C::Scroll' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, bScrolling) == 0x000284, "Member 'UWBP_LockerNamePlate_C::bScrolling' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, Index_0) == 0x000288, "Member 'UWBP_LockerNamePlate_C::Index_0' has a wrong offset!");
static_assert(offsetof(UWBP_LockerNamePlate_C, UpdateTime) == 0x00028C, "Member 'UWBP_LockerNamePlate_C::UpdateTime' has a wrong offset!");

}

