#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AFKPrompt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AFKPrompt.WBP_AFKPrompt_C
// 0x0030 (0x0290 - 0x0260)
class UWBP_AFKPrompt_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             TextBlock_AFKMessage;                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Instructions;                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Time;                                    // 0x0278(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ResponseTime;                                      // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle_ResponseTime;                          // 0x0288(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	bool OverrideInputAxis(const struct FKey& Key, float Delta, float DeltaTime, int32 NumSamples, bool bGamepad);
	bool OverrideInputKey(const struct FKey& Key, EBPInputEvent EventType, float AmountDepressed, bool bGamepad);
	class FText GetReponseTimeLeft();
	void Construct();
	void VoteTimer();
	void SetTimer();
	void ExecuteUbergraph_WBP_AFKPrompt(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AFKPrompt_C">();
	}
	static class UWBP_AFKPrompt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AFKPrompt_C>();
	}
};
static_assert(alignof(UWBP_AFKPrompt_C) == 0x000008, "Wrong alignment on UWBP_AFKPrompt_C");
static_assert(sizeof(UWBP_AFKPrompt_C) == 0x000290, "Wrong size on UWBP_AFKPrompt_C");
static_assert(offsetof(UWBP_AFKPrompt_C, UberGraphFrame) == 0x000260, "Member 'UWBP_AFKPrompt_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AFKPrompt_C, TextBlock_AFKMessage) == 0x000268, "Member 'UWBP_AFKPrompt_C::TextBlock_AFKMessage' has a wrong offset!");
static_assert(offsetof(UWBP_AFKPrompt_C, TextBlock_Instructions) == 0x000270, "Member 'UWBP_AFKPrompt_C::TextBlock_Instructions' has a wrong offset!");
static_assert(offsetof(UWBP_AFKPrompt_C, TextBlock_Time) == 0x000278, "Member 'UWBP_AFKPrompt_C::TextBlock_Time' has a wrong offset!");
static_assert(offsetof(UWBP_AFKPrompt_C, ResponseTime) == 0x000280, "Member 'UWBP_AFKPrompt_C::ResponseTime' has a wrong offset!");
static_assert(offsetof(UWBP_AFKPrompt_C, TimerHandle_ResponseTime) == 0x000288, "Member 'UWBP_AFKPrompt_C::TimerHandle_ResponseTime' has a wrong offset!");

}

