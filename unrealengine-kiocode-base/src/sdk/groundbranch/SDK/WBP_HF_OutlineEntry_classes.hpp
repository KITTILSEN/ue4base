#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HF_OutlineEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HF_OutlineEntry.WBP_HF_OutlineEntry_C
// 0x00D8 (0x0338 - 0x0260)
class UWBP_HF_OutlineEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_Background;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ActorClass;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ActorName;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            FontSelectedColour;                                // 0x0280(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            FontDefaultColour;                                 // 0x02A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           BackgroundSelectedColour;                          // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundDefaultColour;                           // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftShiftDown;                                    // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRightShiftDown;                                   // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLeftCtrlDown;                                     // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRightCtrlDown;                                    // 0x02F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bDown)>    OnLeftShift;                                       // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool bDown)>    OnRightShift;                                      // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool bDown)>    OnLeftCtrl;                                        // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool bDown)>    OnRightCtrl;                                       // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnEntryReleased();
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void ExecuteUbergraph_WBP_HF_OutlineEntry(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HF_OutlineEntry_C">();
	}
	static class UWBP_HF_OutlineEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HF_OutlineEntry_C>();
	}
};
static_assert(alignof(UWBP_HF_OutlineEntry_C) == 0x000008, "Wrong alignment on UWBP_HF_OutlineEntry_C");
static_assert(sizeof(UWBP_HF_OutlineEntry_C) == 0x000338, "Wrong size on UWBP_HF_OutlineEntry_C");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, UberGraphFrame) == 0x000260, "Member 'UWBP_HF_OutlineEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, Border_Background) == 0x000268, "Member 'UWBP_HF_OutlineEntry_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, TextBlock_ActorClass) == 0x000270, "Member 'UWBP_HF_OutlineEntry_C::TextBlock_ActorClass' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, TextBlock_ActorName) == 0x000278, "Member 'UWBP_HF_OutlineEntry_C::TextBlock_ActorName' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, FontSelectedColour) == 0x000280, "Member 'UWBP_HF_OutlineEntry_C::FontSelectedColour' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, FontDefaultColour) == 0x0002A8, "Member 'UWBP_HF_OutlineEntry_C::FontDefaultColour' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, BackgroundSelectedColour) == 0x0002D0, "Member 'UWBP_HF_OutlineEntry_C::BackgroundSelectedColour' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, BackgroundDefaultColour) == 0x0002E0, "Member 'UWBP_HF_OutlineEntry_C::BackgroundDefaultColour' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, bLeftShiftDown) == 0x0002F0, "Member 'UWBP_HF_OutlineEntry_C::bLeftShiftDown' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, bRightShiftDown) == 0x0002F1, "Member 'UWBP_HF_OutlineEntry_C::bRightShiftDown' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, bLeftCtrlDown) == 0x0002F2, "Member 'UWBP_HF_OutlineEntry_C::bLeftCtrlDown' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, bRightCtrlDown) == 0x0002F3, "Member 'UWBP_HF_OutlineEntry_C::bRightCtrlDown' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, OnLeftShift) == 0x0002F8, "Member 'UWBP_HF_OutlineEntry_C::OnLeftShift' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, OnRightShift) == 0x000308, "Member 'UWBP_HF_OutlineEntry_C::OnRightShift' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, OnLeftCtrl) == 0x000318, "Member 'UWBP_HF_OutlineEntry_C::OnLeftCtrl' has a wrong offset!");
static_assert(offsetof(UWBP_HF_OutlineEntry_C, OnRightCtrl) == 0x000328, "Member 'UWBP_HF_OutlineEntry_C::OnRightCtrl' has a wrong offset!");

}

