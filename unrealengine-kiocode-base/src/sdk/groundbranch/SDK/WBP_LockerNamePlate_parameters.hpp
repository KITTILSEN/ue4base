#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LockerNamePlate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_LockerNamePlate.WBP_LockerNamePlate_C.ExecuteUbergraph_WBP_LockerNamePlate
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_InString;                       // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UWBP_LockerNamePlate_C*>         CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class UWBP_LockerNamePlate_C*                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate) == 0x000008, "Wrong alignment on WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate");
static_assert(sizeof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate) == 0x0000E0, "Wrong size on WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, EntryPoint) == 0x000000, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_GetDesiredSize_ReturnValue) == 0x000004, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, K2Node_Event_MyGeometry) == 0x000028, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, K2Node_Event_InDeltaTime) == 0x000060, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Not_PreBool_ReturnValue) == 0x000064, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, Temp_int_Variable) == 0x000068, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, K2Node_CustomEvent_InString) == 0x000070, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::K2Node_CustomEvent_InString' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000080, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_BooleanAND_ReturnValue) == 0x0000B5, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B6, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B7, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000BC, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_GetObjectName_ReturnValue) == 0x0000C0, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'WBP_LockerNamePlate_C_ExecuteUbergraph_WBP_LockerNamePlate::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_LockerNamePlate.WBP_LockerNamePlate_C.SetPlayerName
// 0x0010 (0x0010 - 0x0000)
struct WBP_LockerNamePlate_C_SetPlayerName final
{
public:
	class FString                                 inString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LockerNamePlate_C_SetPlayerName) == 0x000008, "Wrong alignment on WBP_LockerNamePlate_C_SetPlayerName");
static_assert(sizeof(WBP_LockerNamePlate_C_SetPlayerName) == 0x000010, "Wrong size on WBP_LockerNamePlate_C_SetPlayerName");
static_assert(offsetof(WBP_LockerNamePlate_C_SetPlayerName, inString) == 0x000000, "Member 'WBP_LockerNamePlate_C_SetPlayerName::inString' has a wrong offset!");

// Function WBP_LockerNamePlate.WBP_LockerNamePlate_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_LockerNamePlate_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LockerNamePlate_C_Tick) == 0x000004, "Wrong alignment on WBP_LockerNamePlate_C_Tick");
static_assert(sizeof(WBP_LockerNamePlate_C_Tick) == 0x00003C, "Wrong size on WBP_LockerNamePlate_C_Tick");
static_assert(offsetof(WBP_LockerNamePlate_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_LockerNamePlate_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_LockerNamePlate_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_LockerNamePlate.WBP_LockerNamePlate_C.Update
// 0x0068 (0x0068 - 0x0000)
struct WBP_LockerNamePlate_C_Update final
{
public:
	uint8                                         LocalTeamId;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFoundPlayer;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAdjustedPlayerTeamId_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_LockerNamePlate_C_Update) == 0x000008, "Wrong alignment on WBP_LockerNamePlate_C_Update");
static_assert(sizeof(WBP_LockerNamePlate_C_Update) == 0x000068, "Wrong size on WBP_LockerNamePlate_C_Update");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, LocalTeamId) == 0x000000, "Member 'WBP_LockerNamePlate_C_Update::LocalTeamId' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, bFoundPlayer) == 0x000001, "Member 'WBP_LockerNamePlate_C_Update::bFoundPlayer' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, LocalIndex) == 0x000004, "Member 'WBP_LockerNamePlate_C_Update::LocalIndex' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'WBP_LockerNamePlate_C_Update::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_LockerNamePlate_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_LockerNamePlate_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, K2Node_DynamicCast_AsGBGame_State) == 0x000020, "Member 'WBP_LockerNamePlate_C_Update::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_LockerNamePlate_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_GetPlayerName_ReturnValue) == 0x000040, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_GetGenericTeamId_ReturnValue) == 0x000052, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, Temp_int_Variable) == 0x000054, "Member 'WBP_LockerNamePlate_C_Update::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_GetAdjustedPlayerTeamId_ReturnValue) == 0x000058, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_GetAdjustedPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005A, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005B, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LockerNamePlate_C_Update, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'WBP_LockerNamePlate_C_Update::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

