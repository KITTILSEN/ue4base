#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BreachingCharge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BreachingCharge.BP_BreachingCharge_C.ExecuteUbergraph_BP_BreachingCharge
// 0x03C0 (0x03C0 - 0x0000)
struct BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Controller_6;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_UseType_5;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Controller_5;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_UseType_4;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Params_2;                             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Controller_4;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_UseType_3;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Controller_3;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_UseType_2;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Params_1;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Controller_2;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Controller_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_UseType_1;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Controller;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_UseType;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Params;                               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPouch*                               K2Node_DynamicCast_AsGBPouch;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Detonator_C*                        K2Node_CustomEvent_Detonator;                      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_Detonator_C* Detonator)> K2Node_CreateDelegate_OutputDelegate;          // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue_1;    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue_1;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0168(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsEquipped_ReturnValue;                   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     K2Node_MakeArray_Array_1;                          // 0x01F8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyRadialDamageDirect_ReturnValue;      // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Detonator_C*                        K2Node_CustomEvent_InDetonator;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_ConeOverlapDamageableComponentsSorted_OutComponents; // 0x0240(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_ConeOverlapDamageableComponentsSorted_ReturnValue; // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_272[0x2];                                      // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CanDamageStaticMesh_OutHit;               // 0x0274(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CanDamageStaticMesh_ReturnValue;          // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     K2Node_MakeArray_Array_2;                          // 0x0300(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyRadialDamageDirect_ReturnValue_1;    // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A[0x2];                                      // 0x032A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_Controller_7;                         // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0xF];                                      // 0x0351(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0360(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameMode*                            K2Node_DynamicCast_AsGBGame_Mode;                  // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Explosion_BreachingCharge_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldCheckForTeamKills_ReturnValue;      // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge) == 0x000010, "Wrong alignment on BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge");
static_assert(sizeof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge) == 0x0003C0, "Wrong size on BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, EntryPoint) == 0x000000, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Controller_6) == 0x000008, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Controller_6' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_UseType_5) == 0x000010, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_UseType_5' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Controller_5) == 0x000018, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Controller_5' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_UseType_4) == 0x000020, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_UseType_4' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Params_2) == 0x000028, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Params_2' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Controller_4) == 0x000038, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Controller_4' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_UseType_3) == 0x000040, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_UseType_3' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Controller_3) == 0x000048, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Controller_3' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_UseType_2) == 0x000050, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_UseType_2' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Params_1) == 0x000058, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Params_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Controller_2) == 0x000068, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Controller_1) == 0x000070, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_UseType_1) == 0x000078, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_UseType_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Controller) == 0x000080, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_UseType) == 0x000088, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_UseType' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Params) == 0x000090, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Params' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000A0, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetAttachParentActor_ReturnValue) == 0x0000A8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetAttachParent_ReturnValue) == 0x0000B0, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_AsGBPouch) == 0x0000B8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_AsGBPouch' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Not_PreBool_ReturnValue) == 0x0000D0, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_HasAuthority_ReturnValue) == 0x0000E8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000EC, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_CustomEvent_Detonator) == 0x0000F8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_CustomEvent_Detonator' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetInstigator_ReturnValue) == 0x000100, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetInstigatorController_ReturnValue) == 0x000108, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_CreateDelegate_OutputDelegate) == 0x000110, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetInstigatorController_ReturnValue_1) == 0x000120, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetInstigatorController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000128, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetAttachParent_ReturnValue_1) == 0x000130, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetAttachParent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_AsPrimitive_Component) == 0x000138, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetForwardVector_ReturnValue) == 0x000144, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000150, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00015C, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_MakeHitResult_ReturnValue) == 0x000168, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_IsEquipped_ReturnValue) == 0x0001F0, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_IsEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_MakeArray_Array_1) == 0x0001F8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Not_PreBool_ReturnValue_1) == 0x000208, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_ApplyRadialDamageDirect_ReturnValue) == 0x00020C, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_ApplyRadialDamageDirect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, Temp_int_Loop_Counter_Variable) == 0x000210, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_CustomEvent_InDetonator) == 0x000218, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_CustomEvent_InDetonator' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Add_IntInt_ReturnValue) == 0x000220, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000224, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Add_FloatFloat_ReturnValue) == 0x000230, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000234, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_ConeOverlapDamageableComponentsSorted_OutComponents) == 0x000240, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_ConeOverlapDamageableComponentsSorted_OutComponents' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_ConeOverlapDamageableComponentsSorted_ReturnValue) == 0x000250, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_ConeOverlapDamageableComponentsSorted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Array_Get_Item) == 0x000258, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Array_Length_ReturnValue) == 0x000260, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000268, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_bSuccess_2) == 0x000270, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Less_IntInt_ReturnValue) == 0x000271, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_CanDamageStaticMesh_OutHit) == 0x000274, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_CanDamageStaticMesh_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_CanDamageStaticMesh_ReturnValue) == 0x0002FC, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_CanDamageStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_MakeArray_Array_2) == 0x000300, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetOwner_ReturnValue_1) == 0x000310, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_IsValid_ReturnValue) == 0x000318, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_ApplyRadialDamageDirect_ReturnValue_1) == 0x00031C, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_ApplyRadialDamageDirect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_AsGBCharacter) == 0x000320, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_bSuccess_3) == 0x000328, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_IsValid_ReturnValue_1) == 0x000329, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Array_AddUnique_ReturnValue) == 0x00032C, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000330, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000340, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_Event_Controller_7) == 0x000348, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_Event_Controller_7' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_Not_PreBool_ReturnValue_2) == 0x000350, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetTransform_ReturnValue) == 0x000360, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_GetGameMode_ReturnValue) == 0x000390, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000398, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_AsGBGame_Mode) == 0x0003A0, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_AsGBGame_Mode' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, K2Node_DynamicCast_bSuccess_4) == 0x0003A8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003B0, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge, CallFunc_ShouldCheckForTeamKills_ReturnValue) == 0x0003B8, "Member 'BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge::CallFunc_ShouldCheckForTeamKills_ReturnValue' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.BindToDetonator
// 0x0008 (0x0008 - 0x0000)
struct BP_BreachingCharge_C_BindToDetonator final
{
public:
	class ABP_Detonator_C*                        InDetonator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_BindToDetonator) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_BindToDetonator");
static_assert(sizeof(BP_BreachingCharge_C_BindToDetonator) == 0x000008, "Wrong size on BP_BreachingCharge_C_BindToDetonator");
static_assert(offsetof(BP_BreachingCharge_C_BindToDetonator, InDetonator) == 0x000000, "Member 'BP_BreachingCharge_C_BindToDetonator::InDetonator' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.OnDetonatorUse_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_BreachingCharge_C_OnDetonatorUse_Event_0 final
{
public:
	class ABP_Detonator_C*                        Detonator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_OnDetonatorUse_Event_0) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_OnDetonatorUse_Event_0");
static_assert(sizeof(BP_BreachingCharge_C_OnDetonatorUse_Event_0) == 0x000008, "Wrong size on BP_BreachingCharge_C_OnDetonatorUse_Event_0");
static_assert(offsetof(BP_BreachingCharge_C_OnDetonatorUse_Event_0, Detonator) == 0x000000, "Member 'BP_BreachingCharge_C_OnDetonatorUse_Event_0::Detonator' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.ServerUseWithParams
// 0x0020 (0x0020 - 0x0000)
struct BP_BreachingCharge_C_ServerUseWithParams final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseType;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Params_0;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_ServerUseWithParams) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_ServerUseWithParams");
static_assert(sizeof(BP_BreachingCharge_C_ServerUseWithParams) == 0x000020, "Wrong size on BP_BreachingCharge_C_ServerUseWithParams");
static_assert(offsetof(BP_BreachingCharge_C_ServerUseWithParams, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_ServerUseWithParams::Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ServerUseWithParams, UseType) == 0x000008, "Member 'BP_BreachingCharge_C_ServerUseWithParams::UseType' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ServerUseWithParams, Params_0) == 0x000010, "Member 'BP_BreachingCharge_C_ServerUseWithParams::Params_0' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.ServerUse
// 0x0010 (0x0010 - 0x0000)
struct BP_BreachingCharge_C_ServerUse final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseType;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_ServerUse) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_ServerUse");
static_assert(sizeof(BP_BreachingCharge_C_ServerUse) == 0x000010, "Wrong size on BP_BreachingCharge_C_ServerUse");
static_assert(offsetof(BP_BreachingCharge_C_ServerUse, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_ServerUse::Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ServerUse, UseType) == 0x000008, "Member 'BP_BreachingCharge_C_ServerUse::UseType' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.RemoveUser
// 0x0008 (0x0008 - 0x0000)
struct BP_BreachingCharge_C_RemoveUser final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_RemoveUser) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_RemoveUser");
static_assert(sizeof(BP_BreachingCharge_C_RemoveUser) == 0x000008, "Wrong size on BP_BreachingCharge_C_RemoveUser");
static_assert(offsetof(BP_BreachingCharge_C_RemoveUser, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_RemoveUser::Controller' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.ClientUseWithParams
// 0x0020 (0x0020 - 0x0000)
struct BP_BreachingCharge_C_ClientUseWithParams final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseType;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Params_0;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_ClientUseWithParams) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_ClientUseWithParams");
static_assert(sizeof(BP_BreachingCharge_C_ClientUseWithParams) == 0x000020, "Wrong size on BP_BreachingCharge_C_ClientUseWithParams");
static_assert(offsetof(BP_BreachingCharge_C_ClientUseWithParams, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_ClientUseWithParams::Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ClientUseWithParams, UseType) == 0x000008, "Member 'BP_BreachingCharge_C_ClientUseWithParams::UseType' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ClientUseWithParams, Params_0) == 0x000010, "Member 'BP_BreachingCharge_C_ClientUseWithParams::Params_0' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.ClientUse
// 0x0010 (0x0010 - 0x0000)
struct BP_BreachingCharge_C_ClientUse final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseType;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_ClientUse) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_ClientUse");
static_assert(sizeof(BP_BreachingCharge_C_ClientUse) == 0x000010, "Wrong size on BP_BreachingCharge_C_ClientUse");
static_assert(offsetof(BP_BreachingCharge_C_ClientUse, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_ClientUse::Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_ClientUse, UseType) == 0x000008, "Member 'BP_BreachingCharge_C_ClientUse::UseType' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.AIUseWithParams
// 0x0020 (0x0020 - 0x0000)
struct BP_BreachingCharge_C_AIUseWithParams final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseType;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Params_0;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_AIUseWithParams) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_AIUseWithParams");
static_assert(sizeof(BP_BreachingCharge_C_AIUseWithParams) == 0x000020, "Wrong size on BP_BreachingCharge_C_AIUseWithParams");
static_assert(offsetof(BP_BreachingCharge_C_AIUseWithParams, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_AIUseWithParams::Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_AIUseWithParams, UseType) == 0x000008, "Member 'BP_BreachingCharge_C_AIUseWithParams::UseType' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_AIUseWithParams, Params_0) == 0x000010, "Member 'BP_BreachingCharge_C_AIUseWithParams::Params_0' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.AIUse
// 0x0010 (0x0010 - 0x0000)
struct BP_BreachingCharge_C_AIUse final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseType;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_AIUse) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_AIUse");
static_assert(sizeof(BP_BreachingCharge_C_AIUse) == 0x000010, "Wrong size on BP_BreachingCharge_C_AIUse");
static_assert(offsetof(BP_BreachingCharge_C_AIUse, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_AIUse::Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_AIUse, UseType) == 0x000008, "Member 'BP_BreachingCharge_C_AIUse::UseType' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.AddUser
// 0x0008 (0x0008 - 0x0000)
struct BP_BreachingCharge_C_AddUser final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_AddUser) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_AddUser");
static_assert(sizeof(BP_BreachingCharge_C_AddUser) == 0x000008, "Wrong size on BP_BreachingCharge_C_AddUser");
static_assert(offsetof(BP_BreachingCharge_C_AddUser, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_AddUser::Controller' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.DamageCharacter
// 0x00E8 (0x00E8 - 0x0000)
struct BP_BreachingCharge_C_DamageCharacter final
{
public:
	class AGBCharacter*                           InGBCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocalWasAlive;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue_1;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State_1;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CanDamageRadial_OutHit;                   // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CanDamageRadial_ReturnValue;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_ApplyRadialDamageDirect_ReturnValue;      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFriendly_ReturnValue;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreachingCharge_C_DamageCharacter) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_DamageCharacter");
static_assert(sizeof(BP_BreachingCharge_C_DamageCharacter) == 0x0000E8, "Wrong size on BP_BreachingCharge_C_DamageCharacter");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, InGBCharacter) == 0x000000, "Member 'BP_BreachingCharge_C_DamageCharacter::InGBCharacter' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, bLocalWasAlive) == 0x000008, "Member 'BP_BreachingCharge_C_DamageCharacter::bLocalWasAlive' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_Array_Contains_ReturnValue) == 0x000009, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_IsAlive_ReturnValue) == 0x000010, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, K2Node_DynamicCast_AsGBPlayer_State) == 0x000018, "Member 'BP_BreachingCharge_C_DamageCharacter::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BreachingCharge_C_DamageCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000021, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_IsAlive_ReturnValue_1) == 0x000022, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_IsAlive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_GetInstigatorController_ReturnValue) == 0x000028, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_GetInstigatorController_ReturnValue_1) == 0x000030, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_GetInstigatorController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, K2Node_DynamicCast_AsGBPlayer_State_1) == 0x000038, "Member 'BP_BreachingCharge_C_DamageCharacter::K2Node_DynamicCast_AsGBPlayer_State_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_BreachingCharge_C_DamageCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_CanDamageRadial_OutHit) == 0x000044, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_CanDamageRadial_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_CanDamageRadial_ReturnValue) == 0x0000CC, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_CanDamageRadial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_BreachingCharge_C_DamageCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_ApplyRadialDamageDirect_ReturnValue) == 0x0000E0, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_ApplyRadialDamageDirect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_DamageCharacter, CallFunc_IsFriendly_ReturnValue) == 0x0000E4, "Member 'BP_BreachingCharge_C_DamageCharacter::CallFunc_IsFriendly_ReturnValue' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.AIQuestionWithParams
// 0x0028 (0x0028 - 0x0000)
struct BP_BreachingCharge_C_AIQuestionWithParams final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseType;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Params_0;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_AIQuestionWithParams) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_AIQuestionWithParams");
static_assert(sizeof(BP_BreachingCharge_C_AIQuestionWithParams) == 0x000028, "Wrong size on BP_BreachingCharge_C_AIQuestionWithParams");
static_assert(offsetof(BP_BreachingCharge_C_AIQuestionWithParams, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_AIQuestionWithParams::Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_AIQuestionWithParams, UseType) == 0x000008, "Member 'BP_BreachingCharge_C_AIQuestionWithParams::UseType' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_AIQuestionWithParams, Params_0) == 0x000010, "Member 'BP_BreachingCharge_C_AIQuestionWithParams::Params_0' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_AIQuestionWithParams, ReturnValue) == 0x000020, "Member 'BP_BreachingCharge_C_AIQuestionWithParams::ReturnValue' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.AIQuestion
// 0x0018 (0x0018 - 0x0000)
struct BP_BreachingCharge_C_AIQuestion final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseType;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_AIQuestion) == 0x000008, "Wrong alignment on BP_BreachingCharge_C_AIQuestion");
static_assert(sizeof(BP_BreachingCharge_C_AIQuestion) == 0x000018, "Wrong size on BP_BreachingCharge_C_AIQuestion");
static_assert(offsetof(BP_BreachingCharge_C_AIQuestion, Controller) == 0x000000, "Member 'BP_BreachingCharge_C_AIQuestion::Controller' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_AIQuestion, UseType) == 0x000008, "Member 'BP_BreachingCharge_C_AIQuestion::UseType' has a wrong offset!");
static_assert(offsetof(BP_BreachingCharge_C_AIQuestion, ReturnValue) == 0x000010, "Member 'BP_BreachingCharge_C_AIQuestion::ReturnValue' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.GetNumUsers
// 0x0004 (0x0004 - 0x0000)
struct BP_BreachingCharge_C_GetNumUsers final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreachingCharge_C_GetNumUsers) == 0x000004, "Wrong alignment on BP_BreachingCharge_C_GetNumUsers");
static_assert(sizeof(BP_BreachingCharge_C_GetNumUsers) == 0x000004, "Wrong size on BP_BreachingCharge_C_GetNumUsers");
static_assert(offsetof(BP_BreachingCharge_C_GetNumUsers, ReturnValue) == 0x000000, "Member 'BP_BreachingCharge_C_GetNumUsers::ReturnValue' has a wrong offset!");

// Function BP_BreachingCharge.BP_BreachingCharge_C.IsTeamSpecific
// 0x0001 (0x0001 - 0x0000)
struct BP_BreachingCharge_C_IsTeamSpecific final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreachingCharge_C_IsTeamSpecific) == 0x000001, "Wrong alignment on BP_BreachingCharge_C_IsTeamSpecific");
static_assert(sizeof(BP_BreachingCharge_C_IsTeamSpecific) == 0x000001, "Wrong size on BP_BreachingCharge_C_IsTeamSpecific");
static_assert(offsetof(BP_BreachingCharge_C_IsTeamSpecific, ReturnValue) == 0x000000, "Member 'BP_BreachingCharge_C_IsTeamSpecific::ReturnValue' has a wrong offset!");

}

