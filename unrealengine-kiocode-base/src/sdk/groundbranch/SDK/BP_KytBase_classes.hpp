#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KytBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Character_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KytBase.BP_KytBase_C
// 0x0070 (0x0E50 - 0x0DE0)
class ABP_KytBase_C : public ABP_Character_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_KytBase_C;                       // 0x0DE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGBAIExtensionComponent*                GBAIExtension;                                     // 0x0DE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKytPathFollowingComponent*             KytPathFollowing;                                  // 0x0DF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FString                                 BehaviorToRun;                                     // 0x0DF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UKytBlackboard*                         CommonBB_0;                                        // 0x0E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DoorSwinging_Generic_C*             CurrentDoor;                                       // 0x0E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           MoveTimer;                                         // 0x0E18(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        MoveGoals;                                         // 0x0E20(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_GBLadder_C*                         CurrentLadder;                                     // 0x0E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         CommonBB_0_0;                                      // 0x0E38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Grenade_Projectile_C*>       PerceivedGrenades;                                 // 0x0E40(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_KytBase(int32 EntryPoint);
	void PlayTakeHitEffects();
	void BndEvt__BP_KytBase_GBAIExtension_K2Node_ComponentBoundEvent_0_AIInitializedSignature__DelegateSignature(class AGBKytController* Controller_0);
	void SetupNavlinkEvents();
	void BndEvt__BP_KyBase_KytPathFollowing_K2Node_ComponentBoundEvent_0_KytAnimationEvent__DelegateSignature(const struct FKytAnimRequest& AnimParameters);
	void UseDoor();
	void Removed_57B0C34A47BAFED7C32461BF6AF6C720();
	void Added_2FD722E74F812E8F71355B9F03561BDC();
	void Added_A72D78B74454EA170D4A66959C4F70A0();
	void Added_7743216E4673FADC6EB218B5A1A3A421();
	void OnCompleted_57DFBDB84A18F4C71465C2BF15ACDA23(class FName NotifyName);
	void OnBlendOut_57DFBDB84A18F4C71465C2BF15ACDA23(class FName NotifyName);
	void OnInterrupted_57DFBDB84A18F4C71465C2BF15ACDA23(class FName NotifyName);
	void OnNotifyBegin_57DFBDB84A18F4C71465C2BF15ACDA23(class FName NotifyName);
	void OnNotifyEnd_57DFBDB84A18F4C71465C2BF15ACDA23(class FName NotifyName);
	bool IsAnimationSupported(const class FString& AnimationName, const class UKytBlackboard* AnimationParameters);
	void CheckUseDoor(bool* bDoorFound);
	void MoveTowards();
	void CheckUseLadder(bool* bLadderFound);
	void MoveUp();
	void MoveDown();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KytBase_C">();
	}
	static class ABP_KytBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KytBase_C>();
	}
};
static_assert(alignof(ABP_KytBase_C) == 0x000010, "Wrong alignment on ABP_KytBase_C");
static_assert(sizeof(ABP_KytBase_C) == 0x000E50, "Wrong size on ABP_KytBase_C");
static_assert(offsetof(ABP_KytBase_C, UberGraphFrame_BP_KytBase_C) == 0x000DE0, "Member 'ABP_KytBase_C::UberGraphFrame_BP_KytBase_C' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, GBAIExtension) == 0x000DE8, "Member 'ABP_KytBase_C::GBAIExtension' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, KytPathFollowing) == 0x000DF0, "Member 'ABP_KytBase_C::KytPathFollowing' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, BehaviorToRun) == 0x000DF8, "Member 'ABP_KytBase_C::BehaviorToRun' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, CommonBB_0) == 0x000E08, "Member 'ABP_KytBase_C::CommonBB_0' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, CurrentDoor) == 0x000E10, "Member 'ABP_KytBase_C::CurrentDoor' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, MoveTimer) == 0x000E18, "Member 'ABP_KytBase_C::MoveTimer' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, MoveGoals) == 0x000E20, "Member 'ABP_KytBase_C::MoveGoals' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, CurrentLadder) == 0x000E30, "Member 'ABP_KytBase_C::CurrentLadder' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, CommonBB_0_0) == 0x000E38, "Member 'ABP_KytBase_C::CommonBB_0_0' has a wrong offset!");
static_assert(offsetof(ABP_KytBase_C, PerceivedGrenades) == 0x000E40, "Member 'ABP_KytBase_C::PerceivedGrenades' has a wrong offset!");

}

