#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BreachingCharge

#include "Basic.hpp"

#include "BP_BreachingCharge_classes.hpp"
#include "BP_BreachingCharge_parameters.hpp"


namespace SDK
{

// Function BP_BreachingCharge.BP_BreachingCharge_C.ExecuteUbergraph_BP_BreachingCharge
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::ExecuteUbergraph_BP_BreachingCharge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "ExecuteUbergraph_BP_BreachingCharge");

	Params::BP_BreachingCharge_C_ExecuteUbergraph_BP_BreachingCharge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.BindToDetonator
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Detonator_C*                  InDetonator                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::BindToDetonator(class ABP_Detonator_C* InDetonator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "BindToDetonator");

	Params::BP_BreachingCharge_C_BindToDetonator Parms{};

	Parms.InDetonator = InDetonator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.OnDetonatorUse_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Detonator_C*                  Detonator                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::OnDetonatorUse_Event_0(class ABP_Detonator_C* Detonator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "OnDetonatorUse_Event_0");

	Params::BP_BreachingCharge_C_OnDetonatorUse_Event_0 Parms{};

	Parms.Detonator = Detonator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.Detonate
// (BlueprintCallable, BlueprintEvent)

void ABP_BreachingCharge_C::Detonate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "Detonate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.K2_OnReset
// (Event, Public, BlueprintEvent)

void ABP_BreachingCharge_C::K2_OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "K2_OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.ServerUseWithParams
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::ServerUseWithParams(class AController* Controller, class FName UseType, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "ServerUseWithParams");

	Params::BP_BreachingCharge_C_ServerUseWithParams Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.ServerUse
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::ServerUse(class AController* Controller, class FName UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "ServerUse");

	Params::BP_BreachingCharge_C_ServerUse Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.RemoveUser
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::RemoveUser(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "RemoveUser");

	Params::BP_BreachingCharge_C_RemoveUser Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.ClientUseWithParams
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::ClientUseWithParams(class AController* Controller, class FName UseType, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "ClientUseWithParams");

	Params::BP_BreachingCharge_C_ClientUseWithParams Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.ClientUse
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::ClientUse(class AController* Controller, class FName UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "ClientUse");

	Params::BP_BreachingCharge_C_ClientUse Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.AIUseWithParams
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::AIUseWithParams(class AController* Controller, class FName UseType, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "AIUseWithParams");

	Params::BP_BreachingCharge_C_AIUseWithParams Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.AIUse
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::AIUse(class AController* Controller, class FName UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "AIUse");

	Params::BP_BreachingCharge_C_AIUse Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.AddUser
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::AddUser(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "AddUser");

	Params::BP_BreachingCharge_C_AddUser Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.DamageCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBCharacter*                     InGBCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BreachingCharge_C::DamageCharacter(class AGBCharacter* InGBCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "DamageCharacter");

	Params::BP_BreachingCharge_C_DamageCharacter Parms{};

	Parms.InGBCharacter = InGBCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.AIQuestionWithParams
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_BreachingCharge_C::AIQuestionWithParams(class AController* Controller, class FName UseType, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "AIQuestionWithParams");

	Params::BP_BreachingCharge_C_AIQuestionWithParams Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.AIQuestion
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_BreachingCharge_C::AIQuestion(class AController* Controller, class FName UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "AIQuestion");

	Params::BP_BreachingCharge_C_AIQuestion Parms{};

	Parms.Controller = Controller;
	Parms.UseType = UseType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.GetNumUsers
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_BreachingCharge_C::GetNumUsers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "GetNumUsers");

	Params::BP_BreachingCharge_C_GetNumUsers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BreachingCharge.BP_BreachingCharge_C.IsTeamSpecific
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_BreachingCharge_C::IsTeamSpecific() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BreachingCharge_C", "IsTeamSpecific");

	Params::BP_BreachingCharge_C_IsTeamSpecific Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

