#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TacLight_Master

#include "Basic.hpp"

#include "BP_TacLight_Master_classes.hpp"
#include "BP_TacLight_Master_parameters.hpp"


namespace SDK
{

// Function BP_TacLight_Master.BP_TacLight_Master_C.ExecuteUbergraph_BP_TacLight_Master
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TacLight_Master_C::ExecuteUbergraph_BP_TacLight_Master(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "ExecuteUbergraph_BP_TacLight_Master");

	Params::BP_TacLight_Master_C_ExecuteUbergraph_BP_TacLight_Master Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.CreateMIDsEvent
// (Event, Protected, BlueprintEvent)

void ABP_TacLight_Master_C::CreateMIDsEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "CreateMIDsEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.BindToLightActiveEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_TacLight_Master_C::BindToLightActiveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "BindToLightActiveEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.OnLightActiveEvent_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLightActive                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLightVisibility                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TacLight_Master_C::OnLightActiveEvent_Event_0(bool bLightActive, bool bLightVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "OnLightActiveEvent_Event_0");

	Params::BP_TacLight_Master_C_OnLightActiveEvent_Event_0 Parms{};

	Parms.bLightActive = bLightActive;
	Parms.bLightVisibility = bLightVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.OnAddedToInventoryEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class AGBCharacter*                     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TacLight_Master_C::OnAddedToInventoryEvent(class AGBCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "OnAddedToInventoryEvent");

	Params::BP_TacLight_Master_C_OnAddedToInventoryEvent Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.OnBeingUnequipped
// (Event, Public, BlueprintEvent)

void ABP_TacLight_Master_C::OnBeingUnequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "OnBeingUnequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.OnSelected_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TacLight_Master_C::OnSelected_Event_0(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "OnSelected_Event_0");

	Params::BP_TacLight_Master_C_OnSelected_Event_0 Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.AddAttachedUseMenuEntries
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      UsageMenu                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TacLight_Master_C::AddAttachedUseMenuEntries(class UUserWidget* UsageMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "AddAttachedUseMenuEntries");

	Params::BP_TacLight_Master_C_AddAttachedUseMenuEntries Parms{};

	Parms.UsageMenu = UsageMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.OnBeingEquipped
// (Event, Public, BlueprintEvent)

void ABP_TacLight_Master_C::OnBeingEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "OnBeingEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.OnRemovedFromInventoryEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class AGBCharacter*                     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TacLight_Master_C::OnRemovedFromInventoryEvent(class AGBCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "OnRemovedFromInventoryEvent");

	Params::BP_TacLight_Master_C_OnRemovedFromInventoryEvent Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_TacLight_Master_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TacLight_Master.BP_TacLight_Master_C.AllowUsageWhileAttached
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_TacLight_Master_C::AllowUsageWhileAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TacLight_Master_C", "AllowUsageWhileAttached");

	Params::BP_TacLight_Master_C_AllowUsageWhileAttached Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

