#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MissionSettings_TimeOfDayPopUp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MissionSettings_TimeOfDayPopUp.WBP_MissionSettings_TimeOfDayPopUp_C
// 0x0160 (0x03C0 - 0x0260)
class UWBP_MissionSettings_TimeOfDayPopUp_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_Apply;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Cancel;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ButtonSwitchToAdvanced;                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ButtonSwitchToSimple;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NoAdvancedOptionsText;                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TabSwitcher;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionResult;                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MissionSettings_TimeOfDay_AdvancedTab_C* WBP_MissionSettings_TimeOfDay_AdvancedTab;   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MissionSettings_TimeOfDay_SimpleTab_C* WBP_MissionSettings_TimeOfDay_SimpleTab;       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MissionSettings_TimeOfDay_Summary_C* WBP_MissionSettings_TimeOfDay_Summary;           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGBWorldSettings*                       GBWorldSettingsRef;                                // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseConfigValue;                                   // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& TimeOfDaySetting, const class FString& WeatherSetting)> OnSettingsChanged; // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FString>                         PossibleDefaultTimeOfDays;                         // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Number_Of_Steps;                                   // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSunriseTime;                                // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSunsetTime;                                 // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicMoonPhaseMaterial;                          // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentDay;                                        // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentMonth;                                      // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentYear;                                       // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionTimeLabel                             CurrentTimePreset;                                 // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentTimeOfDay;                                  // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentWeatherCategory;                            // 0x0314(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentWeatherType;                                // 0x031C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            TabSelectedColour;                                 // 0x0328(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TabNotSelectedColour;                              // 0x0350(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 WeatherPresetsFileLocation;                        // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 CurrentWeatherPreset;                              // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 TimeOfDayInitialValue;                             // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 WeatherInitialValue;                               // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bRestrictedMode;                                   // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void GetPaddedDateUnit(int32 DateUnit, class FString* PaddedOutput);
	void GetTimeOfDaySetting(class FString* TimeOfDaySetting);
	class UWidget* Get_EditableTextBox_String_HintText_0();
	void Construct();
	void BndEvt__WBP_MissionSettings_AdvancedTimeOfDay_ButtonSwitchToSimple_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_MissionSettings_AdvancedTimeOfDay_ButtonSwitchToAdvanced_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void HighlightCurrentTabButton();
	void BndEvt__WBP_MissionSettings_AdvancedTimeOfDay_ButtonSwitchToAdvanced_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_MissionSettings_AdvancedTimeOfDay_ButtonSwitchToSimple_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void SetButtonTint(class UButton* ButtonToEdit, const struct FSlateColor& NewTint);
	void OnTabChangedDateTime(int32 Year, int32 Month, int32 Day, EMissionTimeLabel TimePreset, float TimeOfDay, class FName WeatherCategory, class FName WeatherType);
	void Close();
	void BndEvt__WBP_MissionSettings_TimeOfDayPopUp_Button_Cancel_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_MissionSettings_TimeOfDayPopUp_Button_Apply_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void PickRandomMonthAndDay();
	void UpdateInfoPanel();
	void ApplyRestrictionsIfNeeded();
	void ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MissionSettings_TimeOfDayPopUp_C">();
	}
	static class UWBP_MissionSettings_TimeOfDayPopUp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MissionSettings_TimeOfDayPopUp_C>();
	}
};
static_assert(alignof(UWBP_MissionSettings_TimeOfDayPopUp_C) == 0x000008, "Wrong alignment on UWBP_MissionSettings_TimeOfDayPopUp_C");
static_assert(sizeof(UWBP_MissionSettings_TimeOfDayPopUp_C) == 0x0003C0, "Wrong size on UWBP_MissionSettings_TimeOfDayPopUp_C");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, UberGraphFrame) == 0x000260, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, Button_Apply) == 0x000268, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::Button_Apply' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, Button_Cancel) == 0x000270, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::Button_Cancel' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, ButtonSwitchToAdvanced) == 0x000278, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::ButtonSwitchToAdvanced' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, ButtonSwitchToSimple) == 0x000280, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::ButtonSwitchToSimple' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, NoAdvancedOptionsText) == 0x000288, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::NoAdvancedOptionsText' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, TabSwitcher) == 0x000290, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::TabSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, TextBlock_MissionResult) == 0x000298, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::TextBlock_MissionResult' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, WBP_MissionSettings_TimeOfDay_AdvancedTab) == 0x0002A0, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::WBP_MissionSettings_TimeOfDay_AdvancedTab' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, WBP_MissionSettings_TimeOfDay_SimpleTab) == 0x0002A8, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::WBP_MissionSettings_TimeOfDay_SimpleTab' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, WBP_MissionSettings_TimeOfDay_Summary) == 0x0002B0, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::WBP_MissionSettings_TimeOfDay_Summary' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, GBWorldSettingsRef) == 0x0002B8, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::GBWorldSettingsRef' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, bUseConfigValue) == 0x0002C0, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::bUseConfigValue' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, OnSettingsChanged) == 0x0002C8, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::OnSettingsChanged' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, PossibleDefaultTimeOfDays) == 0x0002D8, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::PossibleDefaultTimeOfDays' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, Number_Of_Steps) == 0x0002E8, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::Number_Of_Steps' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentSunriseTime) == 0x0002EC, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentSunriseTime' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentSunsetTime) == 0x0002F0, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentSunsetTime' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, DynamicMoonPhaseMaterial) == 0x0002F8, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::DynamicMoonPhaseMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentDay) == 0x000300, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentDay' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentMonth) == 0x000304, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentMonth' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentYear) == 0x000308, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentYear' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentTimePreset) == 0x00030C, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentTimePreset' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentTimeOfDay) == 0x000310, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentTimeOfDay' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentWeatherCategory) == 0x000314, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentWeatherCategory' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentWeatherType) == 0x00031C, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentWeatherType' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, TabSelectedColour) == 0x000328, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::TabSelectedColour' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, TabNotSelectedColour) == 0x000350, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::TabNotSelectedColour' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, WeatherPresetsFileLocation) == 0x000378, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::WeatherPresetsFileLocation' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, CurrentWeatherPreset) == 0x000388, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::CurrentWeatherPreset' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, TimeOfDayInitialValue) == 0x000398, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::TimeOfDayInitialValue' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, WeatherInitialValue) == 0x0003A8, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::WeatherInitialValue' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSettings_TimeOfDayPopUp_C, bRestrictedMode) == 0x0003B8, "Member 'UWBP_MissionSettings_TimeOfDayPopUp_C::bRestrictedMode' has a wrong offset!");

}

