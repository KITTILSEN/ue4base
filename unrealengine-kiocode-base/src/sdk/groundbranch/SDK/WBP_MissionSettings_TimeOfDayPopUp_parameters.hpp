#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MissionSettings_TimeOfDayPopUp

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_MissionSettings_TimeOfDayPopUp.WBP_MissionSettings_TimeOfDayPopUp_C.GetPaddedDateUnit
// 0x0050 (0x0050 - 0x0000)
struct WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit final
{
public:
	int32                                         DateUnit;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PaddedOutput;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit) == 0x000008, "Wrong alignment on WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit");
static_assert(sizeof(WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit) == 0x000050, "Wrong size on WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit, DateUnit) == 0x000000, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit::DateUnit' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit, PaddedOutput) == 0x000008, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit::PaddedOutput' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit, CallFunc_SelectString_ReturnValue) == 0x000040, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetPaddedDateUnit::CallFunc_SelectString_ReturnValue' has a wrong offset!");

// Function WBP_MissionSettings_TimeOfDayPopUp.WBP_MissionSettings_TimeOfDayPopUp_C.GetTimeOfDaySetting
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting final
{
public:
	class FString                                 TimeOfDaySetting;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPaddedDateUnit_PaddedOutput;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPaddedDateUnit_PaddedOutput_1;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertMinutesTo24Hours_ReturnValue;      // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RemoveSpaces_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting) == 0x000008, "Wrong alignment on WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting");
static_assert(sizeof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting) == 0x0000E8, "Wrong size on WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, TimeOfDaySetting) == 0x000000, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::TimeOfDaySetting' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_GetPaddedDateUnit_PaddedOutput) == 0x000010, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_GetPaddedDateUnit_PaddedOutput' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_GetPaddedDateUnit_PaddedOutput_1) == 0x000020, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_GetPaddedDateUnit_PaddedOutput_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000040, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_FTrunc_ReturnValue) == 0x000058, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_ConvertMinutesTo24Hours_ReturnValue) == 0x000070, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_ConvertMinutesTo24Hours_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000090, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_RemoveSpaces_ReturnValue) == 0x0000B0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_RemoveSpaces_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_GetTimeOfDaySetting::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function WBP_MissionSettings_TimeOfDayPopUp.WBP_MissionSettings_TimeOfDayPopUp_C.Get_EditableTextBox_String_HintText_0
// 0x0028 (0x0028 - 0x0000)
struct WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class UWBP_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0) == 0x000008, "Wrong alignment on WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0");
static_assert(sizeof(WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0) == 0x000028, "Wrong size on WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0, ReturnValue) == 0x000000, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0, Temp_text_Variable) == 0x000008, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_Get_EditableTextBox_String_HintText_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_MissionSettings_TimeOfDayPopUp.WBP_MissionSettings_TimeOfDayPopUp_C.SetButtonTint
// 0x0030 (0x0030 - 0x0000)
struct WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint final
{
public:
	class UButton*                                ButtonToEdit;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            NewTint;                                           // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint) == 0x000008, "Wrong alignment on WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint");
static_assert(sizeof(WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint) == 0x000030, "Wrong size on WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint, ButtonToEdit) == 0x000000, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint::ButtonToEdit' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint, NewTint) == 0x000008, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_SetButtonTint::NewTint' has a wrong offset!");

// Function WBP_MissionSettings_TimeOfDayPopUp.WBP_MissionSettings_TimeOfDayPopUp_C.OnTabChangedDateTime
// 0x0024 (0x0024 - 0x0000)
struct WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime final
{
public:
	int32                                         Year;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Month;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionTimeLabel                             TimePreset;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeOfDay;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WeatherCategory;                                   // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WeatherType;                                       // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime) == 0x000004, "Wrong alignment on WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime");
static_assert(sizeof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime) == 0x000024, "Wrong size on WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime, Year) == 0x000000, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime::Year' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime, Month) == 0x000004, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime::Month' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime, Day) == 0x000008, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime::Day' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime, TimePreset) == 0x00000C, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime::TimePreset' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime, TimeOfDay) == 0x000010, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime::TimeOfDay' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime, WeatherCategory) == 0x000014, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime::WeatherCategory' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime, WeatherType) == 0x00001C, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_OnTabChangedDateTime::WeatherType' has a wrong offset!");

// Function WBP_MissionSettings_TimeOfDayPopUp.WBP_MissionSettings_TimeOfDayPopUp_C.ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp
// 0x0500 (0x0500 - 0x0000)
struct WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Year, int32 Month, int32 Day, EMissionTimeLabel TimePreset, float TimeOfDay, class FName WeatherCategory, class FName WeatherType)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Year;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Month;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Day;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionTimeLabel                             K2Node_CustomEvent_TimePreset;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimeOfDay;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WeatherCategory;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WeatherType;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionTimeLabel                             CallFunc_DecodeTimeOfDayString_OutMissionTimeLabel; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DecodeTimeOfDayString_OutTimeInHours;     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DecodeTimeOfDayString_OutYear;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DecodeTimeOfDayString_OutMonth;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DecodeTimeOfDayString_OutDay;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_CustomEvent_ButtonToEdit;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_CustomEvent_NewTint;                        // 0x0070(0x0028)()
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00A0(0x0088)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle;                     // 0x0130(0x0278)()
	bool                                          Temp_bool_Variable;                                // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x03B0(0x0028)()
	class FString                                 CallFunc_EncodeTimeOfDayStringHours_ReturnValue;   // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_1;       // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Config_GetInt_bValid;                     // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Config_GetInt_ReturnValue;                // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_EncodeWeatherString_ReturnValue;          // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_DecodeWeatherString_OutWeatherCategory;   // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_DecodeWeatherString_OutWeatherType;       // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue_1;             // 0x0418(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerControllerBase*                K2Node_DynamicCast_AsGBPlayer_Controller_Base;     // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0450(0x0028)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48A[0x6];                                      // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBWorldSettings*                       CallFunc_GetWorldSettings_ReturnValue;             // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x049B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_2;       // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x04A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A6[0x2];                                      // 0x04A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Temp_int_Variable;                                 // 0x04A8(0x0010)(ConstParm, ReferenceParm)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRandomAllowableDay_OutMonth;           // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandomAllowableDay_OutDay;             // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_4;                           // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFirstAllowableMonth_ReturnValue;       // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetListOfAllowableMonthNumbers_ReturnValue; // 0x04E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetRandomAllowableDay_OutMonth_1;         // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandomAllowableDay_OutDay_1;           // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp) == 0x000008, "Wrong alignment on WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp");
static_assert(sizeof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp) == 0x000500, "Wrong size on WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, EntryPoint) == 0x000000, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_Year) == 0x000014, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_Year' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_Month) == 0x000018, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_Month' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_Day) == 0x00001C, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_Day' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_TimePreset) == 0x000020, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_TimePreset' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_TimeOfDay) == 0x000024, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_TimeOfDay' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_WeatherCategory) == 0x000028, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_WeatherCategory' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_WeatherType) == 0x000030, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_WeatherType' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_DecodeTimeOfDayString_OutMissionTimeLabel) == 0x000038, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_DecodeTimeOfDayString_OutMissionTimeLabel' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_DecodeTimeOfDayString_OutTimeInHours) == 0x00003C, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_DecodeTimeOfDayString_OutTimeInHours' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_DecodeTimeOfDayString_OutYear) == 0x000040, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_DecodeTimeOfDayString_OutYear' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_DecodeTimeOfDayString_OutMonth) == 0x000044, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_DecodeTimeOfDayString_OutMonth' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_DecodeTimeOfDayString_OutDay) == 0x000048, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_DecodeTimeOfDayString_OutDay' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_ParseIntoArray_ReturnValue) == 0x000050, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_ButtonToEdit) == 0x000068, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_ButtonToEdit' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_CustomEvent_NewTint) == 0x000070, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_CustomEvent_NewTint' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000098, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00009C, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_MakeStruct_SlateBrush) == 0x0000A0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000128, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_MakeStruct_ButtonStyle) == 0x000130, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_MakeStruct_ButtonStyle' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_bool_Variable) == 0x0003A8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_Select_Default) == 0x0003B0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_EncodeTimeOfDayStringHours_ReturnValue) == 0x0003D8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_EncodeTimeOfDayStringHours_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetActiveWidgetIndex_ReturnValue_1) == 0x0003E8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetActiveWidgetIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_Config_GetInt_bValid) == 0x0003EC, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_Config_GetInt_bValid' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_Config_GetInt_ReturnValue) == 0x0003F0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_Config_GetInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_Less_IntInt_ReturnValue) == 0x0003F4, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_EncodeWeatherString_ReturnValue) == 0x0003F8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_EncodeWeatherString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_DecodeWeatherString_OutWeatherCategory) == 0x000408, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_DecodeWeatherString_OutWeatherCategory' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_DecodeWeatherString_OutWeatherType) == 0x000410, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_DecodeWeatherString_OutWeatherType' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_ParseIntoArray_ReturnValue_1) == 0x000418, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_ParseIntoArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_Array_Length_ReturnValue_1) == 0x000428, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00042C, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetPlayerController_ReturnValue) == 0x000430, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_bool_Variable_1) == 0x000438, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_DynamicCast_AsGBPlayer_Controller_Base) == 0x000440, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_DynamicCast_AsGBPlayer_Controller_Base' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_DynamicCast_bSuccess) == 0x000448, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_Select_Default_1) == 0x000450, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetOwningPlayer_ReturnValue) == 0x000478, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_DynamicCast_AsGBPlayer_State) == 0x000480, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_DynamicCast_bSuccess_1) == 0x000488, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_IsValid_ReturnValue) == 0x000489, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetWorldSettings_ReturnValue) == 0x000490, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_IsValid_ReturnValue_1) == 0x000498, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_byte_Variable) == 0x000499, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_Not_PreBool_ReturnValue) == 0x00049A, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_byte_Variable_1) == 0x00049B, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetActiveWidgetIndex_ReturnValue_2) == 0x00049C, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetActiveWidgetIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0004A0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_bool_Variable_2) == 0x0004A1, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_byte_Variable_2) == 0x0004A2, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_Select_Default_2) == 0x0004A3, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_byte_Variable_3) == 0x0004A4, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_bool_Variable_3) == 0x0004A5, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_int_Variable) == 0x0004A8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_Select_Default_3) == 0x0004B8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetRandomAllowableDay_OutMonth) == 0x0004BC, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetRandomAllowableDay_OutMonth' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetRandomAllowableDay_OutDay) == 0x0004C0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetRandomAllowableDay_OutDay' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_int_Variable_1) == 0x0004C4, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, Temp_bool_Variable_4) == 0x0004C8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_Select_Default_4) == 0x0004CC, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_IsValid_ReturnValue_2) == 0x0004D0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_SelectInt_ReturnValue) == 0x0004D4, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, K2Node_SwitchInteger_CmpSuccess) == 0x0004D8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetFirstAllowableMonth_ReturnValue) == 0x0004DC, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetFirstAllowableMonth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_IsValid_ReturnValue_3) == 0x0004E0, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetListOfAllowableMonthNumbers_ReturnValue) == 0x0004E8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetListOfAllowableMonthNumbers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetRandomAllowableDay_OutMonth_1) == 0x0004F8, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetRandomAllowableDay_OutMonth_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp, CallFunc_GetRandomAllowableDay_OutDay_1) == 0x0004FC, "Member 'WBP_MissionSettings_TimeOfDayPopUp_C_ExecuteUbergraph_WBP_MissionSettings_TimeOfDayPopUp::CallFunc_GetRandomAllowableDay_OutDay_1' has a wrong offset!");

}

