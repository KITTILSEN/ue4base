#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AI_ThrowGrenade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GroundBranch_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_AI_ThrowGrenade.GA_AI_ThrowGrenade_C
// 0x00B8 (0x0470 - 0x03B8)
class UGA_AI_ThrowGrenade_C final : public UGBGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FPrimaryAssetId                        GrenadeAssetId;                                    // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             Grenade;                                           // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SettingGrenadeEmptyHands;                          // 0x03D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ProneMontage;                                      // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PrepareToThrowSection;                             // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThrowSection;                                      // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x0400(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GrenadeProjectileClass;                            // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GrenadeTag;                                        // 0x0418(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, struct FPrimaryAssetId> GrenadeAssets;                                 // 0x0420(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void K2_OnEndAbility(bool bWasCancelled);
	void Completed_F8C733864BD1CEC61D874A988A56AD09(TSubclassOf<class UObject> Loaded);
	void Removed_0DD8AC4942C9B3B795F6C3939EF8CE41();
	void OnCancelled_BE8825B746673CFCD451969113E72A22();
	void OnInterrupted_BE8825B746673CFCD451969113E72A22();
	void OnBlendOut_BE8825B746673CFCD451969113E72A22();
	void OnCompleted_BE8825B746673CFCD451969113E72A22();
	void EventReceived_5A28B4A44BFA8B07C05C35874995B467(const struct FGameplayEventData& Payload);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void EquipPrevMaybe();
	void MontageInterupterOrCancelled();
	void ServerSpawnProjectile(class AGBInvItem* Grenade_0, const struct FVector& SpawnLocation_0, const struct FVector& SpawnVelocity);
	void SpawnProjectile();
	void SwitchedToGrenade();
	void ExecuteUbergraph_GA_AI_ThrowGrenade(int32 EntryPoint);

	struct FVector GetSafeSpawnLocation(const struct FVector& InDesiredSpawnLocation) const;
	void GetDesiredSpawnLocation(struct FVector* OutDesiredSpawnLocation) const;
	void GetLaunchVelocity(struct FVector* OutVelocity) const;
	class UAnimMontage* GetMontage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_AI_ThrowGrenade_C">();
	}
	static class UGA_AI_ThrowGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_AI_ThrowGrenade_C>();
	}
};
static_assert(alignof(UGA_AI_ThrowGrenade_C) == 0x000008, "Wrong alignment on UGA_AI_ThrowGrenade_C");
static_assert(sizeof(UGA_AI_ThrowGrenade_C) == 0x000470, "Wrong size on UGA_AI_ThrowGrenade_C");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, UberGraphFrame) == 0x0003B8, "Member 'UGA_AI_ThrowGrenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, GrenadeAssetId) == 0x0003C0, "Member 'UGA_AI_ThrowGrenade_C::GrenadeAssetId' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, Grenade) == 0x0003D0, "Member 'UGA_AI_ThrowGrenade_C::Grenade' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, SettingGrenadeEmptyHands) == 0x0003D8, "Member 'UGA_AI_ThrowGrenade_C::SettingGrenadeEmptyHands' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, Montage) == 0x0003E0, "Member 'UGA_AI_ThrowGrenade_C::Montage' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, ProneMontage) == 0x0003E8, "Member 'UGA_AI_ThrowGrenade_C::ProneMontage' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, PrepareToThrowSection) == 0x0003F0, "Member 'UGA_AI_ThrowGrenade_C::PrepareToThrowSection' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, ThrowSection) == 0x0003F8, "Member 'UGA_AI_ThrowGrenade_C::ThrowSection' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, SpawnLocation) == 0x000400, "Member 'UGA_AI_ThrowGrenade_C::SpawnLocation' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, GrenadeProjectileClass) == 0x000410, "Member 'UGA_AI_ThrowGrenade_C::GrenadeProjectileClass' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, GrenadeTag) == 0x000418, "Member 'UGA_AI_ThrowGrenade_C::GrenadeTag' has a wrong offset!");
static_assert(offsetof(UGA_AI_ThrowGrenade_C, GrenadeAssets) == 0x000420, "Member 'UGA_AI_ThrowGrenade_C::GrenadeAssets' has a wrong offset!");

}

