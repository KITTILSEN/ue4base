#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Trigger_PrepArea_Exit

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Trigger_PrepArea_Exit.BP_Trigger_PrepArea_Exit_C.ExecuteUbergraph_BP_Trigger_PrepArea_Exit
// 0x0028 (0x0028 - 0x0000)
struct BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_Event_GBPlayerController;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPositiveExit;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit) == 0x000008, "Wrong alignment on BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit");
static_assert(sizeof(BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit) == 0x000028, "Wrong size on BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit");
static_assert(offsetof(BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit, EntryPoint) == 0x000000, "Member 'BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit, K2Node_Event_GBPlayerController) == 0x000008, "Member 'BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit::K2Node_Event_GBPlayerController' has a wrong offset!");
static_assert(offsetof(BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit, K2Node_Event_bPositiveExit) == 0x000010, "Member 'BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit::K2Node_Event_bPositiveExit' has a wrong offset!");
static_assert(offsetof(BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit, K2Node_DynamicCast_AsGBPlayer_State) == 0x000018, "Member 'BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Trigger_PrepArea_Exit_C_ExecuteUbergraph_BP_Trigger_PrepArea_Exit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Trigger_PrepArea_Exit.BP_Trigger_PrepArea_Exit_C.ExitedOnServer
// 0x0010 (0x0010 - 0x0000)
struct BP_Trigger_PrepArea_Exit_C_ExitedOnServer final
{
public:
	class AGBPlayerController*                    GBPlayerController;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPositiveExit;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Trigger_PrepArea_Exit_C_ExitedOnServer) == 0x000008, "Wrong alignment on BP_Trigger_PrepArea_Exit_C_ExitedOnServer");
static_assert(sizeof(BP_Trigger_PrepArea_Exit_C_ExitedOnServer) == 0x000010, "Wrong size on BP_Trigger_PrepArea_Exit_C_ExitedOnServer");
static_assert(offsetof(BP_Trigger_PrepArea_Exit_C_ExitedOnServer, GBPlayerController) == 0x000000, "Member 'BP_Trigger_PrepArea_Exit_C_ExitedOnServer::GBPlayerController' has a wrong offset!");
static_assert(offsetof(BP_Trigger_PrepArea_Exit_C_ExitedOnServer, bPositiveExit) == 0x000008, "Member 'BP_Trigger_PrepArea_Exit_C_ExitedOnServer::bPositiveExit' has a wrong offset!");

}

