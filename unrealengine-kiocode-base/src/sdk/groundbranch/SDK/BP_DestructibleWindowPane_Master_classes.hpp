#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestructibleWindowPane_Master

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DestructibleWindowPane_Master.BP_DestructibleWindowPane_Master_C
// 0x00F0 (0x0310 - 0x0220)
class ABP_DestructibleWindowPane_Master_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UDestructibleMesh*>              DestructibleMeshes;                                // 0x0230(0x0010)(Edit, BlueprintVisible)
	TArray<class UMaterialInterface*>             DecalMaterials;                                    // 0x0240(0x0010)(Edit, BlueprintVisible)
	int32                                         MaxShots;                                          // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Shots;                                             // 0x0258(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	int32                                         LastShotComponentIndex;                            // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     CollisionChannelsToIgnore;                         // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UDestructibleComponent*>         DestructiblePaneComponents;                        // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           DecalMeshes;                                       // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	uint8                                         LastNumShots;                                      // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  bIsBroken;                                         // 0x02A8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TSoftObjectPtr<class AAkAcousticPortal>       AcousticPortalSoftRef;                             // 0x02B8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class AAkAcousticPortal*                      AcousticPortalRef;                                 // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RadialDamageOrigin;                                // 0x02E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  bIsObliterated;                                    // 0x02F8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	class UNiagaraSystem*                         NiagaraBreakFX;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DestructibleWindowPane_Master(int32 EntryPoint);
	void ObliteratePanes(const TArray<bool>& bObliterated, const struct FVector& Origin);
	void ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser);
	void OpenAcousticPortal();
	void CloseAcousticPortal();
	void K2_OnReset();
	void BindHits();
	void OnComponentHit_Event(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void RemoveDestructiblePaneComponents();
	void RemoveDecalMeshes();
	void AddDecal(const struct FHitResult& HitInfo);
	void BindOverlap(class UPrimitiveComponent* Target);
	void OnComponentBeginOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Unbreak();
	void BreakFX(class UStaticMeshComponent* InPane);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void BreakPane(int32 ChildIndex);
	void OnRep_bIsBroken();
	void CreateAcousticPortal();
	void RotateAcousticPoral();
	void OnRep_bIsObliterated();
	void ObliteratePlane(int32 ChildIndex, const struct FVector& InOrigin);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DestructibleWindowPane_Master_C">();
	}
	static class ABP_DestructibleWindowPane_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DestructibleWindowPane_Master_C>();
	}
};
static_assert(alignof(ABP_DestructibleWindowPane_Master_C) == 0x000008, "Wrong alignment on ABP_DestructibleWindowPane_Master_C");
static_assert(sizeof(ABP_DestructibleWindowPane_Master_C) == 0x000310, "Wrong size on ABP_DestructibleWindowPane_Master_C");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, UberGraphFrame) == 0x000220, "Member 'ABP_DestructibleWindowPane_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, Scene) == 0x000228, "Member 'ABP_DestructibleWindowPane_Master_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, DestructibleMeshes) == 0x000230, "Member 'ABP_DestructibleWindowPane_Master_C::DestructibleMeshes' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, DecalMaterials) == 0x000240, "Member 'ABP_DestructibleWindowPane_Master_C::DecalMaterials' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, MaxShots) == 0x000250, "Member 'ABP_DestructibleWindowPane_Master_C::MaxShots' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, Shots) == 0x000258, "Member 'ABP_DestructibleWindowPane_Master_C::Shots' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, LastShotComponentIndex) == 0x000268, "Member 'ABP_DestructibleWindowPane_Master_C::LastShotComponentIndex' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, CollisionChannelsToIgnore) == 0x000270, "Member 'ABP_DestructibleWindowPane_Master_C::CollisionChannelsToIgnore' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, DestructiblePaneComponents) == 0x000280, "Member 'ABP_DestructibleWindowPane_Master_C::DestructiblePaneComponents' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, DecalMeshes) == 0x000290, "Member 'ABP_DestructibleWindowPane_Master_C::DecalMeshes' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, LastNumShots) == 0x0002A0, "Member 'ABP_DestructibleWindowPane_Master_C::LastNumShots' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, bIsBroken) == 0x0002A8, "Member 'ABP_DestructibleWindowPane_Master_C::bIsBroken' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, AcousticPortalSoftRef) == 0x0002B8, "Member 'ABP_DestructibleWindowPane_Master_C::AcousticPortalSoftRef' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, AcousticPortalRef) == 0x0002E0, "Member 'ABP_DestructibleWindowPane_Master_C::AcousticPortalRef' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, RadialDamageOrigin) == 0x0002E8, "Member 'ABP_DestructibleWindowPane_Master_C::RadialDamageOrigin' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, bIsObliterated) == 0x0002F8, "Member 'ABP_DestructibleWindowPane_Master_C::bIsObliterated' has a wrong offset!");
static_assert(offsetof(ABP_DestructibleWindowPane_Master_C, NiagaraBreakFX) == 0x000308, "Member 'ABP_DestructibleWindowPane_Master_C::NiagaraBreakFX' has a wrong offset!");

}

