#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AKS_74u_Factory

#include "Basic.hpp"

#include "BP_AK_Master_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AKS-74u_Factory.BP_AKS-74u_Factory_C
// 0x0028 (0x05D0 - 0x05A8)
class ABP_AKS_74u_Factory_C final : public ABP_AK_Master_C
{
public:
	class UStaticMeshComponent*                   S_Grip_Stock;                                      // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Booster;                                         // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HandGrip_Stock;                                  // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGBFrontSightPostComponent*             FrontSightPost;                                    // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGBSightComponent*                      IronSight;                                         // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AKS-74u_Factory_C">();
	}
	static class ABP_AKS_74u_Factory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AKS_74u_Factory_C>();
	}
};
static_assert(alignof(ABP_AKS_74u_Factory_C) == 0x000008, "Wrong alignment on ABP_AKS_74u_Factory_C");
static_assert(sizeof(ABP_AKS_74u_Factory_C) == 0x0005D0, "Wrong size on ABP_AKS_74u_Factory_C");
static_assert(offsetof(ABP_AKS_74u_Factory_C, S_Grip_Stock) == 0x0005A8, "Member 'ABP_AKS_74u_Factory_C::S_Grip_Stock' has a wrong offset!");
static_assert(offsetof(ABP_AKS_74u_Factory_C, S_Booster) == 0x0005B0, "Member 'ABP_AKS_74u_Factory_C::S_Booster' has a wrong offset!");
static_assert(offsetof(ABP_AKS_74u_Factory_C, S_HandGrip_Stock) == 0x0005B8, "Member 'ABP_AKS_74u_Factory_C::S_HandGrip_Stock' has a wrong offset!");
static_assert(offsetof(ABP_AKS_74u_Factory_C, FrontSightPost) == 0x0005C0, "Member 'ABP_AKS_74u_Factory_C::FrontSightPost' has a wrong offset!");
static_assert(offsetof(ABP_AKS_74u_Factory_C, IronSight) == 0x0005C8, "Member 'ABP_AKS_74u_Factory_C::IronSight' has a wrong offset!");

}

