#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CollidingWaterVolume_Master

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.ExecuteUbergraph_BP_CollidingWaterVolume_Master
// 0x01E8 (0x01E8 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EffectAmount;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bSpectating_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_CustomEvent_BP_Character;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSpectating;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0064(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0078(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bNewVisible;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_5;         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_1;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnabled;                       // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0158(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master) == 0x000008, "Wrong alignment on BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master) == 0x0001E8, "Wrong size on BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, EntryPoint) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_CustomEvent_EffectAmount) == 0x000004, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_CustomEvent_EffectAmount' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_DynamicCast_AsGBCharacter) == 0x000018, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000028, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000030, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, Temp_delegate_Variable) == 0x000038, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_CustomEvent_bSpectating_1) == 0x000048, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_CustomEvent_bSpectating_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_PostEvent_ReturnValue) == 0x00004C, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_CustomEvent_BP_Character) == 0x000058, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_CustomEvent_BP_Character' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_CustomEvent_bSpectating) == 0x000060, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_CustomEvent_bSpectating' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, Temp_delegate_Variable_1) == 0x000064, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_IsDedicatedServer_ReturnValue) == 0x000075, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, Temp_delegate_Variable_2) == 0x000078, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_PostEvent_ReturnValue_1) == 0x000088, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_Event_EndPlayReason) == 0x00008C, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000090, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_DynamicCast_AsBP_Character) == 0x000098, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_CustomEvent_bNewVisible) == 0x0000A1, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_CustomEvent_bNewVisible' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B4, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x0000B8, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_PostEvent_ReturnValue_2) == 0x0000C0, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x0000C4, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000CC, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000D0, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_FMod_Remainder) == 0x0000D8, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_FMod_ReturnValue) == 0x0000DC, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E4, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000E8, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000F0, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_FClamp_ReturnValue) == 0x0000F4, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0000F8, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0000F9, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_GetPlayerCharacter_ReturnValue_5) == 0x000100, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_GetPlayerCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_DynamicCast_AsBP_Character_1) == 0x000108, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_DynamicCast_AsBP_Character_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_CustomEvent_bEnabled) == 0x000111, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_CustomEvent_bEnabled' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000118, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_OtherActor) == 0x000120, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_OtherComp) == 0x000128, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000130, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000138, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000140, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000148, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000150, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_bFromSweep) == 0x000154, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, K2Node_ComponentBoundEvent_SweepResult) == 0x000158, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001E0, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001E1, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0001E2, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0001E3, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master, CallFunc_IsValid_ReturnValue_2) == 0x0001E4, "Member 'BP_CollidingWaterVolume_Master_C_ExecuteUbergraph_BP_CollidingWaterVolume_Master::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.SetAssociatedWaterSurfaceVis
// 0x0001 (0x0001 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_SetAssociatedWaterSurfaceVis final
{
public:
	bool                                          bNewVisible;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_SetAssociatedWaterSurfaceVis) == 0x000001, "Wrong alignment on BP_CollidingWaterVolume_Master_C_SetAssociatedWaterSurfaceVis");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_SetAssociatedWaterSurfaceVis) == 0x000001, "Wrong size on BP_CollidingWaterVolume_Master_C_SetAssociatedWaterSurfaceVis");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_SetAssociatedWaterSurfaceVis, bNewVisible) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_SetAssociatedWaterSurfaceVis::bNewVisible' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_CollidingWaterVolume_Master_C_ReceiveEndPlay");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_CollidingWaterVolume_Master_C_ReceiveEndPlay");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.ApplyOrDisapplyUnderwaterEffects
// 0x0010 (0x0010 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects final
{
public:
	class ABP_Character_C*                        BP_Character;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpectating;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects) == 0x000008, "Wrong alignment on BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects) == 0x000010, "Wrong size on BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects, BP_Character) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects::BP_Character' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects, bSpectating) == 0x000008, "Member 'BP_CollidingWaterVolume_Master_C_ApplyOrDisapplyUnderwaterEffects::bSpectating' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.ApplyUnderwaterClientFX
// 0x0001 (0x0001 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_ApplyUnderwaterClientFX final
{
public:
	bool                                          bSpectating;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_ApplyUnderwaterClientFX) == 0x000001, "Wrong alignment on BP_CollidingWaterVolume_Master_C_ApplyUnderwaterClientFX");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_ApplyUnderwaterClientFX) == 0x000001, "Wrong size on BP_CollidingWaterVolume_Master_C_ApplyUnderwaterClientFX");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ApplyUnderwaterClientFX, bSpectating) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_ApplyUnderwaterClientFX::bSpectating' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CollidingWaterVolume_Master_C_ReceiveTick");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_ReceiveTick) == 0x000004, "Wrong size on BP_CollidingWaterVolume_Master_C_ReceiveTick");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.SetDrownEffectAmount
// 0x0004 (0x0004 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_SetDrownEffectAmount final
{
public:
	float                                         EffectAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_SetDrownEffectAmount) == 0x000004, "Wrong alignment on BP_CollidingWaterVolume_Master_C_SetDrownEffectAmount");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_SetDrownEffectAmount) == 0x000004, "Wrong size on BP_CollidingWaterVolume_Master_C_SetDrownEffectAmount");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_SetDrownEffectAmount, EffectAmount) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_SetDrownEffectAmount::EffectAmount' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.ActivateUnderwaterPostProcess
// 0x0001 (0x0001 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_ActivateUnderwaterPostProcess final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_ActivateUnderwaterPostProcess) == 0x000001, "Wrong alignment on BP_CollidingWaterVolume_Master_C_ActivateUnderwaterPostProcess");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_ActivateUnderwaterPostProcess) == 0x000001, "Wrong size on BP_CollidingWaterVolume_Master_C_ActivateUnderwaterPostProcess");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_ActivateUnderwaterPostProcess, bEnabled) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_ActivateUnderwaterPostProcess::bEnabled' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_CollidingWaterVolume_Master_C_BndEvt__BP_CollidingWaterVolume_WaterExtent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_CollidingWaterVolume_Master.BP_CollidingWaterVolume_Master_C.UserConstructionScript
// 0x0140 (0x0140 - 0x0000)
struct BP_CollidingWaterVolume_Master_C_UserConstructionScript final
{
public:
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x00F0(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_2;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollidingWaterVolume_Master_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_CollidingWaterVolume_Master_C_UserConstructionScript");
static_assert(sizeof(BP_CollidingWaterVolume_Master_C_UserConstructionScript) == 0x000140, "Wrong size on BP_CollidingWaterVolume_Master_C_UserConstructionScript");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000000, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000010, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000034, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x00003C, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000058, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x0000E0, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000E4, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_GetBounds_ReturnValue) == 0x0000F0, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_X_2) == 0x00010C, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_Y_2) == 0x000110, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_Z_2) == 0x000114, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000118, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_X_3) == 0x00011C, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_Y_3) == 0x000120, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_BreakVector_Z_3) == 0x000124, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000128, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00012C, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollidingWaterVolume_Master_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000130, "Member 'BP_CollidingWaterVolume_Master_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

}

