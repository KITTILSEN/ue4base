#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AI_IdleBreak

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_AI_IdleBreak.GA_AI_IdleBreak_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_AI_IdleBreak_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_AI_IdleBreak_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_AI_IdleBreak_C_K2_OnEndAbility");
static_assert(sizeof(GA_AI_IdleBreak_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_AI_IdleBreak_C_K2_OnEndAbility");
static_assert(offsetof(GA_AI_IdleBreak_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_AI_IdleBreak_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_AI_IdleBreak.GA_AI_IdleBreak_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_AI_IdleBreak_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_AI_IdleBreak_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_AI_IdleBreak_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_AI_IdleBreak_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_AI_IdleBreak_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_AI_IdleBreak_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_AI_IdleBreak_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_AI_IdleBreak.GA_AI_IdleBreak_C.ExecuteUbergraph_GA_AI_IdleBreak
// 0x0140 (0x0140 - 0x0000)
struct GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   K2Node_Select_Default;                             // 0x0060(0x0010)(ConstParm, ReferenceParm)
	class UAnimMontage*                           CallFunc_Array_Random_OutItem;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0088(0x00B0)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveLooseGameplayTag_ReturnValue;       // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak) == 0x000008, "Wrong alignment on GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak");
static_assert(sizeof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak) == 0x000140, "Wrong size on GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, EntryPoint) == 0x000000, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, Temp_bool_Variable) == 0x000044, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000048, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000059, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, Temp_bool_Variable_1) == 0x00005A, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_Event_bWasCancelled) == 0x00005B, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_Select_Default) == 0x000060, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, CallFunc_Array_Random_OutItem) == 0x000070, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, CallFunc_Array_Random_OutIndex) == 0x000078, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000080, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, K2Node_Event_EventData) == 0x000088, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak, CallFunc_RemoveLooseGameplayTag_ReturnValue) == 0x000139, "Member 'GA_AI_IdleBreak_C_ExecuteUbergraph_GA_AI_IdleBreak::CallFunc_RemoveLooseGameplayTag_ReturnValue' has a wrong offset!");

}

