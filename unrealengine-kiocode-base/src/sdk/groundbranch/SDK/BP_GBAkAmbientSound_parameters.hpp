#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GBAkAmbientSound

#include "Basic.hpp"

#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function BP_GBAkAmbientSound.BP_GBAkAmbientSound_C.ExecuteUbergraph_BP_GBAkAmbientSound
// 0x0048 (0x0048 - 0x0000)
struct BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_CustomEvent_PlayerState;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGBPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate;         // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	EReadyRoomStatus                              CallFunc_GetReadyRoomStatus_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound) == 0x000008, "Wrong alignment on BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound");
static_assert(sizeof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound) == 0x000048, "Wrong size on BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, EntryPoint) == 0x000000, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, K2Node_DynamicCast_AsGBPlayer_State) == 0x000018, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, K2Node_CustomEvent_PlayerState) == 0x000028, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, CallFunc_GetReadyRoomStatus_ReturnValue) == 0x000040, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::CallFunc_GetReadyRoomStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000042, "Member 'BP_GBAkAmbientSound_C_ExecuteUbergraph_BP_GBAkAmbientSound::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_GBAkAmbientSound.BP_GBAkAmbientSound_C.OnPlayerReadyRoomStatusChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_GBAkAmbientSound_C_OnPlayerReadyRoomStatusChanged_Event_0 final
{
public:
	class AGBPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GBAkAmbientSound_C_OnPlayerReadyRoomStatusChanged_Event_0) == 0x000008, "Wrong alignment on BP_GBAkAmbientSound_C_OnPlayerReadyRoomStatusChanged_Event_0");
static_assert(sizeof(BP_GBAkAmbientSound_C_OnPlayerReadyRoomStatusChanged_Event_0) == 0x000008, "Wrong size on BP_GBAkAmbientSound_C_OnPlayerReadyRoomStatusChanged_Event_0");
static_assert(offsetof(BP_GBAkAmbientSound_C_OnPlayerReadyRoomStatusChanged_Event_0, PlayerState) == 0x000000, "Member 'BP_GBAkAmbientSound_C_OnPlayerReadyRoomStatusChanged_Event_0::PlayerState' has a wrong offset!");

}

