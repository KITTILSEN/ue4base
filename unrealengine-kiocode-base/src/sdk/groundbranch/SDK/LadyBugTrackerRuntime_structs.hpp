#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LadyBugTrackerRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum LadyBugTrackerRuntime.EIssueProfile
// NumValues: 0x0006
enum class EIssueProfile : uint8
{
	Default                                  = 0,
	Game                                     = 1,
	Editor                                   = 2,
	Crash                                    = 3,
	Feedback                                 = 4,
	EIssueProfile_MAX                        = 5,
};

// Enum LadyBugTrackerRuntime.EIssueViewMode
// NumValues: 0x0005
enum class EIssueViewMode : uint8
{
	None                                     = 0,
	View                                     = 1,
	Edit                                     = 2,
	Report                                   = 3,
	EIssueViewMode_MAX                       = 4,
};

// Enum LadyBugTrackerRuntime.EReportScreenShotMode
// NumValues: 0x0006
enum class EReportScreenShotMode : uint8
{
	None                                     = 0,
	EditorActiveWindow                       = 1,
	EditorLevelViewport                      = 2,
	EditorAllWindows                         = 3,
	Game                                     = 4,
	EReportScreenShotMode_MAX                = 5,
};

// ScriptStruct LadyBugTrackerRuntime.EnumString
// 0x0010 (0x0010 - 0x0000)
struct FEnumString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEnumString) == 0x000008, "Wrong alignment on FEnumString");
static_assert(sizeof(FEnumString) == 0x000010, "Wrong size on FEnumString");
static_assert(offsetof(FEnumString, Value) == 0x000000, "Member 'FEnumString::Value' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ObjectRef
// 0x0018 (0x0018 - 0x0000)
struct FMantisConnect_ObjectRef final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ObjectRef) == 0x000008, "Wrong alignment on FMantisConnect_ObjectRef");
static_assert(sizeof(FMantisConnect_ObjectRef) == 0x000018, "Wrong size on FMantisConnect_ObjectRef");
static_assert(offsetof(FMantisConnect_ObjectRef, ID) == 0x000000, "Member 'FMantisConnect_ObjectRef::ID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ObjectRef, Name) == 0x000008, "Member 'FMantisConnect_ObjectRef::Name' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectDataBase
// 0x00A8 (0x00A8 - 0x0000)
struct FMantisConnect_ProjectDataBase
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ID;                                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Status;                                            // 0x0020(0x0018)(NativeAccessSpecifierPublic)
	bool                                          Enabled;                                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantisConnect_ObjectRef               ViewState;                                         // 0x0040(0x0018)(NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               AccessMin;                                         // 0x0058(0x0018)(NativeAccessSpecifierPublic)
	class FString                                 FilePath;                                          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InheritGlobal;                                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x17];                                      // 0x0091(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_ProjectDataBase) == 0x000008, "Wrong alignment on FMantisConnect_ProjectDataBase");
static_assert(sizeof(FMantisConnect_ProjectDataBase) == 0x0000A8, "Wrong size on FMantisConnect_ProjectDataBase");
static_assert(offsetof(FMantisConnect_ProjectDataBase, ID) == 0x000008, "Member 'FMantisConnect_ProjectDataBase::ID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectDataBase, Name) == 0x000010, "Member 'FMantisConnect_ProjectDataBase::Name' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectDataBase, Status) == 0x000020, "Member 'FMantisConnect_ProjectDataBase::Status' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectDataBase, Enabled) == 0x000038, "Member 'FMantisConnect_ProjectDataBase::Enabled' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectDataBase, ViewState) == 0x000040, "Member 'FMantisConnect_ProjectDataBase::ViewState' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectDataBase, AccessMin) == 0x000058, "Member 'FMantisConnect_ProjectDataBase::AccessMin' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectDataBase, FilePath) == 0x000070, "Member 'FMantisConnect_ProjectDataBase::FilePath' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectDataBase, Description) == 0x000080, "Member 'FMantisConnect_ProjectDataBase::Description' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectDataBase, InheritGlobal) == 0x000090, "Member 'FMantisConnect_ProjectDataBase::InheritGlobal' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.CategoriesHelper
// 0x0010 (0x0010 - 0x0000)
struct FCategoriesHelper final
{
public:
	TArray<class FString>                         Categories;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCategoriesHelper) == 0x000008, "Wrong alignment on FCategoriesHelper");
static_assert(sizeof(FCategoriesHelper) == 0x000010, "Wrong size on FCategoriesHelper");
static_assert(offsetof(FCategoriesHelper, Categories) == 0x000000, "Member 'FCategoriesHelper::Categories' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.BugTrackerSettingsCustomField
// 0x0020 (0x0020 - 0x0000)
struct FBugTrackerSettingsCustomField final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultValue;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBugTrackerSettingsCustomField) == 0x000008, "Wrong alignment on FBugTrackerSettingsCustomField");
static_assert(sizeof(FBugTrackerSettingsCustomField) == 0x000020, "Wrong size on FBugTrackerSettingsCustomField");
static_assert(offsetof(FBugTrackerSettingsCustomField, Name) == 0x000000, "Member 'FBugTrackerSettingsCustomField::Name' has a wrong offset!");
static_assert(offsetof(FBugTrackerSettingsCustomField, DefaultValue) == 0x000010, "Member 'FBugTrackerSettingsCustomField::DefaultValue' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.BugTrackerProfileSettings
// 0x0040 (0x0040 - 0x0000)
struct FBugTrackerProfileSettings final
{
public:
	struct FEnumString                            DefaultCategory;                                   // 0x0000(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	struct FEnumString                            DefaultPriority;                                   // 0x0010(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	struct FEnumString                            DefaultSeverity;                                   // 0x0020(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	struct FEnumString                            DefaultReproducibility;                            // 0x0030(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBugTrackerProfileSettings) == 0x000008, "Wrong alignment on FBugTrackerProfileSettings");
static_assert(sizeof(FBugTrackerProfileSettings) == 0x000040, "Wrong size on FBugTrackerProfileSettings");
static_assert(offsetof(FBugTrackerProfileSettings, DefaultCategory) == 0x000000, "Member 'FBugTrackerProfileSettings::DefaultCategory' has a wrong offset!");
static_assert(offsetof(FBugTrackerProfileSettings, DefaultPriority) == 0x000010, "Member 'FBugTrackerProfileSettings::DefaultPriority' has a wrong offset!");
static_assert(offsetof(FBugTrackerProfileSettings, DefaultSeverity) == 0x000020, "Member 'FBugTrackerProfileSettings::DefaultSeverity' has a wrong offset!");
static_assert(offsetof(FBugTrackerProfileSettings, DefaultReproducibility) == 0x000030, "Member 'FBugTrackerProfileSettings::DefaultReproducibility' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.IssueAttachment
// 0x0050 (0x0050 - 0x0000)
struct FIssueAttachment final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ContentType;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              DateSubmitted;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserId;                                            // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpload;                                           // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FIssueAttachment) == 0x000008, "Wrong alignment on FIssueAttachment");
static_assert(sizeof(FIssueAttachment) == 0x000050, "Wrong size on FIssueAttachment");
static_assert(offsetof(FIssueAttachment, ID) == 0x000000, "Member 'FIssueAttachment::ID' has a wrong offset!");
static_assert(offsetof(FIssueAttachment, Filename) == 0x000008, "Member 'FIssueAttachment::Filename' has a wrong offset!");
static_assert(offsetof(FIssueAttachment, ContentType) == 0x000018, "Member 'FIssueAttachment::ContentType' has a wrong offset!");
static_assert(offsetof(FIssueAttachment, URL) == 0x000028, "Member 'FIssueAttachment::URL' has a wrong offset!");
static_assert(offsetof(FIssueAttachment, DateSubmitted) == 0x000038, "Member 'FIssueAttachment::DateSubmitted' has a wrong offset!");
static_assert(offsetof(FIssueAttachment, Size) == 0x000040, "Member 'FIssueAttachment::Size' has a wrong offset!");
static_assert(offsetof(FIssueAttachment, UserId) == 0x000044, "Member 'FIssueAttachment::UserId' has a wrong offset!");
static_assert(offsetof(FIssueAttachment, bUpload) == 0x000048, "Member 'FIssueAttachment::bUpload' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.IssueNote
// 0x0030 (0x0030 - 0x0000)
struct FIssueNote final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Reporter;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              DateSubmitted;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIssueNote) == 0x000008, "Wrong alignment on FIssueNote");
static_assert(sizeof(FIssueNote) == 0x000030, "Wrong size on FIssueNote");
static_assert(offsetof(FIssueNote, ID) == 0x000000, "Member 'FIssueNote::ID' has a wrong offset!");
static_assert(offsetof(FIssueNote, Text) == 0x000008, "Member 'FIssueNote::Text' has a wrong offset!");
static_assert(offsetof(FIssueNote, Reporter) == 0x000018, "Member 'FIssueNote::Reporter' has a wrong offset!");
static_assert(offsetof(FIssueNote, DateSubmitted) == 0x000028, "Member 'FIssueNote::DateSubmitted' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.IssueHistory
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FIssueHistory final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FIssueHistory) == 0x000008, "Wrong alignment on FIssueHistory");
static_assert(sizeof(FIssueHistory) == 0x000050, "Wrong size on FIssueHistory");

// ScriptStruct LadyBugTrackerRuntime.IssueUserData
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FIssueUserData final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FIssueUserData) == 0x000008, "Wrong alignment on FIssueUserData");
static_assert(sizeof(FIssueUserData) == 0x000048, "Wrong size on FIssueUserData");

// ScriptStruct LadyBugTrackerRuntime.ProjectData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FProjectData final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FProjectData) == 0x000008, "Wrong alignment on FProjectData");
static_assert(sizeof(FProjectData) == 0x000020, "Wrong size on FProjectData");

// ScriptStruct LadyBugTrackerRuntime.IssueCustomField
// 0x0020 (0x0020 - 0x0000)
struct FIssueCustomField final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIssueCustomField) == 0x000008, "Wrong alignment on FIssueCustomField");
static_assert(sizeof(FIssueCustomField) == 0x000020, "Wrong size on FIssueCustomField");
static_assert(offsetof(FIssueCustomField, Name) == 0x000000, "Member 'FIssueCustomField::Name' has a wrong offset!");
static_assert(offsetof(FIssueCustomField, Value) == 0x000010, "Member 'FIssueCustomField::Value' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.IssueCustomFieldDefinition
// 0x0068 (0x0068 - 0x0000)
struct alignas(0x08) FIssueCustomFieldDefinition final
{
public:
	uint8                                         Pad_0[0x68];                                       // 0x0000(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FIssueCustomFieldDefinition) == 0x000008, "Wrong alignment on FIssueCustomFieldDefinition");
static_assert(sizeof(FIssueCustomFieldDefinition) == 0x000068, "Wrong size on FIssueCustomFieldDefinition");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_Fault
// 0x0020 (0x0020 - 0x0000)
struct FMantisConnect_Fault final
{
public:
	class FString                                 FaultCode;                                         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FaultString;                                       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_Fault) == 0x000008, "Wrong alignment on FMantisConnect_Fault");
static_assert(sizeof(FMantisConnect_Fault) == 0x000020, "Wrong size on FMantisConnect_Fault");
static_assert(offsetof(FMantisConnect_Fault, FaultCode) == 0x000000, "Member 'FMantisConnect_Fault::FaultCode' has a wrong offset!");
static_assert(offsetof(FMantisConnect_Fault, FaultString) == 0x000010, "Member 'FMantisConnect_Fault::FaultString' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumAccessLevelsResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_EnumAccessLevelsResponse final
{
public:
	TArray<struct FMantisConnect_ObjectRef>       Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_EnumAccessLevelsResponse) == 0x000008, "Wrong alignment on FMantisConnect_EnumAccessLevelsResponse");
static_assert(sizeof(FMantisConnect_EnumAccessLevelsResponse) == 0x000010, "Wrong size on FMantisConnect_EnumAccessLevelsResponse");
static_assert(offsetof(FMantisConnect_EnumAccessLevelsResponse, Return) == 0x000000, "Member 'FMantisConnect_EnumAccessLevelsResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_AuthorizeBase
// 0x0020 (0x0020 - 0x0000)
struct FMantisConnect_AuthorizeBase
{
public:
	class FString                                 Username;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_AuthorizeBase) == 0x000008, "Wrong alignment on FMantisConnect_AuthorizeBase");
static_assert(sizeof(FMantisConnect_AuthorizeBase) == 0x000020, "Wrong size on FMantisConnect_AuthorizeBase");
static_assert(offsetof(FMantisConnect_AuthorizeBase, Username) == 0x000000, "Member 'FMantisConnect_AuthorizeBase::Username' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AuthorizeBase, Password) == 0x000010, "Member 'FMantisConnect_AuthorizeBase::Password' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumAccessLevels
// 0x0000 (0x0020 - 0x0020)
struct FMantisConnect_EnumAccessLevels final : public FMantisConnect_AuthorizeBase
{
};
static_assert(alignof(FMantisConnect_EnumAccessLevels) == 0x000008, "Wrong alignment on FMantisConnect_EnumAccessLevels");
static_assert(sizeof(FMantisConnect_EnumAccessLevels) == 0x000020, "Wrong size on FMantisConnect_EnumAccessLevels");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumPrioritiesResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_EnumPrioritiesResponse final
{
public:
	TArray<struct FMantisConnect_ObjectRef>       Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_EnumPrioritiesResponse) == 0x000008, "Wrong alignment on FMantisConnect_EnumPrioritiesResponse");
static_assert(sizeof(FMantisConnect_EnumPrioritiesResponse) == 0x000010, "Wrong size on FMantisConnect_EnumPrioritiesResponse");
static_assert(offsetof(FMantisConnect_EnumPrioritiesResponse, Return) == 0x000000, "Member 'FMantisConnect_EnumPrioritiesResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumPriorities
// 0x0000 (0x0020 - 0x0020)
struct FMantisConnect_EnumPriorities final : public FMantisConnect_AuthorizeBase
{
};
static_assert(alignof(FMantisConnect_EnumPriorities) == 0x000008, "Wrong alignment on FMantisConnect_EnumPriorities");
static_assert(sizeof(FMantisConnect_EnumPriorities) == 0x000020, "Wrong size on FMantisConnect_EnumPriorities");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumReproducibilitiesResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_EnumReproducibilitiesResponse final
{
public:
	TArray<struct FMantisConnect_ObjectRef>       Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_EnumReproducibilitiesResponse) == 0x000008, "Wrong alignment on FMantisConnect_EnumReproducibilitiesResponse");
static_assert(sizeof(FMantisConnect_EnumReproducibilitiesResponse) == 0x000010, "Wrong size on FMantisConnect_EnumReproducibilitiesResponse");
static_assert(offsetof(FMantisConnect_EnumReproducibilitiesResponse, Return) == 0x000000, "Member 'FMantisConnect_EnumReproducibilitiesResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumReproducibilities
// 0x0000 (0x0020 - 0x0020)
struct FMantisConnect_EnumReproducibilities final : public FMantisConnect_AuthorizeBase
{
};
static_assert(alignof(FMantisConnect_EnumReproducibilities) == 0x000008, "Wrong alignment on FMantisConnect_EnumReproducibilities");
static_assert(sizeof(FMantisConnect_EnumReproducibilities) == 0x000020, "Wrong size on FMantisConnect_EnumReproducibilities");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumResolutionsResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_EnumResolutionsResponse final
{
public:
	TArray<struct FMantisConnect_ObjectRef>       Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_EnumResolutionsResponse) == 0x000008, "Wrong alignment on FMantisConnect_EnumResolutionsResponse");
static_assert(sizeof(FMantisConnect_EnumResolutionsResponse) == 0x000010, "Wrong size on FMantisConnect_EnumResolutionsResponse");
static_assert(offsetof(FMantisConnect_EnumResolutionsResponse, Return) == 0x000000, "Member 'FMantisConnect_EnumResolutionsResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumResolutions
// 0x0000 (0x0020 - 0x0020)
struct FMantisConnect_EnumResolutions final : public FMantisConnect_AuthorizeBase
{
};
static_assert(alignof(FMantisConnect_EnumResolutions) == 0x000008, "Wrong alignment on FMantisConnect_EnumResolutions");
static_assert(sizeof(FMantisConnect_EnumResolutions) == 0x000020, "Wrong size on FMantisConnect_EnumResolutions");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumSeveritiesResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_EnumSeveritiesResponse final
{
public:
	TArray<struct FMantisConnect_ObjectRef>       Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_EnumSeveritiesResponse) == 0x000008, "Wrong alignment on FMantisConnect_EnumSeveritiesResponse");
static_assert(sizeof(FMantisConnect_EnumSeveritiesResponse) == 0x000010, "Wrong size on FMantisConnect_EnumSeveritiesResponse");
static_assert(offsetof(FMantisConnect_EnumSeveritiesResponse, Return) == 0x000000, "Member 'FMantisConnect_EnumSeveritiesResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumSeverities
// 0x0000 (0x0020 - 0x0020)
struct FMantisConnect_EnumSeverities final : public FMantisConnect_AuthorizeBase
{
};
static_assert(alignof(FMantisConnect_EnumSeverities) == 0x000008, "Wrong alignment on FMantisConnect_EnumSeverities");
static_assert(sizeof(FMantisConnect_EnumSeverities) == 0x000020, "Wrong size on FMantisConnect_EnumSeverities");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumStatusResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_EnumStatusResponse final
{
public:
	TArray<struct FMantisConnect_ObjectRef>       Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_EnumStatusResponse) == 0x000008, "Wrong alignment on FMantisConnect_EnumStatusResponse");
static_assert(sizeof(FMantisConnect_EnumStatusResponse) == 0x000010, "Wrong size on FMantisConnect_EnumStatusResponse");
static_assert(offsetof(FMantisConnect_EnumStatusResponse, Return) == 0x000000, "Member 'FMantisConnect_EnumStatusResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_EnumStatus
// 0x0000 (0x0020 - 0x0020)
struct FMantisConnect_EnumStatus final : public FMantisConnect_AuthorizeBase
{
};
static_assert(alignof(FMantisConnect_EnumStatus) == 0x000008, "Wrong alignment on FMantisConnect_EnumStatus");
static_assert(sizeof(FMantisConnect_EnumStatus) == 0x000020, "Wrong size on FMantisConnect_EnumStatus");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectData5
// 0x0010 (0x00B8 - 0x00A8)
struct FMantisConnect_ProjectData5 final : public FMantisConnect_ProjectDataBase
{
public:
	TArray<struct FMantisConnect_ProjectDataBase> Subprojects;                                       // 0x00A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectData5) == 0x000008, "Wrong alignment on FMantisConnect_ProjectData5");
static_assert(sizeof(FMantisConnect_ProjectData5) == 0x0000B8, "Wrong size on FMantisConnect_ProjectData5");
static_assert(offsetof(FMantisConnect_ProjectData5, Subprojects) == 0x0000A8, "Member 'FMantisConnect_ProjectData5::Subprojects' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectData4
// 0x0010 (0x00B8 - 0x00A8)
struct FMantisConnect_ProjectData4 final : public FMantisConnect_ProjectDataBase
{
public:
	TArray<struct FMantisConnect_ProjectData5>    Subprojects;                                       // 0x00A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectData4) == 0x000008, "Wrong alignment on FMantisConnect_ProjectData4");
static_assert(sizeof(FMantisConnect_ProjectData4) == 0x0000B8, "Wrong size on FMantisConnect_ProjectData4");
static_assert(offsetof(FMantisConnect_ProjectData4, Subprojects) == 0x0000A8, "Member 'FMantisConnect_ProjectData4::Subprojects' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectData3
// 0x0010 (0x00B8 - 0x00A8)
struct FMantisConnect_ProjectData3 final : public FMantisConnect_ProjectDataBase
{
public:
	TArray<struct FMantisConnect_ProjectData4>    Subprojects;                                       // 0x00A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectData3) == 0x000008, "Wrong alignment on FMantisConnect_ProjectData3");
static_assert(sizeof(FMantisConnect_ProjectData3) == 0x0000B8, "Wrong size on FMantisConnect_ProjectData3");
static_assert(offsetof(FMantisConnect_ProjectData3, Subprojects) == 0x0000A8, "Member 'FMantisConnect_ProjectData3::Subprojects' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectData2
// 0x0010 (0x00B8 - 0x00A8)
struct FMantisConnect_ProjectData2 final : public FMantisConnect_ProjectDataBase
{
public:
	TArray<struct FMantisConnect_ProjectData3>    Subprojects;                                       // 0x00A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectData2) == 0x000008, "Wrong alignment on FMantisConnect_ProjectData2");
static_assert(sizeof(FMantisConnect_ProjectData2) == 0x0000B8, "Wrong size on FMantisConnect_ProjectData2");
static_assert(offsetof(FMantisConnect_ProjectData2, Subprojects) == 0x0000A8, "Member 'FMantisConnect_ProjectData2::Subprojects' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectData1
// 0x0010 (0x00B8 - 0x00A8)
struct FMantisConnect_ProjectData1 final : public FMantisConnect_ProjectDataBase
{
public:
	TArray<struct FMantisConnect_ProjectData2>    Subprojects;                                       // 0x00A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectData1) == 0x000008, "Wrong alignment on FMantisConnect_ProjectData1");
static_assert(sizeof(FMantisConnect_ProjectData1) == 0x0000B8, "Wrong size on FMantisConnect_ProjectData1");
static_assert(offsetof(FMantisConnect_ProjectData1, Subprojects) == 0x0000A8, "Member 'FMantisConnect_ProjectData1::Subprojects' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectData
// 0x0010 (0x00B8 - 0x00A8)
struct FMantisConnect_ProjectData final : public FMantisConnect_ProjectDataBase
{
public:
	TArray<struct FMantisConnect_ProjectData1>    Subprojects;                                       // 0x00A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectData) == 0x000008, "Wrong alignment on FMantisConnect_ProjectData");
static_assert(sizeof(FMantisConnect_ProjectData) == 0x0000B8, "Wrong size on FMantisConnect_ProjectData");
static_assert(offsetof(FMantisConnect_ProjectData, Subprojects) == 0x0000A8, "Member 'FMantisConnect_ProjectData::Subprojects' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectsGetUserAccessibleResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_ProjectsGetUserAccessibleResponse final
{
public:
	TArray<struct FMantisConnect_ProjectData>     Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectsGetUserAccessibleResponse) == 0x000008, "Wrong alignment on FMantisConnect_ProjectsGetUserAccessibleResponse");
static_assert(sizeof(FMantisConnect_ProjectsGetUserAccessibleResponse) == 0x000010, "Wrong size on FMantisConnect_ProjectsGetUserAccessibleResponse");
static_assert(offsetof(FMantisConnect_ProjectsGetUserAccessibleResponse, Return) == 0x000000, "Member 'FMantisConnect_ProjectsGetUserAccessibleResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectsGetUserAccessible
// 0x0000 (0x0020 - 0x0020)
struct FMantisConnect_ProjectsGetUserAccessible final : public FMantisConnect_AuthorizeBase
{
};
static_assert(alignof(FMantisConnect_ProjectsGetUserAccessible) == 0x000008, "Wrong alignment on FMantisConnect_ProjectsGetUserAccessible");
static_assert(sizeof(FMantisConnect_ProjectsGetUserAccessible) == 0x000020, "Wrong size on FMantisConnect_ProjectsGetUserAccessible");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectVersionData
// 0x0028 (0x0028 - 0x0000)
struct FMantisConnect_ProjectVersionData final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Released;                                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_ProjectVersionData) == 0x000008, "Wrong alignment on FMantisConnect_ProjectVersionData");
static_assert(sizeof(FMantisConnect_ProjectVersionData) == 0x000028, "Wrong size on FMantisConnect_ProjectVersionData");
static_assert(offsetof(FMantisConnect_ProjectVersionData, Name) == 0x000000, "Member 'FMantisConnect_ProjectVersionData::Name' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectVersionData, Description) == 0x000010, "Member 'FMantisConnect_ProjectVersionData::Description' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectVersionData, Released) == 0x000020, "Member 'FMantisConnect_ProjectVersionData::Released' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetVersionsResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_ProjectGetVersionsResponse final
{
public:
	TArray<struct FMantisConnect_ProjectVersionData> Return;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectGetVersionsResponse) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetVersionsResponse");
static_assert(sizeof(FMantisConnect_ProjectGetVersionsResponse) == 0x000010, "Wrong size on FMantisConnect_ProjectGetVersionsResponse");
static_assert(offsetof(FMantisConnect_ProjectGetVersionsResponse, Return) == 0x000000, "Member 'FMantisConnect_ProjectGetVersionsResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetVersions
// 0x0008 (0x0028 - 0x0020)
struct FMantisConnect_ProjectGetVersions final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         ProjectID;                                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_ProjectGetVersions) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetVersions");
static_assert(sizeof(FMantisConnect_ProjectGetVersions) == 0x000028, "Wrong size on FMantisConnect_ProjectGetVersions");
static_assert(offsetof(FMantisConnect_ProjectGetVersions, ProjectID) == 0x000020, "Member 'FMantisConnect_ProjectGetVersions::ProjectID' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_CustomFieldDefinitionData
// 0x0070 (0x0070 - 0x0000)
struct FMantisConnect_CustomFieldDefinitionData final
{
public:
	struct FMantisConnect_ObjectRef               Field;                                             // 0x0000(0x0018)(NativeAccessSpecifierPublic)
	int32                                         Type;                                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PossibleValues;                                    // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultValue;                                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ValidRegexp;                                       // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AccessLevelR;                                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AccessLevelRw;                                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LengthMin;                                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LengthMax;                                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Advanced;                                          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisplayReport;                                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisplayUpdate;                                     // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisplayResolved;                                   // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisplayClosed;                                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequireReport;                                     // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequireUpdate;                                     // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequireResolved;                                   // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequireClosed;                                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_CustomFieldDefinitionData) == 0x000008, "Wrong alignment on FMantisConnect_CustomFieldDefinitionData");
static_assert(sizeof(FMantisConnect_CustomFieldDefinitionData) == 0x000070, "Wrong size on FMantisConnect_CustomFieldDefinitionData");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, Field) == 0x000000, "Member 'FMantisConnect_CustomFieldDefinitionData::Field' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, Type) == 0x000018, "Member 'FMantisConnect_CustomFieldDefinitionData::Type' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, PossibleValues) == 0x000020, "Member 'FMantisConnect_CustomFieldDefinitionData::PossibleValues' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, DefaultValue) == 0x000030, "Member 'FMantisConnect_CustomFieldDefinitionData::DefaultValue' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, ValidRegexp) == 0x000040, "Member 'FMantisConnect_CustomFieldDefinitionData::ValidRegexp' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, AccessLevelR) == 0x000050, "Member 'FMantisConnect_CustomFieldDefinitionData::AccessLevelR' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, AccessLevelRw) == 0x000054, "Member 'FMantisConnect_CustomFieldDefinitionData::AccessLevelRw' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, LengthMin) == 0x000058, "Member 'FMantisConnect_CustomFieldDefinitionData::LengthMin' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, LengthMax) == 0x00005C, "Member 'FMantisConnect_CustomFieldDefinitionData::LengthMax' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, Advanced) == 0x000060, "Member 'FMantisConnect_CustomFieldDefinitionData::Advanced' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, DisplayReport) == 0x000061, "Member 'FMantisConnect_CustomFieldDefinitionData::DisplayReport' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, DisplayUpdate) == 0x000062, "Member 'FMantisConnect_CustomFieldDefinitionData::DisplayUpdate' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, DisplayResolved) == 0x000063, "Member 'FMantisConnect_CustomFieldDefinitionData::DisplayResolved' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, DisplayClosed) == 0x000064, "Member 'FMantisConnect_CustomFieldDefinitionData::DisplayClosed' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, RequireReport) == 0x000065, "Member 'FMantisConnect_CustomFieldDefinitionData::RequireReport' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, RequireUpdate) == 0x000066, "Member 'FMantisConnect_CustomFieldDefinitionData::RequireUpdate' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, RequireResolved) == 0x000067, "Member 'FMantisConnect_CustomFieldDefinitionData::RequireResolved' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldDefinitionData, RequireClosed) == 0x000068, "Member 'FMantisConnect_CustomFieldDefinitionData::RequireClosed' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetCustomFieldsResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_ProjectGetCustomFieldsResponse final
{
public:
	TArray<struct FMantisConnect_CustomFieldDefinitionData> Return;                                  // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectGetCustomFieldsResponse) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetCustomFieldsResponse");
static_assert(sizeof(FMantisConnect_ProjectGetCustomFieldsResponse) == 0x000010, "Wrong size on FMantisConnect_ProjectGetCustomFieldsResponse");
static_assert(offsetof(FMantisConnect_ProjectGetCustomFieldsResponse, Return) == 0x000000, "Member 'FMantisConnect_ProjectGetCustomFieldsResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetCustomFields
// 0x0008 (0x0028 - 0x0020)
struct FMantisConnect_ProjectGetCustomFields final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         ProjectID;                                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_ProjectGetCustomFields) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetCustomFields");
static_assert(sizeof(FMantisConnect_ProjectGetCustomFields) == 0x000028, "Wrong size on FMantisConnect_ProjectGetCustomFields");
static_assert(offsetof(FMantisConnect_ProjectGetCustomFields, ProjectID) == 0x000020, "Member 'FMantisConnect_ProjectGetCustomFields::ProjectID' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_AccountData
// 0x0038 (0x0038 - 0x0000)
struct FMantisConnect_AccountData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RealName;                                          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_AccountData) == 0x000008, "Wrong alignment on FMantisConnect_AccountData");
static_assert(sizeof(FMantisConnect_AccountData) == 0x000038, "Wrong size on FMantisConnect_AccountData");
static_assert(offsetof(FMantisConnect_AccountData, ID) == 0x000000, "Member 'FMantisConnect_AccountData::ID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AccountData, Name) == 0x000008, "Member 'FMantisConnect_AccountData::Name' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AccountData, RealName) == 0x000018, "Member 'FMantisConnect_AccountData::RealName' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AccountData, Email) == 0x000028, "Member 'FMantisConnect_AccountData::Email' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetUsersResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_ProjectGetUsersResponse final
{
public:
	TArray<struct FMantisConnect_AccountData>     Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectGetUsersResponse) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetUsersResponse");
static_assert(sizeof(FMantisConnect_ProjectGetUsersResponse) == 0x000010, "Wrong size on FMantisConnect_ProjectGetUsersResponse");
static_assert(offsetof(FMantisConnect_ProjectGetUsersResponse, Return) == 0x000000, "Member 'FMantisConnect_ProjectGetUsersResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetUsers
// 0x0008 (0x0028 - 0x0020)
struct FMantisConnect_ProjectGetUsers final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         ProjectID;                                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Access;                                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectGetUsers) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetUsers");
static_assert(sizeof(FMantisConnect_ProjectGetUsers) == 0x000028, "Wrong size on FMantisConnect_ProjectGetUsers");
static_assert(offsetof(FMantisConnect_ProjectGetUsers, ProjectID) == 0x000020, "Member 'FMantisConnect_ProjectGetUsers::ProjectID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectGetUsers, Access) == 0x000024, "Member 'FMantisConnect_ProjectGetUsers::Access' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetIdFromNameResponse
// 0x0004 (0x0004 - 0x0000)
struct FMantisConnect_ProjectGetIdFromNameResponse final
{
public:
	int32                                         Return;                                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectGetIdFromNameResponse) == 0x000004, "Wrong alignment on FMantisConnect_ProjectGetIdFromNameResponse");
static_assert(sizeof(FMantisConnect_ProjectGetIdFromNameResponse) == 0x000004, "Wrong size on FMantisConnect_ProjectGetIdFromNameResponse");
static_assert(offsetof(FMantisConnect_ProjectGetIdFromNameResponse, Return) == 0x000000, "Member 'FMantisConnect_ProjectGetIdFromNameResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetIdFromName
// 0x0010 (0x0030 - 0x0020)
struct FMantisConnect_ProjectGetIdFromName final : public FMantisConnect_AuthorizeBase
{
public:
	class FString                                 ProjectName;                                       // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectGetIdFromName) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetIdFromName");
static_assert(sizeof(FMantisConnect_ProjectGetIdFromName) == 0x000030, "Wrong size on FMantisConnect_ProjectGetIdFromName");
static_assert(offsetof(FMantisConnect_ProjectGetIdFromName, ProjectName) == 0x000020, "Member 'FMantisConnect_ProjectGetIdFromName::ProjectName' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetCategoriesResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_ProjectGetCategoriesResponse final
{
public:
	TArray<class FString>                         Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectGetCategoriesResponse) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetCategoriesResponse");
static_assert(sizeof(FMantisConnect_ProjectGetCategoriesResponse) == 0x000010, "Wrong size on FMantisConnect_ProjectGetCategoriesResponse");
static_assert(offsetof(FMantisConnect_ProjectGetCategoriesResponse, Return) == 0x000000, "Member 'FMantisConnect_ProjectGetCategoriesResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetCategories
// 0x0008 (0x0028 - 0x0020)
struct FMantisConnect_ProjectGetCategories final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         ProjectID;                                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_ProjectGetCategories) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetCategories");
static_assert(sizeof(FMantisConnect_ProjectGetCategories) == 0x000028, "Wrong size on FMantisConnect_ProjectGetCategories");
static_assert(offsetof(FMantisConnect_ProjectGetCategories, ProjectID) == 0x000020, "Member 'FMantisConnect_ProjectGetCategories::ProjectID' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_AttachmentData
// 0x0050 (0x0050 - 0x0000)
struct FMantisConnect_AttachmentData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ContentType;                                       // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              DateSubmitted;                                     // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DownloadUrl;                                       // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserId;                                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_AttachmentData) == 0x000008, "Wrong alignment on FMantisConnect_AttachmentData");
static_assert(sizeof(FMantisConnect_AttachmentData) == 0x000050, "Wrong size on FMantisConnect_AttachmentData");
static_assert(offsetof(FMantisConnect_AttachmentData, ID) == 0x000000, "Member 'FMantisConnect_AttachmentData::ID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AttachmentData, Filename) == 0x000008, "Member 'FMantisConnect_AttachmentData::Filename' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AttachmentData, Size) == 0x000018, "Member 'FMantisConnect_AttachmentData::Size' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AttachmentData, ContentType) == 0x000020, "Member 'FMantisConnect_AttachmentData::ContentType' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AttachmentData, DateSubmitted) == 0x000030, "Member 'FMantisConnect_AttachmentData::DateSubmitted' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AttachmentData, DownloadUrl) == 0x000038, "Member 'FMantisConnect_AttachmentData::DownloadUrl' has a wrong offset!");
static_assert(offsetof(FMantisConnect_AttachmentData, UserId) == 0x000048, "Member 'FMantisConnect_AttachmentData::UserId' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_RelationshipData
// 0x0028 (0x0028 - 0x0000)
struct FMantisConnect_RelationshipData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantisConnect_ObjectRef               Type;                                              // 0x0008(0x0018)(NativeAccessSpecifierPublic)
	int32                                         TargetId;                                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_RelationshipData) == 0x000008, "Wrong alignment on FMantisConnect_RelationshipData");
static_assert(sizeof(FMantisConnect_RelationshipData) == 0x000028, "Wrong size on FMantisConnect_RelationshipData");
static_assert(offsetof(FMantisConnect_RelationshipData, ID) == 0x000000, "Member 'FMantisConnect_RelationshipData::ID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_RelationshipData, Type) == 0x000008, "Member 'FMantisConnect_RelationshipData::Type' has a wrong offset!");
static_assert(offsetof(FMantisConnect_RelationshipData, TargetId) == 0x000020, "Member 'FMantisConnect_RelationshipData::TargetId' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_CustomFieldValueForIssueData
// 0x0028 (0x0028 - 0x0000)
struct FMantisConnect_CustomFieldValueForIssueData final
{
public:
	struct FMantisConnect_ObjectRef               Field;                                             // 0x0000(0x0018)(NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_CustomFieldValueForIssueData) == 0x000008, "Wrong alignment on FMantisConnect_CustomFieldValueForIssueData");
static_assert(sizeof(FMantisConnect_CustomFieldValueForIssueData) == 0x000028, "Wrong size on FMantisConnect_CustomFieldValueForIssueData");
static_assert(offsetof(FMantisConnect_CustomFieldValueForIssueData, Field) == 0x000000, "Member 'FMantisConnect_CustomFieldValueForIssueData::Field' has a wrong offset!");
static_assert(offsetof(FMantisConnect_CustomFieldValueForIssueData, Value) == 0x000018, "Member 'FMantisConnect_CustomFieldValueForIssueData::Value' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueNoteData
// 0x0090 (0x0090 - 0x0000)
struct FMantisConnect_IssueNoteData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantisConnect_AccountData             Reporter;                                          // 0x0008(0x0038)(Transient, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               ViewState;                                         // 0x0050(0x0018)(Transient, NativeAccessSpecifierPublic)
	struct FDateTime                              DateSubmitted;                                     // 0x0068(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              LastModified;                                      // 0x0070(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TimeTracking;                                      // 0x0078(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoteType;                                          // 0x007C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NoteAttr;                                          // 0x0080(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueNoteData) == 0x000008, "Wrong alignment on FMantisConnect_IssueNoteData");
static_assert(sizeof(FMantisConnect_IssueNoteData) == 0x000090, "Wrong size on FMantisConnect_IssueNoteData");
static_assert(offsetof(FMantisConnect_IssueNoteData, ID) == 0x000000, "Member 'FMantisConnect_IssueNoteData::ID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteData, Reporter) == 0x000008, "Member 'FMantisConnect_IssueNoteData::Reporter' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteData, Text) == 0x000040, "Member 'FMantisConnect_IssueNoteData::Text' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteData, ViewState) == 0x000050, "Member 'FMantisConnect_IssueNoteData::ViewState' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteData, DateSubmitted) == 0x000068, "Member 'FMantisConnect_IssueNoteData::DateSubmitted' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteData, LastModified) == 0x000070, "Member 'FMantisConnect_IssueNoteData::LastModified' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteData, TimeTracking) == 0x000078, "Member 'FMantisConnect_IssueNoteData::TimeTracking' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteData, NoteType) == 0x00007C, "Member 'FMantisConnect_IssueNoteData::NoteType' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteData, NoteAttr) == 0x000080, "Member 'FMantisConnect_IssueNoteData::NoteAttr' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueData
// 0x0298 (0x0298 - 0x0000)
struct FMantisConnect_IssueData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantisConnect_ObjectRef               ViewState;                                         // 0x0008(0x0018)(NativeAccessSpecifierPublic)
	struct FDateTime                              LastUpdated;                                       // 0x0020(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Project;                                           // 0x0028(0x0018)(NativeAccessSpecifierPublic)
	class FString                                 Category;                                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Priority;                                          // 0x0050(0x0018)(NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Severity;                                          // 0x0068(0x0018)(NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Status;                                            // 0x0080(0x0018)(NativeAccessSpecifierPublic)
	struct FMantisConnect_AccountData             Reporter;                                          // 0x0098(0x0038)(NativeAccessSpecifierPublic)
	class FString                                 Summary;                                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Version;                                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Build;                                             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Os;                                                // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OsBuild;                                           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Reproducibility;                                   // 0x0130(0x0018)(NativeAccessSpecifierPublic)
	struct FDateTime                              DateSubmitted;                                     // 0x0148(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SponsorshipTotal;                                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantisConnect_AccountData             Handler;                                           // 0x0158(0x0038)(NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Projection;                                        // 0x0190(0x0018)(NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Eta;                                               // 0x01A8(0x0018)(NativeAccessSpecifierPublic)
	struct FMantisConnect_ObjectRef               Resolution;                                        // 0x01C0(0x0018)(NativeAccessSpecifierPublic)
	class FString                                 FixedInVersion;                                    // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TargetVersion;                                     // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StepsToReproduce;                                  // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AdditionalInformation;                             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMantisConnect_AttachmentData>  Attachments;                                       // 0x0228(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMantisConnect_RelationshipData> Relationships;                                    // 0x0238(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMantisConnect_IssueNoteData>   Notes;                                             // 0x0248(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMantisConnect_CustomFieldValueForIssueData> CustomFields;                         // 0x0258(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                              DueDate;                                           // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMantisConnect_AccountData>     Monitors;                                          // 0x0270(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                          Sticky;                                            // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMantisConnect_ObjectRef>       Tags;                                              // 0x0288(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueData) == 0x000008, "Wrong alignment on FMantisConnect_IssueData");
static_assert(sizeof(FMantisConnect_IssueData) == 0x000298, "Wrong size on FMantisConnect_IssueData");
static_assert(offsetof(FMantisConnect_IssueData, ID) == 0x000000, "Member 'FMantisConnect_IssueData::ID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, ViewState) == 0x000008, "Member 'FMantisConnect_IssueData::ViewState' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, LastUpdated) == 0x000020, "Member 'FMantisConnect_IssueData::LastUpdated' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Project) == 0x000028, "Member 'FMantisConnect_IssueData::Project' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Category) == 0x000040, "Member 'FMantisConnect_IssueData::Category' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Priority) == 0x000050, "Member 'FMantisConnect_IssueData::Priority' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Severity) == 0x000068, "Member 'FMantisConnect_IssueData::Severity' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Status) == 0x000080, "Member 'FMantisConnect_IssueData::Status' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Reporter) == 0x000098, "Member 'FMantisConnect_IssueData::Reporter' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Summary) == 0x0000D0, "Member 'FMantisConnect_IssueData::Summary' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Version) == 0x0000E0, "Member 'FMantisConnect_IssueData::Version' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Build) == 0x0000F0, "Member 'FMantisConnect_IssueData::Build' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Platform) == 0x000100, "Member 'FMantisConnect_IssueData::Platform' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Os) == 0x000110, "Member 'FMantisConnect_IssueData::Os' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, OsBuild) == 0x000120, "Member 'FMantisConnect_IssueData::OsBuild' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Reproducibility) == 0x000130, "Member 'FMantisConnect_IssueData::Reproducibility' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, DateSubmitted) == 0x000148, "Member 'FMantisConnect_IssueData::DateSubmitted' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, SponsorshipTotal) == 0x000150, "Member 'FMantisConnect_IssueData::SponsorshipTotal' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Handler) == 0x000158, "Member 'FMantisConnect_IssueData::Handler' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Projection) == 0x000190, "Member 'FMantisConnect_IssueData::Projection' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Eta) == 0x0001A8, "Member 'FMantisConnect_IssueData::Eta' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Resolution) == 0x0001C0, "Member 'FMantisConnect_IssueData::Resolution' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, FixedInVersion) == 0x0001D8, "Member 'FMantisConnect_IssueData::FixedInVersion' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, TargetVersion) == 0x0001E8, "Member 'FMantisConnect_IssueData::TargetVersion' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Description) == 0x0001F8, "Member 'FMantisConnect_IssueData::Description' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, StepsToReproduce) == 0x000208, "Member 'FMantisConnect_IssueData::StepsToReproduce' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, AdditionalInformation) == 0x000218, "Member 'FMantisConnect_IssueData::AdditionalInformation' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Attachments) == 0x000228, "Member 'FMantisConnect_IssueData::Attachments' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Relationships) == 0x000238, "Member 'FMantisConnect_IssueData::Relationships' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Notes) == 0x000248, "Member 'FMantisConnect_IssueData::Notes' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, CustomFields) == 0x000258, "Member 'FMantisConnect_IssueData::CustomFields' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, DueDate) == 0x000268, "Member 'FMantisConnect_IssueData::DueDate' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Monitors) == 0x000270, "Member 'FMantisConnect_IssueData::Monitors' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Sticky) == 0x000280, "Member 'FMantisConnect_IssueData::Sticky' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueData, Tags) == 0x000288, "Member 'FMantisConnect_IssueData::Tags' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetIssuesResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_ProjectGetIssuesResponse final
{
public:
	TArray<struct FMantisConnect_IssueData>       Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_ProjectGetIssuesResponse) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetIssuesResponse");
static_assert(sizeof(FMantisConnect_ProjectGetIssuesResponse) == 0x000010, "Wrong size on FMantisConnect_ProjectGetIssuesResponse");
static_assert(offsetof(FMantisConnect_ProjectGetIssuesResponse, Return) == 0x000000, "Member 'FMantisConnect_ProjectGetIssuesResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_ProjectGetIssues
// 0x0010 (0x0030 - 0x0020)
struct FMantisConnect_ProjectGetIssues final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         ProjectID;                                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PageNumber;                                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PerPage;                                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_ProjectGetIssues) == 0x000008, "Wrong alignment on FMantisConnect_ProjectGetIssues");
static_assert(sizeof(FMantisConnect_ProjectGetIssues) == 0x000030, "Wrong size on FMantisConnect_ProjectGetIssues");
static_assert(offsetof(FMantisConnect_ProjectGetIssues, ProjectID) == 0x000020, "Member 'FMantisConnect_ProjectGetIssues::ProjectID' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectGetIssues, PageNumber) == 0x000024, "Member 'FMantisConnect_ProjectGetIssues::PageNumber' has a wrong offset!");
static_assert(offsetof(FMantisConnect_ProjectGetIssues, PerPage) == 0x000028, "Member 'FMantisConnect_ProjectGetIssues::PerPage' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_HistoryData
// 0x0050 (0x0050 - 0x0000)
struct FMantisConnect_HistoryData final
{
public:
	int32                                         Date;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserId;                                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Username;                                          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Field;                                             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Type;                                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OldValue;                                          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewValue;                                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_HistoryData) == 0x000008, "Wrong alignment on FMantisConnect_HistoryData");
static_assert(sizeof(FMantisConnect_HistoryData) == 0x000050, "Wrong size on FMantisConnect_HistoryData");
static_assert(offsetof(FMantisConnect_HistoryData, Date) == 0x000000, "Member 'FMantisConnect_HistoryData::Date' has a wrong offset!");
static_assert(offsetof(FMantisConnect_HistoryData, UserId) == 0x000004, "Member 'FMantisConnect_HistoryData::UserId' has a wrong offset!");
static_assert(offsetof(FMantisConnect_HistoryData, Username) == 0x000008, "Member 'FMantisConnect_HistoryData::Username' has a wrong offset!");
static_assert(offsetof(FMantisConnect_HistoryData, Field) == 0x000018, "Member 'FMantisConnect_HistoryData::Field' has a wrong offset!");
static_assert(offsetof(FMantisConnect_HistoryData, Type) == 0x000028, "Member 'FMantisConnect_HistoryData::Type' has a wrong offset!");
static_assert(offsetof(FMantisConnect_HistoryData, OldValue) == 0x000030, "Member 'FMantisConnect_HistoryData::OldValue' has a wrong offset!");
static_assert(offsetof(FMantisConnect_HistoryData, NewValue) == 0x000040, "Member 'FMantisConnect_HistoryData::NewValue' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueGetHistoryResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_IssueGetHistoryResponse final
{
public:
	TArray<struct FMantisConnect_HistoryData>     Return;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueGetHistoryResponse) == 0x000008, "Wrong alignment on FMantisConnect_IssueGetHistoryResponse");
static_assert(sizeof(FMantisConnect_IssueGetHistoryResponse) == 0x000010, "Wrong size on FMantisConnect_IssueGetHistoryResponse");
static_assert(offsetof(FMantisConnect_IssueGetHistoryResponse, Return) == 0x000000, "Member 'FMantisConnect_IssueGetHistoryResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueGetHistory
// 0x0008 (0x0028 - 0x0020)
struct FMantisConnect_IssueGetHistory final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         IssueId;                                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_IssueGetHistory) == 0x000008, "Wrong alignment on FMantisConnect_IssueGetHistory");
static_assert(sizeof(FMantisConnect_IssueGetHistory) == 0x000028, "Wrong size on FMantisConnect_IssueGetHistory");
static_assert(offsetof(FMantisConnect_IssueGetHistory, IssueId) == 0x000020, "Member 'FMantisConnect_IssueGetHistory::IssueId' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueNoteDeleteResponse
// 0x0001 (0x0001 - 0x0000)
struct FMantisConnect_IssueNoteDeleteResponse final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueNoteDeleteResponse) == 0x000001, "Wrong alignment on FMantisConnect_IssueNoteDeleteResponse");
static_assert(sizeof(FMantisConnect_IssueNoteDeleteResponse) == 0x000001, "Wrong size on FMantisConnect_IssueNoteDeleteResponse");
static_assert(offsetof(FMantisConnect_IssueNoteDeleteResponse, Return) == 0x000000, "Member 'FMantisConnect_IssueNoteDeleteResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueNoteDelete
// 0x0008 (0x0028 - 0x0020)
struct FMantisConnect_IssueNoteDelete final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         IssueNoteId;                                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_IssueNoteDelete) == 0x000008, "Wrong alignment on FMantisConnect_IssueNoteDelete");
static_assert(sizeof(FMantisConnect_IssueNoteDelete) == 0x000028, "Wrong size on FMantisConnect_IssueNoteDelete");
static_assert(offsetof(FMantisConnect_IssueNoteDelete, IssueNoteId) == 0x000020, "Member 'FMantisConnect_IssueNoteDelete::IssueNoteId' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueNoteAddResponse
// 0x0004 (0x0004 - 0x0000)
struct FMantisConnect_IssueNoteAddResponse final
{
public:
	int32                                         Return;                                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueNoteAddResponse) == 0x000004, "Wrong alignment on FMantisConnect_IssueNoteAddResponse");
static_assert(sizeof(FMantisConnect_IssueNoteAddResponse) == 0x000004, "Wrong size on FMantisConnect_IssueNoteAddResponse");
static_assert(offsetof(FMantisConnect_IssueNoteAddResponse, Return) == 0x000000, "Member 'FMantisConnect_IssueNoteAddResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueNoteAdd
// 0x0098 (0x00B8 - 0x0020)
struct FMantisConnect_IssueNoteAdd final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         IssueId;                                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantisConnect_IssueNoteData           Note;                                              // 0x0028(0x0090)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueNoteAdd) == 0x000008, "Wrong alignment on FMantisConnect_IssueNoteAdd");
static_assert(sizeof(FMantisConnect_IssueNoteAdd) == 0x0000B8, "Wrong size on FMantisConnect_IssueNoteAdd");
static_assert(offsetof(FMantisConnect_IssueNoteAdd, IssueId) == 0x000020, "Member 'FMantisConnect_IssueNoteAdd::IssueId' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueNoteAdd, Note) == 0x000028, "Member 'FMantisConnect_IssueNoteAdd::Note' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueAttachmentGetResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_IssueAttachmentGetResponse final
{
public:
	class FString                                 Return;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueAttachmentGetResponse) == 0x000008, "Wrong alignment on FMantisConnect_IssueAttachmentGetResponse");
static_assert(sizeof(FMantisConnect_IssueAttachmentGetResponse) == 0x000010, "Wrong size on FMantisConnect_IssueAttachmentGetResponse");
static_assert(offsetof(FMantisConnect_IssueAttachmentGetResponse, Return) == 0x000000, "Member 'FMantisConnect_IssueAttachmentGetResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueAttachmentGet
// 0x0008 (0x0028 - 0x0020)
struct FMantisConnect_IssueAttachmentGet final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         IssueAttachmentId;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_IssueAttachmentGet) == 0x000008, "Wrong alignment on FMantisConnect_IssueAttachmentGet");
static_assert(sizeof(FMantisConnect_IssueAttachmentGet) == 0x000028, "Wrong size on FMantisConnect_IssueAttachmentGet");
static_assert(offsetof(FMantisConnect_IssueAttachmentGet, IssueAttachmentId) == 0x000020, "Member 'FMantisConnect_IssueAttachmentGet::IssueAttachmentId' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueAttachmentAddResponse
// 0x0004 (0x0004 - 0x0000)
struct FMantisConnect_IssueAttachmentAddResponse final
{
public:
	int32                                         Return;                                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueAttachmentAddResponse) == 0x000004, "Wrong alignment on FMantisConnect_IssueAttachmentAddResponse");
static_assert(sizeof(FMantisConnect_IssueAttachmentAddResponse) == 0x000004, "Wrong size on FMantisConnect_IssueAttachmentAddResponse");
static_assert(offsetof(FMantisConnect_IssueAttachmentAddResponse, Return) == 0x000000, "Member 'FMantisConnect_IssueAttachmentAddResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueAttachmentAdd
// 0x0038 (0x0058 - 0x0020)
struct FMantisConnect_IssueAttachmentAdd final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         IssueId;                                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FileType;                                          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Content;                                           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueAttachmentAdd) == 0x000008, "Wrong alignment on FMantisConnect_IssueAttachmentAdd");
static_assert(sizeof(FMantisConnect_IssueAttachmentAdd) == 0x000058, "Wrong size on FMantisConnect_IssueAttachmentAdd");
static_assert(offsetof(FMantisConnect_IssueAttachmentAdd, IssueId) == 0x000020, "Member 'FMantisConnect_IssueAttachmentAdd::IssueId' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueAttachmentAdd, Name) == 0x000028, "Member 'FMantisConnect_IssueAttachmentAdd::Name' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueAttachmentAdd, FileType) == 0x000038, "Member 'FMantisConnect_IssueAttachmentAdd::FileType' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueAttachmentAdd, Content) == 0x000048, "Member 'FMantisConnect_IssueAttachmentAdd::Content' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueUpdateResponse
// 0x0001 (0x0001 - 0x0000)
struct FMantisConnect_IssueUpdateResponse final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueUpdateResponse) == 0x000001, "Wrong alignment on FMantisConnect_IssueUpdateResponse");
static_assert(sizeof(FMantisConnect_IssueUpdateResponse) == 0x000001, "Wrong size on FMantisConnect_IssueUpdateResponse");
static_assert(offsetof(FMantisConnect_IssueUpdateResponse, Return) == 0x000000, "Member 'FMantisConnect_IssueUpdateResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueUpdate
// 0x02A0 (0x02C0 - 0x0020)
struct FMantisConnect_IssueUpdate final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         IssueId;                                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantisConnect_IssueData               Issue;                                             // 0x0028(0x0298)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueUpdate) == 0x000008, "Wrong alignment on FMantisConnect_IssueUpdate");
static_assert(sizeof(FMantisConnect_IssueUpdate) == 0x0002C0, "Wrong size on FMantisConnect_IssueUpdate");
static_assert(offsetof(FMantisConnect_IssueUpdate, IssueId) == 0x000020, "Member 'FMantisConnect_IssueUpdate::IssueId' has a wrong offset!");
static_assert(offsetof(FMantisConnect_IssueUpdate, Issue) == 0x000028, "Member 'FMantisConnect_IssueUpdate::Issue' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueAddResponse
// 0x0004 (0x0004 - 0x0000)
struct FMantisConnect_IssueAddResponse final
{
public:
	int32                                         Return;                                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueAddResponse) == 0x000004, "Wrong alignment on FMantisConnect_IssueAddResponse");
static_assert(sizeof(FMantisConnect_IssueAddResponse) == 0x000004, "Wrong size on FMantisConnect_IssueAddResponse");
static_assert(offsetof(FMantisConnect_IssueAddResponse, Return) == 0x000000, "Member 'FMantisConnect_IssueAddResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueAdd
// 0x0298 (0x02B8 - 0x0020)
struct FMantisConnect_IssueAdd final : public FMantisConnect_AuthorizeBase
{
public:
	struct FMantisConnect_IssueData               Issue;                                             // 0x0020(0x0298)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueAdd) == 0x000008, "Wrong alignment on FMantisConnect_IssueAdd");
static_assert(sizeof(FMantisConnect_IssueAdd) == 0x0002B8, "Wrong size on FMantisConnect_IssueAdd");
static_assert(offsetof(FMantisConnect_IssueAdd, Issue) == 0x000020, "Member 'FMantisConnect_IssueAdd::Issue' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueGetResponse
// 0x0298 (0x0298 - 0x0000)
struct FMantisConnect_IssueGetResponse final
{
public:
	struct FMantisConnect_IssueData               Return;                                            // 0x0000(0x0298)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_IssueGetResponse) == 0x000008, "Wrong alignment on FMantisConnect_IssueGetResponse");
static_assert(sizeof(FMantisConnect_IssueGetResponse) == 0x000298, "Wrong size on FMantisConnect_IssueGetResponse");
static_assert(offsetof(FMantisConnect_IssueGetResponse, Return) == 0x000000, "Member 'FMantisConnect_IssueGetResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_IssueGet
// 0x0008 (0x0028 - 0x0020)
struct FMantisConnect_IssueGet final : public FMantisConnect_AuthorizeBase
{
public:
	int32                                         IssueId;                                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_IssueGet) == 0x000008, "Wrong alignment on FMantisConnect_IssueGet");
static_assert(sizeof(FMantisConnect_IssueGet) == 0x000028, "Wrong size on FMantisConnect_IssueGet");
static_assert(offsetof(FMantisConnect_IssueGet, IssueId) == 0x000020, "Member 'FMantisConnect_IssueGet::IssueId' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_UserData
// 0x0050 (0x0050 - 0x0000)
struct FMantisConnect_UserData final
{
public:
	struct FMantisConnect_AccountData             AccountData;                                       // 0x0000(0x0038)(NativeAccessSpecifierPublic)
	int32                                         AccessLevel;                                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Timezone;                                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_UserData) == 0x000008, "Wrong alignment on FMantisConnect_UserData");
static_assert(sizeof(FMantisConnect_UserData) == 0x000050, "Wrong size on FMantisConnect_UserData");
static_assert(offsetof(FMantisConnect_UserData, AccountData) == 0x000000, "Member 'FMantisConnect_UserData::AccountData' has a wrong offset!");
static_assert(offsetof(FMantisConnect_UserData, AccessLevel) == 0x000038, "Member 'FMantisConnect_UserData::AccessLevel' has a wrong offset!");
static_assert(offsetof(FMantisConnect_UserData, Timezone) == 0x000040, "Member 'FMantisConnect_UserData::Timezone' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_LoginResponse
// 0x0050 (0x0050 - 0x0000)
struct FMantisConnect_LoginResponse final
{
public:
	struct FMantisConnect_UserData                Return;                                            // 0x0000(0x0050)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_LoginResponse) == 0x000008, "Wrong alignment on FMantisConnect_LoginResponse");
static_assert(sizeof(FMantisConnect_LoginResponse) == 0x000050, "Wrong size on FMantisConnect_LoginResponse");
static_assert(offsetof(FMantisConnect_LoginResponse, Return) == 0x000000, "Member 'FMantisConnect_LoginResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_Login
// 0x0000 (0x0020 - 0x0020)
struct FMantisConnect_Login final : public FMantisConnect_AuthorizeBase
{
};
static_assert(alignof(FMantisConnect_Login) == 0x000008, "Wrong alignment on FMantisConnect_Login");
static_assert(sizeof(FMantisConnect_Login) == 0x000020, "Wrong size on FMantisConnect_Login");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_VersionResponse
// 0x0010 (0x0010 - 0x0000)
struct FMantisConnect_VersionResponse final
{
public:
	class FString                                 Return;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMantisConnect_VersionResponse) == 0x000008, "Wrong alignment on FMantisConnect_VersionResponse");
static_assert(sizeof(FMantisConnect_VersionResponse) == 0x000010, "Wrong size on FMantisConnect_VersionResponse");
static_assert(offsetof(FMantisConnect_VersionResponse, Return) == 0x000000, "Member 'FMantisConnect_VersionResponse::Return' has a wrong offset!");

// ScriptStruct LadyBugTrackerRuntime.MantisConnect_Version
// 0x0001 (0x0001 - 0x0000)
struct FMantisConnect_Version final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMantisConnect_Version) == 0x000001, "Wrong alignment on FMantisConnect_Version");
static_assert(sizeof(FMantisConnect_Version) == 0x000001, "Wrong size on FMantisConnect_Version");

}

