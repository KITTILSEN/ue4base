#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OpsBoard

#include "Basic.hpp"

#include "WBP_OpsBoard_classes.hpp"
#include "WBP_OpsBoard_parameters.hpp"


namespace SDK
{

// Function WBP_OpsBoard.WBP_OpsBoard_C.ExecuteUbergraph_WBP_OpsBoard
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::ExecuteUbergraph_WBP_OpsBoard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "ExecuteUbergraph_WBP_OpsBoard");

	Params::WBP_OpsBoard_C_ExecuteUbergraph_WBP_OpsBoard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.SpawnMapMarker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGBMapMarker&              MapMarkerWidget                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   WidgetIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::SpawnMapMarker(const struct FGBMapMarker& MapMarkerWidget, int32 WidgetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "SpawnMapMarker");

	Params::WBP_OpsBoard_C_SpawnMapMarker Parms{};

	Parms.MapMarkerWidget = std::move(MapMarkerWidget);
	Parms.WidgetIndex = WidgetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.DisplayCampaignMapMarkers
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::DisplayCampaignMapMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "DisplayCampaignMapMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BndEvt__WBP_OpsBoard_Button_Change_K2Node_ComponentBoundEvent_6_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_OpsBoard_C::BndEvt__WBP_OpsBoard_Button_Change_K2Node_ComponentBoundEvent_6_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BndEvt__WBP_OpsBoard_Button_Change_K2Node_ComponentBoundEvent_6_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.UpdateRandomiseObjectiveButton
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::UpdateRandomiseObjectiveButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "UpdateRandomiseObjectiveButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BndEvt__WBP_OpsBoard_Button_RandomiseObjectives_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_OpsBoard_C::BndEvt__WBP_OpsBoard_Button_RandomiseObjectives_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BndEvt__WBP_OpsBoard_Button_RandomiseObjectives_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.UpdateJoinButtons
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GBGameState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::UpdateJoinButtons(class AGBGameState* GBGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "UpdateJoinButtons");

	Params::WBP_OpsBoard_C_UpdateJoinButtons Parms{};

	Parms.GBGameState = GBGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.OnRoundStageSet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::OnRoundStageSet(class AGBGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "OnRoundStageSet");

	Params::WBP_OpsBoard_C_OnRoundStageSet Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BindRoundStageSet
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::BindRoundStageSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BindRoundStageSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.UpdateMissionName
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GBGameState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::UpdateMissionName(class AGBGameState* GBGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "UpdateMissionName");

	Params::WBP_OpsBoard_C_UpdateMissionName Parms{};

	Parms.GBGameState = GBGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.CheckPlayerElementCount
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::CheckPlayerElementCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "CheckPlayerElementCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.OnGameModeNameUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::OnGameModeNameUpdated(class AGBGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "OnGameModeNameUpdated");

	Params::WBP_OpsBoard_C_OnGameModeNameUpdated Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BindGameModeNameUpdate
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::BindGameModeNameUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BindGameModeNameUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BndEvt__WBP_OpsBoard_Button_0_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_OpsBoard_C::BndEvt__WBP_OpsBoard_Button_0_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BndEvt__WBP_OpsBoard_Button_0_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BndEvt__WBP_OpsBoard_Button_0_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_OpsBoard_C::BndEvt__WBP_OpsBoard_Button_0_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BndEvt__WBP_OpsBoard_Button_0_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.OnMissionNameUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::OnMissionNameUpdated(class AGBGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "OnMissionNameUpdated");

	Params::WBP_OpsBoard_C_OnMissionNameUpdated Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BindMissionNameUpdated
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::BindMissionNameUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BindMissionNameUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.OnSearchLocationsUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::OnSearchLocationsUpdated(class AGBGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "OnSearchLocationsUpdated");

	Params::WBP_OpsBoard_C_OnSearchLocationsUpdated Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.ShowChangeMissionSettings
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::ShowChangeMissionSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "ShowChangeMissionSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.OnMissionSettingsUpdated_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::OnMissionSettingsUpdated_Event_0(class AGBGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "OnMissionSettingsUpdated_Event_0");

	Params::WBP_OpsBoard_C_OnMissionSettingsUpdated_Event_0 Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BindMissionSettingsUpdate
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::BindMissionSettingsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BindMissionSettingsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.HidePrompt
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::HidePrompt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "HidePrompt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.ShowPrompt
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::ShowPrompt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "ShowPrompt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BndEvt__Button_Change_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_OpsBoard_C::BndEvt__Button_Change_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BndEvt__Button_Change_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BndEvt__Button_101_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_OpsBoard_C::BndEvt__Button_101_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BndEvt__Button_101_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.OnGameObjectivesUpdated_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::OnGameObjectivesUpdated_Event_0(class AGBGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "OnGameObjectivesUpdated_Event_0");

	Params::WBP_OpsBoard_C_OnGameObjectivesUpdated_Event_0 Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BindObjectivesChanged
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::BindObjectivesChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BindObjectivesChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "Tick");

	Params::WBP_OpsBoard_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.BindGameRulesUpdate
// (BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::BindGameRulesUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "BindGameRulesUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.OnGameRulesUpdated_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::OnGameRulesUpdated_Event_0(class AGBGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "OnGameRulesUpdated_Event_0");

	Params::WBP_OpsBoard_C_OnGameRulesUpdated_Event_0 Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_OpsBoard_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.UpdateObjectives
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGBGameState*                     GBGameState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::UpdateObjectives(class AGBGameState* GBGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "UpdateObjectives");

	Params::WBP_OpsBoard_C_UpdateObjectives Parms{};

	Parms.GBGameState = GBGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.UpdateInsertionPoints
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::UpdateInsertionPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "UpdateInsertionPoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.UpdatePlayers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::UpdatePlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "UpdatePlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.UpdateObjectiveMarkers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_OpsBoard_C::UpdateObjectiveMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "UpdateObjectiveMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.MissionSettingsInsertionSort
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGBMissionSetting>&       RawMissionSettings                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FGBMissionSetting>*       SortedArray                                            (Parm, OutParm)

void UWBP_OpsBoard_C::MissionSettingsInsertionSort(TArray<struct FGBMissionSetting>& RawMissionSettings, TArray<struct FGBMissionSetting>* SortedArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "MissionSettingsInsertionSort");

	Params::WBP_OpsBoard_C_MissionSettingsInsertionSort Parms{};

	Parms.RawMissionSettings = std::move(RawMissionSettings);

	UObject::ProcessEvent(Func, &Parms);

	RawMissionSettings = std::move(Parms.RawMissionSettings);

	if (SortedArray != nullptr)
		*SortedArray = std::move(Parms.SortedArray);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.CompareMissionSettings
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGBMissionSetting&         A                                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGBMissionSetting&         B                                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   bA_GreaterThan_B                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OpsBoard_C::CompareMissionSettings(const struct FGBMissionSetting& A, const struct FGBMissionSetting& B, bool* bA_GreaterThan_B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "CompareMissionSettings");

	Params::WBP_OpsBoard_C_CompareMissionSettings Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	UObject::ProcessEvent(Func, &Parms);

	if (bA_GreaterThan_B != nullptr)
		*bA_GreaterThan_B = Parms.bA_GreaterThan_B;
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.DumpMissionSettingsToLog
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGBMissionSetting>&       MissionSettingArray                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_OpsBoard_C::DumpMissionSettingsToLog(TArray<struct FGBMissionSetting>& MissionSettingArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "DumpMissionSettingsToLog");

	Params::WBP_OpsBoard_C_DumpMissionSettingsToLog Parms{};

	Parms.MissionSettingArray = std::move(MissionSettingArray);

	UObject::ProcessEvent(Func, &Parms);

	MissionSettingArray = std::move(Parms.MissionSettingArray);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.Get Localised Mission Setting Name
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGBMissionSetting&               MissionSetting                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText*                            LocalisedNameText                                      (Parm, OutParm)

void UWBP_OpsBoard_C::Get_Localised_Mission_Setting_Name(struct FGBMissionSetting& MissionSetting, class FText* LocalisedNameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "Get Localised Mission Setting Name");

	Params::WBP_OpsBoard_C_Get_Localised_Mission_Setting_Name Parms{};

	Parms.MissionSetting = std::move(MissionSetting);

	UObject::ProcessEvent(Func, &Parms);

	MissionSetting = std::move(Parms.MissionSetting);

	if (LocalisedNameText != nullptr)
		*LocalisedNameText = std::move(Parms.LocalisedNameText);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.IsTrainingGameMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsTrainingMode                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OpsBoard_C::IsTrainingGameMode(bool* IsTrainingMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "IsTrainingGameMode");

	Params::WBP_OpsBoard_C_IsTrainingGameMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTrainingMode != nullptr)
		*IsTrainingMode = Parms.IsTrainingMode;
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.PrintToLogJustAFewTimes
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    StringToPrint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::PrintToLogJustAFewTimes(const class FString& StringToPrint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "PrintToLogJustAFewTimes");

	Params::WBP_OpsBoard_C_PrintToLogJustAFewTimes Parms{};

	Parms.StringToPrint = std::move(StringToPrint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.Get_Button_RandomiseObjectives_ToolTipWidget_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_OpsBoard_C::Get_Button_RandomiseObjectives_ToolTipWidget_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "Get_Button_RandomiseObjectives_ToolTipWidget_0");

	Params::WBP_OpsBoard_C_Get_Button_RandomiseObjectives_ToolTipWidget_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.SpawnMapWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGBMapMarker&              MapMarkerInfo1                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   WidgetIndex1                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::SpawnMapWidget(const struct FGBMapMarker& MapMarkerInfo1, int32 WidgetIndex1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "SpawnMapWidget");

	Params::WBP_OpsBoard_C_SpawnMapWidget Parms{};

	Parms.MapMarkerInfo1 = std::move(MapMarkerInfo1);
	Parms.WidgetIndex1 = WidgetIndex1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpsBoard.WBP_OpsBoard_C.GetObjectiveInfoFromObjectiveSoftRef
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class AGBMissionObjective>MissionObjectiveSoftRef                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   bIsPrimary                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString*                          ObjectiveTitle                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_OpsBoard_C::GetObjectiveInfoFromObjectiveSoftRef(TSoftObjectPtr<class AGBMissionObjective> MissionObjectiveSoftRef, bool* bIsPrimary, class FString* ObjectiveTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpsBoard_C", "GetObjectiveInfoFromObjectiveSoftRef");

	Params::WBP_OpsBoard_C_GetObjectiveInfoFromObjectiveSoftRef Parms{};

	Parms.MissionObjectiveSoftRef = MissionObjectiveSoftRef;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPrimary != nullptr)
		*bIsPrimary = Parms.bIsPrimary;

	if (ObjectiveTitle != nullptr)
		*ObjectiveTitle = std::move(Parms.ObjectiveTitle);
}

}

