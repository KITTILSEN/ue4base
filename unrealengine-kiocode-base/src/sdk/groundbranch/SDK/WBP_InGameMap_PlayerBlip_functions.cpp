#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InGameMap_PlayerBlip

#include "Basic.hpp"

#include "WBP_InGameMap_PlayerBlip_classes.hpp"
#include "WBP_InGameMap_PlayerBlip_parameters.hpp"


namespace SDK
{

// Function WBP_InGameMap_PlayerBlip.WBP_InGameMap_PlayerBlip_C.ExecuteUbergraph_WBP_InGameMap_PlayerBlip
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InGameMap_PlayerBlip_C::ExecuteUbergraph_WBP_InGameMap_PlayerBlip(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InGameMap_PlayerBlip_C", "ExecuteUbergraph_WBP_InGameMap_PlayerBlip");

	Params::WBP_InGameMap_PlayerBlip_C_ExecuteUbergraph_WBP_InGameMap_PlayerBlip Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InGameMap_PlayerBlip.WBP_InGameMap_PlayerBlip_C.SetTeamElementColour
// (BlueprintCallable, BlueprintEvent)

void UWBP_InGameMap_PlayerBlip_C::SetTeamElementColour()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InGameMap_PlayerBlip_C", "SetTeamElementColour");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InGameMap_PlayerBlip.WBP_InGameMap_PlayerBlip_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_InGameMap_PlayerBlip_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InGameMap_PlayerBlip_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InGameMap_PlayerBlip.WBP_InGameMap_PlayerBlip_C.UpdatePosition
// (BlueprintCallable, BlueprintEvent)

void UWBP_InGameMap_PlayerBlip_C::UpdatePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InGameMap_PlayerBlip_C", "UpdatePosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InGameMap_PlayerBlip.WBP_InGameMap_PlayerBlip_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InGameMap_PlayerBlip_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InGameMap_PlayerBlip_C", "Tick");

	Params::WBP_InGameMap_PlayerBlip_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InGameMap_PlayerBlip.WBP_InGameMap_PlayerBlip_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_InGameMap_PlayerBlip_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InGameMap_PlayerBlip_C", "OnMouseButtonDown");

	Params::WBP_InGameMap_PlayerBlip_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_InGameMap_PlayerBlip.WBP_InGameMap_PlayerBlip_C.GetIconForTeammate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   TeammateLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InGameMap_PlayerBlip_C::GetIconForTeammate(const struct FVector& TeammateLocation, class UTexture2D** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InGameMap_PlayerBlip_C", "GetIconForTeammate");

	Params::WBP_InGameMap_PlayerBlip_C_GetIconForTeammate Parms{};

	Parms.TeammateLocation = std::move(TeammateLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}

}

