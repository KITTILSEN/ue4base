#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IE_DragDropTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_IE_DragDropTarget.WBP_IE_DragDropTarget_C
// 0x0080 (0x02E0 - 0x0260)
class UWBP_IE_DragDropTarget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Throb;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_54;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USceneComponent*                        Component;                                         // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmallSize;                                         // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BigSize;                                           // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VisualOffset;                                      // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BlockedColour;                                     // 0x029C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NotBlockedColour;                                  // 0x02AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x02BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelativeLoc;                                       // 0x02C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x02D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlocked;                                          // 0x02DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_IE_DragDropTarget(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void Init(class USceneComponent* SceneComp, class FName SocketName_0, const struct FVector& RelativeLoc_0, const struct FVector& VisualOffset_0, float Scale);
	void position();
	void Construct();
	struct FLinearColor GetColorAndOpacity_0();
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	ESlateVisibility GetVisibility_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_IE_DragDropTarget_C">();
	}
	static class UWBP_IE_DragDropTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_IE_DragDropTarget_C>();
	}
};
static_assert(alignof(UWBP_IE_DragDropTarget_C) == 0x000008, "Wrong alignment on UWBP_IE_DragDropTarget_C");
static_assert(sizeof(UWBP_IE_DragDropTarget_C) == 0x0002E0, "Wrong size on UWBP_IE_DragDropTarget_C");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, UberGraphFrame) == 0x000260, "Member 'UWBP_IE_DragDropTarget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, Throb) == 0x000268, "Member 'UWBP_IE_DragDropTarget_C::Throb' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, Image_54) == 0x000270, "Member 'UWBP_IE_DragDropTarget_C::Image_54' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, Component) == 0x000278, "Member 'UWBP_IE_DragDropTarget_C::Component' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, SmallSize) == 0x000280, "Member 'UWBP_IE_DragDropTarget_C::SmallSize' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, BigSize) == 0x000288, "Member 'UWBP_IE_DragDropTarget_C::BigSize' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, VisualOffset) == 0x000290, "Member 'UWBP_IE_DragDropTarget_C::VisualOffset' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, BlockedColour) == 0x00029C, "Member 'UWBP_IE_DragDropTarget_C::BlockedColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, NotBlockedColour) == 0x0002AC, "Member 'UWBP_IE_DragDropTarget_C::NotBlockedColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, SocketName) == 0x0002BC, "Member 'UWBP_IE_DragDropTarget_C::SocketName' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, RelativeLoc) == 0x0002C4, "Member 'UWBP_IE_DragDropTarget_C::RelativeLoc' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, WorldLocation) == 0x0002D0, "Member 'UWBP_IE_DragDropTarget_C::WorldLocation' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_C, bBlocked) == 0x0002DC, "Member 'UWBP_IE_DragDropTarget_C::bBlocked' has a wrong offset!");

}

