#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HUD.BP_HUD_C
// 0x00B0 (0x0418 - 0x0368)
class ABP_HUD_C final : public AGBHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_C*                             HudWidget;                                         // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_InGameMenuManager_C*               InGameMenuManager;                                 // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ChatOverlay_C*                     ChatOverlay;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Hint_Manager_C*                    HintManager;                                       // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, TSoftClassPtr<class UClass>> HintClasses;                                      // 0x0398(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           EventTags;                                         // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           TimerHandle_PlayerNameCleanUp;                     // 0x03F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_ReadyRoomPlayerName_C*             ReadyRoomPlayerName;                               // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_FriendlyPlayer_C*                  FriendlyPlayerName;                                // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ChatInput_C*                       ChatInput;                                         // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HUD(int32 EntryPoint);
	void ShowRadialMenuEvent(const TArray<class UUserWidget*>& RadialMenuEntries);
	void OnPlayerReadyRoomStatusChanged_Event_0(class AGBPlayerState* PlayerState);
	void AddHint(TSoftClassPtr<class UClass> UserWidgetClass);
	void ShowWarningEvent(class FName WarningName);
	void OnColourBlindnessFilterUpdateEvent();
	void HideFriendlyPlayerNameEvent();
	void ShowFriendlyPlayerNameEvent(const class FString& PlayerName, const ETeamElement& PlayerTeamElement);
	void ForceHidePlayerNames();
	void PreventPlayerNameCleanUp();
	void DelayedPlayerNameCleanUp(float Time);
	void PlayerNameCleanUp();
	void ApplyPlayerSettingsEvent(class UGBPlayerSettings* GBPlayerSettings);
	void OnShowHUDEvent();
	void InternalOpenUserMenu(const class FString& MenuName, class FName MenuType);
	void OpenUserMenu(const class FString& MenuName);
	void OpenRadialUserMenu(const class FString& MenuName);
	void OpenLinearUserMenu(const class FString& MenuName);
	void HideGamePlayRelated();
	void HideRadialItemsMenuEvent();
	void ShowRadialItemsMenuEvent(const TArray<class AGBInvItem*>& Items);
	void OnInventorySlotEvent(int32 Index_0, bool bImmediate);
	void HideReadyRoomPlayerNameEvent();
	void ShowReadyRoomPlayerNameEvent(const class FString& PlayerName, const ETeamElement& PlayerTeamElement);
	void OnChatLineAddedEvent(class AGBPlayerState* SenderGBPlayerState, class FName Type, float DisplayTime, const class FString& Message);
	void HideMenuEvent(class FName MenuType);
	void ShowChatInput(bool bTeamChat);
	void ShowMenuEvent(class FName MenuType);
	void OnSuggestHintEvent(class FName HintName);
	void OnShowHintEvent(const TSoftClassPtr<class UClass>& HintWidgetClass);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void OnLoaded_B00F4E19A9F84D66A6AC71A67BEBA963(TSubclassOf<class UObject> Loaded);
	void GetReadyRoomPlayerNameChecked(class UWBP_ReadyRoomPlayerName_C** ReadyRoomPlayerName_0);
	void GetFriendlyPlayerNameChecked(class UWBP_FriendlyPlayer_C** FriendlytPlayerName);
	void InternalOnChatLineAdded(class AGBPlayerState* InSenderPlayerState, class FName InType, float InDisplayTime, const class FString& InMessage);

	bool IsMenuVisibleEvent(class FName MenuType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_C">();
	}
	static class ABP_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HUD_C>();
	}
};
static_assert(alignof(ABP_HUD_C) == 0x000008, "Wrong alignment on ABP_HUD_C");
static_assert(sizeof(ABP_HUD_C) == 0x000418, "Wrong size on ABP_HUD_C");
static_assert(offsetof(ABP_HUD_C, UberGraphFrame) == 0x000368, "Member 'ABP_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, DefaultSceneRoot) == 0x000370, "Member 'ABP_HUD_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, HudWidget) == 0x000378, "Member 'ABP_HUD_C::HudWidget' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, InGameMenuManager) == 0x000380, "Member 'ABP_HUD_C::InGameMenuManager' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, ChatOverlay) == 0x000388, "Member 'ABP_HUD_C::ChatOverlay' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, HintManager) == 0x000390, "Member 'ABP_HUD_C::HintManager' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, HintClasses) == 0x000398, "Member 'ABP_HUD_C::HintClasses' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, EventTags) == 0x0003E8, "Member 'ABP_HUD_C::EventTags' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, TimerHandle_PlayerNameCleanUp) == 0x0003F8, "Member 'ABP_HUD_C::TimerHandle_PlayerNameCleanUp' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, ReadyRoomPlayerName) == 0x000400, "Member 'ABP_HUD_C::ReadyRoomPlayerName' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, FriendlyPlayerName) == 0x000408, "Member 'ABP_HUD_C::FriendlyPlayerName' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, ChatInput) == 0x000410, "Member 'ABP_HUD_C::ChatInput' has a wrong offset!");

}

