#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MissionSummary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MissionSummary.WBP_MissionSummary_C
// 0x0338 (0x0598 - 0x0260)
class UWBP_MissionSummary_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseMatchResult;                                  // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_1;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Background;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Vignette;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Accept;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Close;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_MainMenu;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_RetryMission;                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_SelectNextMission;                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ScreenContainer;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TabContainer;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_2;                                       // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Map;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MatchResult;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionName;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionResult;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Summary;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_TimeElapsed;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_ButtonsSwitcher;                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FKey>                           _QuickCloseKeys;                                   // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Operation;                                         // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         TeamId;                                            // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CurrentTeamTextColour;                             // 0x0344(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OtherTeamTextColour;                               // 0x0354(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MissionFailedColour;                               // 0x0364(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MissionSuccessColour;                              // 0x0374(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MissionFailedTextKey;                              // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MissionSuccessfulTextKey;                          // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   MatchHasEndedText;                                 // 0x03A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TabName_MissionSummary;                            // 0x03C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TabName_CombatStats;                               // 0x03D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TabName_TeamScores;                                // 0x03F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TabName_PlayerScores;                              // 0x0408(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnClose;                                           // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bHasMatchSummary;                                  // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultSelectedTabIndex;                           // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   QuitToMainMenu_Title;                              // 0x0438(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   QuitToMainMenu_Message;                            // 0x0450(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   DialogAARQuitToMainMenu;                           // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResultsAreIn;                                     // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMissionSuccess;                                   // 0x0471(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWeBeatBestCompletionFraction;                     // 0x0472(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_473[0x5];                                      // 0x0473(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text_ProceedButResultsNotIn;                       // 0x0478(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_SaveProgressAndProceed;                       // 0x0490(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_ChooseNewMission;                             // 0x04A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   DialogProceedWithDeadTeamMates;                    // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   SaveProgressAndSelectMission_Title;                // 0x04C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SaveProgressAndSelectMission_Message;              // 0x04E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CampaignMissionCompletionFraction;                 // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCampaignMission;                                // 0x04FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DialogNewCampaignMissionBest;                      // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewCampaignResultBest_Title;                       // 0x0508(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NewCampaignResultBest_MessageFormatSP;             // 0x0520(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NewCampaignResultBest_MessageFormatCoop;           // 0x0538(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsCampaignCoop;                                   // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DialogAARSaveCampaignProgress;                     // 0x0554(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ProceedWithDeadTeamMates_Title;                    // 0x0560(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ProceedWithDeadTeamMates_Message;                  // 0x0578(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   MissionDetailsTableId;                             // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Get_TextBlock_2_bIsEnabled_0();
	class FText Get_TextBlock_2_Text_0();
	bool Get_Button_SelectNextMission_bIsEnabled_0();
	void CreateTeamEntries();
	void CreateCoopEntries();
	void CreateDeathmatchStyleEntries();
	void UpdateMissionResult(class AGBGameState* InGBGameState, const class FString& InResult);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void SetMissionTime(float Seconds);
	void BndEvt__Button_Respawn_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void BindGameStats();
	void OnGameStatsUpdated_Event_0(class AGBGameState* GameState);
	void MatchEnded();
	void Close();
	void OnInitialized();
	void OnPlayerReadyRoomStatusChanged_Event_0(class AGBPlayerState* PlayerState);
	void BindToPlayerState();
	void UnbindGameState();
	void PrepForLoadingScreen();
	void SetupTabs();
	void OnSelected_Event_0(int32 Index_0);
	void SetupButtons();
	void BndEvt__WBP_MissionSummary_Button_RetryMission_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_MissionSummary_Button_SelectNextMission_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_MissionSummary_Button_MainMenu_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void OnQuitToMainMenu(class UWBP_DialogueBox_C* Dialogue);
	void OpenCampaignMenu();
	void OnSaveProgressAndSelectMission(class UWBP_DialogueBox_C* Dialogue);
	void CheckIfBestResult();
	void BndEvt__WBP_MissionSummary_Button_Accept_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void ExecuteUbergraph_WBP_MissionSummary(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MissionSummary_C">();
	}
	static class UWBP_MissionSummary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MissionSummary_C>();
	}
};
static_assert(alignof(UWBP_MissionSummary_C) == 0x000008, "Wrong alignment on UWBP_MissionSummary_C");
static_assert(sizeof(UWBP_MissionSummary_C) == 0x000598, "Wrong size on UWBP_MissionSummary_C");
static_assert(offsetof(UWBP_MissionSummary_C, UberGraphFrame) == 0x000260, "Member 'UWBP_MissionSummary_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, PulseMatchResult) == 0x000268, "Member 'UWBP_MissionSummary_C::PulseMatchResult' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, FadeOut) == 0x000270, "Member 'UWBP_MissionSummary_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, FadeIn) == 0x000278, "Member 'UWBP_MissionSummary_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, BackgroundBlur_1) == 0x000280, "Member 'UWBP_MissionSummary_C::BackgroundBlur_1' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Border_Background) == 0x000288, "Member 'UWBP_MissionSummary_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Border_Vignette) == 0x000290, "Member 'UWBP_MissionSummary_C::Border_Vignette' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Button_Accept) == 0x000298, "Member 'UWBP_MissionSummary_C::Button_Accept' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Button_Close) == 0x0002A0, "Member 'UWBP_MissionSummary_C::Button_Close' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Button_MainMenu) == 0x0002A8, "Member 'UWBP_MissionSummary_C::Button_MainMenu' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Button_RetryMission) == 0x0002B0, "Member 'UWBP_MissionSummary_C::Button_RetryMission' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Button_SelectNextMission) == 0x0002B8, "Member 'UWBP_MissionSummary_C::Button_SelectNextMission' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, ScreenContainer) == 0x0002C0, "Member 'UWBP_MissionSummary_C::ScreenContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, SizeBox_0) == 0x0002C8, "Member 'UWBP_MissionSummary_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TabContainer) == 0x0002D0, "Member 'UWBP_MissionSummary_C::TabContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TextBlock_2) == 0x0002D8, "Member 'UWBP_MissionSummary_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TextBlock_Map) == 0x0002E0, "Member 'UWBP_MissionSummary_C::TextBlock_Map' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TextBlock_MatchResult) == 0x0002E8, "Member 'UWBP_MissionSummary_C::TextBlock_MatchResult' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TextBlock_MissionName) == 0x0002F0, "Member 'UWBP_MissionSummary_C::TextBlock_MissionName' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TextBlock_MissionResult) == 0x0002F8, "Member 'UWBP_MissionSummary_C::TextBlock_MissionResult' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TextBlock_Summary) == 0x000300, "Member 'UWBP_MissionSummary_C::TextBlock_Summary' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TextBlock_TimeElapsed) == 0x000308, "Member 'UWBP_MissionSummary_C::TextBlock_TimeElapsed' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, WidgetSwitcher_ButtonsSwitcher) == 0x000310, "Member 'UWBP_MissionSummary_C::WidgetSwitcher_ButtonsSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, _QuickCloseKeys) == 0x000318, "Member 'UWBP_MissionSummary_C::_QuickCloseKeys' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Operation) == 0x000328, "Member 'UWBP_MissionSummary_C::Operation' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TeamId) == 0x000340, "Member 'UWBP_MissionSummary_C::TeamId' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, CurrentTeamTextColour) == 0x000344, "Member 'UWBP_MissionSummary_C::CurrentTeamTextColour' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, OtherTeamTextColour) == 0x000354, "Member 'UWBP_MissionSummary_C::OtherTeamTextColour' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, MissionFailedColour) == 0x000364, "Member 'UWBP_MissionSummary_C::MissionFailedColour' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, MissionSuccessColour) == 0x000374, "Member 'UWBP_MissionSummary_C::MissionSuccessColour' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, MissionFailedTextKey) == 0x000388, "Member 'UWBP_MissionSummary_C::MissionFailedTextKey' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, MissionSuccessfulTextKey) == 0x000398, "Member 'UWBP_MissionSummary_C::MissionSuccessfulTextKey' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, MatchHasEndedText) == 0x0003A8, "Member 'UWBP_MissionSummary_C::MatchHasEndedText' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TabName_MissionSummary) == 0x0003C0, "Member 'UWBP_MissionSummary_C::TabName_MissionSummary' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TabName_CombatStats) == 0x0003D8, "Member 'UWBP_MissionSummary_C::TabName_CombatStats' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TabName_TeamScores) == 0x0003F0, "Member 'UWBP_MissionSummary_C::TabName_TeamScores' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, TabName_PlayerScores) == 0x000408, "Member 'UWBP_MissionSummary_C::TabName_PlayerScores' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, OnClose) == 0x000420, "Member 'UWBP_MissionSummary_C::OnClose' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, bHasMatchSummary) == 0x000430, "Member 'UWBP_MissionSummary_C::bHasMatchSummary' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, DefaultSelectedTabIndex) == 0x000434, "Member 'UWBP_MissionSummary_C::DefaultSelectedTabIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, QuitToMainMenu_Title) == 0x000438, "Member 'UWBP_MissionSummary_C::QuitToMainMenu_Title' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, QuitToMainMenu_Message) == 0x000450, "Member 'UWBP_MissionSummary_C::QuitToMainMenu_Message' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, DialogAARQuitToMainMenu) == 0x000468, "Member 'UWBP_MissionSummary_C::DialogAARQuitToMainMenu' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, bResultsAreIn) == 0x000470, "Member 'UWBP_MissionSummary_C::bResultsAreIn' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, bMissionSuccess) == 0x000471, "Member 'UWBP_MissionSummary_C::bMissionSuccess' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, bWeBeatBestCompletionFraction) == 0x000472, "Member 'UWBP_MissionSummary_C::bWeBeatBestCompletionFraction' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Text_ProceedButResultsNotIn) == 0x000478, "Member 'UWBP_MissionSummary_C::Text_ProceedButResultsNotIn' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Text_SaveProgressAndProceed) == 0x000490, "Member 'UWBP_MissionSummary_C::Text_SaveProgressAndProceed' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, Text_ChooseNewMission) == 0x0004A8, "Member 'UWBP_MissionSummary_C::Text_ChooseNewMission' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, DialogProceedWithDeadTeamMates) == 0x0004C0, "Member 'UWBP_MissionSummary_C::DialogProceedWithDeadTeamMates' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, SaveProgressAndSelectMission_Title) == 0x0004C8, "Member 'UWBP_MissionSummary_C::SaveProgressAndSelectMission_Title' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, SaveProgressAndSelectMission_Message) == 0x0004E0, "Member 'UWBP_MissionSummary_C::SaveProgressAndSelectMission_Message' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, CampaignMissionCompletionFraction) == 0x0004F8, "Member 'UWBP_MissionSummary_C::CampaignMissionCompletionFraction' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, bIsCampaignMission) == 0x0004FC, "Member 'UWBP_MissionSummary_C::bIsCampaignMission' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, DialogNewCampaignMissionBest) == 0x000500, "Member 'UWBP_MissionSummary_C::DialogNewCampaignMissionBest' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, NewCampaignResultBest_Title) == 0x000508, "Member 'UWBP_MissionSummary_C::NewCampaignResultBest_Title' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, NewCampaignResultBest_MessageFormatSP) == 0x000520, "Member 'UWBP_MissionSummary_C::NewCampaignResultBest_MessageFormatSP' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, NewCampaignResultBest_MessageFormatCoop) == 0x000538, "Member 'UWBP_MissionSummary_C::NewCampaignResultBest_MessageFormatCoop' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, bIsCampaignCoop) == 0x000550, "Member 'UWBP_MissionSummary_C::bIsCampaignCoop' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, DialogAARSaveCampaignProgress) == 0x000554, "Member 'UWBP_MissionSummary_C::DialogAARSaveCampaignProgress' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, ProceedWithDeadTeamMates_Title) == 0x000560, "Member 'UWBP_MissionSummary_C::ProceedWithDeadTeamMates_Title' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, ProceedWithDeadTeamMates_Message) == 0x000578, "Member 'UWBP_MissionSummary_C::ProceedWithDeadTeamMates_Message' has a wrong offset!");
static_assert(offsetof(UWBP_MissionSummary_C, MissionDetailsTableId) == 0x000590, "Member 'UWBP_MissionSummary_C::MissionDetailsTableId' has a wrong offset!");

}

