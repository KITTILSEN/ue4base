#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowerCoordinator

#include "Basic.hpp"

#include "BP_PowerCoordinator_classes.hpp"
#include "BP_PowerCoordinator_parameters.hpp"


namespace SDK
{

// Function BP_PowerCoordinator.BP_PowerCoordinator_C.ExecuteUbergraph_BP_PowerCoordinator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PowerCoordinator_C::ExecuteUbergraph_BP_PowerCoordinator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "ExecuteUbergraph_BP_PowerCoordinator");

	Params::BP_PowerCoordinator_C_ExecuteUbergraph_BP_PowerCoordinator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PowerCoordinator.BP_PowerCoordinator_C.OnPowerSourceStatucChanged_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PowerSourceComponent_C*       InPowerSourceComp                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PowerCoordinator_C::OnPowerSourceStatucChanged_Event_0(class UBP_PowerSourceComponent_C* InPowerSourceComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "OnPowerSourceStatucChanged_Event_0");

	Params::BP_PowerCoordinator_C_OnPowerSourceStatucChanged_Event_0 Parms{};

	Parms.InPowerSourceComp = InPowerSourceComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PowerCoordinator.BP_PowerCoordinator_C.ClientAssociatedWithGroup
// (BlueprintCallable, BlueprintEvent)

void ABP_PowerCoordinator_C::ClientAssociatedWithGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "ClientAssociatedWithGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PowerCoordinator.BP_PowerCoordinator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PowerCoordinator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PowerCoordinator.BP_PowerCoordinator_C.BindPowerSourceComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PowerSourceComponent_C*       InPowerSourceComp                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PowerCoordinator_C::BindPowerSourceComponent(class UBP_PowerSourceComponent_C* InPowerSourceComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "BindPowerSourceComponent");

	Params::BP_PowerCoordinator_C_BindPowerSourceComponent Parms{};

	Parms.InPowerSourceComp = InPowerSourceComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PowerCoordinator.BP_PowerCoordinator_C.InernalClientAssociatedWithGroup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PowerCoordinator_C::InernalClientAssociatedWithGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "InernalClientAssociatedWithGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PowerCoordinator.BP_PowerCoordinator_C.UpdatePowerSourceStatus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PowerSourceComponent_C*       InPowerSource                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PowerCoordinator_C::UpdatePowerSourceStatus(class UBP_PowerSourceComponent_C* InPowerSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "UpdatePowerSourceStatus");

	Params::BP_PowerCoordinator_C_UpdatePowerSourceStatus Parms{};

	Parms.InPowerSource = InPowerSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PowerCoordinator.BP_PowerCoordinator_C.OnRep_SharedPowerSourceStatus
// (BlueprintCallable, BlueprintEvent)

void ABP_PowerCoordinator_C::OnRep_SharedPowerSourceStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "OnRep_SharedPowerSourceStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PowerCoordinator.BP_PowerCoordinator_C.GetSharedPowerSourceStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EGBPowerSourceStatus*                   PowerSourceStatus                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PowerCoordinator_C::GetSharedPowerSourceStatus(EGBPowerSourceStatus* PowerSourceStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowerCoordinator_C", "GetSharedPowerSourceStatus");

	Params::BP_PowerCoordinator_C_GetSharedPowerSourceStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PowerSourceStatus != nullptr)
		*PowerSourceStatus = Parms.PowerSourceStatus;
}

}

