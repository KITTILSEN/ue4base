#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TakeHit_Overlay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TakeHit_Overlay.WBP_TakeHit_Overlay_C
// 0x0070 (0x02D0 - 0x0260)
class UWBP_TakeHit_Overlay_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FlashForward;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FlashBackward;                                     // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FlashLeft;                                         // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FlashRight;                                        // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FlashDown;                                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FlashUp;                                           // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_Backward;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Down;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Forward;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Left;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Right;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Up;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         PitchHeading;                                      // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawHeading;                                        // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_TakeHit_Overlay(int32 EntryPoint);
	void HitForward();
	void HitUp();
	void HitDown();
	void HitRight();
	void HitLeft();
	void HitBack();
	void OnPlayerControllerNotifyTakeHit_Event(const struct FVector& ViewLocation, const struct FRotator& ViewRotation, const struct FTakeHitInfo& LastTakeHitInfo);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TakeHit_Overlay_C">();
	}
	static class UWBP_TakeHit_Overlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TakeHit_Overlay_C>();
	}
};
static_assert(alignof(UWBP_TakeHit_Overlay_C) == 0x000008, "Wrong alignment on UWBP_TakeHit_Overlay_C");
static_assert(sizeof(UWBP_TakeHit_Overlay_C) == 0x0002D0, "Wrong size on UWBP_TakeHit_Overlay_C");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, UberGraphFrame) == 0x000260, "Member 'UWBP_TakeHit_Overlay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, FlashForward) == 0x000268, "Member 'UWBP_TakeHit_Overlay_C::FlashForward' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, FlashBackward) == 0x000270, "Member 'UWBP_TakeHit_Overlay_C::FlashBackward' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, FlashLeft) == 0x000278, "Member 'UWBP_TakeHit_Overlay_C::FlashLeft' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, FlashRight) == 0x000280, "Member 'UWBP_TakeHit_Overlay_C::FlashRight' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, FlashDown) == 0x000288, "Member 'UWBP_TakeHit_Overlay_C::FlashDown' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, FlashUp) == 0x000290, "Member 'UWBP_TakeHit_Overlay_C::FlashUp' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, Image_Backward) == 0x000298, "Member 'UWBP_TakeHit_Overlay_C::Image_Backward' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, Image_Down) == 0x0002A0, "Member 'UWBP_TakeHit_Overlay_C::Image_Down' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, Image_Forward) == 0x0002A8, "Member 'UWBP_TakeHit_Overlay_C::Image_Forward' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, Image_Left) == 0x0002B0, "Member 'UWBP_TakeHit_Overlay_C::Image_Left' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, Image_Right) == 0x0002B8, "Member 'UWBP_TakeHit_Overlay_C::Image_Right' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, Image_Up) == 0x0002C0, "Member 'UWBP_TakeHit_Overlay_C::Image_Up' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, PitchHeading) == 0x0002C8, "Member 'UWBP_TakeHit_Overlay_C::PitchHeading' has a wrong offset!");
static_assert(offsetof(UWBP_TakeHit_Overlay_C, YawHeading) == 0x0002CC, "Member 'UWBP_TakeHit_Overlay_C::YawHeading' has a wrong offset!");

}

