#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BoundKey

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BoundKey.WBP_BoundKey_C
// 0x0148 (0x03A8 - 0x0260)
class UWBP_BoundKey_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Alt_Text;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ControllerAlt_Text;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ControllerCmd_Text;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ControllerCtrl_Text;                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ControllerShift_Text;                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Ctrl_Text;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ControllerAltModifier;               // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ControllerCmdModifier;               // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ControllerCtrlModifier;              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ControllerShiftModifier;             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ModifierAlt;                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ModifierCtrl;                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ModifierShift;                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         KeyContainer;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 KeyImage;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeyText;                                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier_Alt;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier_ControllerAlt;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier_ControllerCmd;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier_ControllerCtrl;                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier_ControllerShift;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier_Ctrl;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier_Shift;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Shift_Text;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   Action;                                            // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         FontSize;                                          // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputBoundKey                         InputBoundKey;                                     // 0x0338(0x0020)(Edit, BlueprintVisible)
	class UDataTable*                             KeyIconTable;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 UnboundGamepadButton;                              // 0x0360(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   ControllerShiftAction;                             // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControllerCtrlAction;                              // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControllerAltAction;                               // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControllerCmdAction;                               // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_BoundKey(int32 EntryPoint);
	void UpdateSize(int32 Size);
	void PreConstruct(bool IsDesignTime);
	void Update();
	void Construct();
	void DetermineInputBoudKey();
	void SetModifierVisAndIcon(bool Condition, class FName Action_0, class UImage* Image, class UWidget* Container);
	void GetModifierGamepadButton(class FName Action_0, struct FKey* OutModifierButton);
	void GetModifierKey(class FName Action_0, struct FKey* OutModifierKey);
	void GetModifierIcon(class FName Action_0, class UTexture2D** Icon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BoundKey_C">();
	}
	static class UWBP_BoundKey_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BoundKey_C>();
	}
};
static_assert(alignof(UWBP_BoundKey_C) == 0x000008, "Wrong alignment on UWBP_BoundKey_C");
static_assert(sizeof(UWBP_BoundKey_C) == 0x0003A8, "Wrong size on UWBP_BoundKey_C");
static_assert(offsetof(UWBP_BoundKey_C, UberGraphFrame) == 0x000260, "Member 'UWBP_BoundKey_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Alt_Text) == 0x000268, "Member 'UWBP_BoundKey_C::Alt_Text' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, ControllerAlt_Text) == 0x000270, "Member 'UWBP_BoundKey_C::ControllerAlt_Text' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, ControllerCmd_Text) == 0x000278, "Member 'UWBP_BoundKey_C::ControllerCmd_Text' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, ControllerCtrl_Text) == 0x000280, "Member 'UWBP_BoundKey_C::ControllerCtrl_Text' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, ControllerShift_Text) == 0x000288, "Member 'UWBP_BoundKey_C::ControllerShift_Text' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Ctrl_Text) == 0x000290, "Member 'UWBP_BoundKey_C::Ctrl_Text' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, HorizontalBox_ControllerAltModifier) == 0x000298, "Member 'UWBP_BoundKey_C::HorizontalBox_ControllerAltModifier' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, HorizontalBox_ControllerCmdModifier) == 0x0002A0, "Member 'UWBP_BoundKey_C::HorizontalBox_ControllerCmdModifier' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, HorizontalBox_ControllerCtrlModifier) == 0x0002A8, "Member 'UWBP_BoundKey_C::HorizontalBox_ControllerCtrlModifier' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, HorizontalBox_ControllerShiftModifier) == 0x0002B0, "Member 'UWBP_BoundKey_C::HorizontalBox_ControllerShiftModifier' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, HorizontalBox_ModifierAlt) == 0x0002B8, "Member 'UWBP_BoundKey_C::HorizontalBox_ModifierAlt' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, HorizontalBox_ModifierCtrl) == 0x0002C0, "Member 'UWBP_BoundKey_C::HorizontalBox_ModifierCtrl' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, HorizontalBox_ModifierShift) == 0x0002C8, "Member 'UWBP_BoundKey_C::HorizontalBox_ModifierShift' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, KeyContainer) == 0x0002D0, "Member 'UWBP_BoundKey_C::KeyContainer' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, KeyImage) == 0x0002D8, "Member 'UWBP_BoundKey_C::KeyImage' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, KeyText) == 0x0002E0, "Member 'UWBP_BoundKey_C::KeyText' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Modifier_Alt) == 0x0002E8, "Member 'UWBP_BoundKey_C::Modifier_Alt' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Modifier_ControllerAlt) == 0x0002F0, "Member 'UWBP_BoundKey_C::Modifier_ControllerAlt' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Modifier_ControllerCmd) == 0x0002F8, "Member 'UWBP_BoundKey_C::Modifier_ControllerCmd' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Modifier_ControllerCtrl) == 0x000300, "Member 'UWBP_BoundKey_C::Modifier_ControllerCtrl' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Modifier_ControllerShift) == 0x000308, "Member 'UWBP_BoundKey_C::Modifier_ControllerShift' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Modifier_Ctrl) == 0x000310, "Member 'UWBP_BoundKey_C::Modifier_Ctrl' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Modifier_Shift) == 0x000318, "Member 'UWBP_BoundKey_C::Modifier_Shift' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Shift_Text) == 0x000320, "Member 'UWBP_BoundKey_C::Shift_Text' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, Action) == 0x000328, "Member 'UWBP_BoundKey_C::Action' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, FontSize) == 0x000330, "Member 'UWBP_BoundKey_C::FontSize' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, InputBoundKey) == 0x000338, "Member 'UWBP_BoundKey_C::InputBoundKey' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, KeyIconTable) == 0x000358, "Member 'UWBP_BoundKey_C::KeyIconTable' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, UnboundGamepadButton) == 0x000360, "Member 'UWBP_BoundKey_C::UnboundGamepadButton' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, ControllerShiftAction) == 0x000388, "Member 'UWBP_BoundKey_C::ControllerShiftAction' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, ControllerCtrlAction) == 0x000390, "Member 'UWBP_BoundKey_C::ControllerCtrlAction' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, ControllerAltAction) == 0x000398, "Member 'UWBP_BoundKey_C::ControllerAltAction' has a wrong offset!");
static_assert(offsetof(UWBP_BoundKey_C, ControllerCmdAction) == 0x0003A0, "Member 'UWBP_BoundKey_C::ControllerCmdAction' has a wrong offset!");

}

