#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AFKPrompt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_AFKPrompt.WBP_AFKPrompt_C.OverrideInputAxis
// 0x0028 (0x0028 - 0x0000)
struct WBP_AFKPrompt_C_OverrideInputAxis final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         Delta;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumSamples;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamepad;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0025(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AFKPrompt_C_OverrideInputAxis) == 0x000008, "Wrong alignment on WBP_AFKPrompt_C_OverrideInputAxis");
static_assert(sizeof(WBP_AFKPrompt_C_OverrideInputAxis) == 0x000028, "Wrong size on WBP_AFKPrompt_C_OverrideInputAxis");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputAxis, Key) == 0x000000, "Member 'WBP_AFKPrompt_C_OverrideInputAxis::Key' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputAxis, Delta) == 0x000018, "Member 'WBP_AFKPrompt_C_OverrideInputAxis::Delta' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputAxis, DeltaTime) == 0x00001C, "Member 'WBP_AFKPrompt_C_OverrideInputAxis::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputAxis, NumSamples) == 0x000020, "Member 'WBP_AFKPrompt_C_OverrideInputAxis::NumSamples' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputAxis, bGamepad) == 0x000024, "Member 'WBP_AFKPrompt_C_OverrideInputAxis::bGamepad' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputAxis, ReturnValue) == 0x000025, "Member 'WBP_AFKPrompt_C_OverrideInputAxis::ReturnValue' has a wrong offset!");

// Function WBP_AFKPrompt.WBP_AFKPrompt_C.OverrideInputKey
// 0x0038 (0x0038 - 0x0000)
struct WBP_AFKPrompt_C_OverrideInputKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	EBPInputEvent                                 EventType;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AmountDepressed;                                   // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamepad;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AFKPrompt_C_OverrideInputKey) == 0x000008, "Wrong alignment on WBP_AFKPrompt_C_OverrideInputKey");
static_assert(sizeof(WBP_AFKPrompt_C_OverrideInputKey) == 0x000038, "Wrong size on WBP_AFKPrompt_C_OverrideInputKey");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputKey, Key) == 0x000000, "Member 'WBP_AFKPrompt_C_OverrideInputKey::Key' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputKey, EventType) == 0x000018, "Member 'WBP_AFKPrompt_C_OverrideInputKey::EventType' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputKey, AmountDepressed) == 0x00001C, "Member 'WBP_AFKPrompt_C_OverrideInputKey::AmountDepressed' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputKey, bGamepad) == 0x000020, "Member 'WBP_AFKPrompt_C_OverrideInputKey::bGamepad' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputKey, ReturnValue) == 0x000021, "Member 'WBP_AFKPrompt_C_OverrideInputKey::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputKey, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'WBP_AFKPrompt_C_OverrideInputKey::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_OverrideInputKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000030, "Member 'WBP_AFKPrompt_C_OverrideInputKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function WBP_AFKPrompt.WBP_AFKPrompt_C.GetReponseTimeLeft
// 0x0038 (0x0038 - 0x0000)
struct WBP_AFKPrompt_C_GetReponseTimeLeft final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(WBP_AFKPrompt_C_GetReponseTimeLeft) == 0x000008, "Wrong alignment on WBP_AFKPrompt_C_GetReponseTimeLeft");
static_assert(sizeof(WBP_AFKPrompt_C_GetReponseTimeLeft) == 0x000038, "Wrong size on WBP_AFKPrompt_C_GetReponseTimeLeft");
static_assert(offsetof(WBP_AFKPrompt_C_GetReponseTimeLeft, ReturnValue) == 0x000000, "Member 'WBP_AFKPrompt_C_GetReponseTimeLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_GetReponseTimeLeft, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'WBP_AFKPrompt_C_GetReponseTimeLeft::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_GetReponseTimeLeft, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_AFKPrompt_C_GetReponseTimeLeft::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_AFKPrompt.WBP_AFKPrompt_C.ExecuteUbergraph_WBP_AFKPrompt
// 0x0040 (0x0040 - 0x0000)
struct WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0028(0x0010)(NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt) == 0x000008, "Wrong alignment on WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt");
static_assert(sizeof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt) == 0x000040, "Wrong size on WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt");
static_assert(offsetof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt, EntryPoint) == 0x000000, "Member 'WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt, Temp_float_Variable) == 0x000004, "Member 'WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt, K2Node_MakeStruct_Anchors) == 0x000028, "Member 'WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'WBP_AFKPrompt_C_ExecuteUbergraph_WBP_AFKPrompt::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

}

