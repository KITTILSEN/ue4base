#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Sprint

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Sprint.GA_Sprint_C.ExecuteUbergraph_GA_Sprint
// 0x01C0 (0x01C0 - 0x0000)
struct GA_Sprint_C_ExecuteUbergraph_GA_Sprint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeHeld;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeHeld)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputRelease*          CallFunc_WaitInputRelease_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0060(0x00B0)(ConstParm)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0110(0x00B0)()
};
static_assert(alignof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint) == 0x000008, "Wrong alignment on GA_Sprint_C_ExecuteUbergraph_GA_Sprint");
static_assert(sizeof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint) == 0x0001C0, "Wrong size on GA_Sprint_C_ExecuteUbergraph_GA_Sprint");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, EntryPoint) == 0x000000, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_CustomEvent_TimeHeld) == 0x000004, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_CustomEvent_TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, Temp_float_Variable) == 0x000018, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, CallFunc_WaitInputRelease_ReturnValue) == 0x000020, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::CallFunc_WaitInputRelease_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_Event_bWasCancelled) == 0x000029, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000030, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000038, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_DynamicCast_AsGBCharacter) == 0x000040, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_DynamicCast_AsGBCharacter_1) == 0x000050, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_DynamicCast_AsGBCharacter_1' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_Event_EventData) == 0x000060, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Sprint_C_ExecuteUbergraph_GA_Sprint, K2Node_CustomEvent_EventData) == 0x000110, "Member 'GA_Sprint_C_ExecuteUbergraph_GA_Sprint::K2Node_CustomEvent_EventData' has a wrong offset!");

// Function GA_Sprint.GA_Sprint_C.ActivatedByAI
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Sprint_C_ActivatedByAI final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Sprint_C_ActivatedByAI) == 0x000008, "Wrong alignment on GA_Sprint_C_ActivatedByAI");
static_assert(sizeof(GA_Sprint_C_ActivatedByAI) == 0x0000B0, "Wrong size on GA_Sprint_C_ActivatedByAI");
static_assert(offsetof(GA_Sprint_C_ActivatedByAI, EventData) == 0x000000, "Member 'GA_Sprint_C_ActivatedByAI::EventData' has a wrong offset!");

// Function GA_Sprint.GA_Sprint_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Sprint_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Sprint_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Sprint_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Sprint_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Sprint_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Sprint_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Sprint_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Sprint.GA_Sprint_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Sprint_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Sprint_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Sprint_C_K2_OnEndAbility");
static_assert(sizeof(GA_Sprint_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Sprint_C_K2_OnEndAbility");
static_assert(offsetof(GA_Sprint_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Sprint_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Sprint.GA_Sprint_C.OnRelease_16868A99B1A54102BC2F5BBBECD3D020
// 0x0004 (0x0004 - 0x0000)
struct GA_Sprint_C_OnRelease_16868A99B1A54102BC2F5BBBECD3D020 final
{
public:
	float                                         TimeHeld;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Sprint_C_OnRelease_16868A99B1A54102BC2F5BBBECD3D020) == 0x000004, "Wrong alignment on GA_Sprint_C_OnRelease_16868A99B1A54102BC2F5BBBECD3D020");
static_assert(sizeof(GA_Sprint_C_OnRelease_16868A99B1A54102BC2F5BBBECD3D020) == 0x000004, "Wrong size on GA_Sprint_C_OnRelease_16868A99B1A54102BC2F5BBBECD3D020");
static_assert(offsetof(GA_Sprint_C_OnRelease_16868A99B1A54102BC2F5BBBECD3D020, TimeHeld) == 0x000000, "Member 'GA_Sprint_C_OnRelease_16868A99B1A54102BC2F5BBBECD3D020::TimeHeld' has a wrong offset!");

}

