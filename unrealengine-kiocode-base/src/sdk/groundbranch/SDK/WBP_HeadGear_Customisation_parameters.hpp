#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HeadGear_Customisation

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_HeadGear_Customisation.WBP_HeadGear_Customisation_C.ExecuteUbergraph_WBP_HeadGear_Customisation
// 0x0150 (0x0150 - 0x0000)
struct WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        Temp_object_Variable;                              // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        K2Node_CustomEvent_Loaded;                         // 0x0028(0x0010)(ConstParm, ReferenceParm)
	class AGBCharacter*                           K2Node_CustomEvent_Character;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             K2Node_CustomEvent_InvItem;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetInvItemTags_ReturnValue;               // 0x0048(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAddCounterWeight_bOutResult;        // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const TArray<class UObject*>& Loaded)> K2Node_CreateDelegate_OutputDelegate;      // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	TSubclassOf<class UObject>                    CallFunc_GetClassFromPrimaryAssetId_ReturnValue;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGBInv_Item;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	class AGBInvItem*                             CallFunc_SpawnInvItem_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncActionLoadPrimaryAssetList*       CallFunc_AsyncLoadPrimaryAssetList_ReturnValue;    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x00D8(0x0020)()
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                CallFunc_GetInvItemAssetIds_OutItemAssetIds;       // 0x0100(0x0010)(ReferenceParm)
	TArray<struct FPrimaryAssetId>                CallFunc_SortPrimaryAssetIdList_OutPrimaryAssetIdList; // 0x0110(0x0010)(ReferenceParm)
	struct FPrimaryAssetId                        CallFunc_Array_Get_Item;                           // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_AttachItemTo_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGBCharacter* Character, class AGBInvItem* InvItem)> K2Node_CreateDelegate_OutputDelegate_1; // 0x013C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation) == 0x000008, "Wrong alignment on WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation");
static_assert(sizeof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation) == 0x000150, "Wrong size on WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, EntryPoint) == 0x000000, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, Temp_object_Variable) == 0x000008, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, K2Node_CustomEvent_Loaded) == 0x000028, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, K2Node_CustomEvent_Character) == 0x000038, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, K2Node_CustomEvent_InvItem) == 0x000040, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::K2Node_CustomEvent_InvItem' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_GetInvItemTags_ReturnValue) == 0x000048, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_GetInvItemTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_ShouldAddCounterWeight_bOutResult) == 0x00006B, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_ShouldAddCounterWeight_bOutResult' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000070, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_GetClassFromPrimaryAssetId_ReturnValue) == 0x000098, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_GetClassFromPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, K2Node_ClassDynamicCast_AsGBInv_Item) == 0x0000A0, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::K2Node_ClassDynamicCast_AsGBInv_Item' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, K2Node_ClassDynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, Temp_name_Variable) == 0x0000B0, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_SpawnInvItem_ReturnValue) == 0x0000C0, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_SpawnInvItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_AsyncLoadPrimaryAssetList_ReturnValue) == 0x0000C8, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_AsyncLoadPrimaryAssetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_IsValid_ReturnValue_3) == 0x0000D0, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0000D8, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_HasAllTags_ReturnValue) == 0x0000F8, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_GetInvItemAssetIds_OutItemAssetIds) == 0x000100, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_GetInvItemAssetIds_OutItemAssetIds' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_SortPrimaryAssetIdList_OutPrimaryAssetIdList) == 0x000110, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_SortPrimaryAssetIdList_OutPrimaryAssetIdList' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_Array_Get_Item) == 0x000120, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_BP_AttachItemTo_ReturnValue) == 0x000130, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_BP_AttachItemTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation, K2Node_CreateDelegate_OutputDelegate_1) == 0x00013C, "Member 'WBP_HeadGear_Customisation_C_ExecuteUbergraph_WBP_HeadGear_Customisation::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_HeadGear_Customisation.WBP_HeadGear_Customisation_C.InventoryItemAdded_Event_0
// 0x0010 (0x0010 - 0x0000)
struct WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0 final
{
public:
	class AGBCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             InvItem;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0) == 0x000008, "Wrong alignment on WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0");
static_assert(sizeof(WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0) == 0x000010, "Wrong size on WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0");
static_assert(offsetof(WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0, Character) == 0x000000, "Member 'WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0::Character' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0, InvItem) == 0x000008, "Member 'WBP_HeadGear_Customisation_C_InventoryItemAdded_Event_0::InvItem' has a wrong offset!");

// Function WBP_HeadGear_Customisation.WBP_HeadGear_Customisation_C.Completed_EFA7DA480CDD468D902B6D60A3A6BA12
// 0x0010 (0x0010 - 0x0000)
struct WBP_HeadGear_Customisation_C_Completed_EFA7DA480CDD468D902B6D60A3A6BA12 final
{
public:
	TArray<class UObject*>                        Loaded;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_HeadGear_Customisation_C_Completed_EFA7DA480CDD468D902B6D60A3A6BA12) == 0x000008, "Wrong alignment on WBP_HeadGear_Customisation_C_Completed_EFA7DA480CDD468D902B6D60A3A6BA12");
static_assert(sizeof(WBP_HeadGear_Customisation_C_Completed_EFA7DA480CDD468D902B6D60A3A6BA12) == 0x000010, "Wrong size on WBP_HeadGear_Customisation_C_Completed_EFA7DA480CDD468D902B6D60A3A6BA12");
static_assert(offsetof(WBP_HeadGear_Customisation_C_Completed_EFA7DA480CDD468D902B6D60A3A6BA12, Loaded) == 0x000000, "Member 'WBP_HeadGear_Customisation_C_Completed_EFA7DA480CDD468D902B6D60A3A6BA12::Loaded' has a wrong offset!");

// Function WBP_HeadGear_Customisation.WBP_HeadGear_Customisation_C.AddedSocketTagIncludes
// 0x0088 (0x0088 - 0x0000)
struct WBP_HeadGear_Customisation_C_AddedSocketTagIncludes final
{
public:
	struct FGameplayTag                           LocalGameplayTag;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalSocketName;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTag                           CallFunc_GameplayTag_FromSocketName_ReturnValue;   // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0038(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes) == 0x000008, "Wrong alignment on WBP_HeadGear_Customisation_C_AddedSocketTagIncludes");
static_assert(sizeof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes) == 0x000088, "Wrong size on WBP_HeadGear_Customisation_C_AddedSocketTagIncludes");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, LocalGameplayTag) == 0x000000, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::LocalGameplayTag' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, LocalSocketName) == 0x000008, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::LocalSocketName' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, K2Node_MakeArray_Array) == 0x000020, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_GameplayTag_FromSocketName_ReturnValue) == 0x000030, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_GameplayTag_FromSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000038, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_HasTag_ReturnValue) == 0x000058, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000059, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000060, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_GetAllSocketNames_ReturnValue) == 0x000068, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_Array_Get_Item) == 0x00007C, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_AddedSocketTagIncludes, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'WBP_HeadGear_Customisation_C_AddedSocketTagIncludes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HeadGear_Customisation.WBP_HeadGear_Customisation_C.ShouldAddCounterWeight
// 0x0038 (0x0038 - 0x0000)
struct WBP_HeadGear_Customisation_C_ShouldAddCounterWeight final
{
public:
	bool                                          bOutResult;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetInvItemSkinTypeTag_ReturnValue;        // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                CallFunc_GetInvItemAssetIds_OutItemAssetIds;       // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_GetSimilarInvItemSkinId_ReturnValue;      // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeadGear_Customisation_C_ShouldAddCounterWeight) == 0x000008, "Wrong alignment on WBP_HeadGear_Customisation_C_ShouldAddCounterWeight");
static_assert(sizeof(WBP_HeadGear_Customisation_C_ShouldAddCounterWeight) == 0x000038, "Wrong size on WBP_HeadGear_Customisation_C_ShouldAddCounterWeight");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ShouldAddCounterWeight, bOutResult) == 0x000000, "Member 'WBP_HeadGear_Customisation_C_ShouldAddCounterWeight::bOutResult' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ShouldAddCounterWeight, CallFunc_GetInvItemSkinTypeTag_ReturnValue) == 0x000004, "Member 'WBP_HeadGear_Customisation_C_ShouldAddCounterWeight::CallFunc_GetInvItemSkinTypeTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ShouldAddCounterWeight, CallFunc_GetInvItemAssetIds_OutItemAssetIds) == 0x000010, "Member 'WBP_HeadGear_Customisation_C_ShouldAddCounterWeight::CallFunc_GetInvItemAssetIds_OutItemAssetIds' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ShouldAddCounterWeight, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_HeadGear_Customisation_C_ShouldAddCounterWeight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ShouldAddCounterWeight, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'WBP_HeadGear_Customisation_C_ShouldAddCounterWeight::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_ShouldAddCounterWeight, CallFunc_GetSimilarInvItemSkinId_ReturnValue) == 0x000028, "Member 'WBP_HeadGear_Customisation_C_ShouldAddCounterWeight::CallFunc_GetSimilarInvItemSkinId_ReturnValue' has a wrong offset!");

// Function WBP_HeadGear_Customisation.WBP_HeadGear_Customisation_C.UpdateNVGCounterWeight
// 0x0070 (0x0070 - 0x0000)
struct WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight final
{
public:
	class AGBInvItem*                             LocalNVGCounterWeight;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             LocalNVG;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AGBInvItem*>                     CallFunc_GetChildInvItems_ReturnValue;             // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetInvItemTags_ReturnValue;               // 0x0048(0x0020)()
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllTags_ReturnValue_1;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight) == 0x000008, "Wrong alignment on WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight");
static_assert(sizeof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight) == 0x000070, "Wrong size on WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, LocalNVGCounterWeight) == 0x000000, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::LocalNVGCounterWeight' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, LocalNVG) == 0x000008, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::LocalNVG' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_IsValid_ReturnValue_1) == 0x00001D, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_IsValid_ReturnValue_2) == 0x00001F, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_GetChildInvItems_ReturnValue) == 0x000020, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_GetChildInvItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_GetInvItemTags_ReturnValue) == 0x000048, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_GetInvItemTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_HasAllTags_ReturnValue) == 0x000068, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight, CallFunc_HasAllTags_ReturnValue_1) == 0x000069, "Member 'WBP_HeadGear_Customisation_C_UpdateNVGCounterWeight::CallFunc_HasAllTags_ReturnValue_1' has a wrong offset!");

}

