#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Roster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Roster.WBP_Roster_C.ExecuteUbergraph_WBP_Roster
// 0x0078 (0x0078 - 0x0000)
struct WBP_Roster_C_ExecuteUbergraph_WBP_Roster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_RosterPlayerInfoWidget;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster) == 0x000008, "Wrong alignment on WBP_Roster_C_ExecuteUbergraph_WBP_Roster");
static_assert(sizeof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster) == 0x000078, "Wrong size on WBP_Roster_C_ExecuteUbergraph_WBP_Roster");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, EntryPoint) == 0x000000, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, Temp_byte_Variable) == 0x000004, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, Temp_bool_Variable) == 0x000005, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, Temp_byte_Variable_2) == 0x000007, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, K2Node_Event_MyGeometry) == 0x000008, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, K2Node_CustomEvent_Count) == 0x000044, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, K2Node_CustomEvent_RosterPlayerInfoWidget) == 0x000048, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::K2Node_CustomEvent_RosterPlayerInfoWidget' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000058, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, Temp_byte_Variable_3) == 0x000060, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x000068, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, Temp_bool_Variable_1) == 0x000070, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, K2Node_Select_Default) == 0x000071, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, CallFunc_Less_ByteByte_ReturnValue) == 0x000072, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_ExecuteUbergraph_WBP_Roster, K2Node_Select_Default_1) == 0x000073, "Member 'WBP_Roster_C_ExecuteUbergraph_WBP_Roster::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Roster.WBP_Roster_C.AddToList
// 0x0010 (0x0010 - 0x0000)
struct WBP_Roster_C_AddToList final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                RosterPlayerInfoWidget;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Roster_C_AddToList) == 0x000008, "Wrong alignment on WBP_Roster_C_AddToList");
static_assert(sizeof(WBP_Roster_C_AddToList) == 0x000010, "Wrong size on WBP_Roster_C_AddToList");
static_assert(offsetof(WBP_Roster_C_AddToList, Count) == 0x000000, "Member 'WBP_Roster_C_AddToList::Count' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_AddToList, RosterPlayerInfoWidget) == 0x000008, "Member 'WBP_Roster_C_AddToList::RosterPlayerInfoWidget' has a wrong offset!");

// Function WBP_Roster.WBP_Roster_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Roster_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Roster_C_Tick) == 0x000004, "Wrong alignment on WBP_Roster_C_Tick");
static_assert(sizeof(WBP_Roster_C_Tick) == 0x00003C, "Wrong size on WBP_Roster_C_Tick");
static_assert(offsetof(WBP_Roster_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Roster_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Roster_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Roster.WBP_Roster_C.Get_VerticalBox_Column2_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0) == 0x000001, "Wrong alignment on WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0");
static_assert(sizeof(WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0) == 0x000006, "Wrong size on WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0");
static_assert(offsetof(WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0, ReturnValue) == 0x000000, "Member 'WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0, CallFunc_HasAnyChildren_ReturnValue) == 0x000004, "Member 'WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'WBP_Roster_C_Get_VerticalBox_Column2_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Roster.WBP_Roster_C.Update
// 0x0228 (0x0228 - 0x0000)
struct WBP_Roster_C_Update final
{
public:
	class FString                                 LocalDutyListString;                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bLocalFound;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Roster_Entry_C*>            ExistingPlayersInfos;                              // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	uint8                                         LocalTeamId;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Roster_Entry_C*                    CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State_1;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBTeamInfo                            CallFunc_GetPlayerTeamInfo_ReturnValue;            // 0x0074(0x0018)(NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00E8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0130(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State_2;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Roster_Entry_C*                    CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAdjustedPlayerTeamId_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Roster_Entry_C*>            CallFunc_GetChildWidgetsOfClass_ChildWidgets;      // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Roster_Entry_C*>            CallFunc_GetChildWidgetsOfClass_ChildWidgets_1;    // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x01B8(0x0018)()
	TArray<class AGBPlayerState*>                 CallFunc_GetPlayerList_ReturnValue;                // 0x01D0(0x0010)(ReferenceParm)
	class AGBPlayerState*                         CallFunc_Array_Get_Item_1;                         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOnDuty_ReturnValue;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Roster_C_Update) == 0x000008, "Wrong alignment on WBP_Roster_C_Update");
static_assert(sizeof(WBP_Roster_C_Update) == 0x000228, "Wrong size on WBP_Roster_C_Update");
static_assert(offsetof(WBP_Roster_C_Update, LocalDutyListString) == 0x000000, "Member 'WBP_Roster_C_Update::LocalDutyListString' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, bLocalFound) == 0x000010, "Member 'WBP_Roster_C_Update::bLocalFound' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, ExistingPlayersInfos) == 0x000018, "Member 'WBP_Roster_C_Update::ExistingPlayersInfos' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, LocalTeamId) == 0x000028, "Member 'WBP_Roster_C_Update::LocalTeamId' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_Roster_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_Roster_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_Roster_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Create_ReturnValue) == 0x000038, "Member 'WBP_Roster_C_Update::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'WBP_Roster_C_Update::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, K2Node_DynamicCast_AsGBGame_State) == 0x000048, "Member 'WBP_Roster_C_Update::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_Roster_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, Temp_bool_True_if_break_was_hit_Variable) == 0x000051, "Member 'WBP_Roster_C_Update::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'WBP_Roster_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetGameState_ReturnValue_1) == 0x000058, "Member 'WBP_Roster_C_Update::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'WBP_Roster_C_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, K2Node_DynamicCast_AsGBGame_State_1) == 0x000068, "Member 'WBP_Roster_C_Update::K2Node_DynamicCast_AsGBGame_State_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WBP_Roster_C_Update::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetPlayerTeamInfo_ReturnValue) == 0x000074, "Member 'WBP_Roster_C_Update::CallFunc_GetPlayerTeamInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Conv_NameToText_ReturnValue) == 0x000090, "Member 'WBP_Roster_C_Update::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'WBP_Roster_C_Update::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_TextToUpper_ReturnValue) == 0x0000E8, "Member 'WBP_Roster_C_Update::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, K2Node_MakeArray_Array) == 0x000100, "Member 'WBP_Roster_C_Update::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000110, "Member 'WBP_Roster_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, Temp_int_Loop_Counter_Variable_1) == 0x000114, "Member 'WBP_Roster_C_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'WBP_Roster_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_LeftChop_ReturnValue) == 0x000120, "Member 'WBP_Roster_C_Update::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Conv_StringToText_ReturnValue) == 0x000130, "Member 'WBP_Roster_C_Update::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetGameState_ReturnValue_2) == 0x000148, "Member 'WBP_Roster_C_Update::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, K2Node_DynamicCast_AsGBGame_State_2) == 0x000150, "Member 'WBP_Roster_C_Update::K2Node_DynamicCast_AsGBGame_State_2' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, K2Node_DynamicCast_bSuccess_2) == 0x000158, "Member 'WBP_Roster_C_Update::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Array_Get_Item) == 0x000160, "Member 'WBP_Roster_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetAdjustedPlayerTeamId_ReturnValue) == 0x000168, "Member 'WBP_Roster_C_Update::CallFunc_GetAdjustedPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Array_Length_ReturnValue) == 0x00016C, "Member 'WBP_Roster_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'WBP_Roster_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000171, "Member 'WBP_Roster_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetChildWidgetsOfClass_ChildWidgets) == 0x000178, "Member 'WBP_Roster_C_Update::CallFunc_GetChildWidgetsOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetChildWidgetsOfClass_ChildWidgets_1) == 0x000188, "Member 'WBP_Roster_C_Update::CallFunc_GetChildWidgetsOfClass_ChildWidgets_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Not_PreBool_ReturnValue_1) == 0x000198, "Member 'WBP_Roster_C_Update::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'WBP_Roster_C_Update::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_TextToUpper_ReturnValue_1) == 0x0001B8, "Member 'WBP_Roster_C_Update::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetPlayerList_ReturnValue) == 0x0001D0, "Member 'WBP_Roster_C_Update::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Array_Get_Item_1) == 0x0001E0, "Member 'WBP_Roster_C_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Array_Length_ReturnValue_1) == 0x0001E8, "Member 'WBP_Roster_C_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001EC, "Member 'WBP_Roster_C_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001ED, "Member 'WBP_Roster_C_Update::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetPlayerName_ReturnValue) == 0x0001F0, "Member 'WBP_Roster_C_Update::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_GetOnDuty_ReturnValue) == 0x000200, "Member 'WBP_Roster_C_Update::CallFunc_GetOnDuty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Concat_StrStr_ReturnValue) == 0x000208, "Member 'WBP_Roster_C_Update::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Roster_C_Update, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000218, "Member 'WBP_Roster_C_Update::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function WBP_Roster.WBP_Roster_C.OnPaint
// 0x0030 (0x0030 - 0x0000)
struct WBP_Roster_C_OnPaint final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Roster_C_OnPaint) == 0x000008, "Wrong alignment on WBP_Roster_C_OnPaint");
static_assert(sizeof(WBP_Roster_C_OnPaint) == 0x000030, "Wrong size on WBP_Roster_C_OnPaint");
static_assert(offsetof(WBP_Roster_C_OnPaint, Context) == 0x000000, "Member 'WBP_Roster_C_OnPaint::Context' has a wrong offset!");

}

