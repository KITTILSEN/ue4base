#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController

#include "Basic.hpp"

#include "BP_PlayerController_classes.hpp"
#include "BP_PlayerController_parameters.hpp"


namespace SDK
{

// Function BP_PlayerController.BP_PlayerController_C.TraceFwd
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
// struct FVector*                         ImpactPoint                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor**                          HitActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_PlayerController_C::TraceFwd(struct FVector* ImpactPoint, class AActor** HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "TraceFwd");

	Params::BP_PlayerController_C_TraceFwd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ImpactPoint != nullptr)
		*ImpactPoint = std::move(Parms.ImpactPoint);

	if (HitActor != nullptr)
		*HitActor = Parms.HitActor;

	return Parms.ReturnValue;
}


// Function BP_PlayerController.BP_PlayerController_C.HasKitWithFailedJson
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bOutJsonWasInvalid                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_C::HasKitWithFailedJson(bool* bOutJsonWasInvalid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "HasKitWithFailedJson");

	Params::BP_PlayerController_C_HasKitWithFailedJson Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutJsonWasInvalid != nullptr)
		*bOutJsonWasInvalid = Parms.bOutJsonWasInvalid;
}


// Function BP_PlayerController.BP_PlayerController_C.ToggleDebugLightDetector
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_C::ToggleDebugLightDetector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "ToggleDebugLightDetector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnLoaded_20127F524F4779842409348BE6B7D46D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_PlayerController_C::OnLoaded_20127F524F4779842409348BE6B7D46D(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnLoaded_20127F524F4779842409348BE6B7D46D");

	Params::BP_PlayerController_C_OnLoaded_20127F524F4779842409348BE6B7D46D Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.OnPreSeamlessTravelEvent
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_C::OnPreSeamlessTravelEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnPreSeamlessTravelEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.ShowAdminMenuEvent
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_C::ShowAdminMenuEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "ShowAdminMenuEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.ShowTransitionScreenEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TransitionType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::ShowTransitionScreenEvent(class FName TransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "ShowTransitionScreenEvent");

	Params::BP_PlayerController_C_ShowTransitionScreenEvent Parms{};

	Parms.TransitionType = TransitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.HideTransitionScreenEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UUserWidget*                      LoadingScreenUserWidget                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::HideTransitionScreenEvent(class UUserWidget* LoadingScreenUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "HideTransitionScreenEvent");

	Params::BP_PlayerController_C_HideTransitionScreenEvent Parms{};

	Parms.LoadingScreenUserWidget = LoadingScreenUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.OnAFKPromptEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ReponseTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::OnAFKPromptEvent(float ReponseTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnAFKPromptEvent");

	Params::BP_PlayerController_C_OnAFKPromptEvent Parms{};

	Parms.ReponseTime = ReponseTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.OpenMissionEditorEvent
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_C::OpenMissionEditorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OpenMissionEditorEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnShowWorldPromptEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FVector&                   PromptLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FUInt64&                   ModID                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::OnShowWorldPromptEvent(const struct FVector& PromptLocation, class FName Tag, float Duration, const struct FUInt64& ModID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnShowWorldPromptEvent");

	Params::BP_PlayerController_C_OnShowWorldPromptEvent Parms{};

	Parms.PromptLocation = std::move(PromptLocation);
	Parms.Tag = Tag;
	Parms.Duration = Duration;
	Parms.ModID = std::move(ModID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.AddEditorDebugMenu
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_C::AddEditorDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "AddEditorDebugMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnFailedKitValidationsUpdateEvent
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_C::OnFailedKitValidationsUpdateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnFailedKitValidationsUpdateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnFailedValidationOkClicked_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_DialogueBox_C*               Dialogue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::OnFailedValidationOkClicked_Event(class UWBP_DialogueBox_C* Dialogue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnFailedValidationOkClicked_Event");

	Params::BP_PlayerController_C_OnFailedValidationOkClicked_Event Parms{};

	Parms.Dialogue = Dialogue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.OnFailedValidationCancelClicked_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_C::OnFailedValidationCancelClicked_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnFailedValidationCancelClicked_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnInvalidItemsOrSkins
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_C::OnInvalidItemsOrSkins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnInvalidItemsOrSkins");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnFailedJsonOkClicked_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_DialogueBox_C*               Dialogue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::OnFailedJsonOkClicked_Event(class UWBP_DialogueBox_C* Dialogue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnFailedJsonOkClicked_Event");

	Params::BP_PlayerController_C_OnFailedJsonOkClicked_Event Parms{};

	Parms.Dialogue = Dialogue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.OnFailedJson
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_C::OnFailedJson()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnFailedJson");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnCustomiseOperatorCheatEvent
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_C::OnCustomiseOperatorCheatEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnCustomiseOperatorCheatEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnDone_Event_0
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_C::OnDone_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnDone_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController.BP_PlayerController_C.OnAlreadyAttemptedRemoveOrReplaceOkClient_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_DialogueBox_C*               Dialogue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::OnAlreadyAttemptedRemoveOrReplaceOkClient_Event(class UWBP_DialogueBox_C* Dialogue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnAlreadyAttemptedRemoveOrReplaceOkClient_Event");

	Params::BP_PlayerController_C_OnAlreadyAttemptedRemoveOrReplaceOkClient_Event Parms{};

	Parms.Dialogue = Dialogue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.OnMissionObjectiveStatusUpdateEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// const EGBMissionObjectiveStatusUpdateTypeStatusUpdateType                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGBMissionObjective*              MissionObjective                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FloatParam                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::OnMissionObjectiveStatusUpdateEvent(const EGBMissionObjectiveStatusUpdateType StatusUpdateType, class AGBMissionObjective* MissionObjective, float FloatParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "OnMissionObjectiveStatusUpdateEvent");

	Params::BP_PlayerController_C_OnMissionObjectiveStatusUpdateEvent Parms{};

	Parms.StatusUpdateType = StatusUpdateType;
	Parms.MissionObjective = MissionObjective;
	Parms.FloatParam = FloatParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "ReceivePossess");

	Params::BP_PlayerController_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.ExecuteUbergraph_BP_PlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_C::ExecuteUbergraph_BP_PlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "ExecuteUbergraph_BP_PlayerController");

	Params::BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.RemoveBlackOutEvent
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const bool                              bFadeOut                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_C::RemoveBlackOutEvent(const bool bFadeOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "RemoveBlackOutEvent");

	Params::BP_PlayerController_C_RemoveBlackOutEvent Parms{};

	Parms.bFadeOut = bFadeOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.CreateBlackOutEvent
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const bool                              bFadeIn                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_C::CreateBlackOutEvent(const bool bFadeIn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "CreateBlackOutEvent");

	Params::BP_PlayerController_C_CreateBlackOutEvent Parms{};

	Parms.bFadeIn = bFadeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController.BP_PlayerController_C.GetFailedKitNames
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText*                            OutFailedLoadouts                                      (Parm, OutParm)

void ABP_PlayerController_C::GetFailedKitNames(class FText* OutFailedLoadouts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_C", "GetFailedKitNames");

	Params::BP_PlayerController_C_GetFailedKitNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFailedLoadouts != nullptr)
		*OutFailedLoadouts = std::move(Parms.OutFailedLoadouts);
}

}

