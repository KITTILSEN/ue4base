#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KytheraPlugin

#include "Basic.hpp"

#include "KytheraPlugin_classes.hpp"
#include "KytheraPlugin_parameters.hpp"


namespace SDK
{

// Function KytheraPlugin.KytCSNComponent.SetPedestrianSpawnDensityMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Multiplier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytCSNComponent::SetPedestrianSpawnDensityMultiplier(float Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytCSNComponent", "SetPedestrianSpawnDensityMultiplier");

	Params::KytCSNComponent_SetPedestrianSpawnDensityMultiplier Parms{};

	Parms.Multiplier = Multiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytCSNComponent.SetVehicleSpawnDensityMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Multiplier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytCSNComponent::SetVehicleSpawnDensityMultiplier(float Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytCSNComponent", "SetVehicleSpawnDensityMultiplier");

	Params::KytCSNComponent_SetVehicleSpawnDensityMultiplier Parms{};

	Parms.Multiplier = Multiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBTFunctionLibrary.GetBlackboardValueAsKytBlackBoard
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBlackboardKeySelector&    Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytBlackboard* UKytBTFunctionLibrary::GetBlackboardValueAsKytBlackBoard(class UBTNode* NodeOwner, const struct FBlackboardKeySelector& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytBTFunctionLibrary", "GetBlackboardValueAsKytBlackBoard");

	Params::KytBTFunctionLibrary_GetBlackboardValueAsKytBlackBoard Parms{};

	Parms.NodeOwner = NodeOwner;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytNavOctree.IgnoreMeshForNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Mesh                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Ignore                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytNavOctree::IgnoreMeshForNavigation(class UPrimitiveComponent* Mesh, bool Ignore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytNavOctree", "IgnoreMeshForNavigation");

	Params::KytNavOctree_IgnoreMeshForNavigation Parms{};

	Parms.Mesh = Mesh;
	Parms.Ignore = Ignore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytNavOctree.QueryNavigablePointInSphere
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Center                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NavigationRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OpenAreasOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKytNavOctree::QueryNavigablePointInSphere(struct FVector* Result, const struct FVector& Center, float Radius, float NavigationRadius, bool OpenAreasOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytNavOctree", "QueryNavigablePointInSphere");

	Params::KytNavOctree_QueryNavigablePointInSphere Parms{};

	Parms.Center = std::move(Center);
	Parms.Radius = Radius;
	Parms.NavigationRadius = NavigationRadius;
	Parms.OpenAreasOnly = OpenAreasOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytNavOctree.RegenerateVolume
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Center                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   halfExtent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytNavOctree::RegenerateVolume(const struct FVector& Center, const struct FVector& halfExtent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytNavOctree", "RegenerateVolume");

	Params::KytNavOctree_RegenerateVolume Parms{};

	Parms.Center = std::move(Center);
	Parms.halfExtent = std::move(halfExtent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytAnimationSupport.IsAnimationSupported
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    AnimationName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UKytBlackboard*             AnimationParameters                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IKytAnimationSupport::IsAnimationSupported(const class FString& AnimationName, const class UKytBlackboard* AnimationParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("KytAnimationSupport", "IsAnimationSupported");

	Params::KytAnimationSupport_IsAnimationSupported Parms{};

	Parms.AnimationName = std::move(AnimationName);
	Parms.AnimationParameters = AnimationParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBTDecorator.ChildNodeEnter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKytBTEnterResult                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKytBTEnterResult UKytBTDecorator::ChildNodeEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTDecorator", "ChildNodeEnter");

	Params::KytBTDecorator_ChildNodeEnter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBTDecorator.ChildNodeUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKytBTUpdateResult                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKytBTUpdateResult UKytBTDecorator::ChildNodeUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTDecorator", "ChildNodeUpdate");

	Params::KytBTDecorator_ChildNodeUpdate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBTDecorator.DoCleanup
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKytController*                   Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   BehaviorBlackboard                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBTDecorator::DoCleanup(class AKytController* Controller, class UKytBlackboard* BehaviorBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTDecorator", "DoCleanup");

	Params::KytBTDecorator_DoCleanup Parms{};

	Parms.Controller = Controller;
	Parms.BehaviorBlackboard = BehaviorBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBTDecorator.DoEnter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKytController*                   Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   BehaviorBlackboard                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKytBTEnterResult                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKytBTEnterResult UKytBTDecorator::DoEnter(class AKytController* Controller, class UKytBlackboard* BehaviorBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTDecorator", "DoEnter");

	Params::KytBTDecorator_DoEnter Parms{};

	Parms.Controller = Controller;
	Parms.BehaviorBlackboard = BehaviorBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBTDecorator.DoUpdate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKytController*                   Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   BehaviorBlackboard                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKytBTUpdateResult                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKytBTUpdateResult UKytBTDecorator::DoUpdate(class AKytController* Controller, class UKytBlackboard* BehaviorBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTDecorator", "DoUpdate");

	Params::KytBTDecorator_DoUpdate Parms{};

	Parms.Controller = Controller;
	Parms.BehaviorBlackboard = BehaviorBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytNavSplineActor.SplinePointPassed
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            Ship                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PointIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PointName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytNavSplineActor::SplinePointPassed(class APawn* Ship, int32 PointIndex, const class FString& PointName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytNavSplineActor", "SplinePointPassed");

	Params::KytNavSplineActor_SplinePointPassed Parms{};

	Parms.Ship = Ship;
	Parms.PointIndex = PointIndex;
	Parms.PointName = std::move(PointName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function KytheraPlugin.KytBlackboard.CreateKytBlackboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UKytBlackboard*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytBlackboard* UKytBlackboard::CreateKytBlackboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytBlackboard", "CreateKytBlackboard");

	Params::KytBlackboard_CreateKytBlackboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.ClearBlackboardValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::ClearBlackboardValue(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "ClearBlackboardValue");

	Params::KytBlackboard_ClearBlackboardValue Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.GetBlackboardValueAsActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UKytBlackboard::GetBlackboardValueAsActor(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "GetBlackboardValueAsActor");

	Params::KytBlackboard_GetBlackboardValueAsActor Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.GetBlackboardValueAsBlackboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytBlackboard* UKytBlackboard::GetBlackboardValueAsBlackboard(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "GetBlackboardValueAsBlackboard");

	Params::KytBlackboard_GetBlackboardValueAsBlackboard Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.GetBlackboardValueAsBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKytBlackboard::GetBlackboardValueAsBool(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "GetBlackboardValueAsBool");

	Params::KytBlackboard_GetBlackboardValueAsBool Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.GetBlackboardValueAsFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UKytBlackboard::GetBlackboardValueAsFloat(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "GetBlackboardValueAsFloat");

	Params::KytBlackboard_GetBlackboardValueAsFloat Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.GetBlackboardValueAsInt
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UKytBlackboard::GetBlackboardValueAsInt(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "GetBlackboardValueAsInt");

	Params::KytBlackboard_GetBlackboardValueAsInt Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.GetBlackboardValueAsString
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UKytBlackboard::GetBlackboardValueAsString(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "GetBlackboardValueAsString");

	Params::KytBlackboard_GetBlackboardValueAsString Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.GetBlackboardValueAsVector
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UKytBlackboard::GetBlackboardValueAsVector(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "GetBlackboardValueAsVector");

	Params::KytBlackboard_GetBlackboardValueAsVector Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.GetOrCreateBlackboardValueAsBlackboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytBlackboard* UKytBlackboard::GetOrCreateBlackboardValueAsBlackboard(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "GetOrCreateBlackboardValueAsBlackboard");

	Params::KytBlackboard_GetOrCreateBlackboardValueAsBlackboard Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.HasValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKytBlackboard::HasValue(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "HasValue");

	Params::KytBlackboard_HasValue Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsBlackboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsBlackboard(const class FString& Key, class UKytBlackboard* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsBlackboard");

	Params::KytBlackboard_SetBlackboardValueAsBlackboard Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsBool(const class FString& Key, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsBool");

	Params::KytBlackboard_SetBlackboardValueAsBool Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsEntityId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsEntityId(const class FString& Key, class AActor* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsEntityId");

	Params::KytBlackboard_SetBlackboardValueAsEntityId Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsFloat(const class FString& Key, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsFloat");

	Params::KytBlackboard_SetBlackboardValueAsFloat Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsInt(const class FString& Key, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsInt");

	Params::KytBlackboard_SetBlackboardValueAsInt Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsPosition(const class FString& Key, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsPosition");

	Params::KytBlackboard_SetBlackboardValueAsPosition Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsString(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsString");

	Params::KytBlackboard_SetBlackboardValueAsString Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsStringHash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsStringHash(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsStringHash");

	Params::KytBlackboard_SetBlackboardValueAsStringHash Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBlackboard.SetBlackboardValueAsVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBlackboard::SetBlackboardValueAsVector(const class FString& Key, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBlackboard", "SetBlackboardValueAsVector");

	Params::KytBlackboard_SetBlackboardValueAsVector Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.GetKytController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ControlledActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKytController*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKytController* AKytController::GetKytController(class AActor* ControlledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytController", "GetKytController");

	Params::KytController_GetKytController Parms{};

	Parms.ControlledActor = ControlledActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytController.AddTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Tag                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytController::AddTag(const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "AddTag");

	Params::KytController_AddTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.ClearPerceptionScaleModifiers
// (Native, Public, BlueprintCallable)

void AKytController::ClearPerceptionScaleModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "ClearPerceptionScaleModifiers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.ClearTargetOverride
// (Native, Public, BlueprintCallable)

void AKytController::ClearTargetOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "ClearTargetOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.EraseTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Tag                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytController::EraseTag(const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "EraseTag");

	Params::KytController_EraseTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.ForcePerceptionOfActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytController::ForcePerceptionOfActor(class AActor* Actor, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "ForcePerceptionOfActor");

	Params::KytController_ForcePerceptionOfActor Parms{};

	Parms.Actor = Actor;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.GetCurrentTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AKytController::GetCurrentTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "GetCurrentTarget");

	Params::KytController_GetCurrentTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytController.GetEntityState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKytBlackboard*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytBlackboard* AKytController::GetEntityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "GetEntityState");

	Params::KytController_GetEntityState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytController.GetGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Type                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKytGroup*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKytGroup* AKytController::GetGroup(const class FString& Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "GetGroup");

	Params::KytController_GetGroup Parms{};

	Parms.Type = std::move(Type);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytController.HasTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Tag                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKytController::HasTag(const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "HasTag");

	Params::KytController_HasTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytController.NotifyPerceptionAboutActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytController::NotifyPerceptionAboutActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "NotifyPerceptionAboutActor");

	Params::KytController_NotifyPerceptionAboutActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.OverrideTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Override                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytController::OverrideTarget(class AActor* Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "OverrideTarget");

	Params::KytController_OverrideTarget Parms{};

	Parms.Override = Override;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.ReplaceTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    oldTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    newTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytController::ReplaceTag(const class FString& oldTag, const class FString& newTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "ReplaceTag");

	Params::KytController_ReplaceTag Parms{};

	Parms.oldTag = std::move(oldTag);
	Parms.newTag = std::move(newTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.RunBehavior
// (Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    BehaviorName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   KytBlackboard                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKytController::RunBehavior(const class FString& BehaviorName, class UKytBlackboard* KytBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "RunBehavior");

	Params::KytController_RunBehavior Parms{};

	Parms.BehaviorName = std::move(BehaviorName);
	Parms.KytBlackboard = KytBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytController.SetPerceptionScaleModifiers
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   visualModifier                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   audioModifier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytController::SetPerceptionScaleModifiers(float visualModifier, float audioModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "SetPerceptionScaleModifiers");

	Params::KytController_SetPerceptionScaleModifiers Parms{};

	Parms.visualModifier = visualModifier;
	Parms.audioModifier = audioModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytController.UpdateRelationship
// (Final, Native, Public, BlueprintCallable)

void AKytController::UpdateRelationship()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytController", "UpdateRelationship");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytShipController.CancelCommand
// (Final, Native, Public, BlueprintCallable)

void AKytShipController::CancelCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytShipController", "CancelCommand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytShipController.DisbandFormation
// (Final, Native, Public, BlueprintCallable)

void AKytShipController::DisbandFormation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytShipController", "DisbandFormation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytShipController.LeadFormation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKytFormation*                    FormationType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytShipController::LeadFormation(class UKytFormation* FormationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytShipController", "LeadFormation");

	Params::KytShipController_LeadFormation Parms{};

	Parms.FormationType = FormationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytShipController.MoveToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Goal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytShipController::MoveToActor(class AActor* Goal, float EndDistance, float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytShipController", "MoveToActor");

	Params::KytShipController_MoveToActor Parms{};

	Parms.Goal = Goal;
	Parms.EndDistance = EndDistance;
	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytShipController.MoveToLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Dest                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytShipController::MoveToLocation(const struct FVector& Dest, float EndDistance, float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytShipController", "MoveToLocation");

	Params::KytShipController_MoveToLocation Parms{};

	Parms.Dest = std::move(Dest);
	Parms.EndDistance = EndDistance;
	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytShipController.SplinePointPassed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKytNavSplineActor*               SplineActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PointIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PointName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytShipController::SplinePointPassed(class AKytNavSplineActor* SplineActor, int32 PointIndex, const class FString& PointName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytShipController", "SplinePointPassed");

	Params::KytShipController_SplinePointPassed Parms{};

	Parms.SplineActor = SplineActor;
	Parms.PointIndex = PointIndex;
	Parms.PointName = std::move(PointName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function KytheraPlugin.KytShipController.TrackActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FireAtTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytShipController::TrackActor(class AActor* Target, float Distance, bool FireAtTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytShipController", "TrackActor");

	Params::KytShipController_TrackActor Parms{};

	Parms.Target = Target;
	Parms.Distance = Distance;
	Parms.FireAtTarget = FireAtTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytShipController.TurnToFace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytShipController::TurnToFace(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytShipController", "TurnToFace");

	Params::KytShipController_TurnToFace Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBTNode.DoCleanup
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKytController*                   Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   BehaviorBlackboard                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytBTNode::DoCleanup(class AKytController* Controller, class UKytBlackboard* BehaviorBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTNode", "DoCleanup");

	Params::KytBTNode_DoCleanup Parms{};

	Parms.Controller = Controller;
	Parms.BehaviorBlackboard = BehaviorBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytBTNode.DoEnter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKytController*                   Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   BehaviorBlackboard                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKytBTEnterResult                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKytBTEnterResult UKytBTNode::DoEnter(class AKytController* Controller, class UKytBlackboard* BehaviorBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTNode", "DoEnter");

	Params::KytBTNode_DoEnter Parms{};

	Parms.Controller = Controller;
	Parms.BehaviorBlackboard = BehaviorBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBTNode.DoUpdate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKytController*                   Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   BehaviorBlackboard                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKytBTUpdateResult                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKytBTUpdateResult UKytBTNode::DoUpdate(class AKytController* Controller, class UKytBlackboard* BehaviorBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTNode", "DoUpdate");

	Params::KytBTNode_DoUpdate Parms{};

	Parms.Controller = Controller;
	Parms.BehaviorBlackboard = BehaviorBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytBTConditional.CheckCondition
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKytController*                   Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytBlackboard*                   BehaviorBlackboard                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKytBTConditionResult                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKytBTConditionResult UKytBTConditional::CheckCondition(class AKytController* Controller, class UKytBlackboard* BehaviorBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytBTConditional", "CheckCondition");

	Params::KytBTConditional_CheckCondition Parms{};

	Parms.Controller = Controller;
	Parms.BehaviorBlackboard = BehaviorBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreateCancelCommandProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreateCancelCommandProxyObject(class UObject* WorldContextObject, class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreateCancelCommandProxyObject");

	Params::KytCommandBlueprintProxy_CreateCancelCommandProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreateFlyInFormationProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Leader                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreateFlyInFormationProxyObject(class UObject* WorldContextObject, class APawn* Pawn, class AActor* Leader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreateFlyInFormationProxyObject");

	Params::KytCommandBlueprintProxy_CreateFlyInFormationProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;
	Parms.Leader = Leader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreateFlySplineProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKytNavSplineActor*               Spline                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ClampToSpline                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AttackHostiles                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TeleportToStart                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    JoinNearestPoint                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DisableAvoidance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreateFlySplineProxyObject(class UObject* WorldContextObject, class APawn* Pawn, class AKytNavSplineActor* Spline, bool ClampToSpline, bool AttackHostiles, bool TeleportToStart, bool JoinNearestPoint, bool DisableAvoidance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreateFlySplineProxyObject");

	Params::KytCommandBlueprintProxy_CreateFlySplineProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;
	Parms.Spline = Spline;
	Parms.ClampToSpline = ClampToSpline;
	Parms.AttackHostiles = AttackHostiles;
	Parms.TeleportToStart = TeleportToStart;
	Parms.JoinNearestPoint = JoinNearestPoint;
	Parms.DisableAvoidance = DisableAvoidance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreateHaltProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreateHaltProxyObject(class UObject* WorldContextObject, class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreateHaltProxyObject");

	Params::KytCommandBlueprintProxy_CreateHaltProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreateMoveToProxyObject
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Destination                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreateMoveToProxyObject(class UObject* WorldContextObject, class APawn* Pawn, class AActor* TargetActor, const struct FVector& Destination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreateMoveToProxyObject");

	Params::KytCommandBlueprintProxy_CreateMoveToProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;
	Parms.TargetActor = TargetActor;
	Parms.Destination = std::move(Destination);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreatePathToProxyObject
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Destination                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreatePathToProxyObject(class UObject* WorldContextObject, class APawn* Pawn, class AActor* TargetActor, const struct FVector& Destination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreatePathToProxyObject");

	Params::KytCommandBlueprintProxy_CreatePathToProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;
	Parms.TargetActor = TargetActor;
	Parms.Destination = std::move(Destination);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreateTrackActorProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FireAtTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreateTrackActorProxyObject(class UObject* WorldContextObject, class APawn* Pawn, class AActor* TargetActor, float Distance, bool FireAtTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreateTrackActorProxyObject");

	Params::KytCommandBlueprintProxy_CreateTrackActorProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;
	Parms.TargetActor = TargetActor;
	Parms.Distance = Distance;
	Parms.FireAtTarget = FireAtTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreateTurnToFaceProxyObject
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreateTurnToFaceProxyObject(class UObject* WorldContextObject, class APawn* Pawn, class AActor* TargetActor, const struct FRotator& Rotation, const struct FVector& position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreateTurnToFaceProxyObject");

	Params::KytCommandBlueprintProxy_CreateTurnToFaceProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;
	Parms.TargetActor = TargetActor;
	Parms.Rotation = std::move(Rotation);
	Parms.position = std::move(position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytCommandBlueprintProxy.CreateWaitProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytCommandBlueprintProxy*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytCommandBlueprintProxy* UKytCommandBlueprintProxy::CreateWaitProxyObject(class UObject* WorldContextObject, class APawn* Pawn, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytCommandBlueprintProxy", "CreateWaitProxyObject");

	Params::KytCommandBlueprintProxy_CreateWaitProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pawn = Pawn;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.ChangeFormation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UKytFormation*                    NewFormation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Leader                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::ChangeFormation(class UKytFormation* NewFormation, class APawn* Leader, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "ChangeFormation");

	Params::KytFunctionLibrary_ChangeFormation Parms{};

	Parms.NewFormation = NewFormation;
	Parms.Leader = Leader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function KytheraPlugin.KytFunctionLibrary.ChangeFormationByName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FormationName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Leader                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::ChangeFormationByName(const class FString& FormationName, class APawn* Leader, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "ChangeFormationByName");

	Params::KytFunctionLibrary_ChangeFormationByName Parms{};

	Parms.FormationName = std::move(FormationName);
	Parms.Leader = Leader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function KytheraPlugin.KytFunctionLibrary.Conv_FVectorToKytPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FVector&                   position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUKytPosition                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUKytPosition UKytFunctionLibrary::Conv_FVectorToKytPosition(const struct FVector& position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "Conv_FVectorToKytPosition");

	Params::KytFunctionLibrary_Conv_FVectorToKytPosition Parms{};

	Parms.position = std::move(position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.Conv_KytPositionToFVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FUKytPosition&             KytPosition                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UKytFunctionLibrary::Conv_KytPositionToFVector(const struct FUKytPosition& KytPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "Conv_KytPositionToFVector");

	Params::KytFunctionLibrary_Conv_KytPositionToFVector Parms{};

	Parms.KytPosition = std::move(KytPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.ConvertKytPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUKytPosition&             KytPosition                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ECoordinateSystem                       CoordSytem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUKytPosition                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUKytPosition UKytFunctionLibrary::ConvertKytPosition(class AActor* Actor, const struct FUKytPosition& KytPosition, ECoordinateSystem CoordSytem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "ConvertKytPosition");

	Params::KytFunctionLibrary_ConvertKytPosition Parms{};

	Parms.Actor = Actor;
	Parms.KytPosition = std::move(KytPosition);
	Parms.CoordSytem = CoordSytem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.ConvertToKytheraPos
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   UnrealPos                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECoordinateSystem                       CoordSytem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUKytPosition                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUKytPosition UKytFunctionLibrary::ConvertToKytheraPos(class AActor* Actor, const struct FVector& UnrealPos, ECoordinateSystem CoordSytem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "ConvertToKytheraPos");

	Params::KytFunctionLibrary_ConvertToKytheraPos Parms{};

	Parms.Actor = Actor;
	Parms.UnrealPos = std::move(UnrealPos);
	Parms.CoordSytem = CoordSytem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.DebugForceRegenerateNavigationMesh
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Origin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Extent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::DebugForceRegenerateNavigationMesh(const struct FVector& Origin, const struct FVector& Extent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "DebugForceRegenerateNavigationMesh");

	Params::KytFunctionLibrary_DebugForceRegenerateNavigationMesh Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Extent = std::move(Extent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.DisableAllEntityUpdates
// (Final, Native, Static, Public, BlueprintCallable)

void UKytFunctionLibrary::DisableAllEntityUpdates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "DisableAllEntityUpdates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.DisableEntityUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::DisableEntityUpdates(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "DisableEntityUpdates");

	Params::KytFunctionLibrary_DisableEntityUpdates Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.DisableMultipleEntityUpdates
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::DisableMultipleEntityUpdates(const TArray<class AActor*>& Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "DisableMultipleEntityUpdates");

	Params::KytFunctionLibrary_DisableMultipleEntityUpdates Parms{};

	Parms.Actors = std::move(Actors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.EnableBehaviourTreeUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::EnableBehaviourTreeUpdates(class AActor* Actor, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "EnableBehaviourTreeUpdates");

	Params::KytFunctionLibrary_EnableBehaviourTreeUpdates Parms{};

	Parms.Actor = Actor;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.FollowFormationLeader
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APawn*                            Leader                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Follower                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::FollowFormationLeader(class APawn* Leader, class APawn* Follower, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "FollowFormationLeader");

	Params::KytFunctionLibrary_FollowFormationLeader Parms{};

	Parms.Leader = Leader;
	Parms.Follower = Follower;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function KytheraPlugin.KytFunctionLibrary.GetGlobalKytheraBlackboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UKytBlackboard*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytBlackboard* UKytFunctionLibrary::GetGlobalKytheraBlackboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "GetGlobalKytheraBlackboard");

	Params::KytFunctionLibrary_GetGlobalKytheraBlackboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.GetKytPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECoordinateSystem                       CoordSytem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUKytPosition                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUKytPosition UKytFunctionLibrary::GetKytPosition(class AActor* Actor, ECoordinateSystem CoordSytem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "GetKytPosition");

	Params::KytFunctionLibrary_GetKytPosition Parms{};

	Parms.Actor = Actor;
	Parms.CoordSytem = CoordSytem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.IsNavigationMeshCurrentlyRegenerating
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Origin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Extent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKytFunctionLibrary::IsNavigationMeshCurrentlyRegenerating(const struct FVector& Origin, const struct FVector& Extent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "IsNavigationMeshCurrentlyRegenerating");

	Params::KytFunctionLibrary_IsNavigationMeshCurrentlyRegenerating Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Extent = std::move(Extent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.IsNavigationMeshCurrentlyRegeneratingAnywhere
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKytFunctionLibrary::IsNavigationMeshCurrentlyRegeneratingAnywhere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "IsNavigationMeshCurrentlyRegeneratingAnywhere");

	Params::KytFunctionLibrary_IsNavigationMeshCurrentlyRegeneratingAnywhere Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytFunctionLibrary.LinkMovingNavigationMesh
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     LinkedActor                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::LinkMovingNavigationMesh(const class AActor* LinkedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "LinkMovingNavigationMesh");

	Params::KytFunctionLibrary_LinkMovingNavigationMesh Parms{};

	Parms.LinkedActor = LinkedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.PauseAllEntityUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bShouldPause                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::PauseAllEntityUpdates(bool bShouldPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "PauseAllEntityUpdates");

	Params::KytFunctionLibrary_PauseAllEntityUpdates Parms{};

	Parms.bShouldPause = bShouldPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.PauseEntityUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldPause                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::PauseEntityUpdates(class AActor* Actor, bool bShouldPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "PauseEntityUpdates");

	Params::KytFunctionLibrary_PauseEntityUpdates Parms{};

	Parms.Actor = Actor;
	Parms.bShouldPause = bShouldPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.PauseMultipleEntityUpdates
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bShouldPause                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::PauseMultipleEntityUpdates(const TArray<class AActor*>& Actors, bool bShouldPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "PauseMultipleEntityUpdates");

	Params::KytFunctionLibrary_PauseMultipleEntityUpdates Parms{};

	Parms.Actors = std::move(Actors);
	Parms.bShouldPause = bShouldPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.RegenerateNavigationMesh
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Origin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Extent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::RegenerateNavigationMesh(const struct FVector& Origin, const struct FVector& Extent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "RegenerateNavigationMesh");

	Params::KytFunctionLibrary_RegenerateNavigationMesh Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Extent = std::move(Extent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.RegisterDamage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::RegisterDamage(class AActor* Actor, float Damage, class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "RegisterDamage");

	Params::KytFunctionLibrary_RegisterDamage Parms{};

	Parms.Actor = Actor;
	Parms.Damage = Damage;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.RegisterInstantShot
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::RegisterInstantShot(class AActor* Actor, const struct FVector& Start, const struct FVector& End, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "RegisterInstantShot");

	Params::KytFunctionLibrary_RegisterInstantShot Parms{};

	Parms.Actor = Actor;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.RegisterProjectileShot
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::RegisterProjectileShot(class AActor* Actor, const struct FVector& Start, const struct FVector& End, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "RegisterProjectileShot");

	Params::KytFunctionLibrary_RegisterProjectileShot Parms{};

	Parms.Actor = Actor;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.ResetAllEntityUpdates
// (Final, Native, Static, Public, BlueprintCallable)

void UKytFunctionLibrary::ResetAllEntityUpdates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "ResetAllEntityUpdates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.ResetEntityUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::ResetEntityUpdates(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "ResetEntityUpdates");

	Params::KytFunctionLibrary_ResetEntityUpdates Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.ResetMultipleEntityUpdates
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::ResetMultipleEntityUpdates(const TArray<class AActor*>& Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "ResetMultipleEntityUpdates");

	Params::KytFunctionLibrary_ResetMultipleEntityUpdates Parms{};

	Parms.Actors = std::move(Actors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.SetAllEntityUpdateFrequenciesInFrames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   framesPerUpdate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::SetAllEntityUpdateFrequenciesInFrames(int32 framesPerUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "SetAllEntityUpdateFrequenciesInFrames");

	Params::KytFunctionLibrary_SetAllEntityUpdateFrequenciesInFrames Parms{};

	Parms.framesPerUpdate = framesPerUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.SetAllEntityUpdateFrequenciesInTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   secondsPerUpdate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::SetAllEntityUpdateFrequenciesInTime(float secondsPerUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "SetAllEntityUpdateFrequenciesInTime");

	Params::KytFunctionLibrary_SetAllEntityUpdateFrequenciesInTime Parms{};

	Parms.secondsPerUpdate = secondsPerUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.SetEntityUpdateFrequencyInFrames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   framesPerUpdate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::SetEntityUpdateFrequencyInFrames(class AActor* Actor, int32 framesPerUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "SetEntityUpdateFrequencyInFrames");

	Params::KytFunctionLibrary_SetEntityUpdateFrequencyInFrames Parms{};

	Parms.Actor = Actor;
	Parms.framesPerUpdate = framesPerUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.SetEntityUpdateFrequencyInTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   secondsPerUpdate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::SetEntityUpdateFrequencyInTime(class AActor* Actor, float secondsPerUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "SetEntityUpdateFrequencyInTime");

	Params::KytFunctionLibrary_SetEntityUpdateFrequencyInTime Parms{};

	Parms.Actor = Actor;
	Parms.secondsPerUpdate = secondsPerUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.SetKytheraDebugOption
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    OptionName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::SetKytheraDebugOption(const class FString& OptionName, bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "SetKytheraDebugOption");

	Params::KytFunctionLibrary_SetKytheraDebugOption Parms{};

	Parms.OptionName = std::move(OptionName);
	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.SetMaxAllowedThreat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxThreat                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::SetMaxAllowedThreat(class AActor* Target, float MaxThreat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "SetMaxAllowedThreat");

	Params::KytFunctionLibrary_SetMaxAllowedThreat Parms{};

	Parms.Target = Target;
	Parms.MaxThreat = MaxThreat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.SetMultipleEntityUpdateFrequenciesInFrames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   framesPerUpdate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::SetMultipleEntityUpdateFrequenciesInFrames(const TArray<class AActor*>& Actors, int32 framesPerUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "SetMultipleEntityUpdateFrequenciesInFrames");

	Params::KytFunctionLibrary_SetMultipleEntityUpdateFrequenciesInFrames Parms{};

	Parms.Actors = std::move(Actors);
	Parms.framesPerUpdate = framesPerUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.SetMultipleEntityUpdateFrequenciesInTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   secondsPerUpdate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::SetMultipleEntityUpdateFrequenciesInTime(const TArray<class AActor*>& Actors, float secondsPerUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "SetMultipleEntityUpdateFrequenciesInTime");

	Params::KytFunctionLibrary_SetMultipleEntityUpdateFrequenciesInTime Parms{};

	Parms.Actors = std::move(Actors);
	Parms.secondsPerUpdate = secondsPerUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.UnlinkMovingNavigationMesh
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     LinkedActor                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::UnlinkMovingNavigationMesh(const class AActor* LinkedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "UnlinkMovingNavigationMesh");

	Params::KytFunctionLibrary_UnlinkMovingNavigationMesh Parms{};

	Parms.LinkedActor = LinkedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytFunctionLibrary.UpdateRelationship
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytFunctionLibrary::UpdateRelationship(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytFunctionLibrary", "UpdateRelationship");

	Params::KytFunctionLibrary_UpdateRelationship Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytGroup.CreateKytGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Type_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKytGroup*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKytGroup* AKytGroup::CreateKytGroup(class UObject* WorldContextObject, const class FString& Type_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytGroup", "CreateKytGroup");

	Params::KytGroup_CreateKytGroup Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Type_0 = std::move(Type_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytGroup.GetNamedKytGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Type_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKytGroup*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKytGroup* AKytGroup::GetNamedKytGroup(class UObject* WorldContextObject, const class FString& Name_0, const class FString& Type_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytGroup", "GetNamedKytGroup");

	Params::KytGroup_GetNamedKytGroup Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Name_0 = std::move(Name_0);
	Parms.Type_0 = std::move(Type_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytGroup.Add
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytGroup::Add(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytGroup", "Add");

	Params::KytGroup_Add Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytGroup.GetActorsInGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AKytGroup::GetActorsInGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytGroup", "GetActorsInGroup");

	Params::KytGroup_GetActorsInGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytGroup.GetGroupBlackboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKytBlackboard*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytBlackboard* AKytGroup::GetGroupBlackboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytGroup", "GetGroupBlackboard");

	Params::KytGroup_GetGroupBlackboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytGroup.Remove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytGroup::Remove(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytGroup", "Remove");

	Params::KytGroup_Remove Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytGroup.SendGroupSignal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SignalName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKytGroup::SendGroupSignal(const class FString& SignalName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytGroup", "SendGroupSignal");

	Params::KytGroup_SendGroupSignal Parms{};

	Parms.SignalName = std::move(SignalName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytGroup.GetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AKytGroup::GetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytGroup", "GetType");

	Params::KytGroup_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytheraPawnComponent.ClearPerceivedTargets
// (Final, Native, Public, BlueprintCallable)

void UKytheraPawnComponent::ClearPerceivedTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytheraPawnComponent", "ClearPerceivedTargets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytheraPawnComponent.GetCurrentlyPerceivedTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FPerceivedTargetInfo>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FPerceivedTargetInfo> UKytheraPawnComponent::GetCurrentlyPerceivedTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytheraPawnComponent", "GetCurrentlyPerceivedTargets");

	Params::KytheraPawnComponent_GetCurrentlyPerceivedTargets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytheraPawnComponent.GetEntityState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKytBlackboard*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytBlackboard* UKytheraPawnComponent::GetEntityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytheraPawnComponent", "GetEntityState");

	Params::KytheraPawnComponent_GetEntityState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytheraPawnComponent.MarkAlive
// (Final, Native, Public, BlueprintCallable)

void UKytheraPawnComponent::MarkAlive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytheraPawnComponent", "MarkAlive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytheraPawnComponent.MarkDead
// (Final, Native, Public, BlueprintCallable)

void UKytheraPawnComponent::MarkDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytheraPawnComponent", "MarkDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytheraPawnComponent.SetPerception
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytheraPawnComponent::SetPerception(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytheraPawnComponent", "SetPerception");

	Params::KytheraPawnComponent_SetPerception Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytheraPawnComponent.SetProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKytProfile*                      NewProfile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytheraPawnComponent::SetProfile(class UKytProfile* NewProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytheraPawnComponent", "SetProfile");

	Params::KytheraPawnComponent_SetProfile Parms{};

	Parms.NewProfile = NewProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytNavBounds.GetAllAgentTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          OutGroupName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class UKytNavMeshAgentType*>*OutAgentTypes                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void AKytNavBounds::GetAllAgentTypes(class FString* OutGroupName, TMap<class FString, class UKytNavMeshAgentType*>* OutAgentTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytNavBounds", "GetAllAgentTypes");

	Params::KytNavBounds_GetAllAgentTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGroupName != nullptr)
		*OutGroupName = std::move(Parms.OutGroupName);

	if (OutAgentTypes != nullptr)
		*OutAgentTypes = std::move(Parms.OutAgentTypes);
}


// Function KytheraPlugin.KytNavCostBrush.GetAllAgentTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          OutGroupName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class UKytNavMeshAgentType*>*OutAgentTypes                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void AKytNavCostBrush::GetAllAgentTypes(class FString* OutGroupName, TMap<class FString, class UKytNavMeshAgentType*>* OutAgentTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytNavCostBrush", "GetAllAgentTypes");

	Params::KytNavCostBrush_GetAllAgentTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGroupName != nullptr)
		*OutGroupName = std::move(Parms.OutGroupName);

	if (OutAgentTypes != nullptr)
		*OutAgentTypes = std::move(Parms.OutAgentTypes);
}


// Function KytheraPlugin.KytNavCostStaticMesh.GetAllAgentTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          OutGroupName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class UKytNavMeshAgentType*>*OutAgentTypes                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void AKytNavCostStaticMesh::GetAllAgentTypes(class FString* OutGroupName, TMap<class FString, class UKytNavMeshAgentType*>* OutAgentTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytNavCostStaticMesh", "GetAllAgentTypes");

	Params::KytNavCostStaticMesh_GetAllAgentTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGroupName != nullptr)
		*OutGroupName = std::move(Parms.OutGroupName);

	if (OutAgentTypes != nullptr)
		*OutAgentTypes = std::move(Parms.OutAgentTypes);
}


// Function KytheraPlugin.KytNavObjectComponent.MarkMeshLinksBoxDirty
// (Final, Native, Public, BlueprintCallable)

void UKytNavObjectComponent::MarkMeshLinksBoxDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytNavObjectComponent", "MarkMeshLinksBoxDirty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.AddActorToExclusion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKyt3DPathFollowingComponent::AddActorToExclusion(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "AddActorToExclusion");

	Params::Kyt3DPathFollowingComponent_AddActorToExclusion Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.DisableAvoidance
// (Final, Native, Public, BlueprintCallable)

void UKyt3DPathFollowingComponent::DisableAvoidance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "DisableAvoidance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.EnableAvoidance
// (Final, Native, Public, BlueprintCallable)

void UKyt3DPathFollowingComponent::EnableAvoidance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "EnableAvoidance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.GetNextCollisionTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UKyt3DPathFollowingComponent::GetNextCollisionTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "GetNextCollisionTime");

	Params::Kyt3DPathFollowingComponent_GetNextCollisionTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.NextPointOfContact
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UKyt3DPathFollowingComponent::NextPointOfContact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "NextPointOfContact");

	Params::Kyt3DPathFollowingComponent_NextPointOfContact Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.RemoveActorFromExclusion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKyt3DPathFollowingComponent::RemoveActorFromExclusion(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "RemoveActorFromExclusion");

	Params::Kyt3DPathFollowingComponent_RemoveActorFromExclusion Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKyt3DSteeringParams&      SteeringParams                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UKyt3DPathFollowingComponent::SetParams(const struct FKyt3DSteeringParams& SteeringParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "SetParams");

	Params::Kyt3DPathFollowingComponent_SetParams Parms{};

	Parms.SteeringParams = std::move(SteeringParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.CopyParams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKyt3DSteeringParams             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FKyt3DSteeringParams UKyt3DPathFollowingComponent::CopyParams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "CopyParams");

	Params::Kyt3DPathFollowingComponent_CopyParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.Kyt3DPathFollowingComponent.RelativeSpeedFromAbsolute
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AbsoluteSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UKyt3DPathFollowingComponent::RelativeSpeedFromAbsolute(float AbsoluteSpeed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Kyt3DPathFollowingComponent", "RelativeSpeedFromAbsolute");

	Params::Kyt3DPathFollowingComponent_RelativeSpeedFromAbsolute Parms{};

	Parms.AbsoluteSpeed = AbsoluteSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytPathFollowingComponent.AnimationEnded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Succeeded                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytPathFollowingComponent::AnimationEnded(bool Succeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytPathFollowingComponent", "AnimationEnded");

	Params::KytPathFollowingComponent_AnimationEnded Parms{};

	Parms.Succeeded = Succeeded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytPathFollowingComponent.MoveToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Goal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytPathFollowingComponent::MoveToActor(class AActor* Goal, float EndDistance, bool bStopOnOverlap, float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytPathFollowingComponent", "MoveToActor");

	Params::KytPathFollowingComponent_MoveToActor Parms{};

	Parms.Goal = Goal;
	Parms.EndDistance = EndDistance;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytPathFollowingComponent.MoveToLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Dest                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytPathFollowingComponent::MoveToLocation(const struct FVector& Dest, float EndDistance, bool bStopOnOverlap, float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytPathFollowingComponent", "MoveToLocation");

	Params::KytPathFollowingComponent_MoveToLocation Parms{};

	Parms.Dest = std::move(Dest);
	Parms.EndDistance = EndDistance;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytPathFollowingComponent.MulticastAnimRequest
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const struct FKytAnimRequest&           AnimRequest                                            (Parm, NativeAccessSpecifierPublic)

void UKytPathFollowingComponent::MulticastAnimRequest(const struct FKytAnimRequest& AnimRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytPathFollowingComponent", "MulticastAnimRequest");

	Params::KytPathFollowingComponent_MulticastAnimRequest Parms{};

	Parms.AnimRequest = std::move(AnimRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytPathFollowingComponent.SendCMCSignal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SignalName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytPathFollowingComponent::SendCMCSignal(const class FString& SignalName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytPathFollowingComponent", "SendCMCSignal");

	Params::KytPathFollowingComponent_SendCMCSignal Parms{};

	Parms.SignalName = std::move(SignalName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytPathFollowingComponent.StopMovement
// (Final, Native, Public, BlueprintCallable)

void UKytPathFollowingComponent::StopMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytPathFollowingComponent", "StopMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytPathFollowingComponent.UpdateComponent
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytPathFollowingComponent::UpdateComponent(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytPathFollowingComponent", "UpdateComponent");

	Params::KytPathFollowingComponent_UpdateComponent Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.CreateKytEntitySignal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Entity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytSignal*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytSignal* UKytSignal::CreateKytEntitySignal(const class FString& Name_0, class APawn* Entity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytSignal", "CreateKytEntitySignal");

	Params::KytSignal_CreateKytEntitySignal Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Entity = Entity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytSignal.CreateKytSignal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKytSignalDispatchModeEnum              DispatchMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKytSignal*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKytSignal* UKytSignal::CreateKytSignal(const class FString& Name_0, EKytSignalDispatchModeEnum DispatchMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KytSignal", "CreateKytSignal");

	Params::KytSignal_CreateKytSignal Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.DispatchMode = DispatchMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KytheraPlugin.KytSignal.Send
// (Final, Native, Public, BlueprintCallable)

void UKytSignal::Send()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "Send");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.SetSignalValueAsBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytSignal::SetSignalValueAsBool(const class FString& Key, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "SetSignalValueAsBool");

	Params::KytSignal_SetSignalValueAsBool Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.SetSignalValueAsEntityId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Entity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytSignal::SetSignalValueAsEntityId(const class FString& Key, class AActor* Entity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "SetSignalValueAsEntityId");

	Params::KytSignal_SetSignalValueAsEntityId Parms{};

	Parms.Key = std::move(Key);
	Parms.Entity = Entity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.SetSignalValueAsFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytSignal::SetSignalValueAsFloat(const class FString& Key, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "SetSignalValueAsFloat");

	Params::KytSignal_SetSignalValueAsFloat Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.SetSignalValueAsInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytSignal::SetSignalValueAsInt(const class FString& Key, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "SetSignalValueAsInt");

	Params::KytSignal_SetSignalValueAsInt Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.SetSignalValueAsPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytSignal::SetSignalValueAsPosition(const class FString& Key, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "SetSignalValueAsPosition");

	Params::KytSignal_SetSignalValueAsPosition Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.SetSignalValueAsString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytSignal::SetSignalValueAsString(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "SetSignalValueAsString");

	Params::KytSignal_SetSignalValueAsString Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.SetSignalValueAsStringHash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytSignal::SetSignalValueAsStringHash(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "SetSignalValueAsStringHash");

	Params::KytSignal_SetSignalValueAsStringHash Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KytheraPlugin.KytSignal.SetSignalValueAsVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKytSignal::SetSignalValueAsVector(const class FString& Key, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KytSignal", "SetSignalValueAsVector");

	Params::KytSignal_SetSignalValueAsVector Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

