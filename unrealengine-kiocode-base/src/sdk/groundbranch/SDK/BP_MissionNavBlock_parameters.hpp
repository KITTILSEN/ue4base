#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MissionNavBlock

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MissionNavBlock.BP_MissionNavBlock_C.ExecuteUbergraph_BP_MissionNavBlock
// 0x0060 (0x0060 - 0x0000)
struct BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlockOriginAndExtent_Origin;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlockOriginAndExtent_Extent;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNewActive;                           // 0x001E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_PropertyName;                         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_PropertyValue;                        // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBlockOriginAndExtent_Origin_1;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlockOriginAndExtent_Extent_1;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock) == 0x000008, "Wrong alignment on BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock");
static_assert(sizeof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock) == 0x000060, "Wrong size on BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, EntryPoint) == 0x000000, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, CallFunc_GetBlockOriginAndExtent_Origin) == 0x000004, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::CallFunc_GetBlockOriginAndExtent_Origin' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, CallFunc_GetBlockOriginAndExtent_Extent) == 0x000010, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::CallFunc_GetBlockOriginAndExtent_Extent' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, CallFunc_HasAuthority_ReturnValue) == 0x00001C, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, CallFunc_HasAuthority_ReturnValue_1) == 0x00001D, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, K2Node_Event_bNewActive) == 0x00001E, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::K2Node_Event_bNewActive' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, K2Node_Event_PropertyName) == 0x000020, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::K2Node_Event_PropertyName' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, K2Node_Event_PropertyValue) == 0x000030, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::K2Node_Event_PropertyValue' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, CallFunc_HasAuthority_ReturnValue_2) == 0x000040, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, CallFunc_GetBlockOriginAndExtent_Origin_1) == 0x000044, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::CallFunc_GetBlockOriginAndExtent_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock, CallFunc_GetBlockOriginAndExtent_Extent_1) == 0x000050, "Member 'BP_MissionNavBlock_C_ExecuteUbergraph_BP_MissionNavBlock::CallFunc_GetBlockOriginAndExtent_Extent_1' has a wrong offset!");

// Function BP_MissionNavBlock.BP_MissionNavBlock_C.PostEditProperty
// 0x0020 (0x0020 - 0x0000)
struct BP_MissionNavBlock_C_PostEditProperty final
{
public:
	class FString                                 PropertyName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PropertyValue;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MissionNavBlock_C_PostEditProperty) == 0x000008, "Wrong alignment on BP_MissionNavBlock_C_PostEditProperty");
static_assert(sizeof(BP_MissionNavBlock_C_PostEditProperty) == 0x000020, "Wrong size on BP_MissionNavBlock_C_PostEditProperty");
static_assert(offsetof(BP_MissionNavBlock_C_PostEditProperty, PropertyName) == 0x000000, "Member 'BP_MissionNavBlock_C_PostEditProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_PostEditProperty, PropertyValue) == 0x000010, "Member 'BP_MissionNavBlock_C_PostEditProperty::PropertyValue' has a wrong offset!");

// Function BP_MissionNavBlock.BP_MissionNavBlock_C.OnActiveStateChangedEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_MissionNavBlock_C_OnActiveStateChangedEvent final
{
public:
	bool                                          bNewActive;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MissionNavBlock_C_OnActiveStateChangedEvent) == 0x000001, "Wrong alignment on BP_MissionNavBlock_C_OnActiveStateChangedEvent");
static_assert(sizeof(BP_MissionNavBlock_C_OnActiveStateChangedEvent) == 0x000001, "Wrong size on BP_MissionNavBlock_C_OnActiveStateChangedEvent");
static_assert(offsetof(BP_MissionNavBlock_C_OnActiveStateChangedEvent, bNewActive) == 0x000000, "Member 'BP_MissionNavBlock_C_OnActiveStateChangedEvent::bNewActive' has a wrong offset!");

// Function BP_MissionNavBlock.BP_MissionNavBlock_C.GetPlacementTranslate
// 0x000C (0x000C - 0x0000)
struct BP_MissionNavBlock_C_GetPlacementTranslate final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MissionNavBlock_C_GetPlacementTranslate) == 0x000004, "Wrong alignment on BP_MissionNavBlock_C_GetPlacementTranslate");
static_assert(sizeof(BP_MissionNavBlock_C_GetPlacementTranslate) == 0x00000C, "Wrong size on BP_MissionNavBlock_C_GetPlacementTranslate");
static_assert(offsetof(BP_MissionNavBlock_C_GetPlacementTranslate, ReturnValue) == 0x000000, "Member 'BP_MissionNavBlock_C_GetPlacementTranslate::ReturnValue' has a wrong offset!");

// Function BP_MissionNavBlock.BP_MissionNavBlock_C.GetCustomPropertyWidget
// 0x0038 (0x0038 - 0x0000)
struct BP_MissionNavBlock_C_GetCustomPropertyWidget final
{
public:
	class FString                                 PropertyName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   ReturnValue;                                       // 0x0010(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_MissionNavBlock_C_GetCustomPropertyWidget) == 0x000008, "Wrong alignment on BP_MissionNavBlock_C_GetCustomPropertyWidget");
static_assert(sizeof(BP_MissionNavBlock_C_GetCustomPropertyWidget) == 0x000038, "Wrong size on BP_MissionNavBlock_C_GetCustomPropertyWidget");
static_assert(offsetof(BP_MissionNavBlock_C_GetCustomPropertyWidget, PropertyName) == 0x000000, "Member 'BP_MissionNavBlock_C_GetCustomPropertyWidget::PropertyName' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_GetCustomPropertyWidget, ReturnValue) == 0x000010, "Member 'BP_MissionNavBlock_C_GetCustomPropertyWidget::ReturnValue' has a wrong offset!");

// Function BP_MissionNavBlock.BP_MissionNavBlock_C.GetCustomDetailWidgets
// 0x0010 (0x0010 - 0x0000)
struct BP_MissionNavBlock_C_GetCustomDetailWidgets final
{
public:
	TArray<TSoftClassPtr<class UClass>>           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, UObjectWrapper)
};
static_assert(alignof(BP_MissionNavBlock_C_GetCustomDetailWidgets) == 0x000008, "Wrong alignment on BP_MissionNavBlock_C_GetCustomDetailWidgets");
static_assert(sizeof(BP_MissionNavBlock_C_GetCustomDetailWidgets) == 0x000010, "Wrong size on BP_MissionNavBlock_C_GetCustomDetailWidgets");
static_assert(offsetof(BP_MissionNavBlock_C_GetCustomDetailWidgets, ReturnValue) == 0x000000, "Member 'BP_MissionNavBlock_C_GetCustomDetailWidgets::ReturnValue' has a wrong offset!");

// Function BP_MissionNavBlock.BP_MissionNavBlock_C.GetBlockOriginAndExtent
// 0x0030 (0x0030 - 0x0000)
struct BP_MissionNavBlock_C_GetBlockOriginAndExtent final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Extent;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MissionNavBlock_C_GetBlockOriginAndExtent) == 0x000004, "Wrong alignment on BP_MissionNavBlock_C_GetBlockOriginAndExtent");
static_assert(sizeof(BP_MissionNavBlock_C_GetBlockOriginAndExtent) == 0x000030, "Wrong size on BP_MissionNavBlock_C_GetBlockOriginAndExtent");
static_assert(offsetof(BP_MissionNavBlock_C_GetBlockOriginAndExtent, Origin) == 0x000000, "Member 'BP_MissionNavBlock_C_GetBlockOriginAndExtent::Origin' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_GetBlockOriginAndExtent, Extent) == 0x00000C, "Member 'BP_MissionNavBlock_C_GetBlockOriginAndExtent::Extent' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_GetBlockOriginAndExtent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_MissionNavBlock_C_GetBlockOriginAndExtent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MissionNavBlock_C_GetBlockOriginAndExtent, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000024, "Member 'BP_MissionNavBlock_C_GetBlockOriginAndExtent::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");

}

