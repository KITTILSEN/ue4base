#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LadyBugTrackerRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "LadyBugTrackerRuntime_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LadyBugTrackerRuntime.IssueConstructor.ConstructIssue
// 0x0010 (0x0010 - 0x0000)
struct IssueConstructor_ConstructIssue final
{
public:
	class UIssueData*                             Issue;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EIssueProfile                                 Profile;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IssueConstructor_ConstructIssue) == 0x000008, "Wrong alignment on IssueConstructor_ConstructIssue");
static_assert(sizeof(IssueConstructor_ConstructIssue) == 0x000010, "Wrong size on IssueConstructor_ConstructIssue");
static_assert(offsetof(IssueConstructor_ConstructIssue, Issue) == 0x000000, "Member 'IssueConstructor_ConstructIssue::Issue' has a wrong offset!");
static_assert(offsetof(IssueConstructor_ConstructIssue, Profile) == 0x000008, "Member 'IssueConstructor_ConstructIssue::Profile' has a wrong offset!");

// Function LadyBugTrackerRuntime.IssueConstructor.GetCamera
// 0x001C (0x001C - 0x0000)
struct IssueConstructor_GetCamera final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IssueConstructor_GetCamera) == 0x000004, "Wrong alignment on IssueConstructor_GetCamera");
static_assert(sizeof(IssueConstructor_GetCamera) == 0x00001C, "Wrong size on IssueConstructor_GetCamera");
static_assert(offsetof(IssueConstructor_GetCamera, Location) == 0x000000, "Member 'IssueConstructor_GetCamera::Location' has a wrong offset!");
static_assert(offsetof(IssueConstructor_GetCamera, Rotation) == 0x00000C, "Member 'IssueConstructor_GetCamera::Rotation' has a wrong offset!");
static_assert(offsetof(IssueConstructor_GetCamera, ReturnValue) == 0x000018, "Member 'IssueConstructor_GetCamera::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.IssueConstructor.GetLevelName
// 0x0010 (0x0010 - 0x0000)
struct IssueConstructor_GetLevelName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IssueConstructor_GetLevelName) == 0x000008, "Wrong alignment on IssueConstructor_GetLevelName");
static_assert(sizeof(IssueConstructor_GetLevelName) == 0x000010, "Wrong size on IssueConstructor_GetLevelName");
static_assert(offsetof(IssueConstructor_GetLevelName, ReturnValue) == 0x000000, "Member 'IssueConstructor_GetLevelName::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.IssueConstructor.GetLevelNameFromSreamingLevel
// 0x0018 (0x0018 - 0x0000)
struct IssueConstructor_GetLevelNameFromSreamingLevel final
{
public:
	class ULevelStreaming*                        LevelStreaming;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IssueConstructor_GetLevelNameFromSreamingLevel) == 0x000008, "Wrong alignment on IssueConstructor_GetLevelNameFromSreamingLevel");
static_assert(sizeof(IssueConstructor_GetLevelNameFromSreamingLevel) == 0x000018, "Wrong size on IssueConstructor_GetLevelNameFromSreamingLevel");
static_assert(offsetof(IssueConstructor_GetLevelNameFromSreamingLevel, LevelStreaming) == 0x000000, "Member 'IssueConstructor_GetLevelNameFromSreamingLevel::LevelStreaming' has a wrong offset!");
static_assert(offsetof(IssueConstructor_GetLevelNameFromSreamingLevel, ReturnValue) == 0x000008, "Member 'IssueConstructor_GetLevelNameFromSreamingLevel::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.IssueData.SetCameraTransform
// 0x0018 (0x0018 - 0x0000)
struct IssueData_SetCameraTransform final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IssueData_SetCameraTransform) == 0x000004, "Wrong alignment on IssueData_SetCameraTransform");
static_assert(sizeof(IssueData_SetCameraTransform) == 0x000018, "Wrong size on IssueData_SetCameraTransform");
static_assert(offsetof(IssueData_SetCameraTransform, Location) == 0x000000, "Member 'IssueData_SetCameraTransform::Location' has a wrong offset!");
static_assert(offsetof(IssueData_SetCameraTransform, Rotation) == 0x00000C, "Member 'IssueData_SetCameraTransform::Rotation' has a wrong offset!");

// Function LadyBugTrackerRuntime.IssueData.SetCustomFieldValue
// 0x0028 (0x0028 - 0x0000)
struct IssueData_SetCustomFieldValue final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IssueData_SetCustomFieldValue) == 0x000008, "Wrong alignment on IssueData_SetCustomFieldValue");
static_assert(sizeof(IssueData_SetCustomFieldValue) == 0x000028, "Wrong size on IssueData_SetCustomFieldValue");
static_assert(offsetof(IssueData_SetCustomFieldValue, FieldName) == 0x000000, "Member 'IssueData_SetCustomFieldValue::FieldName' has a wrong offset!");
static_assert(offsetof(IssueData_SetCustomFieldValue, Value) == 0x000010, "Member 'IssueData_SetCustomFieldValue::Value' has a wrong offset!");
static_assert(offsetof(IssueData_SetCustomFieldValue, ReturnValue) == 0x000020, "Member 'IssueData_SetCustomFieldValue::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.IssueData.GetCameraTransform
// 0x0030 (0x0030 - 0x0000)
struct IssueData_GetCameraTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IssueData_GetCameraTransform) == 0x000010, "Wrong alignment on IssueData_GetCameraTransform");
static_assert(sizeof(IssueData_GetCameraTransform) == 0x000030, "Wrong size on IssueData_GetCameraTransform");
static_assert(offsetof(IssueData_GetCameraTransform, ReturnValue) == 0x000000, "Member 'IssueData_GetCameraTransform::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.IssueData.GetCustomFieldValue
// 0x0020 (0x0020 - 0x0000)
struct IssueData_GetCustomFieldValue final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IssueData_GetCustomFieldValue) == 0x000008, "Wrong alignment on IssueData_GetCustomFieldValue");
static_assert(sizeof(IssueData_GetCustomFieldValue) == 0x000020, "Wrong size on IssueData_GetCustomFieldValue");
static_assert(offsetof(IssueData_GetCustomFieldValue, FieldName) == 0x000000, "Member 'IssueData_GetCustomFieldValue::FieldName' has a wrong offset!");
static_assert(offsetof(IssueData_GetCustomFieldValue, ReturnValue) == 0x000010, "Member 'IssueData_GetCustomFieldValue::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.IssueData.GetLevelName
// 0x0010 (0x0010 - 0x0000)
struct IssueData_GetLevelName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IssueData_GetLevelName) == 0x000008, "Wrong alignment on IssueData_GetLevelName");
static_assert(sizeof(IssueData_GetLevelName) == 0x000010, "Wrong size on IssueData_GetLevelName");
static_assert(offsetof(IssueData_GetLevelName, ReturnValue) == 0x000000, "Member 'IssueData_GetLevelName::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.AddCustomField
// 0x0028 (0x0028 - 0x0000)
struct RuntimeUtilities_AddCustomField final
{
public:
	class UFeedbackData*                          Feedback;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Field;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeUtilities_AddCustomField) == 0x000008, "Wrong alignment on RuntimeUtilities_AddCustomField");
static_assert(sizeof(RuntimeUtilities_AddCustomField) == 0x000028, "Wrong size on RuntimeUtilities_AddCustomField");
static_assert(offsetof(RuntimeUtilities_AddCustomField, Feedback) == 0x000000, "Member 'RuntimeUtilities_AddCustomField::Feedback' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_AddCustomField, Field) == 0x000008, "Member 'RuntimeUtilities_AddCustomField::Field' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_AddCustomField, Value) == 0x000018, "Member 'RuntimeUtilities_AddCustomField::Value' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.AddLog
// 0x0010 (0x0010 - 0x0000)
struct RuntimeUtilities_AddLog final
{
public:
	class UFeedbackData*                          Feedback;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeUtilities_AddLog) == 0x000008, "Wrong alignment on RuntimeUtilities_AddLog");
static_assert(sizeof(RuntimeUtilities_AddLog) == 0x000010, "Wrong size on RuntimeUtilities_AddLog");
static_assert(offsetof(RuntimeUtilities_AddLog, Feedback) == 0x000000, "Member 'RuntimeUtilities_AddLog::Feedback' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_AddLog, ReturnValue) == 0x000008, "Member 'RuntimeUtilities_AddLog::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.AddScreenshot
// 0x0030 (0x0030 - 0x0000)
struct RuntimeUtilities_AddScreenshot final
{
public:
	class UFeedbackData*                          Feedback;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInShowUI;                                         // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DesiredWidth;                                      // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DesiredHeight;                                     // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeUtilities_AddScreenshot) == 0x000008, "Wrong alignment on RuntimeUtilities_AddScreenshot");
static_assert(sizeof(RuntimeUtilities_AddScreenshot) == 0x000030, "Wrong size on RuntimeUtilities_AddScreenshot");
static_assert(offsetof(RuntimeUtilities_AddScreenshot, Feedback) == 0x000000, "Member 'RuntimeUtilities_AddScreenshot::Feedback' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_AddScreenshot, LatentInfo) == 0x000008, "Member 'RuntimeUtilities_AddScreenshot::LatentInfo' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_AddScreenshot, bSuccess) == 0x000020, "Member 'RuntimeUtilities_AddScreenshot::bSuccess' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_AddScreenshot, bInShowUI) == 0x000021, "Member 'RuntimeUtilities_AddScreenshot::bInShowUI' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_AddScreenshot, DesiredWidth) == 0x000024, "Member 'RuntimeUtilities_AddScreenshot::DesiredWidth' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_AddScreenshot, DesiredHeight) == 0x000028, "Member 'RuntimeUtilities_AddScreenshot::DesiredHeight' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.CreateFeedback
// 0x0008 (0x0008 - 0x0000)
struct RuntimeUtilities_CreateFeedback final
{
public:
	class UFeedbackData*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeUtilities_CreateFeedback) == 0x000008, "Wrong alignment on RuntimeUtilities_CreateFeedback");
static_assert(sizeof(RuntimeUtilities_CreateFeedback) == 0x000008, "Wrong size on RuntimeUtilities_CreateFeedback");
static_assert(offsetof(RuntimeUtilities_CreateFeedback, ReturnValue) == 0x000000, "Member 'RuntimeUtilities_CreateFeedback::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.CreateIssue
// 0x0008 (0x0008 - 0x0000)
struct RuntimeUtilities_CreateIssue final
{
public:
	class UIssueData*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeUtilities_CreateIssue) == 0x000008, "Wrong alignment on RuntimeUtilities_CreateIssue");
static_assert(sizeof(RuntimeUtilities_CreateIssue) == 0x000008, "Wrong size on RuntimeUtilities_CreateIssue");
static_assert(offsetof(RuntimeUtilities_CreateIssue, ReturnValue) == 0x000000, "Member 'RuntimeUtilities_CreateIssue::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.GetCategories
// 0x0020 (0x0020 - 0x0000)
struct RuntimeUtilities_GetCategories final
{
public:
	TDelegate<void(const struct FCategoriesHelper& Categories)> OnSuccess;                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Response)> OnFail;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeUtilities_GetCategories) == 0x000004, "Wrong alignment on RuntimeUtilities_GetCategories");
static_assert(sizeof(RuntimeUtilities_GetCategories) == 0x000020, "Wrong size on RuntimeUtilities_GetCategories");
static_assert(offsetof(RuntimeUtilities_GetCategories, OnSuccess) == 0x000000, "Member 'RuntimeUtilities_GetCategories::OnSuccess' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_GetCategories, OnFail) == 0x000010, "Member 'RuntimeUtilities_GetCategories::OnFail' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.ReportIssue
// 0x0028 (0x0028 - 0x0000)
struct RuntimeUtilities_ReportIssue final
{
public:
	class FString                                 Summary;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Attachments;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bTakeScreenshots;                                  // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttachLogs;                                       // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0022(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeUtilities_ReportIssue) == 0x000008, "Wrong alignment on RuntimeUtilities_ReportIssue");
static_assert(sizeof(RuntimeUtilities_ReportIssue) == 0x000028, "Wrong size on RuntimeUtilities_ReportIssue");
static_assert(offsetof(RuntimeUtilities_ReportIssue, Summary) == 0x000000, "Member 'RuntimeUtilities_ReportIssue::Summary' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_ReportIssue, Attachments) == 0x000010, "Member 'RuntimeUtilities_ReportIssue::Attachments' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_ReportIssue, bTakeScreenshots) == 0x000020, "Member 'RuntimeUtilities_ReportIssue::bTakeScreenshots' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_ReportIssue, bAttachLogs) == 0x000021, "Member 'RuntimeUtilities_ReportIssue::bAttachLogs' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_ReportIssue, ReturnValue) == 0x000022, "Member 'RuntimeUtilities_ReportIssue::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.ReportIssueData
// 0x0020 (0x0020 - 0x0000)
struct RuntimeUtilities_ReportIssueData final
{
public:
	class UIssueData*                             Issue;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Attachments;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bTakeScreenshots;                                  // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttachLogs;                                       // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeUtilities_ReportIssueData) == 0x000008, "Wrong alignment on RuntimeUtilities_ReportIssueData");
static_assert(sizeof(RuntimeUtilities_ReportIssueData) == 0x000020, "Wrong size on RuntimeUtilities_ReportIssueData");
static_assert(offsetof(RuntimeUtilities_ReportIssueData, Issue) == 0x000000, "Member 'RuntimeUtilities_ReportIssueData::Issue' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_ReportIssueData, Attachments) == 0x000008, "Member 'RuntimeUtilities_ReportIssueData::Attachments' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_ReportIssueData, bTakeScreenshots) == 0x000018, "Member 'RuntimeUtilities_ReportIssueData::bTakeScreenshots' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_ReportIssueData, bAttachLogs) == 0x000019, "Member 'RuntimeUtilities_ReportIssueData::bAttachLogs' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_ReportIssueData, ReturnValue) == 0x00001A, "Member 'RuntimeUtilities_ReportIssueData::ReturnValue' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.SendAttachment
// 0x0078 (0x0078 - 0x0000)
struct RuntimeUtilities_SendAttachment final
{
public:
	int32                                         IssueId;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FullPath;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ContentMimeType;                                   // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Username;                                          // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PasswordOrToken;                                   // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Response)> OnFail;                                           // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeUtilities_SendAttachment) == 0x000008, "Wrong alignment on RuntimeUtilities_SendAttachment");
static_assert(sizeof(RuntimeUtilities_SendAttachment) == 0x000078, "Wrong size on RuntimeUtilities_SendAttachment");
static_assert(offsetof(RuntimeUtilities_SendAttachment, IssueId) == 0x000000, "Member 'RuntimeUtilities_SendAttachment::IssueId' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendAttachment, FullPath) == 0x000008, "Member 'RuntimeUtilities_SendAttachment::FullPath' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendAttachment, Filename) == 0x000018, "Member 'RuntimeUtilities_SendAttachment::Filename' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendAttachment, ContentMimeType) == 0x000028, "Member 'RuntimeUtilities_SendAttachment::ContentMimeType' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendAttachment, Username) == 0x000038, "Member 'RuntimeUtilities_SendAttachment::Username' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendAttachment, PasswordOrToken) == 0x000048, "Member 'RuntimeUtilities_SendAttachment::PasswordOrToken' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendAttachment, OnSuccess) == 0x000058, "Member 'RuntimeUtilities_SendAttachment::OnSuccess' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendAttachment, OnFail) == 0x000068, "Member 'RuntimeUtilities_SendAttachment::OnFail' has a wrong offset!");

// Function LadyBugTrackerRuntime.RuntimeUtilities.SendFeedback
// 0x0048 (0x0048 - 0x0000)
struct RuntimeUtilities_SendFeedback final
{
public:
	class UFeedbackData*                          Feedback;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Username;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PasswordOrToken;                                   // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 IssueId)>                OnSuccess;                                         // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Response)> OnFail;                                           // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeUtilities_SendFeedback) == 0x000008, "Wrong alignment on RuntimeUtilities_SendFeedback");
static_assert(sizeof(RuntimeUtilities_SendFeedback) == 0x000048, "Wrong size on RuntimeUtilities_SendFeedback");
static_assert(offsetof(RuntimeUtilities_SendFeedback, Feedback) == 0x000000, "Member 'RuntimeUtilities_SendFeedback::Feedback' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendFeedback, Username) == 0x000008, "Member 'RuntimeUtilities_SendFeedback::Username' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendFeedback, PasswordOrToken) == 0x000018, "Member 'RuntimeUtilities_SendFeedback::PasswordOrToken' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendFeedback, OnSuccess) == 0x000028, "Member 'RuntimeUtilities_SendFeedback::OnSuccess' has a wrong offset!");
static_assert(offsetof(RuntimeUtilities_SendFeedback, OnFail) == 0x000038, "Member 'RuntimeUtilities_SendFeedback::OnFail' has a wrong offset!");

}

