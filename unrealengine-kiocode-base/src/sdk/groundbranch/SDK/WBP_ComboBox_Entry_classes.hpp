#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ComboBox_Entry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "WBP_Tab_Master_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ComboBox_Entry.WBP_ComboBox_Entry_C
// 0x00B8 (0x03B0 - 0x02F8)
class UWBP_ComboBox_Entry_C final : public UWBP_Tab_Master_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_ComboBox_Entry_C;               // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCheckBox*                              CheckBox_Tab;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ItemSkinName;                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0310(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         Index_0;                                           // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            SelectedTextColour;                                // 0x0330(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           SelectedTextShadowColour;                          // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            UnselectedTextColour;                              // 0x0368(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           UnselectedTextShadowColour;                        // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 Index)>   OnEntrySelected;                                   // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_ComboBox_Entry(int32 EntryPoint);
	void InternalOnSelected();
	void InternalSetSelected(bool IsSelected);
	void BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	struct FSlateColor GetTextColorAndOpacity();
	struct FLinearColor GetTextShadowColorAndOpacity();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ComboBox_Entry_C">();
	}
	static class UWBP_ComboBox_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ComboBox_Entry_C>();
	}
};
static_assert(alignof(UWBP_ComboBox_Entry_C) == 0x000008, "Wrong alignment on UWBP_ComboBox_Entry_C");
static_assert(sizeof(UWBP_ComboBox_Entry_C) == 0x0003B0, "Wrong size on UWBP_ComboBox_Entry_C");
static_assert(offsetof(UWBP_ComboBox_Entry_C, UberGraphFrame_WBP_ComboBox_Entry_C) == 0x0002F8, "Member 'UWBP_ComboBox_Entry_C::UberGraphFrame_WBP_ComboBox_Entry_C' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, CheckBox_Tab) == 0x000300, "Member 'UWBP_ComboBox_Entry_C::CheckBox_Tab' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, TextBlock_ItemSkinName) == 0x000308, "Member 'UWBP_ComboBox_Entry_C::TextBlock_ItemSkinName' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, Text) == 0x000310, "Member 'UWBP_ComboBox_Entry_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, Index_0) == 0x000328, "Member 'UWBP_ComboBox_Entry_C::Index_0' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, SelectedTextColour) == 0x000330, "Member 'UWBP_ComboBox_Entry_C::SelectedTextColour' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, SelectedTextShadowColour) == 0x000358, "Member 'UWBP_ComboBox_Entry_C::SelectedTextShadowColour' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, UnselectedTextColour) == 0x000368, "Member 'UWBP_ComboBox_Entry_C::UnselectedTextColour' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, UnselectedTextShadowColour) == 0x000390, "Member 'UWBP_ComboBox_Entry_C::UnselectedTextShadowColour' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBox_Entry_C, OnEntrySelected) == 0x0003A0, "Member 'UWBP_ComboBox_Entry_C::OnEntrySelected' has a wrong offset!");

}

