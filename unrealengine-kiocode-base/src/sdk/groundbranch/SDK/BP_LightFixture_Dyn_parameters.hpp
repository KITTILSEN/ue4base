#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightFixture_Dyn

#include "Basic.hpp"

#include "EGBPowerSourceStatus_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.ExecuteUbergraph_BP_LightFixture_Dyn
// 0x0320 (0x0320 - 0x0000)
struct BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_1;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_2;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_TimeSpan;                       // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_3;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x00A4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBBulletProjectile*                    K2Node_DynamicCast_AsGBBullet_Projectile;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GBSkyActor_C*                       CallFunc_GetActorOfClass_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTimeSpanTag_ReturnValue;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_4;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate; // 0x017C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_CustomEvent_DamageType;                     // 0x01A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Origin;                         // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitInfo;                        // 0x01B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoWeTakeDamage_bOutTakeDamage;            // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x025F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default_2;                           // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0274(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(class AGBPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x0284(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0294(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_CustomEvent_PlayerState;                    // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EReadyRoomStatus                              CallFunc_GetReadyRoomStatus_ReturnValue;           // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB[0x1];                                      // 0x02BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName Timespan)>         K2Node_CreateDelegate_OutputDelegate_3;            // 0x02BC(0x0010)(ZeroConstructor, NoDestructor)
	EGBPowerSourceStatus                          K2Node_ComponentBoundEvent_InSharedPowerSourceStatus; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOn_bIsOn;                               // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x02CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOn_bIsOn_1;                             // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOn_bIsOn_2;                             // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditorWorld_ReturnValue;                // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_5;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E3[0x5];                                      // 0x02E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_6;              // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bVisible;                       // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default_3;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default_4;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_2;      // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn");
static_assert(sizeof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn) == 0x000320, "Wrong size on BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, EntryPoint) == 0x000000, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_bool_Variable) == 0x000010, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_DynamicCast_AsGBPlayer_State) == 0x000018, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000021, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_bool_Variable_1) == 0x000022, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000023, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000024, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetLightComp_OutLightComp) == 0x000028, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetLightComp_OutLightComp' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetLightComp_OutLightComp_1) == 0x000030, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetLightComp_OutLightComp_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000044, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetLightComp_OutLightComp_2) == 0x000050, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetLightComp_OutLightComp_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000058, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_TimeSpan) == 0x000064, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_TimeSpan' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_SetStaticMesh_ReturnValue) == 0x000070, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetLightComp_OutLightComp_3) == 0x000078, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetLightComp_OutLightComp_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_HitComponent) == 0x000080, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_OtherActor) == 0x000088, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_OtherComp) == 0x000090, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_NormalImpulse) == 0x000098, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_Hit) == 0x0000A4, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_DynamicCast_AsGBBullet_Projectile) == 0x000130, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_DynamicCast_AsGBBullet_Projectile' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsValid_ReturnValue) == 0x000139, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsValid_ReturnValue_1) == 0x00013A, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_byte_Variable) == 0x00013B, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsValid_ReturnValue_2) == 0x00013C, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetActorOfClass_ReturnValue) == 0x000140, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetTimeSpanTag_ReturnValue) == 0x000148, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetTimeSpanTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000150, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsValid_ReturnValue_3) == 0x000158, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_Greater_IntInt_ReturnValue) == 0x000159, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetLightComp_OutLightComp_4) == 0x000160, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetLightComp_OutLightComp_4' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanOR_ReturnValue) == 0x000168, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x00016C, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanAND_ReturnValue) == 0x000178, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000179, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00017A, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CreateDelegate_OutputDelegate) == 0x00017C, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_bool_Variable_2) == 0x00018C, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_DamagedActor) == 0x000190, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_Damage) == 0x000198, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_DamageType) == 0x0001A0, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_Origin) == 0x0001A8, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_Origin' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_HitInfo) == 0x0001B4, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_InstigatedBy) == 0x000240, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_DamageCauser) == 0x000248, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_Select_Default) == 0x000250, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000258, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_Not_PreBool_ReturnValue) == 0x000259, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_DoWeTakeDamage_bOutTakeDamage) == 0x00025A, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_DoWeTakeDamage_bOutTakeDamage' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_Not_PreBool_ReturnValue_1) == 0x00025B, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanAND_ReturnValue_1) == 0x00025C, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanAND_ReturnValue_2) == 0x00025D, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanAND_ReturnValue_3) == 0x00025E, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanAND_ReturnValue_4) == 0x00025F, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanAND_ReturnValue_5) == 0x000260, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_Select_Default_1) == 0x000268, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_Less_IntInt_ReturnValue) == 0x000270, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_byte_Variable_1) == 0x000271, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_HasAuthority_ReturnValue) == 0x000272, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_Select_Default_2) == 0x000273, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_delegate_Variable) == 0x000274, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CreateDelegate_OutputDelegate_1) == 0x000284, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CreateDelegate_OutputDelegate_2) == 0x000294, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_PlayerState) == 0x0002A8, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetReadyRoomStatus_ReturnValue) == 0x0002B0, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetReadyRoomStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002B1, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_int_Variable) == 0x0002B4, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002B8, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsValid_ReturnValue_4) == 0x0002B9, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_HasAuthority_ReturnValue_1) == 0x0002BA, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002BC, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_ComponentBoundEvent_InSharedPowerSourceStatus) == 0x0002CC, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_ComponentBoundEvent_InSharedPowerSourceStatus' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsValid_ReturnValue_5) == 0x0002CD, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsOn_bIsOn) == 0x0002CE, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsOn_bIsOn' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0002CF, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsOn_bIsOn_1) == 0x0002D0, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsOn_bIsOn_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsValid_ReturnValue_6) == 0x0002D1, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsOn_bIsOn_2) == 0x0002D2, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsOn_bIsOn_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_IsEditorWorld_ReturnValue) == 0x0002D3, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_IsEditorWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetLightComp_OutLightComp_5) == 0x0002D8, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetLightComp_OutLightComp_5' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_Map_Find_Value) == 0x0002E0, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_Map_Find_ReturnValue) == 0x0002E1, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanAND_ReturnValue_6) == 0x0002E2, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_GetLightComp_OutLightComp_6) == 0x0002E8, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_GetLightComp_OutLightComp_6' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_CustomEvent_bVisible) == 0x0002F0, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_CustomEvent_bVisible' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_BooleanAND_ReturnValue_7) == 0x0002F1, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_bool_Variable_3) == 0x0002F2, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, Temp_bool_Variable_4) == 0x0002F3, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_Select_Default_3) == 0x0002F8, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, K2Node_Select_Default_4) == 0x000300, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000308, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_SpawnSystemAtLocation_ReturnValue_2) == 0x000310, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_SpawnSystemAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn, CallFunc_PostAkEvent_ReturnValue) == 0x000318, "Member 'BP_LightFixture_Dyn_C_ExecuteUbergraph_BP_LightFixture_Dyn::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.SetLightSourceVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_LightFixture_Dyn_C_SetLightSourceVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightFixture_Dyn_C_SetLightSourceVisibility) == 0x000001, "Wrong alignment on BP_LightFixture_Dyn_C_SetLightSourceVisibility");
static_assert(sizeof(BP_LightFixture_Dyn_C_SetLightSourceVisibility) == 0x000001, "Wrong size on BP_LightFixture_Dyn_C_SetLightSourceVisibility");
static_assert(offsetof(BP_LightFixture_Dyn_C_SetLightSourceVisibility, bVisible) == 0x000000, "Member 'BP_LightFixture_Dyn_C_SetLightSourceVisibility::bVisible' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.BndEvt__BP_LightFixture_Dyn_BP_Power_UserComponent_K2Node_ComponentBoundEvent_0_OnSharedPowerSourceStatusChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_LightFixture_Dyn_C_BndEvt__BP_LightFixture_Dyn_BP_Power_UserComponent_K2Node_ComponentBoundEvent_0_OnSharedPowerSourceStatusChanged__DelegateSignature final
{
public:
	EGBPowerSourceStatus                          InSharedPowerSourceStatus;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFixture_Dyn_C_BndEvt__BP_LightFixture_Dyn_BP_Power_UserComponent_K2Node_ComponentBoundEvent_0_OnSharedPowerSourceStatusChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_LightFixture_Dyn_C_BndEvt__BP_LightFixture_Dyn_BP_Power_UserComponent_K2Node_ComponentBoundEvent_0_OnSharedPowerSourceStatusChanged__DelegateSignature");
static_assert(sizeof(BP_LightFixture_Dyn_C_BndEvt__BP_LightFixture_Dyn_BP_Power_UserComponent_K2Node_ComponentBoundEvent_0_OnSharedPowerSourceStatusChanged__DelegateSignature) == 0x000001, "Wrong size on BP_LightFixture_Dyn_C_BndEvt__BP_LightFixture_Dyn_BP_Power_UserComponent_K2Node_ComponentBoundEvent_0_OnSharedPowerSourceStatusChanged__DelegateSignature");
static_assert(offsetof(BP_LightFixture_Dyn_C_BndEvt__BP_LightFixture_Dyn_BP_Power_UserComponent_K2Node_ComponentBoundEvent_0_OnSharedPowerSourceStatusChanged__DelegateSignature, InSharedPowerSourceStatus) == 0x000000, "Member 'BP_LightFixture_Dyn_C_BndEvt__BP_LightFixture_Dyn_BP_Power_UserComponent_K2Node_ComponentBoundEvent_0_OnSharedPowerSourceStatusChanged__DelegateSignature::InSharedPowerSourceStatus' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.OnPlayerReadyRoomStatusChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_LightFixture_Dyn_C_OnPlayerReadyRoomStatusChanged_Event_0 final
{
public:
	class AGBPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFixture_Dyn_C_OnPlayerReadyRoomStatusChanged_Event_0) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_OnPlayerReadyRoomStatusChanged_Event_0");
static_assert(sizeof(BP_LightFixture_Dyn_C_OnPlayerReadyRoomStatusChanged_Event_0) == 0x000008, "Wrong size on BP_LightFixture_Dyn_C_OnPlayerReadyRoomStatusChanged_Event_0");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnPlayerReadyRoomStatusChanged_Event_0, PlayerState) == 0x000000, "Member 'BP_LightFixture_Dyn_C_OnPlayerReadyRoomStatusChanged_Event_0::PlayerState' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.OnTakeRadialDamage_1
// 0x00C0 (0x00C0 - 0x0000)
struct BP_LightFixture_Dyn_C_OnTakeRadialDamage_1 final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0024(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_OnTakeRadialDamage_1");
static_assert(sizeof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1) == 0x0000C0, "Wrong size on BP_LightFixture_Dyn_C_OnTakeRadialDamage_1");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1, DamagedActor) == 0x000000, "Member 'BP_LightFixture_Dyn_C_OnTakeRadialDamage_1::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1, Damage) == 0x000008, "Member 'BP_LightFixture_Dyn_C_OnTakeRadialDamage_1::Damage' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1, DamageType) == 0x000010, "Member 'BP_LightFixture_Dyn_C_OnTakeRadialDamage_1::DamageType' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1, Origin) == 0x000018, "Member 'BP_LightFixture_Dyn_C_OnTakeRadialDamage_1::Origin' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1, HitInfo) == 0x000024, "Member 'BP_LightFixture_Dyn_C_OnTakeRadialDamage_1::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1, InstigatedBy) == 0x0000B0, "Member 'BP_LightFixture_Dyn_C_OnTakeRadialDamage_1::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnTakeRadialDamage_1, DamageCauser) == 0x0000B8, "Member 'BP_LightFixture_Dyn_C_OnTakeRadialDamage_1::DamageCauser' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.OnComponentHit_Event_0
// 0x00B0 (0x00B0 - 0x0000)
struct BP_LightFixture_Dyn_C_OnComponentHit_Event_0 final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_LightFixture_Dyn_C_OnComponentHit_Event_0) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_OnComponentHit_Event_0");
static_assert(sizeof(BP_LightFixture_Dyn_C_OnComponentHit_Event_0) == 0x0000B0, "Wrong size on BP_LightFixture_Dyn_C_OnComponentHit_Event_0");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnComponentHit_Event_0, HitComponent) == 0x000000, "Member 'BP_LightFixture_Dyn_C_OnComponentHit_Event_0::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnComponentHit_Event_0, OtherActor) == 0x000008, "Member 'BP_LightFixture_Dyn_C_OnComponentHit_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnComponentHit_Event_0, OtherComp) == 0x000010, "Member 'BP_LightFixture_Dyn_C_OnComponentHit_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnComponentHit_Event_0, NormalImpulse) == 0x000018, "Member 'BP_LightFixture_Dyn_C_OnComponentHit_Event_0::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnComponentHit_Event_0, Hit) == 0x000024, "Member 'BP_LightFixture_Dyn_C_OnComponentHit_Event_0::Hit' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.OnTimeSpanChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_LightFixture_Dyn_C_OnTimeSpanChanged_Event_0 final
{
public:
	class FName                                   Timespan;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFixture_Dyn_C_OnTimeSpanChanged_Event_0) == 0x000004, "Wrong alignment on BP_LightFixture_Dyn_C_OnTimeSpanChanged_Event_0");
static_assert(sizeof(BP_LightFixture_Dyn_C_OnTimeSpanChanged_Event_0) == 0x000008, "Wrong size on BP_LightFixture_Dyn_C_OnTimeSpanChanged_Event_0");
static_assert(offsetof(BP_LightFixture_Dyn_C_OnTimeSpanChanged_Event_0, Timespan) == 0x000000, "Member 'BP_LightFixture_Dyn_C_OnTimeSpanChanged_Event_0::Timespan' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.UserConstructionScript
// 0x0038 (0x0038 - 0x0000)
struct BP_LightFixture_Dyn_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsEditorWorld_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_1;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_2;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        CallFunc_GetLightComp_OutLightComp_3;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightFixture_Dyn_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_UserConstructionScript");
static_assert(sizeof(BP_LightFixture_Dyn_C_UserConstructionScript) == 0x000038, "Wrong size on BP_LightFixture_Dyn_C_UserConstructionScript");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_IsEditorWorld_ReturnValue) == 0x000000, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_IsEditorWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_GetLightComp_OutLightComp) == 0x000008, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_GetLightComp_OutLightComp' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_GetLightComp_OutLightComp_1) == 0x000018, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_GetLightComp_OutLightComp_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_GetLightComp_OutLightComp_2) == 0x000020, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_GetLightComp_OutLightComp_2' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_GetLightComp_OutLightComp_3) == 0x000028, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_GetLightComp_OutLightComp_3' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_LightFixture_Dyn_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.GetLightComp
// 0x0010 (0x0010 - 0x0000)
struct BP_LightFixture_Dyn_C_GetLightComp final
{
public:
	class ULightComponent*                        OutLightComp;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightFixture_Dyn_C_GetLightComp) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_GetLightComp");
static_assert(sizeof(BP_LightFixture_Dyn_C_GetLightComp) == 0x000010, "Wrong size on BP_LightFixture_Dyn_C_GetLightComp");
static_assert(offsetof(BP_LightFixture_Dyn_C_GetLightComp, OutLightComp) == 0x000000, "Member 'BP_LightFixture_Dyn_C_GetLightComp::OutLightComp' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_GetLightComp, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_LightFixture_Dyn_C_GetLightComp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.AddLightToPortalSystem
// 0x0020 (0x0020 - 0x0000)
struct BP_LightFixture_Dyn_C_AddLightToPortalSystem final
{
public:
	class ULightComponent*                        LightComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APortalSystemManager*                   CallFunc_GetPortalSystemManagerInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPortalSystemManager*                 K2Node_DynamicCast_AsGBPortal_System_Manager;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightFixture_Dyn_C_AddLightToPortalSystem) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_AddLightToPortalSystem");
static_assert(sizeof(BP_LightFixture_Dyn_C_AddLightToPortalSystem) == 0x000020, "Wrong size on BP_LightFixture_Dyn_C_AddLightToPortalSystem");
static_assert(offsetof(BP_LightFixture_Dyn_C_AddLightToPortalSystem, LightComponent) == 0x000000, "Member 'BP_LightFixture_Dyn_C_AddLightToPortalSystem::LightComponent' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_AddLightToPortalSystem, CallFunc_GetPortalSystemManagerInstance_ReturnValue) == 0x000008, "Member 'BP_LightFixture_Dyn_C_AddLightToPortalSystem::CallFunc_GetPortalSystemManagerInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_AddLightToPortalSystem, K2Node_DynamicCast_AsGBPortal_System_Manager) == 0x000010, "Member 'BP_LightFixture_Dyn_C_AddLightToPortalSystem::K2Node_DynamicCast_AsGBPortal_System_Manager' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_AddLightToPortalSystem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_LightFixture_Dyn_C_AddLightToPortalSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.RemoveLightFromPortalSystem
// 0x0020 (0x0020 - 0x0000)
struct BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem final
{
public:
	class ULightComponent*                        LightComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APortalSystemManager*                   CallFunc_GetPortalSystemManagerInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPortalSystemManager*                 K2Node_DynamicCast_AsGBPortal_System_Manager;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem");
static_assert(sizeof(BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem) == 0x000020, "Wrong size on BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem");
static_assert(offsetof(BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem, LightComponent) == 0x000000, "Member 'BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem::LightComponent' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem, CallFunc_GetPortalSystemManagerInstance_ReturnValue) == 0x000008, "Member 'BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem::CallFunc_GetPortalSystemManagerInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem, K2Node_DynamicCast_AsGBPortal_System_Manager) == 0x000010, "Member 'BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem::K2Node_DynamicCast_AsGBPortal_System_Manager' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_LightFixture_Dyn_C_RemoveLightFromPortalSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.DoWeTakeDamage
// 0x01D0 (0x01D0 - 0x0000)
struct BP_LightFixture_Dyn_C_DoWeTakeDamage final
{
public:
	struct FVector                                InDamageOrigin;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDamageRadius;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInTrace;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InDamageCauser;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageAmount;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutTakeDamage;                                    // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocalClosestPointOnCollision;                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    LocalCollisionGeo;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFixture_Dyn_C_DoWeTakeDamage) == 0x000008, "Wrong alignment on BP_LightFixture_Dyn_C_DoWeTakeDamage");
static_assert(sizeof(BP_LightFixture_Dyn_C_DoWeTakeDamage) == 0x0001D0, "Wrong size on BP_LightFixture_Dyn_C_DoWeTakeDamage");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, InDamageOrigin) == 0x000000, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::InDamageOrigin' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, InDamageRadius) == 0x00000C, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::InDamageRadius' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, bInTrace) == 0x000010, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::bInTrace' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, InDamageCauser) == 0x000018, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::InDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, DamageAmount) == 0x000020, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, bOutTakeDamage) == 0x000024, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::bOutTakeDamage' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, LocalClosestPointOnCollision) == 0x000028, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::LocalClosestPointOnCollision' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, LocalCollisionGeo) == 0x000030, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::LocalCollisionGeo' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00003C, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, Temp_bool_Variable) == 0x000048, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_Vector_Distance_ReturnValue) == 0x00004C, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_Less_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000054, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x000060, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BooleanAND_ReturnValue) == 0x000064, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_Not_PreBool_ReturnValue) == 0x000065, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000078, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000084, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000090, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_LineTraceSingle_OutHit) == 0x0000B4, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_LineTraceSingle_ReturnValue) == 0x00013C, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BooleanAND_ReturnValue_1) == 0x00013D, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BooleanOR_ReturnValue) == 0x00013E, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x00013F, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x000140, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_Time) == 0x000144, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_Distance) == 0x000148, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_Location) == 0x00014C, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_Normal) == 0x000164, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_TraceStart) == 0x0001AC, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001C4, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_DoWeTakeDamage, K2Node_Select_Default) == 0x0001C8, "Member 'BP_LightFixture_Dyn_C_DoWeTakeDamage::K2Node_Select_Default' has a wrong offset!");

// Function BP_LightFixture_Dyn.BP_LightFixture_Dyn_C.IsOn
// 0x0008 (0x0008 - 0x0000)
struct BP_LightFixture_Dyn_C_IsOn final
{
public:
	bool                                          bIsOn_0;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGBPowerSourceStatus                          CallFunc_GetSharedPowerSourceStatus_PowerSourceStatus; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightFixture_Dyn_C_IsOn) == 0x000001, "Wrong alignment on BP_LightFixture_Dyn_C_IsOn");
static_assert(sizeof(BP_LightFixture_Dyn_C_IsOn) == 0x000008, "Wrong size on BP_LightFixture_Dyn_C_IsOn");
static_assert(offsetof(BP_LightFixture_Dyn_C_IsOn, bIsOn_0) == 0x000000, "Member 'BP_LightFixture_Dyn_C_IsOn::bIsOn_0' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_IsOn, CallFunc_IsEditor_ReturnValue) == 0x000001, "Member 'BP_LightFixture_Dyn_C_IsOn::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_IsOn, CallFunc_GetSharedPowerSourceStatus_PowerSourceStatus) == 0x000002, "Member 'BP_LightFixture_Dyn_C_IsOn::CallFunc_GetSharedPowerSourceStatus_PowerSourceStatus' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_IsOn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_LightFixture_Dyn_C_IsOn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_IsOn, CallFunc_Map_Find_Value) == 0x000004, "Member 'BP_LightFixture_Dyn_C_IsOn::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_IsOn, CallFunc_Map_Find_ReturnValue) == 0x000005, "Member 'BP_LightFixture_Dyn_C_IsOn::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_IsOn, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BP_LightFixture_Dyn_C_IsOn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFixture_Dyn_C_IsOn, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_LightFixture_Dyn_C_IsOn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

