#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GBPPVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GBPPVolume.BP_GBPPVolume_C
// 0x05D0 (0x07F0 - 0x0220)
class ABP_GBPPVolume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FPostProcessSettings> PostProcessSettings;                              // 0x0238(0x0050)(Edit, BlueprintVisible)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   DefaultPostProcessSettings;                        // 0x0290(0x0560)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_GBPPVolume(int32 EntryPoint);
	void SetEnabled(bool bEnabled);
	void OnTimeSpanChanged_Event_0(class FName Timespan);
	void BindToSkyActor();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GBPPVolume_C">();
	}
	static class ABP_GBPPVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GBPPVolume_C>();
	}
};
static_assert(alignof(ABP_GBPPVolume_C) == 0x000010, "Wrong alignment on ABP_GBPPVolume_C");
static_assert(sizeof(ABP_GBPPVolume_C) == 0x0007F0, "Wrong size on ABP_GBPPVolume_C");
static_assert(offsetof(ABP_GBPPVolume_C, UberGraphFrame) == 0x000220, "Member 'ABP_GBPPVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GBPPVolume_C, Box) == 0x000228, "Member 'ABP_GBPPVolume_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_GBPPVolume_C, PostProcess) == 0x000230, "Member 'ABP_GBPPVolume_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_GBPPVolume_C, PostProcessSettings) == 0x000238, "Member 'ABP_GBPPVolume_C::PostProcessSettings' has a wrong offset!");
static_assert(offsetof(ABP_GBPPVolume_C, DefaultPostProcessSettings) == 0x000290, "Member 'ABP_GBPPVolume_C::DefaultPostProcessSettings' has a wrong offset!");

}

