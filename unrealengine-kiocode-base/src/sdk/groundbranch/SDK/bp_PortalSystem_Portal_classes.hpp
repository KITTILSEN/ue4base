#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_PortalSystem_Portal

#include "Basic.hpp"

#include "PortalSystem_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_PortalSystem_Portal.bp_PortalSystem_Portal_C
// 0x0018 (0x0298 - 0x0280)
class Abp_PortalSystem_Portal_C final : public APortalSystemPortal
{
public:
	class UBoxRenderableComponent*                BoxRenderable;                                     // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEmptyRenderableComponent*              EmptyRenderable;                                   // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_PortalSystem_Portal_C">();
	}
	static class Abp_PortalSystem_Portal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abp_PortalSystem_Portal_C>();
	}
};
static_assert(alignof(Abp_PortalSystem_Portal_C) == 0x000008, "Wrong alignment on Abp_PortalSystem_Portal_C");
static_assert(sizeof(Abp_PortalSystem_Portal_C) == 0x000298, "Wrong size on Abp_PortalSystem_Portal_C");
static_assert(offsetof(Abp_PortalSystem_Portal_C, BoxRenderable) == 0x000280, "Member 'Abp_PortalSystem_Portal_C::BoxRenderable' has a wrong offset!");
static_assert(offsetof(Abp_PortalSystem_Portal_C, StaticMesh) == 0x000288, "Member 'Abp_PortalSystem_Portal_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(Abp_PortalSystem_Portal_C, EmptyRenderable) == 0x000290, "Member 'Abp_PortalSystem_Portal_C::EmptyRenderable' has a wrong offset!");

}

