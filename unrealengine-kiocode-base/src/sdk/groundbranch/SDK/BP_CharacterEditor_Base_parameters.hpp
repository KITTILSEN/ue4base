#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterEditor_Base

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CharacterEditor_Base.BP_CharacterEditor_Base_C.ExecuteUbergraph_BP_CharacterEditor_Base
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsVisible;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base) == 0x000004, "Wrong alignment on BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base");
static_assert(sizeof(BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base) == 0x000008, "Wrong size on BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base");
static_assert(offsetof(BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base, EntryPoint) == 0x000000, "Member 'BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base, K2Node_CustomEvent_bIsVisible) == 0x000004, "Member 'BP_CharacterEditor_Base_C_ExecuteUbergraph_BP_CharacterEditor_Base::K2Node_CustomEvent_bIsVisible' has a wrong offset!");

// Function BP_CharacterEditor_Base.BP_CharacterEditor_Base_C.SetCircleBaseVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterEditor_Base_C_SetCircleBaseVisibility final
{
public:
	bool                                          bIsVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterEditor_Base_C_SetCircleBaseVisibility) == 0x000001, "Wrong alignment on BP_CharacterEditor_Base_C_SetCircleBaseVisibility");
static_assert(sizeof(BP_CharacterEditor_Base_C_SetCircleBaseVisibility) == 0x000001, "Wrong size on BP_CharacterEditor_Base_C_SetCircleBaseVisibility");
static_assert(offsetof(BP_CharacterEditor_Base_C_SetCircleBaseVisibility, bIsVisible) == 0x000000, "Member 'BP_CharacterEditor_Base_C_SetCircleBaseVisibility::bIsVisible' has a wrong offset!");

}

