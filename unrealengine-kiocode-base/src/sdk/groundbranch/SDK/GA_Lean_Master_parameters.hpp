#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Lean_Master

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Lean_Master.GA_Lean_Master_C.ExecuteUbergraph_GA_Lean_Master
// 0x0398 (0x0398 - 0x0000)
struct GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitInputRelease*          CallFunc_WaitInputRelease_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeWaited)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimeWaited;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputPress*            CallFunc_WaitInputPress_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_1; // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0050(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0100(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter_1;                // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x01F0(0x00B0)(ConstParm)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x02A0(0x00B0)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeHeld;                       // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter_2;                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float TimeHeld)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0384(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master) == 0x000008, "Wrong alignment on GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master");
static_assert(sizeof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master) == 0x000398, "Wrong size on GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, EntryPoint) == 0x000000, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, Temp_float_Variable) == 0x000004, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_WaitInputRelease_ReturnValue) == 0x000008, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_WaitInputRelease_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_CustomEvent_TimeWaited) == 0x000024, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_CustomEvent_TimeWaited' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, Temp_float_Variable_1) == 0x000028, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_WaitInputPress_ReturnValue) == 0x000030, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_WaitInputPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_CustomEvent_Payload) == 0x000050, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, Temp_struct_Variable) == 0x000100, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0001B0, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_IsValid_ReturnValue_2) == 0x0001B8, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_Event_bWasCancelled) == 0x0001B9, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001C0, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0001C8, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_DynamicCast_AsGBCharacter) == 0x0001D0, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_DynamicCast_AsGBCharacter_1) == 0x0001E0, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_DynamicCast_AsGBCharacter_1' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_Event_EventData) == 0x0001F0, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_CustomEvent_EventData) == 0x0002A0, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000350, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_CustomEvent_TimeHeld) == 0x000358, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_CustomEvent_TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_DynamicCast_AsGBCharacter_2) == 0x000360, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_DynamicCast_AsGBCharacter_2' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_DynamicCast_bSuccess_2) == 0x000368, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000370, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000380, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master, K2Node_CreateDelegate_OutputDelegate_2) == 0x000384, "Member 'GA_Lean_Master_C_ExecuteUbergraph_GA_Lean_Master::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function GA_Lean_Master.GA_Lean_Master_C.ActivatedByAI
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Lean_Master_C_ActivatedByAI final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Lean_Master_C_ActivatedByAI) == 0x000008, "Wrong alignment on GA_Lean_Master_C_ActivatedByAI");
static_assert(sizeof(GA_Lean_Master_C_ActivatedByAI) == 0x0000B0, "Wrong size on GA_Lean_Master_C_ActivatedByAI");
static_assert(offsetof(GA_Lean_Master_C_ActivatedByAI, EventData) == 0x000000, "Member 'GA_Lean_Master_C_ActivatedByAI::EventData' has a wrong offset!");

// Function GA_Lean_Master.GA_Lean_Master_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Lean_Master_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Lean_Master_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Lean_Master_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Lean_Master_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Lean_Master_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Lean_Master_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Lean_Master_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Lean_Master.GA_Lean_Master_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Lean_Master_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Lean_Master_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Lean_Master_C_K2_OnEndAbility");
static_assert(sizeof(GA_Lean_Master_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Lean_Master_C_K2_OnEndAbility");
static_assert(offsetof(GA_Lean_Master_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Lean_Master_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Lean_Master.GA_Lean_Master_C.EventReceived_EF9A6DAB9DE04CD88D02460E18870719
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Lean_Master_C_EventReceived_EF9A6DAB9DE04CD88D02460E18870719 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Lean_Master_C_EventReceived_EF9A6DAB9DE04CD88D02460E18870719) == 0x000008, "Wrong alignment on GA_Lean_Master_C_EventReceived_EF9A6DAB9DE04CD88D02460E18870719");
static_assert(sizeof(GA_Lean_Master_C_EventReceived_EF9A6DAB9DE04CD88D02460E18870719) == 0x0000B0, "Wrong size on GA_Lean_Master_C_EventReceived_EF9A6DAB9DE04CD88D02460E18870719");
static_assert(offsetof(GA_Lean_Master_C_EventReceived_EF9A6DAB9DE04CD88D02460E18870719, Payload) == 0x000000, "Member 'GA_Lean_Master_C_EventReceived_EF9A6DAB9DE04CD88D02460E18870719::Payload' has a wrong offset!");

// Function GA_Lean_Master.GA_Lean_Master_C.OnPress_EA69CB2C67074B4B9EA5FDF00F15305C
// 0x0004 (0x0004 - 0x0000)
struct GA_Lean_Master_C_OnPress_EA69CB2C67074B4B9EA5FDF00F15305C final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Lean_Master_C_OnPress_EA69CB2C67074B4B9EA5FDF00F15305C) == 0x000004, "Wrong alignment on GA_Lean_Master_C_OnPress_EA69CB2C67074B4B9EA5FDF00F15305C");
static_assert(sizeof(GA_Lean_Master_C_OnPress_EA69CB2C67074B4B9EA5FDF00F15305C) == 0x000004, "Wrong size on GA_Lean_Master_C_OnPress_EA69CB2C67074B4B9EA5FDF00F15305C");
static_assert(offsetof(GA_Lean_Master_C_OnPress_EA69CB2C67074B4B9EA5FDF00F15305C, TimeWaited) == 0x000000, "Member 'GA_Lean_Master_C_OnPress_EA69CB2C67074B4B9EA5FDF00F15305C::TimeWaited' has a wrong offset!");

// Function GA_Lean_Master.GA_Lean_Master_C.OnRelease_E4B663220E9D436BA3FF24F0CD1C684B
// 0x0004 (0x0004 - 0x0000)
struct GA_Lean_Master_C_OnRelease_E4B663220E9D436BA3FF24F0CD1C684B final
{
public:
	float                                         TimeHeld;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Lean_Master_C_OnRelease_E4B663220E9D436BA3FF24F0CD1C684B) == 0x000004, "Wrong alignment on GA_Lean_Master_C_OnRelease_E4B663220E9D436BA3FF24F0CD1C684B");
static_assert(sizeof(GA_Lean_Master_C_OnRelease_E4B663220E9D436BA3FF24F0CD1C684B) == 0x000004, "Wrong size on GA_Lean_Master_C_OnRelease_E4B663220E9D436BA3FF24F0CD1C684B");
static_assert(offsetof(GA_Lean_Master_C_OnRelease_E4B663220E9D436BA3FF24F0CD1C684B, TimeHeld) == 0x000000, "Member 'GA_Lean_Master_C_OnRelease_E4B663220E9D436BA3FF24F0CD1C684B::TimeHeld' has a wrong offset!");

}

