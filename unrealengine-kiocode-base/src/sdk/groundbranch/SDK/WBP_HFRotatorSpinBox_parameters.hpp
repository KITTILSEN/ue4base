#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HFRotatorSpinBox

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.GetVisibility_BadYaw
// 0x0007 (0x0007 - 0x0000)
struct WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw) == 0x000001, "Wrong alignment on WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw) == 0x000007, "Wrong size on WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw, ReturnValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw, Temp_bool_Variable) == 0x000001, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw, Temp_byte_Variable) == 0x000002, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw, K2Node_Select_Default) == 0x000006, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadYaw::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.GetVisibility_BadPitch
// 0x0007 (0x0007 - 0x0000)
struct WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch) == 0x000001, "Wrong alignment on WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch) == 0x000007, "Wrong size on WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch, ReturnValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch, Temp_bool_Variable) == 0x000001, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch, Temp_byte_Variable) == 0x000002, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch, K2Node_Select_Default) == 0x000006, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadPitch::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.GetVisibility_BadRoll
// 0x0007 (0x0007 - 0x0000)
struct WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll) == 0x000001, "Wrong alignment on WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll) == 0x000007, "Wrong size on WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll, ReturnValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll, Temp_bool_Variable) == 0x000001, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll, Temp_byte_Variable) == 0x000002, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll, K2Node_Select_Default) == 0x000006, "Member 'WBP_HFRotatorSpinBox_C_GetVisibility_BadRoll::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.Get_Border_Yaw_ToolTipText_0
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)(ConstParm)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0) == 0x000008, "Wrong alignment on WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0) == 0x0000A0, "Wrong size on WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0, ReturnValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0, Temp_bool_Variable) == 0x000018, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0, CallFunc_GetValue_ReturnValue) == 0x00001C, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0, K2Node_MakeArray_Array) == 0x000060, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0, CallFunc_Format_ReturnValue) == 0x000070, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0, K2Node_Select_Default) == 0x000088, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Yaw_ToolTipText_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.Get_Border_Pitch_ToolTipText_0
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)(ConstParm)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0) == 0x000008, "Wrong alignment on WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0) == 0x0000A0, "Wrong size on WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0, ReturnValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0, Temp_bool_Variable) == 0x000018, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0, CallFunc_GetValue_ReturnValue) == 0x00001C, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0, K2Node_MakeArray_Array) == 0x000060, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0, CallFunc_Format_ReturnValue) == 0x000070, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0, K2Node_Select_Default) == 0x000088, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Pitch_ToolTipText_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.Get_Border_Roll_ToolTipText_0
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)(ConstParm)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0) == 0x000008, "Wrong alignment on WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0) == 0x0000A0, "Wrong size on WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0, ReturnValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0, Temp_bool_Variable) == 0x000018, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0, CallFunc_GetValue_ReturnValue) == 0x00001C, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0, K2Node_MakeArray_Array) == 0x000060, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0, CallFunc_Format_ReturnValue) == 0x000070, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0, K2Node_Select_Default) == 0x000088, "Member 'WBP_HFRotatorSpinBox_C_Get_Border_Roll_ToolTipText_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.UpdateFromRotator
// 0x000C (0x000C - 0x0000)
struct WBP_HFRotatorSpinBox_C_UpdateFromRotator final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_UpdateFromRotator) == 0x000004, "Wrong alignment on WBP_HFRotatorSpinBox_C_UpdateFromRotator");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_UpdateFromRotator) == 0x00000C, "Wrong size on WBP_HFRotatorSpinBox_C_UpdateFromRotator");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_UpdateFromRotator, Rotation) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_UpdateFromRotator::Rotation' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Roll_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Pitch_K2Node_ComponentBoundEvent_1_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_HFRotatorSpinBox_C_BndEvt__SpinBox_Yaw_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_HFRotatorSpinBox_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_HFRotatorSpinBox_C_OnMouseEnter");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_OnMouseEnter) == 0x0000A8, "Wrong size on WBP_HFRotatorSpinBox_C_OnMouseEnter");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_HFRotatorSpinBox_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct WBP_HFRotatorSpinBox_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_HFRotatorSpinBox_C_OnMouseLeave");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_OnMouseLeave) == 0x000070, "Wrong size on WBP_HFRotatorSpinBox_C_OnMouseLeave");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_HFRotatorSpinBox.WBP_HFRotatorSpinBox_C.ExecuteUbergraph_WBP_HFRotatorSpinBox
// 0x0158 (0x0158 - 0x0000)
struct WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_ComponentBoundEvent_InValue_2;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_2;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_1;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_1;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0034(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0070(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00E0(0x0070)(ConstParm)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_2;                  // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_3;                  // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_4;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_5;                  // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox) == 0x000008, "Wrong alignment on WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox");
static_assert(sizeof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox) == 0x000158, "Wrong size on WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, EntryPoint) == 0x000000, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_CustomEvent_Rotation) == 0x000004, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_ComponentBoundEvent_InValue_2) == 0x000010, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_ComponentBoundEvent_InValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_ComponentBoundEvent_CommitMethod_2) == 0x000014, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_ComponentBoundEvent_CommitMethod_2' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_ComponentBoundEvent_InValue_1) == 0x000024, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_ComponentBoundEvent_InValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_ComponentBoundEvent_CommitMethod_1) == 0x000028, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_ComponentBoundEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_ComponentBoundEvent_InValue) == 0x00002C, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_ComponentBoundEvent_InValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_ComponentBoundEvent_CommitMethod) == 0x000030, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_Event_MyGeometry) == 0x000034, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_Event_MouseEvent_1) == 0x000070, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, K2Node_Event_MouseEvent) == 0x0000E0, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_IsHovered_ReturnValue) == 0x000150, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_IsHovered_ReturnValue_1) == 0x000151, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_IsHovered_ReturnValue_2) == 0x000152, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_IsHovered_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_IsHovered_ReturnValue_3) == 0x000153, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_IsHovered_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_IsHovered_ReturnValue_4) == 0x000154, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_IsHovered_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox, CallFunc_IsHovered_ReturnValue_5) == 0x000155, "Member 'WBP_HFRotatorSpinBox_C_ExecuteUbergraph_WBP_HFRotatorSpinBox::CallFunc_IsHovered_ReturnValue_5' has a wrong offset!");

}

