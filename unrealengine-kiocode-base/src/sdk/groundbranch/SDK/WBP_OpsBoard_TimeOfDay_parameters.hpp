#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OpsBoard_TimeOfDay

#include "Basic.hpp"

#include "ModKit_structs.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function WBP_OpsBoard_TimeOfDay.WBP_OpsBoard_TimeOfDay_C.ExecuteUbergraph_WBP_OpsBoard_TimeOfDay
// 0x0138 (0x0138 - 0x0000)
struct WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUInt64                                CallFunc_MakeModIDForGame_ReturnValue;             // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalisedGameText_ReturnValue;         // 0x0038(0x0018)()
	class FString                                 CallFunc_GetTimeOfDayString_ReturnValue;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0060(0x0018)()
	class FText                                   CallFunc_GetTimeOfDayDisplayStringAsText_ReturnValue; // 0x0078(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBSky*                                 K2Node_CustomEvent_SkyActor;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionTimeLabel                             CallFunc_DecodeTimeOfDayString_OutMissionTimeLabel; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DecodeTimeOfDayString_OutTimeInHours;     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DecodeTimeOfDayString_OutYear;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DecodeTimeOfDayString_OutMonth;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DecodeTimeOfDayString_OutDay;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGBSky*                                 CallFunc_GetSkyActor_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGBSky* SkyActor)>       K2Node_CreateDelegate_OutputDelegate;              // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	struct FUInt64                                CallFunc_MakeModIDForGame_ReturnValue_1;           // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetStringTableEntryOrDisplayString_ReturnValue; // 0x00F0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0108(0x0018)(ConstParm)
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0120(0x0018)()
};
static_assert(alignof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay) == 0x000008, "Wrong alignment on WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay");
static_assert(sizeof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay) == 0x000138, "Wrong size on WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, EntryPoint) == 0x000000, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_MakeModIDForGame_ReturnValue) == 0x000008, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_MakeModIDForGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, Temp_bool_Variable) == 0x000010, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, K2Node_DynamicCast_AsGBGame_State) == 0x000028, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_GetLocalisedGameText_ReturnValue) == 0x000038, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_GetLocalisedGameText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_GetTimeOfDayString_ReturnValue) == 0x000050, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_GetTimeOfDayString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_TextToUpper_ReturnValue) == 0x000060, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_GetTimeOfDayDisplayStringAsText_ReturnValue) == 0x000078, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_GetTimeOfDayDisplayStringAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, K2Node_CustomEvent_SkyActor) == 0x000098, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::K2Node_CustomEvent_SkyActor' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_PlayAnimation_ReturnValue) == 0x0000A0, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_DecodeTimeOfDayString_OutMissionTimeLabel) == 0x0000A8, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_DecodeTimeOfDayString_OutMissionTimeLabel' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_DecodeTimeOfDayString_OutTimeInHours) == 0x0000AC, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_DecodeTimeOfDayString_OutTimeInHours' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_DecodeTimeOfDayString_OutYear) == 0x0000B0, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_DecodeTimeOfDayString_OutYear' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_DecodeTimeOfDayString_OutMonth) == 0x0000B4, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_DecodeTimeOfDayString_OutMonth' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_DecodeTimeOfDayString_OutDay) == 0x0000B8, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_DecodeTimeOfDayString_OutDay' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000BC, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000C0, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_GetSkyActor_ReturnValue) == 0x0000D0, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_GetSkyActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_MakeModIDForGame_ReturnValue_1) == 0x0000E8, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_MakeModIDForGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_GetStringTableEntryOrDisplayString_ReturnValue) == 0x0000F0, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_GetStringTableEntryOrDisplayString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, K2Node_Select_Default) == 0x000108, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay, CallFunc_TextToUpper_ReturnValue_1) == 0x000120, "Member 'WBP_OpsBoard_TimeOfDay_C_ExecuteUbergraph_WBP_OpsBoard_TimeOfDay::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");

// Function WBP_OpsBoard_TimeOfDay.WBP_OpsBoard_TimeOfDay_C.OnInitialTimeOfDayChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct WBP_OpsBoard_TimeOfDay_C_OnInitialTimeOfDayChanged_Event_0 final
{
public:
	class AGBSky*                                 SkyActor_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OpsBoard_TimeOfDay_C_OnInitialTimeOfDayChanged_Event_0) == 0x000008, "Wrong alignment on WBP_OpsBoard_TimeOfDay_C_OnInitialTimeOfDayChanged_Event_0");
static_assert(sizeof(WBP_OpsBoard_TimeOfDay_C_OnInitialTimeOfDayChanged_Event_0) == 0x000008, "Wrong size on WBP_OpsBoard_TimeOfDay_C_OnInitialTimeOfDayChanged_Event_0");
static_assert(offsetof(WBP_OpsBoard_TimeOfDay_C_OnInitialTimeOfDayChanged_Event_0, SkyActor_0) == 0x000000, "Member 'WBP_OpsBoard_TimeOfDay_C_OnInitialTimeOfDayChanged_Event_0::SkyActor_0' has a wrong offset!");

}

