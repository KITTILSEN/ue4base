#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InsertionPoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InsertionPoint.WBP_InsertionPoint_C
// 0x00C8 (0x0328 - 0x0260)
class UWBP_InsertionPoint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Spin;                                              // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Bob;                                               // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pulse;                                             // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Border;                                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_InsertionPoint;                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DropShadow_Arrow;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DropShadow_Background;                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InsertionPoint_Arrow;                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InsertionPoint_Shadow;                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGBInsertionPoint*                      InsertionPointRef;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_Minimap_Origin_C*                   MinimapOriginRef;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bSideView;                                         // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PointCanvasPosition;                               // 0x02C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InsertionPoint_Name_C*             InsertionPointName;                                // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_InsertionPoint_Players_C*          InsertionPointPlayers;                             // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NormalArrowColour;                                 // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredArrowColour;                                // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NormalShadowColour;                                // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredShadowColour;                               // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPositionIsReversed;                               // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReversedPositionYThreshold;                        // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_InsertionPoint(int32 EntryPoint);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BndEvt__WBP_InsertionPoint_InsertionPoint_Arrow_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature();
	void Destruct();
	void AddPoint();
	void AddPlayers();
	void AddName();
	void Construct();
	struct FLinearColor GetInsertionPointArrowColorAndOpacity();
	struct FLinearColor GetInsertionPointShadowColorAndOpacity();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InsertionPoint_C">();
	}
	static class UWBP_InsertionPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InsertionPoint_C>();
	}
};
static_assert(alignof(UWBP_InsertionPoint_C) == 0x000008, "Wrong alignment on UWBP_InsertionPoint_C");
static_assert(sizeof(UWBP_InsertionPoint_C) == 0x000328, "Wrong size on UWBP_InsertionPoint_C");
static_assert(offsetof(UWBP_InsertionPoint_C, UberGraphFrame) == 0x000260, "Member 'UWBP_InsertionPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, Spin) == 0x000268, "Member 'UWBP_InsertionPoint_C::Spin' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, Bob) == 0x000270, "Member 'UWBP_InsertionPoint_C::Bob' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, Pulse) == 0x000278, "Member 'UWBP_InsertionPoint_C::Pulse' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, Border) == 0x000280, "Member 'UWBP_InsertionPoint_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, Button_InsertionPoint) == 0x000288, "Member 'UWBP_InsertionPoint_C::Button_InsertionPoint' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, DropShadow_Arrow) == 0x000290, "Member 'UWBP_InsertionPoint_C::DropShadow_Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, DropShadow_Background) == 0x000298, "Member 'UWBP_InsertionPoint_C::DropShadow_Background' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, InsertionPoint_Arrow) == 0x0002A0, "Member 'UWBP_InsertionPoint_C::InsertionPoint_Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, InsertionPoint_Shadow) == 0x0002A8, "Member 'UWBP_InsertionPoint_C::InsertionPoint_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, InsertionPointRef) == 0x0002B0, "Member 'UWBP_InsertionPoint_C::InsertionPointRef' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, MinimapOriginRef) == 0x0002B8, "Member 'UWBP_InsertionPoint_C::MinimapOriginRef' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, TeamId) == 0x0002C0, "Member 'UWBP_InsertionPoint_C::TeamId' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, bSideView) == 0x0002C1, "Member 'UWBP_InsertionPoint_C::bSideView' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, PointCanvasPosition) == 0x0002C4, "Member 'UWBP_InsertionPoint_C::PointCanvasPosition' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, InsertionPointName) == 0x0002D0, "Member 'UWBP_InsertionPoint_C::InsertionPointName' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, InsertionPointPlayers) == 0x0002D8, "Member 'UWBP_InsertionPoint_C::InsertionPointPlayers' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, NormalArrowColour) == 0x0002E0, "Member 'UWBP_InsertionPoint_C::NormalArrowColour' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, HoveredArrowColour) == 0x0002F0, "Member 'UWBP_InsertionPoint_C::HoveredArrowColour' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, NormalShadowColour) == 0x000300, "Member 'UWBP_InsertionPoint_C::NormalShadowColour' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, HoveredShadowColour) == 0x000310, "Member 'UWBP_InsertionPoint_C::HoveredShadowColour' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, bPositionIsReversed) == 0x000320, "Member 'UWBP_InsertionPoint_C::bPositionIsReversed' has a wrong offset!");
static_assert(offsetof(UWBP_InsertionPoint_C, ReversedPositionYThreshold) == 0x000324, "Member 'UWBP_InsertionPoint_C::ReversedPositionYThreshold' has a wrong offset!");

}

