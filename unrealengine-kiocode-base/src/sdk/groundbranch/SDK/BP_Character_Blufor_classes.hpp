#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_Blufor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Character_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Character_Blufor.BP_Character_Blufor_C
// 0x0030 (0x0E10 - 0x0DE0)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_Character_Blufor_C : public ABP_Character_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Character_Blufor_C;              // 0x0DE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FPrimaryAssetId                        WatchId;                                           // 0x0DE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        TabletId;                                          // 0x0DF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Character_Blufor(int32 EntryPoint);
	void AddDefaultItemsEvent();
	void ReceivePossessed(class AController* NewController);
	void Completed_3EC7DF01B6864D5FA3D612FE0199D784(TSubclassOf<class UObject> Loaded);
	void Completed_2FAE710774BD4C5E93D701AF85FD1AF1(TSubclassOf<class UObject> Loaded);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Character_Blufor_C">();
	}
	static class ABP_Character_Blufor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Character_Blufor_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_Character_Blufor_C) == 0x000010, "Wrong alignment on ABP_Character_Blufor_C");
static_assert(sizeof(ABP_Character_Blufor_C) == 0x000E10, "Wrong size on ABP_Character_Blufor_C");
static_assert(offsetof(ABP_Character_Blufor_C, UberGraphFrame_BP_Character_Blufor_C) == 0x000DE0, "Member 'ABP_Character_Blufor_C::UberGraphFrame_BP_Character_Blufor_C' has a wrong offset!");
static_assert(offsetof(ABP_Character_Blufor_C, WatchId) == 0x000DE8, "Member 'ABP_Character_Blufor_C::WatchId' has a wrong offset!");
static_assert(offsetof(ABP_Character_Blufor_C, TabletId) == 0x000DF8, "Member 'ABP_Character_Blufor_C::TabletId' has a wrong offset!");

}

