#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HF_Editor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HF_Editor.WBP_HF_Editor_C
// 0x0178 (0x03D8 - 0x0260)
class UWBP_HF_Editor_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_LeftResize;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_OverviewDetailsSplit;                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_RightResize;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Tools;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_LeftPanel;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_RightPanel;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_SnapSelectedToFloor;                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Speed;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_GridSnap;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_Rotate;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_Scale;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_ShowBlockAlls;                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_Space;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_Translate;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        ComboBoxString_GridSize;                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        ComboBoxString_Speed;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HF_SelectedDetails_C*              Details;                                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_117;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           LeftContainer;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HF_Outline_C*                      Outline;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RightTabsContainer;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        RightWidgetSwitcher;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HF_TabButton_C*                    TabButton_Overview;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_MessageContainer;                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Overview;                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MaxMessages;                                       // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHFManager*                             HotFootManagerRef;                                 // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                ParentWidget;                                      // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActorTag;                                          // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   RenameTitle;                                       // 0x0358(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   RenameMessage;                                     // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 RenameFilename;                                    // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   RenameFailedTitle;                                 // 0x0398(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   RenameFailedMessage;                               // 0x03B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bResizeLeft;                                       // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeftSize;                                          // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResizeRight;                                      // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RightSize;                                         // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetInitialRenameFilename();
	void UpdateRightPanelSize();
	struct FEventReply OnBorderRightResizeMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnBorderRightResizeMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnBorderRightResizeMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void UpdateLeftPanelSize();
	struct FEventReply OnBorderLeftResizeMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnBorderLeftResizeMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnBorderLeftResizeMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnToolNotificationMessage_Event_1(const class FText& Message);
	void BndEvt__CheckBox_Translate_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__CheckBox_Rotate_K2Node_ComponentBoundEvent_4_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__CheckBox_Scale_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__CheckBox_Space_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__Button_RightPanel_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_RightPanel_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature();
	void BindToolNotification();
	void ShowRenamePrompt();
	void OnOkClicked_Event_0(const class FString& Filename);
	void OnOkClicked_Event_1(class UWBP_DialogueBox_C* Dialogue);
	void BndEvt__ComboBoxString_108_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__CheckBox_GridSnap_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__Button_LeftPanel_K2Node_ComponentBoundEvent_8_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_LeftPanel_K2Node_ComponentBoundEvent_9_OnButtonHoverEvent__DelegateSignature();
	void Setup(class AHFManager* HotFootManagerRef_0);
	void BndEvt__Outline_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature();
	void BindRenameSelected();
	void OnRenameSelected_Event_0();
	void BndEvt__ComboBoxString_GridSize_1_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature();
	void UpdateSpeedCombo();
	void BndEvt__WBP_HF_Editor_Plant_Actor_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_HF_Editor_CheckBox_ShowBlockAlls_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_HF_Editor_TabButton_Overview_K2Node_ComponentBoundEvent_16_OnTabClicked__DelegateSignature();
	void SelectTranslateGizmo();
	void SelectRotateGizmo();
	void SelectScaleGizmo();
	void BindChangeSpeed();
	void OnSpeedChangeRequested_Event_0(int32 Direction);
	void OnPlayerInputChanged_Event_0(bool bPlayerInputEnabled);
	void BindPlayerInputChanged();
	void ExecuteUbergraph_WBP_HF_Editor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HF_Editor_C">();
	}
	static class UWBP_HF_Editor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HF_Editor_C>();
	}
};
static_assert(alignof(UWBP_HF_Editor_C) == 0x000008, "Wrong alignment on UWBP_HF_Editor_C");
static_assert(sizeof(UWBP_HF_Editor_C) == 0x0003D8, "Wrong size on UWBP_HF_Editor_C");
static_assert(offsetof(UWBP_HF_Editor_C, UberGraphFrame) == 0x000260, "Member 'UWBP_HF_Editor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Border_LeftResize) == 0x000268, "Member 'UWBP_HF_Editor_C::Border_LeftResize' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Border_OverviewDetailsSplit) == 0x000270, "Member 'UWBP_HF_Editor_C::Border_OverviewDetailsSplit' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Border_RightResize) == 0x000278, "Member 'UWBP_HF_Editor_C::Border_RightResize' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Border_Tools) == 0x000280, "Member 'UWBP_HF_Editor_C::Border_Tools' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Button_LeftPanel) == 0x000288, "Member 'UWBP_HF_Editor_C::Button_LeftPanel' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Button_RightPanel) == 0x000290, "Member 'UWBP_HF_Editor_C::Button_RightPanel' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Button_SnapSelectedToFloor) == 0x000298, "Member 'UWBP_HF_Editor_C::Button_SnapSelectedToFloor' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Button_Speed) == 0x0002A0, "Member 'UWBP_HF_Editor_C::Button_Speed' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, CanvasPanel_0) == 0x0002A8, "Member 'UWBP_HF_Editor_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, CheckBox_GridSnap) == 0x0002B0, "Member 'UWBP_HF_Editor_C::CheckBox_GridSnap' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, CheckBox_Rotate) == 0x0002B8, "Member 'UWBP_HF_Editor_C::CheckBox_Rotate' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, CheckBox_Scale) == 0x0002C0, "Member 'UWBP_HF_Editor_C::CheckBox_Scale' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, CheckBox_ShowBlockAlls) == 0x0002C8, "Member 'UWBP_HF_Editor_C::CheckBox_ShowBlockAlls' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, CheckBox_Space) == 0x0002D0, "Member 'UWBP_HF_Editor_C::CheckBox_Space' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, CheckBox_Translate) == 0x0002D8, "Member 'UWBP_HF_Editor_C::CheckBox_Translate' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, ComboBoxString_GridSize) == 0x0002E0, "Member 'UWBP_HF_Editor_C::ComboBoxString_GridSize' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, ComboBoxString_Speed) == 0x0002E8, "Member 'UWBP_HF_Editor_C::ComboBoxString_Speed' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Details) == 0x0002F0, "Member 'UWBP_HF_Editor_C::Details' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Image_117) == 0x0002F8, "Member 'UWBP_HF_Editor_C::Image_117' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, LeftContainer) == 0x000300, "Member 'UWBP_HF_Editor_C::LeftContainer' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, Outline) == 0x000308, "Member 'UWBP_HF_Editor_C::Outline' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, RightTabsContainer) == 0x000310, "Member 'UWBP_HF_Editor_C::RightTabsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, RightWidgetSwitcher) == 0x000318, "Member 'UWBP_HF_Editor_C::RightWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, TabButton_Overview) == 0x000320, "Member 'UWBP_HF_Editor_C::TabButton_Overview' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, VerticalBox_MessageContainer) == 0x000328, "Member 'UWBP_HF_Editor_C::VerticalBox_MessageContainer' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, VerticalBox_Overview) == 0x000330, "Member 'UWBP_HF_Editor_C::VerticalBox_Overview' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, MaxMessages) == 0x000338, "Member 'UWBP_HF_Editor_C::MaxMessages' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, HotFootManagerRef) == 0x000340, "Member 'UWBP_HF_Editor_C::HotFootManagerRef' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, ParentWidget) == 0x000348, "Member 'UWBP_HF_Editor_C::ParentWidget' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, ActorTag) == 0x000350, "Member 'UWBP_HF_Editor_C::ActorTag' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, RenameTitle) == 0x000358, "Member 'UWBP_HF_Editor_C::RenameTitle' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, RenameMessage) == 0x000370, "Member 'UWBP_HF_Editor_C::RenameMessage' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, RenameFilename) == 0x000388, "Member 'UWBP_HF_Editor_C::RenameFilename' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, RenameFailedTitle) == 0x000398, "Member 'UWBP_HF_Editor_C::RenameFailedTitle' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, RenameFailedMessage) == 0x0003B0, "Member 'UWBP_HF_Editor_C::RenameFailedMessage' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, bResizeLeft) == 0x0003C8, "Member 'UWBP_HF_Editor_C::bResizeLeft' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, LeftSize) == 0x0003CC, "Member 'UWBP_HF_Editor_C::LeftSize' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, bResizeRight) == 0x0003D0, "Member 'UWBP_HF_Editor_C::bResizeRight' has a wrong offset!");
static_assert(offsetof(UWBP_HF_Editor_C, RightSize) == 0x0003D4, "Member 'UWBP_HF_Editor_C::RightSize' has a wrong offset!");

}

