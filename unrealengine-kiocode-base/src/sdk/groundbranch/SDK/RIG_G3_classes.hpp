#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RIG_G3

#include "Basic.hpp"

#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass RIG_G3.RIG_G3_C
// 0x0010 (0x0660 - 0x0650)
class URIG_G3_C final : public UControlRig
{
public:
	bool                                          bLocallyViewed;                                    // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RearSightHeightOffset;                             // 0x0654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrontSightPostHeightOffset;                        // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SafetyAngle;                                       // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RIG_G3_C">();
	}
	static class URIG_G3_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URIG_G3_C>();
	}
};
static_assert(alignof(URIG_G3_C) == 0x000008, "Wrong alignment on URIG_G3_C");
static_assert(sizeof(URIG_G3_C) == 0x000660, "Wrong size on URIG_G3_C");
static_assert(offsetof(URIG_G3_C, bLocallyViewed) == 0x000650, "Member 'URIG_G3_C::bLocallyViewed' has a wrong offset!");
static_assert(offsetof(URIG_G3_C, RearSightHeightOffset) == 0x000654, "Member 'URIG_G3_C::RearSightHeightOffset' has a wrong offset!");
static_assert(offsetof(URIG_G3_C, FrontSightPostHeightOffset) == 0x000658, "Member 'URIG_G3_C::FrontSightPostHeightOffset' has a wrong offset!");
static_assert(offsetof(URIG_G3_C, SafetyAngle) == 0x00065C, "Member 'URIG_G3_C::SafetyAngle' has a wrong offset!");

}

