#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Helmet_OpsCore_N

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Helmet_OpsCore_N.BP_Helmet_OpsCore_N_C.ExecuteUbergraph_BP_Helmet_OpsCore_N
// 0x0020 (0x0020 - 0x0000)
struct BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             K2Node_Event_AddedChild;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NVG_Master_C*                       K2Node_DynamicCast_AsBP_NVG_Master;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N) == 0x000008, "Wrong alignment on BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N");
static_assert(sizeof(BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N) == 0x000020, "Wrong size on BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N");
static_assert(offsetof(BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N, EntryPoint) == 0x000000, "Member 'BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N, K2Node_Event_AddedChild) == 0x000008, "Member 'BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N::K2Node_Event_AddedChild' has a wrong offset!");
static_assert(offsetof(BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N, K2Node_DynamicCast_AsBP_NVG_Master) == 0x000010, "Member 'BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N::K2Node_DynamicCast_AsBP_NVG_Master' has a wrong offset!");
static_assert(offsetof(BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Helmet_OpsCore_N_C_ExecuteUbergraph_BP_Helmet_OpsCore_N::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Helmet_OpsCore_N.BP_Helmet_OpsCore_N_C.OnAddingChild
// 0x0008 (0x0008 - 0x0000)
struct BP_Helmet_OpsCore_N_C_OnAddingChild final
{
public:
	class AGBInvItem*                             AddedChild;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Helmet_OpsCore_N_C_OnAddingChild) == 0x000008, "Wrong alignment on BP_Helmet_OpsCore_N_C_OnAddingChild");
static_assert(sizeof(BP_Helmet_OpsCore_N_C_OnAddingChild) == 0x000008, "Wrong size on BP_Helmet_OpsCore_N_C_OnAddingChild");
static_assert(offsetof(BP_Helmet_OpsCore_N_C_OnAddingChild, AddedChild) == 0x000000, "Member 'BP_Helmet_OpsCore_N_C_OnAddingChild::AddedChild' has a wrong offset!");

}

