#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RadialMenu_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_RadialMenu_Entry.WBP_RadialMenu_Entry_C
// 0x00A0 (0x0300 - 0x0260)
class UWBP_RadialMenu_Entry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Icon;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_24;                                      // 0x0270(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0278(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         Index_0;                                           // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              IconAsset;                                         // 0x0298(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           HighlightedColour;                                 // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColour;                                     // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHighlight;                                        // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 Index)>   OnSelected;                                        // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Angle;                                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HalfAngleChangePerEntry;                           // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_RadialMenu_Entry(int32 EntryPoint);
	void CustomEvent_0(class UObject* LoadedAsset);
	void CheckSelect(float InSelectAngle);
	void Setup(float InAngle, float InAngleChangePerEntry);
	void Select();
	void Construct();
	struct FLinearColor GetImageSliceColorAndOpacity();
	void CanSelect(float AngleDegrees, bool* OutResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_RadialMenu_Entry_C">();
	}
	static class UWBP_RadialMenu_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_RadialMenu_Entry_C>();
	}
};
static_assert(alignof(UWBP_RadialMenu_Entry_C) == 0x000008, "Wrong alignment on UWBP_RadialMenu_Entry_C");
static_assert(sizeof(UWBP_RadialMenu_Entry_C) == 0x000300, "Wrong size on UWBP_RadialMenu_Entry_C");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, UberGraphFrame) == 0x000260, "Member 'UWBP_RadialMenu_Entry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, Image_Icon) == 0x000268, "Member 'UWBP_RadialMenu_Entry_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, TextBlock_24) == 0x000270, "Member 'UWBP_RadialMenu_Entry_C::TextBlock_24' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, Text) == 0x000278, "Member 'UWBP_RadialMenu_Entry_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, Index_0) == 0x000290, "Member 'UWBP_RadialMenu_Entry_C::Index_0' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, IconAsset) == 0x000298, "Member 'UWBP_RadialMenu_Entry_C::IconAsset' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, HighlightedColour) == 0x0002C0, "Member 'UWBP_RadialMenu_Entry_C::HighlightedColour' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, DefaultColour) == 0x0002D0, "Member 'UWBP_RadialMenu_Entry_C::DefaultColour' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, bHighlight) == 0x0002E0, "Member 'UWBP_RadialMenu_Entry_C::bHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, OnSelected) == 0x0002E8, "Member 'UWBP_RadialMenu_Entry_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, Angle) == 0x0002F8, "Member 'UWBP_RadialMenu_Entry_C::Angle' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenu_Entry_C, HalfAngleChangePerEntry) == 0x0002FC, "Member 'UWBP_RadialMenu_Entry_C::HalfAngleChangePerEntry' has a wrong offset!");

}

