#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpectatorMinimap_PlayerBlips

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SpectatorMinimap_PlayerBlips.WBP_SpectatorMinimap_PlayerBlips_C
// 0x0090 (0x02F0 - 0x0260)
class UWBP_SpectatorMinimap_PlayerBlips_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Inner;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Outer;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_Minimap_Origin_C*                   MinimapOriginReference;                            // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         ViewersTeamId;                                     // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              InfoCanvasPosition;                                // 0x0284(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         PlayerState;                                       // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateColor                            HoveredOuter;                                      // 0x0298(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            NormalOuter;                                       // 0x02C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bShowAllTeams;                                     // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void UpdatePosition();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void ExecuteUbergraph_WBP_SpectatorMinimap_PlayerBlips(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SpectatorMinimap_PlayerBlips_C">();
	}
	static class UWBP_SpectatorMinimap_PlayerBlips_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SpectatorMinimap_PlayerBlips_C>();
	}
};
static_assert(alignof(UWBP_SpectatorMinimap_PlayerBlips_C) == 0x000008, "Wrong alignment on UWBP_SpectatorMinimap_PlayerBlips_C");
static_assert(sizeof(UWBP_SpectatorMinimap_PlayerBlips_C) == 0x0002F0, "Wrong size on UWBP_SpectatorMinimap_PlayerBlips_C");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, UberGraphFrame) == 0x000260, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, Image_Inner) == 0x000268, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::Image_Inner' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, Image_Outer) == 0x000270, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::Image_Outer' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, MinimapOriginReference) == 0x000278, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::MinimapOriginReference' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, ViewersTeamId) == 0x000280, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::ViewersTeamId' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, InfoCanvasPosition) == 0x000284, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::InfoCanvasPosition' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, PlayerState) == 0x000290, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, HoveredOuter) == 0x000298, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::HoveredOuter' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, NormalOuter) == 0x0002C0, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::NormalOuter' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorMinimap_PlayerBlips_C, bShowAllTeams) == 0x0002E8, "Member 'UWBP_SpectatorMinimap_PlayerBlips_C::bShowAllTeams' has a wrong offset!");

}

