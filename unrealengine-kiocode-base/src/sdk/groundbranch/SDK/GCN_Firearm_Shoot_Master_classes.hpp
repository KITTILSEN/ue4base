#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Firearm_Shoot_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_Firearm_Shoot_Master.GCN_Firearm_Shoot_Master_C
// 0x00A8 (0x0328 - 0x0280)
class AGCN_Firearm_Shoot_Master_C : public AGameplayCueNotify_Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   StopFirstPersonSoundName;                          // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StopThirdPersonSoundName;                          // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           GBCharacter;                                       // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBFirearm*                             Firearm;                                           // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGBBarrelComponent*                     BarrelComp;                                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGBEjectComponent*                      EjectComp;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SemiFirstPersonSoundName;                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SemiThirdPersonSoundName;                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         EjectionFXTemplate;                                // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         MuzzleFlashFXTemplate;                             // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FiringSoundTimer;                                  // 0x02E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   LoopingFirstPersonSoundName;                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LoopingThirdPersonSoundName;                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBMuzzleDevice*                        MuzzleDevice;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharacterRecoilMontageName;                        // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FireMontageSection;                                // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LastRoundMontageSection;                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EjectionEffectName;                                // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MuzzleFlashEffectName;                             // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCN_Firearm_Shoot_Master(int32 EntryPoint);
	void UnbindOnRecoilCountUpdated();
	void AddRecoil();
	void PlayAnimation(class FName StartSectionName);
	void OnRecoilCountUpdated_Event_0(class AGBCharacter* Character);
	void BindOnRecoilCountUpdated();
	void SpawnEffects();
	void PlayFiringSound();
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_Firearm_Shoot_Master_C">();
	}
	static class AGCN_Firearm_Shoot_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_Firearm_Shoot_Master_C>();
	}
};
static_assert(alignof(AGCN_Firearm_Shoot_Master_C) == 0x000008, "Wrong alignment on AGCN_Firearm_Shoot_Master_C");
static_assert(sizeof(AGCN_Firearm_Shoot_Master_C) == 0x000328, "Wrong size on AGCN_Firearm_Shoot_Master_C");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, UberGraphFrame) == 0x000280, "Member 'AGCN_Firearm_Shoot_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, DefaultSceneRoot) == 0x000288, "Member 'AGCN_Firearm_Shoot_Master_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, StopFirstPersonSoundName) == 0x000290, "Member 'AGCN_Firearm_Shoot_Master_C::StopFirstPersonSoundName' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, StopThirdPersonSoundName) == 0x000298, "Member 'AGCN_Firearm_Shoot_Master_C::StopThirdPersonSoundName' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, GBCharacter) == 0x0002A0, "Member 'AGCN_Firearm_Shoot_Master_C::GBCharacter' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, Firearm) == 0x0002A8, "Member 'AGCN_Firearm_Shoot_Master_C::Firearm' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, BarrelComp) == 0x0002B0, "Member 'AGCN_Firearm_Shoot_Master_C::BarrelComp' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, EjectComp) == 0x0002B8, "Member 'AGCN_Firearm_Shoot_Master_C::EjectComp' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, SemiFirstPersonSoundName) == 0x0002C0, "Member 'AGCN_Firearm_Shoot_Master_C::SemiFirstPersonSoundName' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, SemiThirdPersonSoundName) == 0x0002C8, "Member 'AGCN_Firearm_Shoot_Master_C::SemiThirdPersonSoundName' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, EjectionFXTemplate) == 0x0002D0, "Member 'AGCN_Firearm_Shoot_Master_C::EjectionFXTemplate' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, MuzzleFlashFXTemplate) == 0x0002D8, "Member 'AGCN_Firearm_Shoot_Master_C::MuzzleFlashFXTemplate' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, FiringSoundTimer) == 0x0002E0, "Member 'AGCN_Firearm_Shoot_Master_C::FiringSoundTimer' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, LoopingFirstPersonSoundName) == 0x0002E8, "Member 'AGCN_Firearm_Shoot_Master_C::LoopingFirstPersonSoundName' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, LoopingThirdPersonSoundName) == 0x0002F0, "Member 'AGCN_Firearm_Shoot_Master_C::LoopingThirdPersonSoundName' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, MuzzleDevice) == 0x0002F8, "Member 'AGCN_Firearm_Shoot_Master_C::MuzzleDevice' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, CharacterRecoilMontageName) == 0x000300, "Member 'AGCN_Firearm_Shoot_Master_C::CharacterRecoilMontageName' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, FireMontageSection) == 0x000308, "Member 'AGCN_Firearm_Shoot_Master_C::FireMontageSection' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, LastRoundMontageSection) == 0x000310, "Member 'AGCN_Firearm_Shoot_Master_C::LastRoundMontageSection' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, EjectionEffectName) == 0x000318, "Member 'AGCN_Firearm_Shoot_Master_C::EjectionEffectName' has a wrong offset!");
static_assert(offsetof(AGCN_Firearm_Shoot_Master_C, MuzzleFlashEffectName) == 0x000320, "Member 'AGCN_Firearm_Shoot_Master_C::MuzzleFlashEffectName' has a wrong offset!");

}

