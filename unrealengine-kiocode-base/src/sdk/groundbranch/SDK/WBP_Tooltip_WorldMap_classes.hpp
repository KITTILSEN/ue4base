#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Tooltip_WorldMap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Tooltip_WorldMap.WBP_Tooltip_WorldMap_C
// 0x0070 (0x02D0 - 0x0260)
class UWBP_Tooltip_WorldMap_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Flicker;                                           // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PopIn;                                             // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_156;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Coop;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_SP;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_CoopComplete;                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_SPComplete;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ToolTip;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TextToolTip;                                       // 0x02A8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FName                                   HotspotCodename;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MissionSequenceNumber;                             // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void ExecuteUbergraph_WBP_Tooltip_WorldMap(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Tooltip_WorldMap_C">();
	}
	static class UWBP_Tooltip_WorldMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Tooltip_WorldMap_C>();
	}
};
static_assert(alignof(UWBP_Tooltip_WorldMap_C) == 0x000008, "Wrong alignment on UWBP_Tooltip_WorldMap_C");
static_assert(sizeof(UWBP_Tooltip_WorldMap_C) == 0x0002D0, "Wrong size on UWBP_Tooltip_WorldMap_C");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, UberGraphFrame) == 0x000260, "Member 'UWBP_Tooltip_WorldMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, Flicker) == 0x000268, "Member 'UWBP_Tooltip_WorldMap_C::Flicker' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, PopIn) == 0x000270, "Member 'UWBP_Tooltip_WorldMap_C::PopIn' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, Image_156) == 0x000278, "Member 'UWBP_Tooltip_WorldMap_C::Image_156' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, ProgressBar_Coop) == 0x000280, "Member 'UWBP_Tooltip_WorldMap_C::ProgressBar_Coop' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, ProgressBar_SP) == 0x000288, "Member 'UWBP_Tooltip_WorldMap_C::ProgressBar_SP' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, TextBlock_CoopComplete) == 0x000290, "Member 'UWBP_Tooltip_WorldMap_C::TextBlock_CoopComplete' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, TextBlock_SPComplete) == 0x000298, "Member 'UWBP_Tooltip_WorldMap_C::TextBlock_SPComplete' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, TextBlock_ToolTip) == 0x0002A0, "Member 'UWBP_Tooltip_WorldMap_C::TextBlock_ToolTip' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, TextToolTip) == 0x0002A8, "Member 'UWBP_Tooltip_WorldMap_C::TextToolTip' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, HotspotCodename) == 0x0002C0, "Member 'UWBP_Tooltip_WorldMap_C::HotspotCodename' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_WorldMap_C, MissionSequenceNumber) == 0x0002C8, "Member 'UWBP_Tooltip_WorldMap_C::MissionSequenceNumber' has a wrong offset!");

}

