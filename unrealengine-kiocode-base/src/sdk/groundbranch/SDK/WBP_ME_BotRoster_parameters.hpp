#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ME_BotRoster

#include "Basic.hpp"

#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function WBP_ME_BotRoster.WBP_ME_BotRoster_C.SetMissionDataBotDefs
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_ME_BotRoster_C_SetMissionDataBotDefs final
{
public:
	class UGBMissionData*                         InMissionData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_ME_BotDefList_C*>           ExistingBotDefLists;                               // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FGBBotRosterInfo>               LocalBotRoster;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_ME_BotDefList_C*>           CallFunc_GetChildWidgetsOfClass_ChildWidgets;      // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FGBTeamInfo>                    CallFunc_GetPlayerTeamInfos_ReturnValue;           // 0x0060(0x0010)(ReferenceParm)
	struct FGBTeamInfo                            CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ME_BotDefList_C*                   CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetBotDefs_OutDefs;                       // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_BotRoster_C_SetMissionDataBotDefs) == 0x000008, "Wrong alignment on WBP_ME_BotRoster_C_SetMissionDataBotDefs");
static_assert(sizeof(WBP_ME_BotRoster_C_SetMissionDataBotDefs) == 0x0000D0, "Wrong size on WBP_ME_BotRoster_C_SetMissionDataBotDefs");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, InMissionData) == 0x000000, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::InMissionData' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, ExistingBotDefLists) == 0x000008, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::ExistingBotDefLists' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, LocalBotRoster) == 0x000018, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::LocalBotRoster' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Conv_IntToByte_ReturnValue) == 0x000030, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, K2Node_DynamicCast_AsGBGame_State) == 0x000040, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_GetChildWidgetsOfClass_ChildWidgets) == 0x000050, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_GetChildWidgetsOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_GetPlayerTeamInfos_ReturnValue) == 0x000060, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_GetPlayerTeamInfos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, Temp_bool_True_if_break_was_hit_Variable) == 0x00008D, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Not_PreBool_ReturnValue) == 0x000094, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000AC, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AD, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_GetBotDefs_OutDefs) == 0x0000B0, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_GetBotDefs_OutDefs' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_SetMissionDataBotDefs, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C8, "Member 'WBP_ME_BotRoster_C_SetMissionDataBotDefs::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WBP_ME_BotRoster.WBP_ME_BotRoster_C.GetMissionDataBotDefs
// 0x0078 (0x0078 - 0x0000)
struct WBP_ME_BotRoster_C_GetMissionDataBotDefs final
{
public:
	uint8                                         TeamId;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         OutBotDefs;                                        // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         LocalBotDefs;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	uint8                                         LocalTeamId;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameMode*                            K2Node_DynamicCast_AsGBGame_Mode;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBBotRosterInfo                       CallFunc_Array_Get_Item;                           // 0x0058(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_BotRoster_C_GetMissionDataBotDefs) == 0x000008, "Wrong alignment on WBP_ME_BotRoster_C_GetMissionDataBotDefs");
static_assert(sizeof(WBP_ME_BotRoster_C_GetMissionDataBotDefs) == 0x000078, "Wrong size on WBP_ME_BotRoster_C_GetMissionDataBotDefs");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, TeamId) == 0x000000, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::TeamId' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, OutBotDefs) == 0x000008, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::OutBotDefs' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, LocalBotDefs) == 0x000018, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::LocalBotDefs' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, LocalTeamId) == 0x000028, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::LocalTeamId' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_GetGameMode_ReturnValue) == 0x000040, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, K2Node_DynamicCast_AsGBGame_Mode) == 0x000048, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::K2Node_DynamicCast_AsGBGame_Mode' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_BooleanAND_ReturnValue) == 0x000075, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_GetMissionDataBotDefs, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000076, "Member 'WBP_ME_BotRoster_C_GetMissionDataBotDefs::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_ME_BotRoster.WBP_ME_BotRoster_C.Update
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_ME_BotRoster_C_Update final
{
public:
	class UWBP_ME_BotDefList_C*                   BotDefList;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_ME_BotDefList_C*>           ExistingBotDefLists;                               // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FGBTeamInfo>                    LocalTeams;                                        // 0x0018(0x0010)(Edit, BlueprintVisible)
	class AGBGameState*                           LocalGameState;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetMissionDataBotDefs_OutBotDefs;         // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_ME_BotDefList_C*>           CallFunc_GetChildWidgetsOfClass_ChildWidgets;      // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ME_BotDefList_C*                   CallFunc_Create_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ME_BotDefList_C*                   CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGBTeamInfo>                    CallFunc_GetPlayerTeamInfos_ReturnValue;           // 0x00F0(0x0010)(ReferenceParm)
	struct FGBTeamInfo                            CallFunc_Array_Get_Item_1;                         // 0x0100(0x0018)(NoDestructor)
	int32                                         CallFunc_GetPlayerTeamCount_ReturnValue;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGBTeamInfo>                    CallFunc_GetPlayerTeamInfos_ReturnValue_1;         // 0x0128(0x0010)(ReferenceParm)
	struct FGBTeamInfo                            CallFunc_Array_Get_Item_2;                         // 0x0138(0x0018)(NoDestructor)
	struct FGBTeamInfo                            CallFunc_GetPlayerTeamInfo_ReturnValue;            // 0x0150(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ME_BotDefList_C*                   CallFunc_Array_Get_Item_3;                         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGBTeamInfo                            CallFunc_Array_Get_Item_4;                         // 0x0180(0x0018)(NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_BotRoster_C_Update) == 0x000008, "Wrong alignment on WBP_ME_BotRoster_C_Update");
static_assert(sizeof(WBP_ME_BotRoster_C_Update) == 0x0001B0, "Wrong size on WBP_ME_BotRoster_C_Update");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, BotDefList) == 0x000000, "Member 'WBP_ME_BotRoster_C_Update::BotDefList' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, ExistingBotDefLists) == 0x000008, "Member 'WBP_ME_BotRoster_C_Update::ExistingBotDefLists' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, LocalTeams) == 0x000018, "Member 'WBP_ME_BotRoster_C_Update::LocalTeams' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, LocalGameState) == 0x000028, "Member 'WBP_ME_BotRoster_C_Update::LocalGameState' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, K2Node_DynamicCast_AsGBGame_State) == 0x000050, "Member 'WBP_ME_BotRoster_C_Update::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_ME_BotRoster_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_bool_True_if_break_was_hit_Variable) == 0x000060, "Member 'WBP_ME_BotRoster_C_Update::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Array_Index_Variable) == 0x000064, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Loop_Counter_Variable_2) == 0x00006C, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Array_Index_Variable_2) == 0x00007C, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Loop_Counter_Variable_3) == 0x000080, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Conv_IntToByte_ReturnValue) == 0x000084, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_GetMissionDataBotDefs_OutBotDefs) == 0x000090, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_GetMissionDataBotDefs_OutBotDefs' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000A4, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Array_Index_Variable_3) == 0x0000A8, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_GetChildWidgetsOfClass_ChildWidgets) == 0x0000B0, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_GetChildWidgetsOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Loop_Counter_Variable_4) == 0x0000C0, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000C4, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_int_Array_Index_Variable_4) == 0x0000C8, "Member 'WBP_ME_BotRoster_C_Update::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Create_ReturnValue) == 0x0000D0, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x0000E5, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E6, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000E7, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000E8, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_GetPlayerTeamInfos_ReturnValue) == 0x0000F0, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_GetPlayerTeamInfos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_GetPlayerTeamCount_ReturnValue) == 0x000118, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_GetPlayerTeamCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00011C, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00011D, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x000124, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_GetPlayerTeamInfos_ReturnValue_1) == 0x000128, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_GetPlayerTeamInfos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Get_Item_2) == 0x000138, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_GetPlayerTeamInfo_ReturnValue) == 0x000150, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_GetPlayerTeamInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Length_ReturnValue_3) == 0x000168, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00016C, "Member 'WBP_ME_BotRoster_C_Update::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Less_IntInt_ReturnValue_2) == 0x00016D, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Not_PreBool_ReturnValue_2) == 0x00016E, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x00016F, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Add_ReturnValue) == 0x000170, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Add_ReturnValue_1) == 0x000174, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Get_Item_3) == 0x000178, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Get_Item_4) == 0x000180, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000198, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Length_ReturnValue_4) == 0x00019C, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001A0, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Array_Length_ReturnValue_5) == 0x0001A4, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001A8, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_Update, CallFunc_BooleanAND_ReturnValue_1) == 0x0001A9, "Member 'WBP_ME_BotRoster_C_Update::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_ME_BotRoster.WBP_ME_BotRoster_C.OnPostRunMissionScript_Event_0
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_BotRoster_C_OnPostRunMissionScript_Event_0 final
{
public:
	class AGBGameMode*                            GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_BotRoster_C_OnPostRunMissionScript_Event_0) == 0x000008, "Wrong alignment on WBP_ME_BotRoster_C_OnPostRunMissionScript_Event_0");
static_assert(sizeof(WBP_ME_BotRoster_C_OnPostRunMissionScript_Event_0) == 0x000008, "Wrong size on WBP_ME_BotRoster_C_OnPostRunMissionScript_Event_0");
static_assert(offsetof(WBP_ME_BotRoster_C_OnPostRunMissionScript_Event_0, GameMode) == 0x000000, "Member 'WBP_ME_BotRoster_C_OnPostRunMissionScript_Event_0::GameMode' has a wrong offset!");

// Function WBP_ME_BotRoster.WBP_ME_BotRoster_C.ExecuteUbergraph_WBP_ME_BotRoster
// 0x0038 (0x0038 - 0x0000)
struct WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGBGameMode* GameMode)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameMode*                            K2Node_DynamicCast_AsGBGame_Mode;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBGameMode*                            K2Node_CustomEvent_GameMode;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster) == 0x000008, "Wrong alignment on WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster");
static_assert(sizeof(WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster) == 0x000038, "Wrong size on WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster");
static_assert(offsetof(WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster, EntryPoint) == 0x000000, "Member 'WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster, K2Node_DynamicCast_AsGBGame_Mode) == 0x000020, "Member 'WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster::K2Node_DynamicCast_AsGBGame_Mode' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster, K2Node_CustomEvent_GameMode) == 0x000030, "Member 'WBP_ME_BotRoster_C_ExecuteUbergraph_WBP_ME_BotRoster::K2Node_CustomEvent_GameMode' has a wrong offset!");

}

