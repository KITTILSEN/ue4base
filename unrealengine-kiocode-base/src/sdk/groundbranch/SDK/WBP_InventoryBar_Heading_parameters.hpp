#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryBar_Heading

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.ExecuteUbergraph_WBP_InventoryBar_Heading
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bNext)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsSelected;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	bool                                          CallFunc_IsOpen_ReturnValue_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bNext_1;                        // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bRestricted;                    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bMainHand;                      // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bImmediate;                     // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryBar_SubMenu_Content_C*    K2Node_CustomEvent_Content;                        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNext;                          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading) == 0x000008, "Wrong alignment on WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading");
static_assert(sizeof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading) == 0x0000D8, "Wrong size on WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, EntryPoint) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_ComponentBoundEvent_bIsChecked) == 0x000004, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_Event_IsSelected) == 0x000018, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_Event_IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_GetParent_ReturnValue) == 0x000020, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_GetChildIndex_ReturnValue) == 0x000028, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_IsOpen_ReturnValue) == 0x00002C, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_IsOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_MakeArray_Array) == 0x000090, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_IsOpen_ReturnValue_1) == 0x0000B8, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_IsOpen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_IsValid_ReturnValue) == 0x0000BA, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_CustomEvent_bNext_1) == 0x0000BB, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_CustomEvent_bNext_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_CustomEvent_bRestricted) == 0x0000BC, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_CustomEvent_bRestricted' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_IsValid_ReturnValue_1) == 0x0000BD, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_CustomEvent_bMainHand) == 0x0000BE, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_CustomEvent_bMainHand' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_CustomEvent_bImmediate) == 0x0000BF, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_CustomEvent_bImmediate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_Event_IsDesignTime) == 0x0000C1, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_CustomEvent_Content) == 0x0000C8, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_CustomEvent_Content' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading, K2Node_CustomEvent_bNext) == 0x0000D0, "Member 'WBP_InventoryBar_Heading_C_ExecuteUbergraph_WBP_InventoryBar_Heading::K2Node_CustomEvent_bNext' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.OnCycleCat_Event_0
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBar_Heading_C_OnCycleCat_Event_0 final
{
public:
	bool                                          bNext;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_OnCycleCat_Event_0) == 0x000001, "Wrong alignment on WBP_InventoryBar_Heading_C_OnCycleCat_Event_0");
static_assert(sizeof(WBP_InventoryBar_Heading_C_OnCycleCat_Event_0) == 0x000001, "Wrong size on WBP_InventoryBar_Heading_C_OnCycleCat_Event_0");
static_assert(offsetof(WBP_InventoryBar_Heading_C_OnCycleCat_Event_0, bNext) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_OnCycleCat_Event_0::bNext' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.BindOnCycleCat
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBar_Heading_C_BindOnCycleCat final
{
public:
	class UWBP_InventoryBar_SubMenu_Content_C*    Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_BindOnCycleCat) == 0x000008, "Wrong alignment on WBP_InventoryBar_Heading_C_BindOnCycleCat");
static_assert(sizeof(WBP_InventoryBar_Heading_C_BindOnCycleCat) == 0x000008, "Wrong size on WBP_InventoryBar_Heading_C_BindOnCycleCat");
static_assert(offsetof(WBP_InventoryBar_Heading_C_BindOnCycleCat, Content) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_BindOnCycleCat::Content' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBar_Heading_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_InventoryBar_Heading_C_PreConstruct");
static_assert(sizeof(WBP_InventoryBar_Heading_C_PreConstruct) == 0x000001, "Wrong size on WBP_InventoryBar_Heading_C_PreConstruct");
static_assert(offsetof(WBP_InventoryBar_Heading_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.EquipSelectedItem
// 0x0002 (0x0002 - 0x0000)
struct WBP_InventoryBar_Heading_C_EquipSelectedItem final
{
public:
	bool                                          bMainHand;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bImmediate;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_EquipSelectedItem) == 0x000001, "Wrong alignment on WBP_InventoryBar_Heading_C_EquipSelectedItem");
static_assert(sizeof(WBP_InventoryBar_Heading_C_EquipSelectedItem) == 0x000002, "Wrong size on WBP_InventoryBar_Heading_C_EquipSelectedItem");
static_assert(offsetof(WBP_InventoryBar_Heading_C_EquipSelectedItem, bMainHand) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_EquipSelectedItem::bMainHand' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_EquipSelectedItem, bImmediate) == 0x000001, "Member 'WBP_InventoryBar_Heading_C_EquipSelectedItem::bImmediate' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.Cycle
// 0x0002 (0x0002 - 0x0000)
struct WBP_InventoryBar_Heading_C_Cycle final
{
public:
	bool                                          bNext;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestricted;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_Cycle) == 0x000001, "Wrong alignment on WBP_InventoryBar_Heading_C_Cycle");
static_assert(sizeof(WBP_InventoryBar_Heading_C_Cycle) == 0x000002, "Wrong size on WBP_InventoryBar_Heading_C_Cycle");
static_assert(offsetof(WBP_InventoryBar_Heading_C_Cycle, bNext) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_Cycle::bNext' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_Cycle, bRestricted) == 0x000001, "Member 'WBP_InventoryBar_Heading_C_Cycle::bRestricted' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.InternalSetSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBar_Heading_C_InternalSetSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_InternalSetSelected) == 0x000001, "Wrong alignment on WBP_InventoryBar_Heading_C_InternalSetSelected");
static_assert(sizeof(WBP_InventoryBar_Heading_C_InternalSetSelected) == 0x000001, "Wrong size on WBP_InventoryBar_Heading_C_InternalSetSelected");
static_assert(offsetof(WBP_InventoryBar_Heading_C_InternalSetSelected, IsSelected) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_InternalSetSelected::IsSelected' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBar_Heading_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_InventoryBar_Heading_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WBP_InventoryBar_Heading_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_InventoryBar_Heading_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WBP_InventoryBar_Heading_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_BndEvt__CheckBox_Tab_K2Node_ComponentBoundEvent_1034_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.GetVisibility_0
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBar_Heading_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_GetVisibility_0) == 0x000001, "Wrong alignment on WBP_InventoryBar_Heading_C_GetVisibility_0");
static_assert(sizeof(WBP_InventoryBar_Heading_C_GetVisibility_0) == 0x000001, "Wrong size on WBP_InventoryBar_Heading_C_GetVisibility_0");
static_assert(offsetof(WBP_InventoryBar_Heading_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_GetVisibility_0::ReturnValue' has a wrong offset!");

// Function WBP_InventoryBar_Heading.WBP_InventoryBar_Heading_C.OnGetUserMenuContent_0
// 0x0028 (0x0028 - 0x0000)
struct WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0 final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBar_SubMenu_Content_C*    CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBar_C*                    CallFunc_GetParentWidgetOfClass_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0) == 0x000008, "Wrong alignment on WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0");
static_assert(sizeof(WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0) == 0x000028, "Wrong size on WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0");
static_assert(offsetof(WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0, ReturnValue) == 0x000000, "Member 'WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0, CallFunc_GetParentWidgetOfClass_ReturnValue) == 0x000010, "Member 'WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0::CallFunc_GetParentWidgetOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0, CallFunc_GetParent_ReturnValue) == 0x000018, "Member 'WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0, CallFunc_GetChildIndex_ReturnValue) == 0x000020, "Member 'WBP_InventoryBar_Heading_C_OnGetUserMenuContent_0::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");

}

