#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowerUserComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EGBPowerSourceStatus_structs.hpp"


namespace SDK::Params
{

// Function BP_PowerUserComponent.BP_PowerUserComponent_C.ExecuteUbergraph_BP_PowerUserComponent
// 0x0040 (0x0040 - 0x0000)
struct BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EGBPowerSourceStatus InSharedPowerSourceStatus)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PowerCoordinator_C*                 CallFunc_GetCoordinator_Array_Element;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PowerCoordinator_C*                 K2Node_CustomEvent_InPowerCoordinator;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGBPowerSourceStatus                          K2Node_CustomEvent_InSharedPowerSourceStatus;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent) == 0x000008, "Wrong alignment on BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent");
static_assert(sizeof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent) == 0x000040, "Wrong size on BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent");
static_assert(offsetof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent, EntryPoint) == 0x000000, "Member 'BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent, CallFunc_NotEqual_NameName_ReturnValue) == 0x000004, "Member 'BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent, CallFunc_GetCoordinator_Array_Element) == 0x000020, "Member 'BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent::CallFunc_GetCoordinator_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent, K2Node_CustomEvent_InPowerCoordinator) == 0x000030, "Member 'BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent::K2Node_CustomEvent_InPowerCoordinator' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent, K2Node_CustomEvent_InSharedPowerSourceStatus) == 0x000038, "Member 'BP_PowerUserComponent_C_ExecuteUbergraph_BP_PowerUserComponent::K2Node_CustomEvent_InSharedPowerSourceStatus' has a wrong offset!");

// Function BP_PowerUserComponent.BP_PowerUserComponent_C.OnSharedPowerSourceStatusChanged_Event_0
// 0x0001 (0x0001 - 0x0000)
struct BP_PowerUserComponent_C_OnSharedPowerSourceStatusChanged_Event_0 final
{
public:
	EGBPowerSourceStatus                          InSharedPowerSourceStatus;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PowerUserComponent_C_OnSharedPowerSourceStatusChanged_Event_0) == 0x000001, "Wrong alignment on BP_PowerUserComponent_C_OnSharedPowerSourceStatusChanged_Event_0");
static_assert(sizeof(BP_PowerUserComponent_C_OnSharedPowerSourceStatusChanged_Event_0) == 0x000001, "Wrong size on BP_PowerUserComponent_C_OnSharedPowerSourceStatusChanged_Event_0");
static_assert(offsetof(BP_PowerUserComponent_C_OnSharedPowerSourceStatusChanged_Event_0, InSharedPowerSourceStatus) == 0x000000, "Member 'BP_PowerUserComponent_C_OnSharedPowerSourceStatusChanged_Event_0::InSharedPowerSourceStatus' has a wrong offset!");

// Function BP_PowerUserComponent.BP_PowerUserComponent_C.SetPowerCoordinator
// 0x0008 (0x0008 - 0x0000)
struct BP_PowerUserComponent_C_SetPowerCoordinator final
{
public:
	class ABP_PowerCoordinator_C*                 InPowerCoordinator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PowerUserComponent_C_SetPowerCoordinator) == 0x000008, "Wrong alignment on BP_PowerUserComponent_C_SetPowerCoordinator");
static_assert(sizeof(BP_PowerUserComponent_C_SetPowerCoordinator) == 0x000008, "Wrong size on BP_PowerUserComponent_C_SetPowerCoordinator");
static_assert(offsetof(BP_PowerUserComponent_C_SetPowerCoordinator, InPowerCoordinator) == 0x000000, "Member 'BP_PowerUserComponent_C_SetPowerCoordinator::InPowerCoordinator' has a wrong offset!");

// Function BP_PowerUserComponent.BP_PowerUserComponent_C.GetCoordinator
// 0x0080 (0x0080 - 0x0000)
struct BP_PowerUserComponent_C_GetCoordinator final
{
public:
	class ABP_PowerCoordinator_C*                 Array_Element;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PowerCoordinator_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PowerCoordinator_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	class ABP_PowerCoordinator_C*                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PowerUserComponent_C_GetCoordinator) == 0x000010, "Wrong alignment on BP_PowerUserComponent_C_GetCoordinator");
static_assert(sizeof(BP_PowerUserComponent_C_GetCoordinator) == 0x000080, "Wrong size on BP_PowerUserComponent_C_GetCoordinator");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, Array_Element) == 0x000000, "Member 'BP_PowerUserComponent_C_GetCoordinator::Array_Element' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PowerUserComponent_C_GetCoordinator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PowerUserComponent_C_GetCoordinator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetCoordinator, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00007D, "Member 'BP_PowerUserComponent_C_GetCoordinator::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_PowerUserComponent.BP_PowerUserComponent_C.ShowPowerSources
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PowerUserComponent_C_ShowPowerSources final
{
public:
	struct FVector                                LocalUserLocation;                                 // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PowerSourceComponent_C*             CurrentPowerSourceComp;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin_1;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent_1;               // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PowerSourceComponent_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PowerUserComponent_C_ShowPowerSources) == 0x000008, "Wrong alignment on BP_PowerUserComponent_C_ShowPowerSources");
static_assert(sizeof(BP_PowerUserComponent_C_ShowPowerSources) == 0x0000A8, "Wrong size on BP_PowerUserComponent_C_ShowPowerSources");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, LocalUserLocation) == 0x000000, "Member 'BP_PowerUserComponent_C_ShowPowerSources::LocalUserLocation' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CurrentPowerSourceComp) == 0x000010, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CurrentPowerSourceComp' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PowerUserComponent_C_ShowPowerSources::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PowerUserComponent_C_ShowPowerSources::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_GetActorBounds_Origin) == 0x000030, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_GetActorBounds_BoxExtent) == 0x00003C, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_GetOwner_ReturnValue_1) == 0x000048, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000050, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_NotEqual_NameName_ReturnValue) == 0x00005C, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_GetActorBounds_Origin_1) == 0x000060, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_GetActorBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_GetActorBounds_BoxExtent_1) == 0x00006C, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_GetActorBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_GetAllActorsOfClass_OutActors) == 0x000078, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000088, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_ShowPowerSources, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_PowerUserComponent_C_ShowPowerSources::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PowerUserComponent.BP_PowerUserComponent_C.GetSharedPowerSourceStatus
// 0x0004 (0x0004 - 0x0000)
struct BP_PowerUserComponent_C_GetSharedPowerSourceStatus final
{
public:
	EGBPowerSourceStatus                          PowerSourceStatus;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGBPowerSourceStatus                          CallFunc_GetSharedPowerSourceStatus_PowerSourceStatus; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PowerUserComponent_C_GetSharedPowerSourceStatus) == 0x000001, "Wrong alignment on BP_PowerUserComponent_C_GetSharedPowerSourceStatus");
static_assert(sizeof(BP_PowerUserComponent_C_GetSharedPowerSourceStatus) == 0x000004, "Wrong size on BP_PowerUserComponent_C_GetSharedPowerSourceStatus");
static_assert(offsetof(BP_PowerUserComponent_C_GetSharedPowerSourceStatus, PowerSourceStatus) == 0x000000, "Member 'BP_PowerUserComponent_C_GetSharedPowerSourceStatus::PowerSourceStatus' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetSharedPowerSourceStatus, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PowerUserComponent_C_GetSharedPowerSourceStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetSharedPowerSourceStatus, CallFunc_GetSharedPowerSourceStatus_PowerSourceStatus) == 0x000002, "Member 'BP_PowerUserComponent_C_GetSharedPowerSourceStatus::CallFunc_GetSharedPowerSourceStatus_PowerSourceStatus' has a wrong offset!");
static_assert(offsetof(BP_PowerUserComponent_C_GetSharedPowerSourceStatus, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000003, "Member 'BP_PowerUserComponent_C_GetSharedPowerSourceStatus::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}

