#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ObjectiveMarker_Hotspot

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot
// 0x0190 (0x0190 - 0x0000)
struct WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetObjectiveMarkerSize_ReturnValue;       // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGBPlayerSettings*                      CallFunc_GetPlayerSettings_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0080(0x0028)()
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00E0(0x0028)()
	struct FVector2D                              CallFunc_CalcPosition_OutCanvasPosition;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcPosition_OutCanvasPosition_1;         // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcPosition_OutCanvasPosition_2;         // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x017C(0x0010)(NoDestructor)
};
static_assert(alignof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot) == 0x000008, "Wrong alignment on WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot");
static_assert(sizeof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot) == 0x000190, "Wrong size on WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, EntryPoint) == 0x000000, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_X) == 0x000004, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_GetObjectiveMarkerSize_ReturnValue) == 0x00000C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_GetObjectiveMarkerSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_X_1) == 0x000020, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_Y_1) == 0x000024, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_MakeVector_ReturnValue) == 0x00002C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000040, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_GetPlayerSettings_ReturnValue) == 0x000058, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_GetPlayerSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000060, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Map_Find_Value) == 0x000068, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, K2Node_MakeStruct_SlateColor) == 0x000080, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, Temp_bool_Variable) == 0x0000A8, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000AC, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C4, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_CalcPosition_OutCanvasPosition) == 0x000108, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_CalcPosition_OutCanvasPosition' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_X_2) == 0x000110, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_Y_2) == 0x000114, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000118, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_CalcPosition_OutCanvasPosition_1) == 0x000124, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_CalcPosition_OutCanvasPosition_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_CalcPosition_OutCanvasPosition_2) == 0x00012C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_CalcPosition_OutCanvasPosition_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_X_3) == 0x000134, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_Y_3) == 0x000138, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_X_4) == 0x00013C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_BreakVector2D_Y_4) == 0x000140, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_MakeVector2D_ReturnValue) == 0x000144, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00014C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000150, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Abs_ReturnValue) == 0x000154, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Abs_ReturnValue_1) == 0x000158, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Add_FloatFloat_ReturnValue) == 0x00015C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000160, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_FClamp_ReturnValue) == 0x000164, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_FClamp_ReturnValue_1) == 0x000168, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00016C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000170, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, CallFunc_MakeVector2D_ReturnValue_1) == 0x000174, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot, K2Node_MakeStruct_Anchors) == 0x00017C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ExecuteUbergraph_WBP_ObjectiveMarker_Hotspot::K2Node_MakeStruct_Anchors' has a wrong offset!");

// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.CalcPosition
// 0x00CC (0x00CC - 0x0000)
struct WBP_ObjectiveMarker_Hotspot_C_CalcPosition final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutCanvasPosition;                                 // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocationFromOrigin;                                // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_2;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_3;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_2;       // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_3;       // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition) == 0x000004, "Wrong alignment on WBP_ObjectiveMarker_Hotspot_C_CalcPosition");
static_assert(sizeof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition) == 0x0000CC, "Wrong size on WBP_ObjectiveMarker_Hotspot_C_CalcPosition");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, InLocation) == 0x000000, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::InLocation' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, OutCanvasPosition) == 0x00000C, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::OutCanvasPosition' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, LocationFromOrigin) == 0x000014, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::LocationFromOrigin' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_X) == 0x000020, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_Y) == 0x000024, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_Z) == 0x000028, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_NegateFloat_ReturnValue) == 0x00002C, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_NegateFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000038, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_X_1) == 0x000040, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_Y_1) == 0x000044, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector2D_X) == 0x00004C, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_NegateFloat_ReturnValue_1) == 0x000054, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_NegateFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_NegateFloat_ReturnValue_2) == 0x00005C, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_NegateFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000060, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x000068, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000070, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector2D_Y_1) == 0x00007C, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000080, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue_3) == 0x000084, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_X_2) == 0x00008C, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_Y_2) == 0x000090, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_BreakVector_Z_2) == 0x000094, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_NegateFloat_ReturnValue_3) == 0x000098, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_NegateFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue_4) == 0x00009C, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_2) == 0x0000A4, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000B4, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_3) == 0x0000BC, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_CalcPosition, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000C4, "Member 'WBP_ObjectiveMarker_Hotspot_C_CalcPosition::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.GetBackground_Border
// 0x01D0 (0x01D0 - 0x0000)
struct WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00B0(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0138(0x0088)()
	class FName                                   CallFunc_GetObjectiveMarkerType_ReturnValue;       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border) == 0x000008, "Wrong alignment on WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border");
static_assert(sizeof(WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border) == 0x0001D0, "Wrong size on WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border, ReturnValue) == 0x000000, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border, K2Node_MakeStruct_SlateBrush) == 0x0000B0, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border, K2Node_MakeStruct_SlateBrush_1) == 0x000138, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border, CallFunc_GetObjectiveMarkerType_ReturnValue) == 0x0001C0, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border::CallFunc_GetObjectiveMarkerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border, K2Node_SwitchName_CmpSuccess) == 0x0001C8, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetBackground_Border::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.ParseObjectiveNameForModifier
// 0x0060 (0x0060 - 0x0000)
struct WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier final
{
public:
	class FString                                 ObjectiveName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CleanObjectiveName;                                // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             ModifierSprite;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayStaircaseIcon;                              // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DisplayLevelNumberText;                            // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LevelNumber;                                       // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ModifierSpriteRotation;                            // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier) == 0x000008, "Wrong alignment on WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier");
static_assert(sizeof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier) == 0x000060, "Wrong size on WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, ObjectiveName) == 0x000000, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::ObjectiveName' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, CleanObjectiveName) == 0x000010, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::CleanObjectiveName' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, ModifierSprite) == 0x000020, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::ModifierSprite' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, DisplayStaircaseIcon) == 0x000028, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::DisplayStaircaseIcon' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, DisplayLevelNumberText) == 0x000029, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::DisplayLevelNumberText' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, LevelNumber) == 0x00002C, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::LevelNumber' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, ModifierSpriteRotation) == 0x000030, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::ModifierSpriteRotation' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, CallFunc_Left_ReturnValue) == 0x000038, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, K2Node_SwitchString_CmpSuccess) == 0x000048, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier, CallFunc_RightChop_ReturnValue) == 0x000050, "Member 'WBP_ObjectiveMarker_Hotspot_C_ParseObjectiveNameForModifier::CallFunc_RightChop_ReturnValue' has a wrong offset!");

// Function WBP_ObjectiveMarker_Hotspot.WBP_ObjectiveMarker_Hotspot_C.GetHotspotMatchingHotspotName
// 0x0050 (0x0050 - 0x0000)
struct WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName final
{
public:
	class FName                                   HotspotName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBAIHotspot*                           HotspotRef;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AGBAIHotspot*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class AGBAIHotspot*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetHotspotName_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName) == 0x000008, "Wrong alignment on WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName");
static_assert(sizeof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName) == 0x000050, "Wrong size on WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, HotspotName) == 0x000000, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::HotspotName' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, HotspotRef) == 0x000008, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::HotspotRef' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, CallFunc_NotEqual_NameName_ReturnValue) == 0x000014, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, CallFunc_GetHotspotName_ReturnValue) == 0x000040, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::CallFunc_GetHotspotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000048, "Member 'WBP_ObjectiveMarker_Hotspot_C_GetHotspotMatchingHotspotName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}

