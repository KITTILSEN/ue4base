#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FFencePiece

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct FFencePiece.FFencePiece
// 0x0020 (0x0020 - 0x0000)
struct FFFencePiece final
{
public:
	class UStaticMesh*                            StaticMesh_3_F06C4A55416BF03628BE8D83AC3ACD1F;     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material_11_8C83D9AA4A81F2D3AA6353A5B03DEA82;      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset_8_08457F5B42409F16073D2EBD2888B056;         // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LengthScale_16_E428E2C749D89158E03C4FA882EE5BA7;   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FFFencePiece) == 0x000008, "Wrong alignment on FFFencePiece");
static_assert(sizeof(FFFencePiece) == 0x000020, "Wrong size on FFFencePiece");
static_assert(offsetof(FFFencePiece, StaticMesh_3_F06C4A55416BF03628BE8D83AC3ACD1F) == 0x000000, "Member 'FFFencePiece::StaticMesh_3_F06C4A55416BF03628BE8D83AC3ACD1F' has a wrong offset!");
static_assert(offsetof(FFFencePiece, Material_11_8C83D9AA4A81F2D3AA6353A5B03DEA82) == 0x000008, "Member 'FFFencePiece::Material_11_8C83D9AA4A81F2D3AA6353A5B03DEA82' has a wrong offset!");
static_assert(offsetof(FFFencePiece, Offset_8_08457F5B42409F16073D2EBD2888B056) == 0x000010, "Member 'FFFencePiece::Offset_8_08457F5B42409F16073D2EBD2888B056' has a wrong offset!");
static_assert(offsetof(FFFencePiece, LengthScale_16_E428E2C749D89158E03C4FA882EE5BA7) == 0x00001C, "Member 'FFFencePiece::LengthScale_16_E428E2C749D89158E03C4FA882EE5BA7' has a wrong offset!");

}

