#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tablet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Tablet.BP_Tablet_C
// 0x00F8 (0x0540 - 0x0448)
class ABP_Tablet_C final : public AGBInvItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   LocalDummyTabletModel;                             // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TabletModel;                                       // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        TypingSound;                                       // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CurrentSupportingStaticMesh;                       // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_InGameMap_C*                       TabletScreenWidget;                                // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   TabletWidgetClass;                                 // 0x0480(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         OldDesiredEngagedAlpha;                            // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EquippedRelativeTM;                                // 0x04B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TabletHeight;                                      // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TabletWidth;                                       // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EngagedRelativeTM;                                 // 0x04F0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   HeadToSightLineAlphaCurveName;                     // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeadToSightLineAlphaValue;                         // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MovementSwayCurveName;                             // 0x052C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSwayCurveValue;                            // 0x0534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagRemoved*    NewVar_0;                                          // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Tablet(int32 EntryPoint);
	void TryRaising();
	void CreateWidget();
	void InternalEnableWidget();
	void UnbindCameraStyleChanged();
	void OnCameraStyleChanged_Event(class FName OldCameraStyle, class FName NewCameraStyle);
	void BindCameraStyleChanged();
	void OnEndViewTarget_Event(class APlayerController* PlayerController, class AGBCharacter* Character);
	void BindViewTargetEvents();
	void UnbindViewTargetEvents();
	void OnBecomeViewTarget_Event(class APlayerController* PlayerController, class AGBCharacter* Character);
	void ReceiveTick(float DeltaSeconds);
	void OnRemovedFromInventoryEvent(class AGBCharacter* Character);
	void OnAddedToInventoryEvent(class AGBCharacter* Character);
	void OnBeingUnequipped();
	void DisableWidget();
	void EnableWidget();
	void OnBeingEquipped();
	void OnLoaded_7C78B271BDA44877866BF0A8A720F620(TSubclassOf<class UObject> Loaded);
	float GetWeaponsPositionTransitionTime(EGBWeaponPosition FromPosition, EGBWeaponPosition ToPosition);
	void SetLocalDummyTabletStatus(bool bEnabled);
	struct FGBUnequipInfo GetUnequipInfo(EHand TargetHand);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Tablet_C">();
	}
	static class ABP_Tablet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Tablet_C>();
	}
};
static_assert(alignof(ABP_Tablet_C) == 0x000010, "Wrong alignment on ABP_Tablet_C");
static_assert(sizeof(ABP_Tablet_C) == 0x000540, "Wrong size on ABP_Tablet_C");
static_assert(offsetof(ABP_Tablet_C, UberGraphFrame) == 0x000448, "Member 'ABP_Tablet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, LocalDummyTabletModel) == 0x000450, "Member 'ABP_Tablet_C::LocalDummyTabletModel' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, TabletModel) == 0x000458, "Member 'ABP_Tablet_C::TabletModel' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, Widget) == 0x000460, "Member 'ABP_Tablet_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, TypingSound) == 0x000468, "Member 'ABP_Tablet_C::TypingSound' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, CurrentSupportingStaticMesh) == 0x000470, "Member 'ABP_Tablet_C::CurrentSupportingStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, TabletScreenWidget) == 0x000478, "Member 'ABP_Tablet_C::TabletScreenWidget' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, TabletWidgetClass) == 0x000480, "Member 'ABP_Tablet_C::TabletWidgetClass' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, OldDesiredEngagedAlpha) == 0x0004A8, "Member 'ABP_Tablet_C::OldDesiredEngagedAlpha' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, EquippedRelativeTM) == 0x0004B0, "Member 'ABP_Tablet_C::EquippedRelativeTM' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, TabletHeight) == 0x0004E0, "Member 'ABP_Tablet_C::TabletHeight' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, TabletWidth) == 0x0004E4, "Member 'ABP_Tablet_C::TabletWidth' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, EngagedRelativeTM) == 0x0004F0, "Member 'ABP_Tablet_C::EngagedRelativeTM' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, HeadToSightLineAlphaCurveName) == 0x000520, "Member 'ABP_Tablet_C::HeadToSightLineAlphaCurveName' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, HeadToSightLineAlphaValue) == 0x000528, "Member 'ABP_Tablet_C::HeadToSightLineAlphaValue' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, MovementSwayCurveName) == 0x00052C, "Member 'ABP_Tablet_C::MovementSwayCurveName' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, MovementSwayCurveValue) == 0x000534, "Member 'ABP_Tablet_C::MovementSwayCurveValue' has a wrong offset!");
static_assert(offsetof(ABP_Tablet_C, NewVar_0) == 0x000538, "Member 'ABP_Tablet_C::NewVar_0' has a wrong offset!");

}

