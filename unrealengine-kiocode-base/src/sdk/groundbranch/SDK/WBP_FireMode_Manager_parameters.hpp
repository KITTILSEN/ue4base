#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FireMode_Manager

#include "Basic.hpp"

#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function WBP_FireMode_Manager.WBP_FireMode_Manager_C.ExecuteUbergraph_WBP_FireMode_Manager
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FireMode_Border_C*                 CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBFirearm*                             K2Node_CustomEvent_Firearm;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBurstCount_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFiringModeData>                CallFunc_GetFiringModes_ReturnValue;               // 0x0028(0x0010)(ReferenceParm)
	struct FFiringModeData                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_OldState;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NewState;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName OldState, class FName NewState)> K2Node_CreateDelegate_OutputDelegate; // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager) == 0x000008, "Wrong alignment on WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager");
static_assert(sizeof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager) == 0x0000B8, "Wrong size on WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, EntryPoint) == 0x000000, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, K2Node_CustomEvent_Firearm) == 0x000018, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::K2Node_CustomEvent_Firearm' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_GetBurstCount_ReturnValue) == 0x000020, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_GetBurstCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_GetFiringModes_ReturnValue) == 0x000028, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_GetFiringModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_Max_ReturnValue) == 0x000054, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, K2Node_CustomEvent_OldState) == 0x000060, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, K2Node_CustomEvent_NewState) == 0x000068, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000078, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000080, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000090, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000094, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A8, "Member 'WBP_FireMode_Manager_C_ExecuteUbergraph_WBP_FireMode_Manager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_FireMode_Manager.WBP_FireMode_Manager_C.OnPlayerControllerStateChanged_Event_0
// 0x0010 (0x0010 - 0x0000)
struct WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0 final
{
public:
	class FName                                   OldState;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewState;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0) == 0x000004, "Wrong alignment on WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0");
static_assert(sizeof(WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0) == 0x000010, "Wrong size on WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0");
static_assert(offsetof(WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0, OldState) == 0x000000, "Member 'WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0::OldState' has a wrong offset!");
static_assert(offsetof(WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0, NewState) == 0x000008, "Member 'WBP_FireMode_Manager_C_OnPlayerControllerStateChanged_Event_0::NewState' has a wrong offset!");

// Function WBP_FireMode_Manager.WBP_FireMode_Manager_C.ShowFireModes
// 0x0008 (0x0008 - 0x0000)
struct WBP_FireMode_Manager_C_ShowFireModes final
{
public:
	class AGBFirearm*                             Firearm;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FireMode_Manager_C_ShowFireModes) == 0x000008, "Wrong alignment on WBP_FireMode_Manager_C_ShowFireModes");
static_assert(sizeof(WBP_FireMode_Manager_C_ShowFireModes) == 0x000008, "Wrong size on WBP_FireMode_Manager_C_ShowFireModes");
static_assert(offsetof(WBP_FireMode_Manager_C_ShowFireModes, Firearm) == 0x000000, "Member 'WBP_FireMode_Manager_C_ShowFireModes::Firearm' has a wrong offset!");

}

