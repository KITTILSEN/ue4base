#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ObjectiveMarker

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ObjectiveMarker.WBP_ObjectiveMarker_C
// 0x0200 (0x0460 - 0x0260)
class UWBP_ObjectiveMarker_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Extraction;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pulse2;                                            // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pulse;                                             // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundSprite;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LevelIcon;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LevelNumber;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LevelUpDown;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LevelUpDown_Sprite;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                MainText_Border;                                   // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_LevelNumber;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_LVL;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ObjectiveName;                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGBObjectiveMarker*                     ObjectiveMarkerRef;                                // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_Minimap_Origin_C*                   MinimapOriginRef;                                  // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            BorderBrushModifiers;                              // 0x02E0(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            BorderBrushMainText;                               // 0x0368(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FLinearColor>        HotspotColourLookup;                               // 0x03F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           DefaultIntelZoneColor;                             // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultExtractionPointColor;                       // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ObjectiveMarker(int32 EntryPoint);
	void Construct();
	void CalcPosition(const struct FVector& InLocation, struct FVector2D* OutCanvasPosition);
	struct FSlateBrush GetBackground_Border();
	void ParseObjectiveNameForModifier(const class FString& ObjectiveName, class FString* CleanObjectiveName, class UTexture2D** ModifierSprite, bool* DisplayStaircaseIcon, bool* DisplayLevelNumberText, int32* LevelNumber_0, float* ModifierSpriteRotation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ObjectiveMarker_C">();
	}
	static class UWBP_ObjectiveMarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ObjectiveMarker_C>();
	}
};
static_assert(alignof(UWBP_ObjectiveMarker_C) == 0x000008, "Wrong alignment on UWBP_ObjectiveMarker_C");
static_assert(sizeof(UWBP_ObjectiveMarker_C) == 0x000460, "Wrong size on UWBP_ObjectiveMarker_C");
static_assert(offsetof(UWBP_ObjectiveMarker_C, UberGraphFrame) == 0x000260, "Member 'UWBP_ObjectiveMarker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, Extraction) == 0x000268, "Member 'UWBP_ObjectiveMarker_C::Extraction' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, Pulse2) == 0x000270, "Member 'UWBP_ObjectiveMarker_C::Pulse2' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, Pulse) == 0x000278, "Member 'UWBP_ObjectiveMarker_C::Pulse' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, BackgroundSprite) == 0x000280, "Member 'UWBP_ObjectiveMarker_C::BackgroundSprite' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, LevelIcon) == 0x000288, "Member 'UWBP_ObjectiveMarker_C::LevelIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, LevelNumber) == 0x000290, "Member 'UWBP_ObjectiveMarker_C::LevelNumber' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, LevelUpDown) == 0x000298, "Member 'UWBP_ObjectiveMarker_C::LevelUpDown' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, LevelUpDown_Sprite) == 0x0002A0, "Member 'UWBP_ObjectiveMarker_C::LevelUpDown_Sprite' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, MainText_Border) == 0x0002A8, "Member 'UWBP_ObjectiveMarker_C::MainText_Border' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, TextBlock_LevelNumber) == 0x0002B0, "Member 'UWBP_ObjectiveMarker_C::TextBlock_LevelNumber' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, TextBlock_LVL) == 0x0002B8, "Member 'UWBP_ObjectiveMarker_C::TextBlock_LVL' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, TextBlock_ObjectiveName) == 0x0002C0, "Member 'UWBP_ObjectiveMarker_C::TextBlock_ObjectiveName' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, ObjectiveMarkerRef) == 0x0002C8, "Member 'UWBP_ObjectiveMarker_C::ObjectiveMarkerRef' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, MinimapOriginRef) == 0x0002D0, "Member 'UWBP_ObjectiveMarker_C::MinimapOriginRef' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, TeamId) == 0x0002D8, "Member 'UWBP_ObjectiveMarker_C::TeamId' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, BorderBrushModifiers) == 0x0002E0, "Member 'UWBP_ObjectiveMarker_C::BorderBrushModifiers' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, BorderBrushMainText) == 0x000368, "Member 'UWBP_ObjectiveMarker_C::BorderBrushMainText' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, HotspotColourLookup) == 0x0003F0, "Member 'UWBP_ObjectiveMarker_C::HotspotColourLookup' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, DefaultIntelZoneColor) == 0x000440, "Member 'UWBP_ObjectiveMarker_C::DefaultIntelZoneColor' has a wrong offset!");
static_assert(offsetof(UWBP_ObjectiveMarker_C, DefaultExtractionPointColor) == 0x000450, "Member 'UWBP_ObjectiveMarker_C::DefaultExtractionPointColor' has a wrong offset!");

}

