#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Explosion_MK13_Stun

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Explosion_MK13_Stun.BP_Explosion_MK13_Stun_C
// 0x0080 (0x02A0 - 0x0220)
class ABP_Explosion_MK13_Stun_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AkComponent;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CameraShake;                                       // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlwaysStunMinRadius;                               // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlwaysStunMaxRadius;                               // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlwaysStunMaxDistanceAboveEyes;                    // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinFlashRadius;                                    // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFlashRadius;                                    // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FlashLocation;                                     // 0x0254(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0264(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StunEffect_C*                       StunEffectReference;                               // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   bStunnedKeyName;                                   // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StunTimeKeyName;                                   // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LeadingHostageName;                                // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayingID;                                         // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Explosion_MK13_Stun(int32 EntryPoint);
	void K2_OnReset();
	void StopSound();
	void ReceiveDestroyed();
	void LocalStun();
	void CheckIfLeadingHostage(class AGBCharacter* GBCharacter);
	void LightFlash();
	void FindAICharacters();
	void ReceiveBeginPlay();
	void CheckCharacter(class AGBCharacter* InCharacter);
	void Stun_Character(class AGBCharacter* InCharacter, const struct FRotator& InViewRotation, float InDistasnce, const struct FVector& InFlashDirection);
	void StunLocalPlayer(float InAlpha);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Explosion_MK13_Stun_C">();
	}
	static class ABP_Explosion_MK13_Stun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Explosion_MK13_Stun_C>();
	}
};
static_assert(alignof(ABP_Explosion_MK13_Stun_C) == 0x000008, "Wrong alignment on ABP_Explosion_MK13_Stun_C");
static_assert(sizeof(ABP_Explosion_MK13_Stun_C) == 0x0002A0, "Wrong size on ABP_Explosion_MK13_Stun_C");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, UberGraphFrame) == 0x000220, "Member 'ABP_Explosion_MK13_Stun_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, AkComponent) == 0x000228, "Member 'ABP_Explosion_MK13_Stun_C::AkComponent' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_Explosion_MK13_Stun_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, CameraShake) == 0x000238, "Member 'ABP_Explosion_MK13_Stun_C::CameraShake' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, AlwaysStunMinRadius) == 0x000240, "Member 'ABP_Explosion_MK13_Stun_C::AlwaysStunMinRadius' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, AlwaysStunMaxRadius) == 0x000244, "Member 'ABP_Explosion_MK13_Stun_C::AlwaysStunMaxRadius' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, AlwaysStunMaxDistanceAboveEyes) == 0x000248, "Member 'ABP_Explosion_MK13_Stun_C::AlwaysStunMaxDistanceAboveEyes' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, MinFlashRadius) == 0x00024C, "Member 'ABP_Explosion_MK13_Stun_C::MinFlashRadius' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, MaxFlashRadius) == 0x000250, "Member 'ABP_Explosion_MK13_Stun_C::MaxFlashRadius' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, FlashLocation) == 0x000254, "Member 'ABP_Explosion_MK13_Stun_C::FlashLocation' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, Distance) == 0x000260, "Member 'ABP_Explosion_MK13_Stun_C::Distance' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, Direction) == 0x000264, "Member 'ABP_Explosion_MK13_Stun_C::Direction' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, StunEffectReference) == 0x000270, "Member 'ABP_Explosion_MK13_Stun_C::StunEffectReference' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, bStunnedKeyName) == 0x000278, "Member 'ABP_Explosion_MK13_Stun_C::bStunnedKeyName' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, StunTimeKeyName) == 0x000280, "Member 'ABP_Explosion_MK13_Stun_C::StunTimeKeyName' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, NiagaraSystem) == 0x000288, "Member 'ABP_Explosion_MK13_Stun_C::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, LeadingHostageName) == 0x000290, "Member 'ABP_Explosion_MK13_Stun_C::LeadingHostageName' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_MK13_Stun_C, PlayingID) == 0x000298, "Member 'ABP_Explosion_MK13_Stun_C::PlayingID' has a wrong offset!");

}

