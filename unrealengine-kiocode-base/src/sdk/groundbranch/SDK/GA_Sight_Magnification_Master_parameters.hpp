#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Sight_Magnification_Master

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Sight_Magnification_Master.GA_Sight_Magnification_Master_C.ExecuteUbergraph_GA_Sight_Magnification_Master
// 0x0058 (0x0058 - 0x0000)
struct GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master) == 0x000008, "Wrong alignment on GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master");
static_assert(sizeof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master) == 0x000058, "Wrong size on GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master");
static_assert(offsetof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master, EntryPoint) == 0x000000, "Member 'GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000048, "Member 'GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'GA_Sight_Magnification_Master_C_ExecuteUbergraph_GA_Sight_Magnification_Master::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Sight_Magnification_Master.GA_Sight_Magnification_Master_C.K2_CanActivateAbility
// 0x0108 (0x0108 - 0x0000)
struct GA_Sight_Magnification_Master_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBSightComponent*                      LocalSightComp;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             LocalEquipped;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           LocalCharacter;                                    // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBSightComponent*                      CallFunc_GetCurrentSight_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeMagnificationLevel_bOutCanChange; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetFirstChildInvItemOfClass_ReturnValue;  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGBSightComponent*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBSightComponent*                      CallFunc_GetCurrentSight_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             K2Node_DynamicCast_AsGBInv_Item;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UsesGameplayAbilityByClass_ReturnValue;   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Sight_Magnification_Master_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility) == 0x000108, "Wrong size on GA_Sight_Magnification_Master_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, LocalSightComp) == 0x000078, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::LocalSightComp' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, LocalEquipped) == 0x000080, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::LocalEquipped' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, LocalCharacter) == 0x000088, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::LocalCharacter' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, K2Node_DynamicCast_AsGBCharacter) == 0x000090, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_GetCurrentSight_ReturnValue) == 0x0000A0, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_GetCurrentSight_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_CanChangeMagnificationLevel_bOutCanChange) == 0x0000A8, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_CanChangeMagnificationLevel_bOutCanChange' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_GetFirstChildInvItemOfClass_ReturnValue) == 0x0000B0, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_GetFirstChildInvItemOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_GetComponentByClass_ReturnValue) == 0x0000B8, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_GetObjectClass_ReturnValue) == 0x0000C8, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_IsValidClass_ReturnValue) == 0x0000D0, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_GetCurrentSight_ReturnValue_1) == 0x0000D8, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_GetCurrentSight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_GetOwner_ReturnValue) == 0x0000E0, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, K2Node_DynamicCast_AsGBInv_Item) == 0x0000F0, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::K2Node_DynamicCast_AsGBInv_Item' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_UsesGameplayAbilityByClass_ReturnValue) == 0x0000F9, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_UsesGameplayAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue_2) == 0x0000FA, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_K2_CanActivateAbility, CallFunc_GetEquipped_ReturnValue) == 0x000100, "Member 'GA_Sight_Magnification_Master_C_K2_CanActivateAbility::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");

// Function GA_Sight_Magnification_Master.GA_Sight_Magnification_Master_C.CanChangeMagnificationLevel
// 0x0010 (0x0010 - 0x0000)
struct GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel final
{
public:
	class UGBSightComponent*                      InSightComp;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutCanChange;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel) == 0x000008, "Wrong alignment on GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel");
static_assert(sizeof(GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel) == 0x000010, "Wrong size on GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel");
static_assert(offsetof(GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel, InSightComp) == 0x000000, "Member 'GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel::InSightComp' has a wrong offset!");
static_assert(offsetof(GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel, bOutCanChange) == 0x000008, "Member 'GA_Sight_Magnification_Master_C_CanChangeMagnificationLevel::bOutCanChange' has a wrong offset!");

}

