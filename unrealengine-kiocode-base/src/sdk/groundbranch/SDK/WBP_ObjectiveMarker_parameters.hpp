#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ObjectiveMarker

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "ModKit_structs.hpp"


namespace SDK::Params
{

// Function WBP_ObjectiveMarker.WBP_ObjectiveMarker_C.ExecuteUbergraph_WBP_ObjectiveMarker
// 0x03C0 (0x03C0 - 0x0000)
struct WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUInt64                                CallFunc_GetGameModeModID_ReturnValue;             // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0028)()
	class FName                                   CallFunc_GetObjectiveName_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ParseObjectiveNameForModifier_CleanObjectiveName; // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_ParseObjectiveNameForModifier_ModifierSprite; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseObjectiveNameForModifier_DisplayStaircaseIcon; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ParseObjectiveNameForModifier_DisplayLevelNumberText; // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ParseObjectiveNameForModifier_LevelNumber; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ParseObjectiveNameForModifier_ModifierSpriteRotation; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_StringToDisplayString_ReturnValue;        // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalisedGameText_ReturnValue;         // 0x00F0(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0110(0x0018)()
	class FName                                   CallFunc_GetObjectiveMarkerType_ReturnValue;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0138(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcPosition_OutCanvasPosition;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x01B0(0x0010)(NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBPlayerSettings*                      CallFunc_GetPlayerSettings_ReturnValue;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x01F0(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0218(0x0028)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0248(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0270(0x0088)()
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x02FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E[0x2];                                      // 0x030E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x0348(0x0028)()
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x037C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_5;                    // 0x0390(0x0028)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker) == 0x000008, "Wrong alignment on WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker");
static_assert(sizeof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker) == 0x0003C0, "Wrong size on WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, EntryPoint) == 0x000000, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_DynamicCast_AsGBGame_State) == 0x000010, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_GetGameModeModID_ReturnValue) == 0x000020, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_GetGameModeModID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_GetObjectiveName_ReturnValue) == 0x000070, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_GetObjectiveName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Conv_NameToString_ReturnValue) == 0x000078, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_ParseObjectiveNameForModifier_CleanObjectiveName) == 0x000088, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_ParseObjectiveNameForModifier_CleanObjectiveName' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_ParseObjectiveNameForModifier_ModifierSprite) == 0x000098, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_ParseObjectiveNameForModifier_ModifierSprite' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_ParseObjectiveNameForModifier_DisplayStaircaseIcon) == 0x0000A0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_ParseObjectiveNameForModifier_DisplayStaircaseIcon' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_ParseObjectiveNameForModifier_DisplayLevelNumberText) == 0x0000A1, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_ParseObjectiveNameForModifier_DisplayLevelNumberText' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_ParseObjectiveNameForModifier_LevelNumber) == 0x0000A4, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_ParseObjectiveNameForModifier_LevelNumber' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_ParseObjectiveNameForModifier_ModifierSpriteRotation) == 0x0000A8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_ParseObjectiveNameForModifier_ModifierSpriteRotation' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C9, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_IsEmpty_ReturnValue) == 0x0000CA, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Len_ReturnValue) == 0x0000CC, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_BooleanOR_ReturnValue) == 0x0000D0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_StringToDisplayString_ReturnValue) == 0x0000D8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_StringToDisplayString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_BooleanOR_ReturnValue_1) == 0x0000E8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_GetLocalisedGameText_ReturnValue) == 0x0000F0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_GetLocalisedGameText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Not_PreBool_ReturnValue) == 0x000108, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_TextToUpper_ReturnValue) == 0x000110, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_GetObjectiveMarkerType_ReturnValue) == 0x000128, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_GetObjectiveMarkerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_SwitchName_CmpSuccess) == 0x000130, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_SlateColor_1) == 0x000138, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_PlayAnimation_ReturnValue) == 0x000160, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_PlayAnimation_ReturnValue_1) == 0x000168, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000170, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00017C, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000188, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_CalcPosition_OutCanvasPosition) == 0x000190, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_CalcPosition_OutCanvasPosition' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_BreakVector2D_X) == 0x000198, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_BreakVector2D_Y) == 0x00019C, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_MakeVector2D_ReturnValue) == 0x0001A0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001A8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_Anchors) == 0x0001B0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001C0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_byte_Variable) == 0x0001C8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x0001D0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_GetPlayerSettings_ReturnValue) == 0x0001E0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_GetPlayerSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_byte_Variable_1) == 0x0001E8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_bool_Variable) == 0x0001E9, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_SlateColor_2) == 0x0001F0, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_SlateColor_3) == 0x000218, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_Select_Default) == 0x000240, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_bool_Variable_1) == 0x000241, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_byte_Variable_2) == 0x000242, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_Select_Default_1) == 0x000248, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_SlateBrush) == 0x000270, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_byte_Variable_3) == 0x0002F8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_bool_Variable_2) == 0x0002F9, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_byte_Variable_4) == 0x0002FA, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_Select_Default_2) == 0x0002FB, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Map_Find_Value) == 0x0002FC, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Map_Find_ReturnValue) == 0x00030C, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_byte_Variable_5) == 0x00030D, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_SelectColor_ReturnValue) == 0x000310, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000320, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000330, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_FMax_ReturnValue) == 0x000340, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_SlateColor_4) == 0x000348, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_FMax_ReturnValue_1) == 0x000370, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, CallFunc_FMax_ReturnValue_2) == 0x000374, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, Temp_bool_Variable_3) == 0x000378, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_LinearColor) == 0x00037C, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_MakeStruct_SlateColor_5) == 0x000390, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_MakeStruct_SlateColor_5' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker, K2Node_Select_Default_3) == 0x0003B8, "Member 'WBP_ObjectiveMarker_C_ExecuteUbergraph_WBP_ObjectiveMarker::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_ObjectiveMarker.WBP_ObjectiveMarker_C.CalcPosition
// 0x00CC (0x00CC - 0x0000)
struct WBP_ObjectiveMarker_C_CalcPosition final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutCanvasPosition;                                 // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocationFromOrigin;                                // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_2;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue_3;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_2;       // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_3;       // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ObjectiveMarker_C_CalcPosition) == 0x000004, "Wrong alignment on WBP_ObjectiveMarker_C_CalcPosition");
static_assert(sizeof(WBP_ObjectiveMarker_C_CalcPosition) == 0x0000CC, "Wrong size on WBP_ObjectiveMarker_C_CalcPosition");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, InLocation) == 0x000000, "Member 'WBP_ObjectiveMarker_C_CalcPosition::InLocation' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, OutCanvasPosition) == 0x00000C, "Member 'WBP_ObjectiveMarker_C_CalcPosition::OutCanvasPosition' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, LocationFromOrigin) == 0x000014, "Member 'WBP_ObjectiveMarker_C_CalcPosition::LocationFromOrigin' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_X) == 0x000020, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_Y) == 0x000024, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_Z) == 0x000028, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_NegateFloat_ReturnValue) == 0x00002C, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_NegateFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000038, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_X_1) == 0x000040, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_Y_1) == 0x000044, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector2D_X) == 0x00004C, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_NegateFloat_ReturnValue_1) == 0x000054, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_NegateFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_NegateFloat_ReturnValue_2) == 0x00005C, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_NegateFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000060, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x000068, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000070, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector2D_Y_1) == 0x00007C, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000080, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue_3) == 0x000084, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_X_2) == 0x00008C, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_Y_2) == 0x000090, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_BreakVector_Z_2) == 0x000094, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_NegateFloat_ReturnValue_3) == 0x000098, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_NegateFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_MakeVector2D_ReturnValue_4) == 0x00009C, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_2) == 0x0000A4, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000B4, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Divide_Vector2DFloat_ReturnValue_3) == 0x0000BC, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Divide_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_CalcPosition, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000C4, "Member 'WBP_ObjectiveMarker_C_CalcPosition::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

// Function WBP_ObjectiveMarker.WBP_ObjectiveMarker_C.GetBackground_Border
// 0x01D0 (0x01D0 - 0x0000)
struct WBP_ObjectiveMarker_C_GetBackground_Border final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00B0(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0138(0x0088)()
	class FName                                   CallFunc_GetObjectiveMarkerType_ReturnValue;       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ObjectiveMarker_C_GetBackground_Border) == 0x000008, "Wrong alignment on WBP_ObjectiveMarker_C_GetBackground_Border");
static_assert(sizeof(WBP_ObjectiveMarker_C_GetBackground_Border) == 0x0001D0, "Wrong size on WBP_ObjectiveMarker_C_GetBackground_Border");
static_assert(offsetof(WBP_ObjectiveMarker_C_GetBackground_Border, ReturnValue) == 0x000000, "Member 'WBP_ObjectiveMarker_C_GetBackground_Border::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_GetBackground_Border, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'WBP_ObjectiveMarker_C_GetBackground_Border::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_GetBackground_Border, K2Node_MakeStruct_SlateBrush) == 0x0000B0, "Member 'WBP_ObjectiveMarker_C_GetBackground_Border::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_GetBackground_Border, K2Node_MakeStruct_SlateBrush_1) == 0x000138, "Member 'WBP_ObjectiveMarker_C_GetBackground_Border::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_GetBackground_Border, CallFunc_GetObjectiveMarkerType_ReturnValue) == 0x0001C0, "Member 'WBP_ObjectiveMarker_C_GetBackground_Border::CallFunc_GetObjectiveMarkerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_GetBackground_Border, K2Node_SwitchName_CmpSuccess) == 0x0001C8, "Member 'WBP_ObjectiveMarker_C_GetBackground_Border::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function WBP_ObjectiveMarker.WBP_ObjectiveMarker_C.ParseObjectiveNameForModifier
// 0x0060 (0x0060 - 0x0000)
struct WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier final
{
public:
	class FString                                 ObjectiveName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CleanObjectiveName;                                // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             ModifierSprite;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayStaircaseIcon;                              // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DisplayLevelNumberText;                            // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LevelNumber_0;                                     // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ModifierSpriteRotation;                            // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier) == 0x000008, "Wrong alignment on WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier");
static_assert(sizeof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier) == 0x000060, "Wrong size on WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, ObjectiveName) == 0x000000, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::ObjectiveName' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, CleanObjectiveName) == 0x000010, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::CleanObjectiveName' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, ModifierSprite) == 0x000020, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::ModifierSprite' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, DisplayStaircaseIcon) == 0x000028, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::DisplayStaircaseIcon' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, DisplayLevelNumberText) == 0x000029, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::DisplayLevelNumberText' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, LevelNumber_0) == 0x00002C, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::LevelNumber_0' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, ModifierSpriteRotation) == 0x000030, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::ModifierSpriteRotation' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, CallFunc_Left_ReturnValue) == 0x000038, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, K2Node_SwitchString_CmpSuccess) == 0x000048, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier, CallFunc_RightChop_ReturnValue) == 0x000050, "Member 'WBP_ObjectiveMarker_C_ParseObjectiveNameForModifier::CallFunc_RightChop_ReturnValue' has a wrong offset!");

}

