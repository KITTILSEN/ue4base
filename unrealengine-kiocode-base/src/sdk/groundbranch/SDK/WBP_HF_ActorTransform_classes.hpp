#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HF_ActorTransform

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HF_ActorTransform.WBP_HF_ActorTransform_C
// 0x0080 (0x02E0 - 0x0260)
class UWBP_HF_ActorTransform_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_HFRotatorSpinBox_C*                HFRotatorSpinBox_Rotation;                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HFVectorSpinBox_C*                 HFVectorSpinBox_Location;                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HFVectorSpinBox_C*                 HFVectorSpinBox_Scale;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AHFManager*                             HotFootManagerRef;                                 // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorToCheck;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumActors;                                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ErrorTolerance;                                    // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseLocation;                                      // 0x0298(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseRotation;                                      // 0x02A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseScale;                                         // 0x02B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AvgLocation;                                       // 0x02BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AvgRotation;                                       // 0x02C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AvgScale;                                          // 0x02D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetupProperty(class AHFManager* HFManager, const struct FHFSharedProperty& HFSharedProperty);
	void Update(class AHFManager* HotFootManagerRef_0);
	void BndEvt__HFVectorSpinBox_Location_K2Node_ComponentBoundEvent_0_OnXChanged__DelegateSignature(float NewX);
	void BndEvt__HFVectorSpinBox_Location_K2Node_ComponentBoundEvent_1_OnYChanged__DelegateSignature(float NewY);
	void BndEvt__HFVectorSpinBox_Location_K2Node_ComponentBoundEvent_2_OnZChanged__DelegateSignature(float NewZ);
	void BndEvt__HFRotatorSpinBox_Rotation_K2Node_ComponentBoundEvent_3_OnRollChanged__DelegateSignature(float NewRoll);
	void BndEvt__HFRotatorSpinBox_Rotation_K2Node_ComponentBoundEvent_4_OnPitchChanged__DelegateSignature(float NewPitch);
	void BndEvt__HFRotatorSpinBox_Rotation_K2Node_ComponentBoundEvent_5_OnYawChanged__DelegateSignature(float NewYaw);
	void BndEvt__HFVectorSpinBox_Scale_K2Node_ComponentBoundEvent_6_OnXChanged__DelegateSignature(float NewX);
	void BndEvt__HFVectorSpinBox_Scale_K2Node_ComponentBoundEvent_7_OnYChanged__DelegateSignature(float NewY);
	void BndEvt__HFVectorSpinBox_Scale_K2Node_ComponentBoundEvent_8_OnZChanged__DelegateSignature(float NewZ);
	void SetValuesFromActors();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ExecuteUbergraph_WBP_HF_ActorTransform(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HF_ActorTransform_C">();
	}
	static class UWBP_HF_ActorTransform_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HF_ActorTransform_C>();
	}
};
static_assert(alignof(UWBP_HF_ActorTransform_C) == 0x000008, "Wrong alignment on UWBP_HF_ActorTransform_C");
static_assert(sizeof(UWBP_HF_ActorTransform_C) == 0x0002E0, "Wrong size on UWBP_HF_ActorTransform_C");
static_assert(offsetof(UWBP_HF_ActorTransform_C, UberGraphFrame) == 0x000260, "Member 'UWBP_HF_ActorTransform_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, HFRotatorSpinBox_Rotation) == 0x000268, "Member 'UWBP_HF_ActorTransform_C::HFRotatorSpinBox_Rotation' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, HFVectorSpinBox_Location) == 0x000270, "Member 'UWBP_HF_ActorTransform_C::HFVectorSpinBox_Location' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, HFVectorSpinBox_Scale) == 0x000278, "Member 'UWBP_HF_ActorTransform_C::HFVectorSpinBox_Scale' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, HotFootManagerRef) == 0x000280, "Member 'UWBP_HF_ActorTransform_C::HotFootManagerRef' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, ActorToCheck) == 0x000288, "Member 'UWBP_HF_ActorTransform_C::ActorToCheck' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, NumActors) == 0x000290, "Member 'UWBP_HF_ActorTransform_C::NumActors' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, ErrorTolerance) == 0x000294, "Member 'UWBP_HF_ActorTransform_C::ErrorTolerance' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, BaseLocation) == 0x000298, "Member 'UWBP_HF_ActorTransform_C::BaseLocation' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, BaseRotation) == 0x0002A4, "Member 'UWBP_HF_ActorTransform_C::BaseRotation' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, BaseScale) == 0x0002B0, "Member 'UWBP_HF_ActorTransform_C::BaseScale' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, AvgLocation) == 0x0002BC, "Member 'UWBP_HF_ActorTransform_C::AvgLocation' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, AvgRotation) == 0x0002C8, "Member 'UWBP_HF_ActorTransform_C::AvgRotation' has a wrong offset!");
static_assert(offsetof(UWBP_HF_ActorTransform_C, AvgScale) == 0x0002D4, "Member 'UWBP_HF_ActorTransform_C::AvgScale' has a wrong offset!");

}

