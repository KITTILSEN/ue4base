#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowerUserComponent

#include "Basic.hpp"

#include "EGBPowerSourceStatus_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PowerUserComponent.BP_PowerUserComponent_C
// 0x0030 (0x00E0 - 0x00B0)
class UBP_PowerUserComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   PowerGroup;                                        // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PowerCoordinator_C*                 PowerCoordinatorRef;                               // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGBPowerSourceStatus                          PowerStatus;                                       // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EGBPowerSourceStatus InSharedPowerSourceStatus)> OnSharedPowerSourceStatusChanged; // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_PowerUserComponent(int32 EntryPoint);
	void OnSharedPowerSourceStatusChanged_Event_0(EGBPowerSourceStatus InSharedPowerSourceStatus);
	void SetPowerCoordinator(class ABP_PowerCoordinator_C* InPowerCoordinator);
	void ReceiveBeginPlay();
	void GetCoordinator(class ABP_PowerCoordinator_C** Array_Element);
	void ShowPowerSources();

	void GetSharedPowerSourceStatus(EGBPowerSourceStatus* PowerSourceStatus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PowerUserComponent_C">();
	}
	static class UBP_PowerUserComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PowerUserComponent_C>();
	}
};
static_assert(alignof(UBP_PowerUserComponent_C) == 0x000008, "Wrong alignment on UBP_PowerUserComponent_C");
static_assert(sizeof(UBP_PowerUserComponent_C) == 0x0000E0, "Wrong size on UBP_PowerUserComponent_C");
static_assert(offsetof(UBP_PowerUserComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_PowerUserComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PowerUserComponent_C, PowerGroup) == 0x0000B8, "Member 'UBP_PowerUserComponent_C::PowerGroup' has a wrong offset!");
static_assert(offsetof(UBP_PowerUserComponent_C, PowerCoordinatorRef) == 0x0000C0, "Member 'UBP_PowerUserComponent_C::PowerCoordinatorRef' has a wrong offset!");
static_assert(offsetof(UBP_PowerUserComponent_C, PowerStatus) == 0x0000C8, "Member 'UBP_PowerUserComponent_C::PowerStatus' has a wrong offset!");
static_assert(offsetof(UBP_PowerUserComponent_C, OnSharedPowerSourceStatusChanged) == 0x0000D0, "Member 'UBP_PowerUserComponent_C::OnSharedPowerSourceStatusChanged' has a wrong offset!");

}

