#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeatherType_ListEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeatherType_ListEntry.WBP_WeatherType_ListEntry_C.ExecuteUbergraph_WBP_WeatherType_ListEntry
// 0x0200 (0x0200 - 0x0000)
struct WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeatherTypeFileObj_C*               K2Node_DynamicCast_AsBP_Weather_Type_File_Obj;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_LoadedAsset;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_EncodeWeatherPresetObjectName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               K2Node_DynamicCast_AsSky_Creator_Weather_Preset;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	EGroundCoverType                              CallFunc_GetGroundCover_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCloudCover_ReturnValue;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFogAmount_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0080(0x0018)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetAmountDescriptor_Descriptor;           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSnowAmount_ReturnValue;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetAmountDescriptor_Descriptor_1;         // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRainAmount_ReturnValue;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetAmountDescriptor_Descriptor_2;         // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* LoadedAsset)>   K2Node_CreateDelegate_OutputDelegate;              // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01B8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x01D8(0x0028)()
};
static_assert(alignof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry) == 0x000008, "Wrong alignment on WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry");
static_assert(sizeof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry) == 0x000200, "Wrong size on WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, EntryPoint) == 0x000000, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_Event_bIsSelected) == 0x000004, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_Event_ListItemObject) == 0x000008, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_Event_bIsExpanded) == 0x000010, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_DynamicCast_AsBP_Weather_Type_File_Obj) == 0x000018, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_DynamicCast_AsBP_Weather_Type_File_Obj' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_CustomEvent_LoadedAsset) == 0x000028, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_CustomEvent_LoadedAsset' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_EncodeWeatherPresetObjectName_ReturnValue) == 0x000030, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_EncodeWeatherPresetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_DynamicCast_AsSky_Creator_Weather_Preset) == 0x000040, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_DynamicCast_AsSky_Creator_Weather_Preset' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000050, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_GetGroundCover_ReturnValue) == 0x000068, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_GetGroundCover_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_GetCloudCover_ReturnValue) == 0x00006C, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_GetCloudCover_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000071, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000074, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_GetFogAmount_ReturnValue) == 0x000078, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_GetFogAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Conv_FloatToText_ReturnValue) == 0x000080, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000098, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_GetAmountDescriptor_Descriptor) == 0x0000E0, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_GetAmountDescriptor_Descriptor' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Format_ReturnValue) == 0x000110, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Conv_TextToString_ReturnValue) == 0x000128, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_GetSnowAmount_ReturnValue) == 0x000138, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_GetSnowAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_SelectString_ReturnValue) == 0x000140, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000150, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_GetAmountDescriptor_Descriptor_1) == 0x000158, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_GetAmountDescriptor_Descriptor_1' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_GetRainAmount_ReturnValue) == 0x000168, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_GetRainAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000170, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000180, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_GetAmountDescriptor_Descriptor_2) == 0x000188, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_GetAmountDescriptor_Descriptor_2' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000198, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_CreateDelegate_OutputDelegate) == 0x0001A8, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, CallFunc_Conv_StringToText_ReturnValue) == 0x0001B8, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, Temp_bool_Variable) == 0x0001D0, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry, K2Node_Select_Default) == 0x0001D8, "Member 'WBP_WeatherType_ListEntry_C_ExecuteUbergraph_WBP_WeatherType_ListEntry::K2Node_Select_Default' has a wrong offset!");

// Function WBP_WeatherType_ListEntry.WBP_WeatherType_ListEntry_C.AddToDescriptionString
// 0x0098 (0x0098 - 0x0000)
struct WBP_WeatherType_ListEntry_C_AddToDescriptionString final
{
public:
	class FString                                 ExtraString;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bAddString;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeatherType_ListEntry_C_AddToDescriptionString) == 0x000008, "Wrong alignment on WBP_WeatherType_ListEntry_C_AddToDescriptionString");
static_assert(sizeof(WBP_WeatherType_ListEntry_C_AddToDescriptionString) == 0x000098, "Wrong size on WBP_WeatherType_ListEntry_C_AddToDescriptionString");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, ExtraString) == 0x000000, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::ExtraString' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, bAddString) == 0x000010, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::bAddString' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_Len_ReturnValue) == 0x000028, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_Left_ReturnValue) == 0x000048, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_RightChop_ReturnValue) == 0x000058, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_ToUpper_ReturnValue) == 0x000068, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_AddToDescriptionString, CallFunc_SelectString_ReturnValue) == 0x000088, "Member 'WBP_WeatherType_ListEntry_C_AddToDescriptionString::CallFunc_SelectString_ReturnValue' has a wrong offset!");

// Function WBP_WeatherType_ListEntry.WBP_WeatherType_ListEntry_C.GetAmountDescriptor
// 0x0040 (0x0040 - 0x0000)
struct WBP_WeatherType_ListEntry_C_GetAmountDescriptor final
{
public:
	float                                         NormalisedAmount;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Descriptor;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeatherType_ListEntry_C_GetAmountDescriptor) == 0x000008, "Wrong alignment on WBP_WeatherType_ListEntry_C_GetAmountDescriptor");
static_assert(sizeof(WBP_WeatherType_ListEntry_C_GetAmountDescriptor) == 0x000040, "Wrong size on WBP_WeatherType_ListEntry_C_GetAmountDescriptor");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_GetAmountDescriptor, NormalisedAmount) == 0x000000, "Member 'WBP_WeatherType_ListEntry_C_GetAmountDescriptor::NormalisedAmount' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_GetAmountDescriptor, Descriptor) == 0x000008, "Member 'WBP_WeatherType_ListEntry_C_GetAmountDescriptor::Descriptor' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_GetAmountDescriptor, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_WeatherType_ListEntry_C_GetAmountDescriptor::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_GetAmountDescriptor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000019, "Member 'WBP_WeatherType_ListEntry_C_GetAmountDescriptor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_GetAmountDescriptor, CallFunc_SelectString_ReturnValue) == 0x000020, "Member 'WBP_WeatherType_ListEntry_C_GetAmountDescriptor::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_GetAmountDescriptor, CallFunc_SelectString_ReturnValue_1) == 0x000030, "Member 'WBP_WeatherType_ListEntry_C_GetAmountDescriptor::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");

// Function WBP_WeatherType_ListEntry.WBP_WeatherType_ListEntry_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeatherType_ListEntry_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_WeatherType_ListEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_WeatherType_ListEntry_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_WeatherType_ListEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_WeatherType_ListEntry_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_WeatherType_ListEntry_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_WeatherType_ListEntry.WBP_WeatherType_ListEntry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeatherType_ListEntry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeatherType_ListEntry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_WeatherType_ListEntry_C_OnListItemObjectSet");
static_assert(sizeof(WBP_WeatherType_ListEntry_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_WeatherType_ListEntry_C_OnListItemObjectSet");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_WeatherType_ListEntry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_WeatherType_ListEntry.WBP_WeatherType_ListEntry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeatherType_ListEntry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_WeatherType_ListEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_WeatherType_ListEntry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_WeatherType_ListEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_WeatherType_ListEntry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_WeatherType_ListEntry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_WeatherType_ListEntry.WBP_WeatherType_ListEntry_C.OnLoadedWeatherPreset
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeatherType_ListEntry_C_OnLoadedWeatherPreset final
{
public:
	class UObject*                                LoadedAsset;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeatherType_ListEntry_C_OnLoadedWeatherPreset) == 0x000008, "Wrong alignment on WBP_WeatherType_ListEntry_C_OnLoadedWeatherPreset");
static_assert(sizeof(WBP_WeatherType_ListEntry_C_OnLoadedWeatherPreset) == 0x000008, "Wrong size on WBP_WeatherType_ListEntry_C_OnLoadedWeatherPreset");
static_assert(offsetof(WBP_WeatherType_ListEntry_C_OnLoadedWeatherPreset, LoadedAsset) == 0x000000, "Member 'WBP_WeatherType_ListEntry_C_OnLoadedWeatherPreset::LoadedAsset' has a wrong offset!");

}

