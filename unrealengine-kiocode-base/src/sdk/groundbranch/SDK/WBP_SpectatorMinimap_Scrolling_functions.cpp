#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpectatorMinimap_Scrolling

#include "Basic.hpp"

#include "WBP_SpectatorMinimap_Scrolling_classes.hpp"
#include "WBP_SpectatorMinimap_Scrolling_parameters.hpp"


namespace SDK
{

// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.GetSpectatorArrowVis
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UWBP_SpectatorMinimap_Scrolling_C::GetSpectatorArrowVis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "GetSpectatorArrowVis");

	Params::WBP_SpectatorMinimap_Scrolling_C_GetSpectatorArrowVis Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_SpectatorMinimap_Scrolling_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpectatorMinimap_Scrolling_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "Tick");

	Params::WBP_SpectatorMinimap_Scrolling_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.SetZoomLevel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Zoom                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpectatorMinimap_Scrolling_C::SetZoomLevel(float Zoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "SetZoomLevel");

	Params::WBP_SpectatorMinimap_Scrolling_C_SetZoomLevel Parms{};

	Parms.Zoom = Zoom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.SetMinimapStyle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NewStyle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpectatorMinimap_Scrolling_C::SetMinimapStyle(class FName NewStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "SetMinimapStyle");

	Params::WBP_SpectatorMinimap_Scrolling_C_SetMinimapStyle Parms{};

	Parms.NewStyle = NewStyle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.UpdateTranslation
// (BlueprintCallable, BlueprintEvent)

void UWBP_SpectatorMinimap_Scrolling_C::UpdateTranslation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "UpdateTranslation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.UpdateRotation
// (BlueprintCallable, BlueprintEvent)

void UWBP_SpectatorMinimap_Scrolling_C::UpdateRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "UpdateRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.AdjustZoomLevel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpectatorMinimap_Scrolling_C::AdjustZoomLevel(float Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "AdjustZoomLevel");

	Params::WBP_SpectatorMinimap_Scrolling_C_AdjustZoomLevel Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.BindToSpecatorOverlayUpdate
// (BlueprintCallable, BlueprintEvent)

void UWBP_SpectatorMinimap_Scrolling_C::BindToSpecatorOverlayUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "BindToSpecatorOverlayUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.OnUpdate_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Spectator_Overlay_C*         SpectatorOverlay                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpectatorMinimap_Scrolling_C::OnUpdate_Event_0(class UWBP_Spectator_Overlay_C* SpectatorOverlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "OnUpdate_Event_0");

	Params::WBP_SpectatorMinimap_Scrolling_C_OnUpdate_Event_0 Parms{};

	Parms.SpectatorOverlay = SpectatorOverlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SpectatorMinimap_Scrolling.WBP_SpectatorMinimap_Scrolling_C.ExecuteUbergraph_WBP_SpectatorMinimap_Scrolling
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SpectatorMinimap_Scrolling_C::ExecuteUbergraph_WBP_SpectatorMinimap_Scrolling(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SpectatorMinimap_Scrolling_C", "ExecuteUbergraph_WBP_SpectatorMinimap_Scrolling");

	Params::WBP_SpectatorMinimap_Scrolling_C_ExecuteUbergraph_WBP_SpectatorMinimap_Scrolling Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

