#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeatherType_ListEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_WeatherType_ListEntry.WBP_WeatherType_ListEntry_C
// 0x00D0 (0x0330 - 0x0260)
class UWBP_WeatherType_ListEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_Background;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gradient_Left;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gradient_Right;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_2;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlockWeatherDescription;                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlockWeatherType;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundDefaultColour;                           // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundSelectedColour;                          // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            FontDefaultColour;                                 // 0x02B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            FontSelectedColour;                                // 0x02E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   Weather_Category;                                  // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Weather_Type;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               As_Sky_Creator_Weather_Preset;                     // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DescriptionString;                                 // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BP_OnEntryReleased();
	void ExecuteUbergraph_WBP_WeatherType_ListEntry(int32 EntryPoint);
	void AddToDescriptionString(const class FString& ExtraString, bool bAddString);
	void GetAmountDescriptor(float NormalisedAmount, class FString* Descriptor);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void LoadWeatherPreset();
	void OnLoadedWeatherPreset(class UObject* LoadedAsset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_WeatherType_ListEntry_C">();
	}
	static class UWBP_WeatherType_ListEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_WeatherType_ListEntry_C>();
	}
};
static_assert(alignof(UWBP_WeatherType_ListEntry_C) == 0x000008, "Wrong alignment on UWBP_WeatherType_ListEntry_C");
static_assert(sizeof(UWBP_WeatherType_ListEntry_C) == 0x000330, "Wrong size on UWBP_WeatherType_ListEntry_C");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, UberGraphFrame) == 0x000260, "Member 'UWBP_WeatherType_ListEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, Border_Background) == 0x000268, "Member 'UWBP_WeatherType_ListEntry_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, Gradient_Left) == 0x000270, "Member 'UWBP_WeatherType_ListEntry_C::Gradient_Left' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, Gradient_Right) == 0x000278, "Member 'UWBP_WeatherType_ListEntry_C::Gradient_Right' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, SizeBox_2) == 0x000280, "Member 'UWBP_WeatherType_ListEntry_C::SizeBox_2' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, TextBlockWeatherDescription) == 0x000288, "Member 'UWBP_WeatherType_ListEntry_C::TextBlockWeatherDescription' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, TextBlockWeatherType) == 0x000290, "Member 'UWBP_WeatherType_ListEntry_C::TextBlockWeatherType' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, BackgroundDefaultColour) == 0x000298, "Member 'UWBP_WeatherType_ListEntry_C::BackgroundDefaultColour' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, BackgroundSelectedColour) == 0x0002A8, "Member 'UWBP_WeatherType_ListEntry_C::BackgroundSelectedColour' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, FontDefaultColour) == 0x0002B8, "Member 'UWBP_WeatherType_ListEntry_C::FontDefaultColour' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, FontSelectedColour) == 0x0002E0, "Member 'UWBP_WeatherType_ListEntry_C::FontSelectedColour' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, Weather_Category) == 0x000308, "Member 'UWBP_WeatherType_ListEntry_C::Weather_Category' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, Weather_Type) == 0x000310, "Member 'UWBP_WeatherType_ListEntry_C::Weather_Type' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, As_Sky_Creator_Weather_Preset) == 0x000318, "Member 'UWBP_WeatherType_ListEntry_C::As_Sky_Creator_Weather_Preset' has a wrong offset!");
static_assert(offsetof(UWBP_WeatherType_ListEntry_C, DescriptionString) == 0x000320, "Member 'UWBP_WeatherType_ListEntry_C::DescriptionString' has a wrong offset!");

}

