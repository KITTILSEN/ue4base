#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameInfo_Player

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GameInfo_Player.WBP_GameInfo_Player_C
// 0x0300 (0x0560 - 0x0260)
class UWBP_GameInfo_Player_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseVOIP;                                         // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_2;                                          // 0x0270(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Mute;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Volunteer;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_VOIP;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Volunteer;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Admin;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Element;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Volunteer;                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_CallSign;                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Ping;                                    // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_PlayerName;                              // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_UniqueId;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdminIcon_C*                       WBP_AdminIcon;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickPlayerAdmin_C*                WBP_QuickPlayerAdmin;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickPlayerTeamElement_C*          WBP_QuickSetElement;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGBPlayerState*                         PlayerState;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Colour_OddEntry;                                   // 0x02F4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Colour_EvenEntry;                                  // 0x0304(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            VOIPNormal;                                        // 0x0318(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            VOIPTalking;                                       // 0x03A0(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            VOIPMutedBrush;                                    // 0x0428(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LastReceivedVOIP;                                  // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ClickToUnMutePlayer;                               // 0x04B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ClickToMutePlayer;                                 // 0x04D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ClickToMuteTalkingPlayer;                          // 0x04E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsUsingVOIP;                                      // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Colour_HoveredEntry;                               // 0x0504(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             TextureVolunteerNo;                                // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             TextureVolunteerYes;                               // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VolunteerImageSize;                                // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVolunteeringAllowed;                              // 0x052C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UniqueId;                                          // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bAssociatedPlayerIsAdmin;                          // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TooltipTextVolunteer;                              // 0x0548(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_GameInfo_Player(int32 EntryPoint);
	void CheckAdminTimer();
	void CheckAdminStartTimer();
	void Construct();
	void BndEvt__WBP_GameInfo_Player_Button_Volunteer_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__Button_Mute_K2Node_ComponentBoundEvent_65_OnButtonClickedEvent__DelegateSignature();
	void UpdateVOIPPulse(bool Talking);
	struct FLinearColor GetLineColour();
	class FText GetPlayerName();
	class FText GetPlayerPing();
	struct FSlateBrush GetMuteBrush();
	class FText GetUniqueId();
	ESlateVisibility GetOnDutyVis();
	class UWidget* Get_Button_Mute_ToolTipWidget_0();
	class FText Get_TextBlock_CallSign_Text_0();
	struct FSlateBrush Get_Image_Volunteer_Brush_0();
	ESlateVisibility Get_SizeBox_Volunteer_Visibility_0();
	class UWidget* Get_Size_Box_Volunteer_Tool_Tip_Widget_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GameInfo_Player_C">();
	}
	static class UWBP_GameInfo_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GameInfo_Player_C>();
	}
};
static_assert(alignof(UWBP_GameInfo_Player_C) == 0x000008, "Wrong alignment on UWBP_GameInfo_Player_C");
static_assert(sizeof(UWBP_GameInfo_Player_C) == 0x000560, "Wrong size on UWBP_GameInfo_Player_C");
static_assert(offsetof(UWBP_GameInfo_Player_C, UberGraphFrame) == 0x000260, "Member 'UWBP_GameInfo_Player_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, PulseVOIP) == 0x000268, "Member 'UWBP_GameInfo_Player_C::PulseVOIP' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Border_2) == 0x000270, "Member 'UWBP_GameInfo_Player_C::Border_2' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Button_Mute) == 0x000278, "Member 'UWBP_GameInfo_Player_C::Button_Mute' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Button_Volunteer) == 0x000280, "Member 'UWBP_GameInfo_Player_C::Button_Volunteer' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Image_VOIP) == 0x000288, "Member 'UWBP_GameInfo_Player_C::Image_VOIP' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Image_Volunteer) == 0x000290, "Member 'UWBP_GameInfo_Player_C::Image_Volunteer' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, SizeBox_Admin) == 0x000298, "Member 'UWBP_GameInfo_Player_C::SizeBox_Admin' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, SizeBox_Element) == 0x0002A0, "Member 'UWBP_GameInfo_Player_C::SizeBox_Element' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, SizeBox_Volunteer) == 0x0002A8, "Member 'UWBP_GameInfo_Player_C::SizeBox_Volunteer' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, TextBlock_CallSign) == 0x0002B0, "Member 'UWBP_GameInfo_Player_C::TextBlock_CallSign' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, TextBlock_Ping) == 0x0002B8, "Member 'UWBP_GameInfo_Player_C::TextBlock_Ping' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, TextBlock_PlayerName) == 0x0002C0, "Member 'UWBP_GameInfo_Player_C::TextBlock_PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, TextBlock_UniqueId) == 0x0002C8, "Member 'UWBP_GameInfo_Player_C::TextBlock_UniqueId' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, WBP_AdminIcon) == 0x0002D0, "Member 'UWBP_GameInfo_Player_C::WBP_AdminIcon' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, WBP_QuickPlayerAdmin) == 0x0002D8, "Member 'UWBP_GameInfo_Player_C::WBP_QuickPlayerAdmin' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, WBP_QuickSetElement) == 0x0002E0, "Member 'UWBP_GameInfo_Player_C::WBP_QuickSetElement' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, PlayerState) == 0x0002E8, "Member 'UWBP_GameInfo_Player_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Index_0) == 0x0002F0, "Member 'UWBP_GameInfo_Player_C::Index_0' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Colour_OddEntry) == 0x0002F4, "Member 'UWBP_GameInfo_Player_C::Colour_OddEntry' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Colour_EvenEntry) == 0x000304, "Member 'UWBP_GameInfo_Player_C::Colour_EvenEntry' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, VOIPNormal) == 0x000318, "Member 'UWBP_GameInfo_Player_C::VOIPNormal' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, VOIPTalking) == 0x0003A0, "Member 'UWBP_GameInfo_Player_C::VOIPTalking' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, VOIPMutedBrush) == 0x000428, "Member 'UWBP_GameInfo_Player_C::VOIPMutedBrush' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, LastReceivedVOIP) == 0x0004B0, "Member 'UWBP_GameInfo_Player_C::LastReceivedVOIP' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, ClickToUnMutePlayer) == 0x0004B8, "Member 'UWBP_GameInfo_Player_C::ClickToUnMutePlayer' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, ClickToMutePlayer) == 0x0004D0, "Member 'UWBP_GameInfo_Player_C::ClickToMutePlayer' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, ClickToMuteTalkingPlayer) == 0x0004E8, "Member 'UWBP_GameInfo_Player_C::ClickToMuteTalkingPlayer' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, bIsUsingVOIP) == 0x000500, "Member 'UWBP_GameInfo_Player_C::bIsUsingVOIP' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, Colour_HoveredEntry) == 0x000504, "Member 'UWBP_GameInfo_Player_C::Colour_HoveredEntry' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, TextureVolunteerNo) == 0x000518, "Member 'UWBP_GameInfo_Player_C::TextureVolunteerNo' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, TextureVolunteerYes) == 0x000520, "Member 'UWBP_GameInfo_Player_C::TextureVolunteerYes' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, VolunteerImageSize) == 0x000528, "Member 'UWBP_GameInfo_Player_C::VolunteerImageSize' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, bVolunteeringAllowed) == 0x00052C, "Member 'UWBP_GameInfo_Player_C::bVolunteeringAllowed' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, UniqueId) == 0x000530, "Member 'UWBP_GameInfo_Player_C::UniqueId' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, bAssociatedPlayerIsAdmin) == 0x000540, "Member 'UWBP_GameInfo_Player_C::bAssociatedPlayerIsAdmin' has a wrong offset!");
static_assert(offsetof(UWBP_GameInfo_Player_C, TooltipTextVolunteer) == 0x000548, "Member 'UWBP_GameInfo_Player_C::TooltipTextVolunteer' has a wrong offset!");

}

