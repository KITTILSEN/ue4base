#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameMessage_Manager

#include "Basic.hpp"

#include "WBP_GameMessage_Manager_classes.hpp"
#include "WBP_GameMessage_Manager_parameters.hpp"


namespace SDK
{

// Function WBP_GameMessage_Manager.WBP_GameMessage_Manager_C.ExecuteUbergraph_WBP_GameMessage_Manager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GameMessage_Manager_C::ExecuteUbergraph_WBP_GameMessage_Manager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GameMessage_Manager_C", "ExecuteUbergraph_WBP_GameMessage_Manager");

	Params::WBP_GameMessage_Manager_C_ExecuteUbergraph_WBP_GameMessage_Manager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GameMessage_Manager.WBP_GameMessage_Manager_C.AddMessage
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<class FName>&              Tags                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   DisplayTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlushMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_GameMessage_Manager_C::AddMessage(const class FText& Message, const TArray<class FName>& Tags, float DisplayTime, bool FlushMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GameMessage_Manager_C", "AddMessage");

	Params::WBP_GameMessage_Manager_C_AddMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.Tags = std::move(Tags);
	Parms.DisplayTime = DisplayTime;
	Parms.FlushMessages = FlushMessages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GameMessage_Manager.WBP_GameMessage_Manager_C.RemoveMessages
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    Tags                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_GameMessage_Manager_C::RemoveMessages(TArray<class FName>& Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GameMessage_Manager_C", "RemoveMessages");

	Params::WBP_GameMessage_Manager_C_RemoveMessages Parms{};

	Parms.Tags = std::move(Tags);

	UObject::ProcessEvent(Func, &Parms);

	Tags = std::move(Parms.Tags);
}


// Function WBP_GameMessage_Manager.WBP_GameMessage_Manager_C.RemoveAllMessages
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_GameMessage_Manager_C::RemoveAllMessages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GameMessage_Manager_C", "RemoveAllMessages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GameMessage_Manager.WBP_GameMessage_Manager_C.FadeMessages
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    Tags                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_GameMessage_Manager_C::FadeMessages(TArray<class FName>& Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GameMessage_Manager_C", "FadeMessages");

	Params::WBP_GameMessage_Manager_C_FadeMessages Parms{};

	Parms.Tags = std::move(Tags);

	UObject::ProcessEvent(Func, &Parms);

	Tags = std::move(Parms.Tags);
}

}

