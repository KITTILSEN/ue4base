#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IE_List

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_IE_List.WBP_IE_List_C
// 0x01C0 (0x0420 - 0x0260)
class UWBP_IE_List_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_Clear_TallAndThin;                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Clear_WideAndShort;                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_ModAndCustomBuildFilter_Tall;               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_ModAndCustomBuildFilter_WideAndShort;       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_Search_TallAndThin;                // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_Search_WideAndShort;               // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGBCustomTileView*                      GBCustomTileView_TallAndThin;                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGBCustomTileView*                      GBCustomTileView_WideAndShort;                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EyeIcon_Tall;                                // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EyeIcon_WideAndShort;                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Categories_TallAndThin;                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Categories_WideAndShort;                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_140;                                     // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_DraggableItemType_TallAndThin;           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_DraggableItemType_WideAndShort;          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanel_TallAndThin;                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanel_WideAndShort;                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Arrangement;                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UGBInvItemDragDropPayload*>      Payloads;                                          // 0x0300(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class UGBInvItemDragDropPayload*>      FilteredPayloads;                                  // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UCanvasPanel*                           FloatingCanvas;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 NameFilter;                                        // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UWBP_Editor_ListCategory_C*>     OldCategoryWidgets;                                // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FGameplayTag>                   DefaultCheckedTags;                                // 0x0348(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGameplayTag>                   ExcludeInvItemCategoryTags;                        // 0x0358(0x0010)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  InvItemUICategoryTag;                              // 0x0368(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bVerticalLayout;                                   // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DraggableItemTypeName;                             // 0x0390(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Tooltip_LMBToSelectEtc;                            // 0x03A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 AttachmentUIFilterTagsSectionName;                 // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FLinearColor                           FilterInactiveEyeTintColour;                       // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FilterActiveEyeTintColour;                         // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_CE_ListFilters_Base_C*             ListFilter;                                        // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   FilterTitle;                                       // 0x03F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 DraggableItemsCheckedTagsConfigSection;            // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_IE_List(int32 EntryPoint);
	void BndEvt__WBP_DraggableItemsList_Button_ModAndCustomBuildFilter_Tall_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void SetNameFilter(const class FString& NameFilter_0);
	void BndEvt__WBP_CE_List_Button_ModAndCustomBuildFilter_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature();
	void OnListFilterUpdate_Event_0();
	void FindOrCreateListFilter();
	void BndEvt__WBP_DraggableItemsList_Button_Clear_TallAndThin_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_DraggableItemsList_EditableTextBox_Search_TallAndThin_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void PreConstruct(bool IsDesignTime);
	void OnCheckStateChanged();
	void Construct();
	void BindCategory(class UWBP_Editor_ListCategory_C* InCategoryWidget);
	void BndEvt__Button_Clear_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__EditableTextBox_Search_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void SetCategoryTags(const struct FGameplayTagContainer& InNewInvItemCategories);
	void SetPayloads(TArray<class UGBInvItemDragDropPayload*>& InNewPayloads);
	void PassedFilters(class UGBInvItemDragDropPayload* InPayload, bool* bOutPassed);
	void UpdateFilter();
	bool CheckedByDefault(const struct FGameplayTag& InCategoryTag);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void GetTileViewWidget(class UGBCustomTileView** CustomTileViewWidget);
	void GetScrollBoxCategoriesWidget(class UScrollBox** ScrollBoxCategoriesWidget);
	void GetUniformGridPanelWidget(class UUniformGridPanel** UniformGridPanelWidget);
	class UWidget* GetToolTipWidget_0();
	class UWidget* GetToolTipWidget_1();
	void GetUIFilterValue(const struct FGameplayTag& FilterTag, bool* bFilterValue);
	struct FLinearColor GetEyeFilterColour();
	class UWidget* GetFilterToolTipWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_IE_List_C">();
	}
	static class UWBP_IE_List_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_IE_List_C>();
	}
};
static_assert(alignof(UWBP_IE_List_C) == 0x000008, "Wrong alignment on UWBP_IE_List_C");
static_assert(sizeof(UWBP_IE_List_C) == 0x000420, "Wrong size on UWBP_IE_List_C");
static_assert(offsetof(UWBP_IE_List_C, UberGraphFrame) == 0x000260, "Member 'UWBP_IE_List_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, Button_Clear_TallAndThin) == 0x000268, "Member 'UWBP_IE_List_C::Button_Clear_TallAndThin' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, Button_Clear_WideAndShort) == 0x000270, "Member 'UWBP_IE_List_C::Button_Clear_WideAndShort' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, Button_ModAndCustomBuildFilter_Tall) == 0x000278, "Member 'UWBP_IE_List_C::Button_ModAndCustomBuildFilter_Tall' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, Button_ModAndCustomBuildFilter_WideAndShort) == 0x000280, "Member 'UWBP_IE_List_C::Button_ModAndCustomBuildFilter_WideAndShort' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, EditableTextBox_Search_TallAndThin) == 0x000288, "Member 'UWBP_IE_List_C::EditableTextBox_Search_TallAndThin' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, EditableTextBox_Search_WideAndShort) == 0x000290, "Member 'UWBP_IE_List_C::EditableTextBox_Search_WideAndShort' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, GBCustomTileView_TallAndThin) == 0x000298, "Member 'UWBP_IE_List_C::GBCustomTileView_TallAndThin' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, GBCustomTileView_WideAndShort) == 0x0002A0, "Member 'UWBP_IE_List_C::GBCustomTileView_WideAndShort' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, Image_EyeIcon_Tall) == 0x0002A8, "Member 'UWBP_IE_List_C::Image_EyeIcon_Tall' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, Image_EyeIcon_WideAndShort) == 0x0002B0, "Member 'UWBP_IE_List_C::Image_EyeIcon_WideAndShort' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, ScrollBox_Categories_TallAndThin) == 0x0002B8, "Member 'UWBP_IE_List_C::ScrollBox_Categories_TallAndThin' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, ScrollBox_Categories_WideAndShort) == 0x0002C0, "Member 'UWBP_IE_List_C::ScrollBox_Categories_WideAndShort' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, TextBlock) == 0x0002C8, "Member 'UWBP_IE_List_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, TextBlock_140) == 0x0002D0, "Member 'UWBP_IE_List_C::TextBlock_140' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, TextBlock_DraggableItemType_TallAndThin) == 0x0002D8, "Member 'UWBP_IE_List_C::TextBlock_DraggableItemType_TallAndThin' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, TextBlock_DraggableItemType_WideAndShort) == 0x0002E0, "Member 'UWBP_IE_List_C::TextBlock_DraggableItemType_WideAndShort' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, UniformGridPanel_TallAndThin) == 0x0002E8, "Member 'UWBP_IE_List_C::UniformGridPanel_TallAndThin' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, UniformGridPanel_WideAndShort) == 0x0002F0, "Member 'UWBP_IE_List_C::UniformGridPanel_WideAndShort' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, WidgetSwitcher_Arrangement) == 0x0002F8, "Member 'UWBP_IE_List_C::WidgetSwitcher_Arrangement' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, Payloads) == 0x000300, "Member 'UWBP_IE_List_C::Payloads' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, FilteredPayloads) == 0x000310, "Member 'UWBP_IE_List_C::FilteredPayloads' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, FloatingCanvas) == 0x000320, "Member 'UWBP_IE_List_C::FloatingCanvas' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, NameFilter) == 0x000328, "Member 'UWBP_IE_List_C::NameFilter' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, OldCategoryWidgets) == 0x000338, "Member 'UWBP_IE_List_C::OldCategoryWidgets' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, DefaultCheckedTags) == 0x000348, "Member 'UWBP_IE_List_C::DefaultCheckedTags' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, ExcludeInvItemCategoryTags) == 0x000358, "Member 'UWBP_IE_List_C::ExcludeInvItemCategoryTags' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, InvItemUICategoryTag) == 0x000368, "Member 'UWBP_IE_List_C::InvItemUICategoryTag' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, bVerticalLayout) == 0x000388, "Member 'UWBP_IE_List_C::bVerticalLayout' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, DraggableItemTypeName) == 0x000390, "Member 'UWBP_IE_List_C::DraggableItemTypeName' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, Tooltip_LMBToSelectEtc) == 0x0003A8, "Member 'UWBP_IE_List_C::Tooltip_LMBToSelectEtc' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, AttachmentUIFilterTagsSectionName) == 0x0003C0, "Member 'UWBP_IE_List_C::AttachmentUIFilterTagsSectionName' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, FilterInactiveEyeTintColour) == 0x0003D0, "Member 'UWBP_IE_List_C::FilterInactiveEyeTintColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, FilterActiveEyeTintColour) == 0x0003E0, "Member 'UWBP_IE_List_C::FilterActiveEyeTintColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, ListFilter) == 0x0003F0, "Member 'UWBP_IE_List_C::ListFilter' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, FilterTitle) == 0x0003F8, "Member 'UWBP_IE_List_C::FilterTitle' has a wrong offset!");
static_assert(offsetof(UWBP_IE_List_C, DraggableItemsCheckedTagsConfigSection) == 0x000410, "Member 'UWBP_IE_List_C::DraggableItemsCheckedTagsConfigSection' has a wrong offset!");

}

