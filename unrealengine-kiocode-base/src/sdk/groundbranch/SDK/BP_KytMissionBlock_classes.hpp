#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KytMissionBlock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "KytheraPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KytMissionBlock.BP_KytMissionBlock_C
// 0x0020 (0x0258 - 0x0238)
class ABP_KytMissionBlock_C final : public AKytNavCostStaticMesh
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bIsActive;                                         // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInitiallyActive;                                  // 0x0241(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   MeshComponentToBlockNavMesh;                       // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseNativeMesh;                                    // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_KytMissionBlock(int32 EntryPoint);
	void SetupMeshComponentIfRequired();
	void RegenerateNavMeshWithDelay(const struct FVector& Origin, const struct FVector& Extent);
	void RegenerateNavmeshIfActive(const struct FVector& Origin, const struct FVector& Extent);
	void SetNavBlockMeshCollision();
	void SetActive(bool bIsActive_0);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ConformToBoundingBox(const struct FVector& Origin, const struct FVector& Extent);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KytMissionBlock_C">();
	}
	static class ABP_KytMissionBlock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KytMissionBlock_C>();
	}
};
static_assert(alignof(ABP_KytMissionBlock_C) == 0x000008, "Wrong alignment on ABP_KytMissionBlock_C");
static_assert(sizeof(ABP_KytMissionBlock_C) == 0x000258, "Wrong size on ABP_KytMissionBlock_C");
static_assert(offsetof(ABP_KytMissionBlock_C, UberGraphFrame) == 0x000238, "Member 'ABP_KytMissionBlock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KytMissionBlock_C, bIsActive) == 0x000240, "Member 'ABP_KytMissionBlock_C::bIsActive' has a wrong offset!");
static_assert(offsetof(ABP_KytMissionBlock_C, bInitiallyActive) == 0x000241, "Member 'ABP_KytMissionBlock_C::bInitiallyActive' has a wrong offset!");
static_assert(offsetof(ABP_KytMissionBlock_C, MeshComponentToBlockNavMesh) == 0x000248, "Member 'ABP_KytMissionBlock_C::MeshComponentToBlockNavMesh' has a wrong offset!");
static_assert(offsetof(ABP_KytMissionBlock_C, bUseNativeMesh) == 0x000250, "Member 'ABP_KytMissionBlock_C::bUseNativeMesh' has a wrong offset!");

}

