#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ME_MapAnnotator

#include "Basic.hpp"

#include "WBP_ME_MapAnnotator_classes.hpp"
#include "WBP_ME_MapAnnotator_parameters.hpp"


namespace SDK
{

// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ExecuteUbergraph_WBP_ME_MapAnnotator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::ExecuteUbergraph_WBP_ME_MapAnnotator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "ExecuteUbergraph_WBP_ME_MapAnnotator");

	Params::WBP_ME_MapAnnotator_C_ExecuteUbergraph_WBP_ME_MapAnnotator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ValidateMapMarkerData
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::ValidateMapMarkerData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "ValidateMapMarkerData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.CantDoThatInPIE
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::CantDoThatInPIE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "CantDoThatInPIE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.OnClickedOkUserFloatInput
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Filename                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::OnClickedOkUserFloatInput(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "OnClickedOkUserFloatInput");

	Params::WBP_ME_MapAnnotator_C_OnClickedOkUserFloatInput Parms{};

	Parms.Filename = std::move(Filename);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetUserFloatInput
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::GetUserFloatInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetUserFloatInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ContinueSpawningMapWidget
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::ContinueSpawningMapWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "ContinueSpawningMapWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ResetMissionImageMarkers
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::ResetMissionImageMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "ResetMissionImageMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.SetupImageIndices
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::SetupImageIndices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "SetupImageIndices");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ResetMarkerDIsplayProperties
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::ResetMarkerDIsplayProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "ResetMarkerDIsplayProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.StorePhotoFilename
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PhotoNumber                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MapMarkerIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::StorePhotoFilename(int32 PhotoNumber, int32 MapMarkerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "StorePhotoFilename");

	Params::WBP_ME_MapAnnotator_C_StorePhotoFilename Parms{};

	Parms.PhotoNumber = PhotoNumber;
	Parms.MapMarkerIndex = MapMarkerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerNumber_K2Node_ComponentBoundEvent_11_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_Button_DeleteMarker_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_Button_DeleteMarker_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_Button_DeleteMarker_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerRotation_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerScale_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ReadPropertiesFromWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WidgetIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::ReadPropertiesFromWidget(int32 WidgetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "ReadPropertiesFromWidget");

	Params::WBP_ME_MapAnnotator_C_ReadPropertiesFromWidget Parms{};

	Parms.WidgetIndex = WidgetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_EditableText_MarkerText_K2Node_ComponentBoundEvent_7_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.ClearSelectedMapSymbol
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::ClearSelectedMapSymbol()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "ClearSelectedMapSymbol");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.SetSelectedMapSymbol
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ME_MapSymbol_C*              SelectedMapSymbol                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::SetSelectedMapSymbol(class UWBP_ME_MapSymbol_C* SelectedMapSymbol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "SetSelectedMapSymbol");

	Params::WBP_ME_MapAnnotator_C_SetSelectedMapSymbol Parms{};

	Parms.SelectedMapSymbol = SelectedMapSymbol;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsChecked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_EditExistingMarker_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature Parms{};

	Parms.bIsChecked = bIsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsChecked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_CheckBox_CreateNewMarker_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature Parms{};

	Parms.bIsChecked = bIsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.UpdateEditModeStuff
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::UpdateEditModeStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "UpdateEditModeStuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.MapMarkerPropertiesUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapMarkerIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGBMapMarker&              NewMapMarkerInfo                                       (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ME_MapAnnotator_C::MapMarkerPropertiesUpdated(int32 MapMarkerIndex, const struct FGBMapMarker& NewMapMarkerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "MapMarkerPropertiesUpdated");

	Params::WBP_ME_MapAnnotator_C_MapMarkerPropertiesUpdated Parms{};

	Parms.MapMarkerIndex = MapMarkerIndex;
	Parms.NewMapMarkerInfo = std::move(NewMapMarkerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.FinishSpawningMapWidget
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::FinishSpawningMapWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "FinishSpawningMapWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.OnClickedOkUserTextInput
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Filename                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::OnClickedOkUserTextInput(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "OnClickedOkUserTextInput");

	Params::WBP_ME_MapAnnotator_C_OnClickedOkUserTextInput Parms{};

	Parms.Filename = std::move(Filename);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetUserTextInput
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    InitialText                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::GetUserTextInput(const class FString& InitialText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetUserTextInput");

	Params::WBP_ME_MapAnnotator_C_GetUserTextInput Parms{};

	Parms.InitialText = std::move(InitialText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.MapSymbolClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ME_MapSymbol_C*              MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::MapSymbolClicked(class UWBP_ME_MapSymbol_C* MapWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "MapSymbolClicked");

	Params::WBP_ME_MapAnnotator_C_MapSymbolClicked Parms{};

	Parms.MapWidget = MapWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.NewMapImageIsLoaded
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::NewMapImageIsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "NewMapImageIsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.OnDraggingExistingMapWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ME_MapSymbol_C*              MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 ViewportCoordinates                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MapWidgetIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::OnDraggingExistingMapWidget(class UWBP_ME_MapSymbol_C* MapWidget, const struct FVector2D& ViewportCoordinates, int32 MapWidgetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "OnDraggingExistingMapWidget");

	Params::WBP_ME_MapAnnotator_C_OnDraggingExistingMapWidget Parms{};

	Parms.MapWidget = MapWidget;
	Parms.ViewportCoordinates = std::move(ViewportCoordinates);
	Parms.MapWidgetIndex = MapWidgetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.SpawnMapWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGBMapMarker&              MapMarkerInfo                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   MapWidgetIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::SpawnMapWidget(const struct FGBMapMarker& MapMarkerInfo, int32 MapWidgetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "SpawnMapWidget");

	Params::WBP_ME_MapAnnotator_C_SpawnMapWidget Parms{};

	Parms.MapMarkerInfo = std::move(MapMarkerInfo);
	Parms.MapWidgetIndex = MapWidgetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_LinkedObjective_K2Node_ComponentBoundEvent_4_OnIndexChanged__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.DragEventFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             WidgetClassRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FVector2D&                 ViewportCoordinates                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::DragEventFinished(TSoftClassPtr<class UClass> WidgetClassRef, const struct FVector2D& ViewportCoordinates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "DragEventFinished");

	Params::WBP_ME_MapAnnotator_C_DragEventFinished Parms{};

	Parms.WidgetClassRef = WidgetClassRef;
	Parms.ViewportCoordinates = std::move(ViewportCoordinates);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BuildObjectiveList
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::BuildObjectiveList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BuildObjectiveList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.UpdateStats
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::UpdateStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "UpdateStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BuildMapMarkerList
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::BuildMapMarkerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BuildMapMarkerList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_Team_K2Node_ComponentBoundEvent_3_OnIndexChanged__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_Button_Cancel_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_Button_Cancel_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_Button_Cancel_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_Button_Apply_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_Button_Apply_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_Button_Apply_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.CloseDialog
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::CloseDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "CloseDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.RedisplayMapMarkers
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::RedisplayMapMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "RedisplayMapMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature");

	Params::WBP_ME_MapAnnotator_C_BndEvt__WBP_ME_MapAnnotator_WBP_ComboBox_MapList_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.BuildMapList
// (BlueprintCallable, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::BuildMapList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "BuildMapList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.DisplayImage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ImageIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::DisplayImage(int32 ImageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "DisplayImage");

	Params::WBP_ME_MapAnnotator_C_DisplayImage Parms{};

	Parms.ImageIndex = ImageIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ME_MapAnnotator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.OnLoaded_46AAD6A842FE33F224B5EBAB9042543C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::OnLoaded_46AAD6A842FE33F224B5EBAB9042543C(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "OnLoaded_46AAD6A842FE33F224B5EBAB9042543C");

	Params::WBP_ME_MapAnnotator_C_OnLoaded_46AAD6A842FE33F224B5EBAB9042543C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetVisibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UWBP_ME_MapAnnotator_C::GetVisibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetVisibility_0");

	Params::WBP_ME_MapAnnotator_C_GetVisibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetToolTipWidget_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_ME_MapAnnotator_C::GetToolTipWidget_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetToolTipWidget_0");

	Params::WBP_ME_MapAnnotator_C_GetToolTipWidget_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Get_Image_WarnMap_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UWBP_ME_MapAnnotator_C::Get_Image_WarnMap_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "Get_Image_WarnMap_Visibility_0");

	Params::WBP_ME_MapAnnotator_C_Get_Image_WarnMap_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Get_Image_WarnMap_ToolTipWidget_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_ME_MapAnnotator_C::Get_Image_WarnMap_ToolTipWidget_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "Get_Image_WarnMap_ToolTipWidget_0");

	Params::WBP_ME_MapAnnotator_C_Get_Image_WarnMap_ToolTipWidget_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetMapMarkerRenderTranslationFromScreenPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       RenderTranslation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bWasOutOfRange                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_ME_MapAnnotator_C::GetMapMarkerRenderTranslationFromScreenPosition(const struct FVector2D& ScreenPosition, struct FVector2D* RenderTranslation, bool* bWasOutOfRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetMapMarkerRenderTranslationFromScreenPosition");

	Params::WBP_ME_MapAnnotator_C_GetMapMarkerRenderTranslationFromScreenPosition Parms{};

	Parms.ScreenPosition = std::move(ScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTranslation != nullptr)
		*RenderTranslation = std::move(Parms.RenderTranslation);

	if (bWasOutOfRange != nullptr)
		*bWasOutOfRange = Parms.bWasOutOfRange;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Get_CheckBox_EditExistingMarker_ToolTipWidget_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_ME_MapAnnotator_C::Get_CheckBox_EditExistingMarker_ToolTipWidget_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "Get_CheckBox_EditExistingMarker_ToolTipWidget_0");

	Params::WBP_ME_MapAnnotator_C_Get_CheckBox_EditExistingMarker_ToolTipWidget_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetLinkedObjectiveFromComboBox
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class AGBMissionObjective>*LinkedObjectiveRef                                     (Parm, OutParm, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::GetLinkedObjectiveFromComboBox(TSoftObjectPtr<class AGBMissionObjective>* LinkedObjectiveRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetLinkedObjectiveFromComboBox");

	Params::WBP_ME_MapAnnotator_C_GetLinkedObjectiveFromComboBox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LinkedObjectiveRef != nullptr)
		*LinkedObjectiveRef = Parms.LinkedObjectiveRef;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetComboBoxIndexForLinkedObjectiveRef
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class AGBMissionObjective>LinkedObjectiveRef                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32*                                  ComboBoxIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class AGBMissionObjective>*UpdatedRef                                             (Parm, OutParm, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::GetComboBoxIndexForLinkedObjectiveRef(TSoftObjectPtr<class AGBMissionObjective> LinkedObjectiveRef, int32* ComboBoxIndex, TSoftObjectPtr<class AGBMissionObjective>* UpdatedRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetComboBoxIndexForLinkedObjectiveRef");

	Params::WBP_ME_MapAnnotator_C_GetComboBoxIndexForLinkedObjectiveRef Parms{};

	Parms.LinkedObjectiveRef = LinkedObjectiveRef;

	UObject::ProcessEvent(Func, &Parms);

	if (ComboBoxIndex != nullptr)
		*ComboBoxIndex = Parms.ComboBoxIndex;

	if (UpdatedRef != nullptr)
		*UpdatedRef = Parms.UpdatedRef;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.IsMapImage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGBMissionImage&           InMissionImage                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   bIsMapImage                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_ME_MapAnnotator_C::IsMapImage(const struct FGBMissionImage& InMissionImage, bool* bIsMapImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "IsMapImage");

	Params::WBP_ME_MapAnnotator_C_IsMapImage Parms{};

	Parms.InMissionImage = std::move(InMissionImage);

	UObject::ProcessEvent(Func, &Parms);

	if (bIsMapImage != nullptr)
		*bIsMapImage = Parms.bIsMapImage;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetImageListIndexForPhotoNumber
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PhotoNumber                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ImageListIndex                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::GetImageListIndexForPhotoNumber(int32 PhotoNumber, int32* ImageListIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetImageListIndexForPhotoNumber");

	Params::WBP_ME_MapAnnotator_C_GetImageListIndexForPhotoNumber Parms{};

	Parms.PhotoNumber = PhotoNumber;

	UObject::ProcessEvent(Func, &Parms);

	if (ImageListIndex != nullptr)
		*ImageListIndex = Parms.ImageListIndex;
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetFilenameForImageNumber
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ImageNumber                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          Filename                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::GetFilenameForImageNumber(int32 ImageNumber, class FString* Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetFilenameForImageNumber");

	Params::WBP_ME_MapAnnotator_C_GetFilenameForImageNumber Parms{};

	Parms.ImageNumber = ImageNumber;

	UObject::ProcessEvent(Func, &Parms);

	if (Filename != nullptr)
		*Filename = std::move(Parms.Filename);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.GetObjectiveInfoFromObjectiveSoftRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class AGBMissionObjective>MissionObjectiveSoftRef                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   bIsPrimary                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString*                          ObjectiveTitle                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_ME_MapAnnotator_C::GetObjectiveInfoFromObjectiveSoftRef(TSoftObjectPtr<class AGBMissionObjective> MissionObjectiveSoftRef, bool* bIsPrimary, class FString* ObjectiveTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "GetObjectiveInfoFromObjectiveSoftRef");

	Params::WBP_ME_MapAnnotator_C_GetObjectiveInfoFromObjectiveSoftRef Parms{};

	Parms.MissionObjectiveSoftRef = MissionObjectiveSoftRef;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPrimary != nullptr)
		*bIsPrimary = Parms.bIsPrimary;

	if (ObjectiveTitle != nullptr)
		*ObjectiveTitle = std::move(Parms.ObjectiveTitle);
}


// Function WBP_ME_MapAnnotator.WBP_ME_MapAnnotator_C.Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWBP_ME_MapAnnotator_C::Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ME_MapAnnotator_C", "Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0");

	Params::WBP_ME_MapAnnotator_C_Get_WBP_ComboBox_LinkedObjective_bIsEnabled_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

