#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuickPlayerAdmin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_QuickPlayerAdmin.WBP_QuickPlayerAdmin_C
// 0x0170 (0x03D0 - 0x0260)
class UWBP_QuickPlayerAdmin_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_Combo;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor*                            MenuAnchor_Content;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   QuickPlayerAdminTooltip;                           // 0x0280(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         QuickPlayerAdminCommands_Helpful;                  // 0x0298(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         QuickPlayerAdminCommands_Destructive;              // 0x02A8(0x0010)(Edit, BlueprintVisible)
	class FString                                 CommandToExecute;                                  // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 PlayerName;                                        // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 UniqueId;                                          // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         ValidCommands;                                     // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 BanReason;                                         // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         BanDuration;                                       // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BanReasonTitle;                                    // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BanDurationTitle;                                  // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BanDurationMessage;                                // 0x0340(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   KickReasonTitle;                                   // 0x0358(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NeedReasonMessage;                                 // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 KickReason;                                        // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   NeedReasonTitle;                                   // 0x0398(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bAssociatedPlayerIsAdmin;                          // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SeperatorString;                                   // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bCampaignMissionActive;                            // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_QuickPlayerAdmin(int32 EntryPoint);
	void OnNoKickReason_Event(class UWBP_DialogueBox_C* Dialogue);
	void OnKickReason_Event(const class FString& Filename);
	void KickPlayer();
	void BanPlayer();
	void OnBanDuration_Event(const class FString& Filename);
	void OnBanReason_Event(const class FString& Filename);
	void BndEvt__MenuAnchor_Content_K2Node_ComponentBoundEvent_0_OnMenuOpenChangedEvent__DelegateSignature(bool bIsOpen);
	void OnIndexChanged_Event(int32 Index_0);
	void SetupContent(class UWBP_ComboBox_Content_C* MenuDropdownContent);
	void BndEvt__Button_Combo_K2Node_ComponentBoundEvent_584_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void OnGetMenuContent_0();
	class UWidget* GetToolTipWidget_0();
	class UUserWidget* On_Get_User_Menu_Content_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_QuickPlayerAdmin_C">();
	}
	static class UWBP_QuickPlayerAdmin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_QuickPlayerAdmin_C>();
	}
};
static_assert(alignof(UWBP_QuickPlayerAdmin_C) == 0x000008, "Wrong alignment on UWBP_QuickPlayerAdmin_C");
static_assert(sizeof(UWBP_QuickPlayerAdmin_C) == 0x0003D0, "Wrong size on UWBP_QuickPlayerAdmin_C");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, UberGraphFrame) == 0x000260, "Member 'UWBP_QuickPlayerAdmin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, Button_Combo) == 0x000268, "Member 'UWBP_QuickPlayerAdmin_C::Button_Combo' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, Image_2) == 0x000270, "Member 'UWBP_QuickPlayerAdmin_C::Image_2' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, MenuAnchor_Content) == 0x000278, "Member 'UWBP_QuickPlayerAdmin_C::MenuAnchor_Content' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, QuickPlayerAdminTooltip) == 0x000280, "Member 'UWBP_QuickPlayerAdmin_C::QuickPlayerAdminTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, QuickPlayerAdminCommands_Helpful) == 0x000298, "Member 'UWBP_QuickPlayerAdmin_C::QuickPlayerAdminCommands_Helpful' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, QuickPlayerAdminCommands_Destructive) == 0x0002A8, "Member 'UWBP_QuickPlayerAdmin_C::QuickPlayerAdminCommands_Destructive' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, CommandToExecute) == 0x0002B8, "Member 'UWBP_QuickPlayerAdmin_C::CommandToExecute' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, PlayerName) == 0x0002C8, "Member 'UWBP_QuickPlayerAdmin_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, UniqueId) == 0x0002D8, "Member 'UWBP_QuickPlayerAdmin_C::UniqueId' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, ValidCommands) == 0x0002E8, "Member 'UWBP_QuickPlayerAdmin_C::ValidCommands' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, BanReason) == 0x0002F8, "Member 'UWBP_QuickPlayerAdmin_C::BanReason' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, BanDuration) == 0x000308, "Member 'UWBP_QuickPlayerAdmin_C::BanDuration' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, BanReasonTitle) == 0x000310, "Member 'UWBP_QuickPlayerAdmin_C::BanReasonTitle' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, BanDurationTitle) == 0x000328, "Member 'UWBP_QuickPlayerAdmin_C::BanDurationTitle' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, BanDurationMessage) == 0x000340, "Member 'UWBP_QuickPlayerAdmin_C::BanDurationMessage' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, KickReasonTitle) == 0x000358, "Member 'UWBP_QuickPlayerAdmin_C::KickReasonTitle' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, NeedReasonMessage) == 0x000370, "Member 'UWBP_QuickPlayerAdmin_C::NeedReasonMessage' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, KickReason) == 0x000388, "Member 'UWBP_QuickPlayerAdmin_C::KickReason' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, NeedReasonTitle) == 0x000398, "Member 'UWBP_QuickPlayerAdmin_C::NeedReasonTitle' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, bAssociatedPlayerIsAdmin) == 0x0003B0, "Member 'UWBP_QuickPlayerAdmin_C::bAssociatedPlayerIsAdmin' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, SeperatorString) == 0x0003B8, "Member 'UWBP_QuickPlayerAdmin_C::SeperatorString' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlayerAdmin_C, bCampaignMissionActive) == 0x0003C8, "Member 'UWBP_QuickPlayerAdmin_C::bCampaignMissionActive' has a wrong offset!");

}

