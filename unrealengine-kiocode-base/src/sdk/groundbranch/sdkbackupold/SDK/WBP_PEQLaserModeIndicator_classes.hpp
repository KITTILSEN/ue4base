#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PEQLaserModeIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PEQLaserModeIndicator.WBP_PEQLaserModeIndicator_C
// 0x0078 (0x02D8 - 0x0260)
class UWBP_PEQLaserModeIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pulse;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInOut;                                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_0;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_262;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_143;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Mode;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_AN_PEQ_Master_C*                    PEQRef;                                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   LaserMode_Visible;                                 // 0x02A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   LaserMode_IR;                                      // 0x02C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_PEQLaserModeIndicator(int32 EntryPoint);
	void OnIRModeChanged_Event_0(bool bIRMode);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PEQLaserModeIndicator_C">();
	}
	static class UWBP_PEQLaserModeIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PEQLaserModeIndicator_C>();
	}
};
static_assert(alignof(UWBP_PEQLaserModeIndicator_C) == 0x000008, "Wrong alignment on UWBP_PEQLaserModeIndicator_C");
static_assert(sizeof(UWBP_PEQLaserModeIndicator_C) == 0x0002D8, "Wrong size on UWBP_PEQLaserModeIndicator_C");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, UberGraphFrame) == 0x000260, "Member 'UWBP_PEQLaserModeIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, Pulse) == 0x000268, "Member 'UWBP_PEQLaserModeIndicator_C::Pulse' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, FadeInOut) == 0x000270, "Member 'UWBP_PEQLaserModeIndicator_C::FadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, Border) == 0x000278, "Member 'UWBP_PEQLaserModeIndicator_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, Border_0) == 0x000280, "Member 'UWBP_PEQLaserModeIndicator_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, Border_262) == 0x000288, "Member 'UWBP_PEQLaserModeIndicator_C::Border_262' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, Image_143) == 0x000290, "Member 'UWBP_PEQLaserModeIndicator_C::Image_143' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, TextBlock_Mode) == 0x000298, "Member 'UWBP_PEQLaserModeIndicator_C::TextBlock_Mode' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, PEQRef) == 0x0002A0, "Member 'UWBP_PEQLaserModeIndicator_C::PEQRef' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, LaserMode_Visible) == 0x0002A8, "Member 'UWBP_PEQLaserModeIndicator_C::LaserMode_Visible' has a wrong offset!");
static_assert(offsetof(UWBP_PEQLaserModeIndicator_C, LaserMode_IR) == 0x0002C0, "Member 'UWBP_PEQLaserModeIndicator_C::LaserMode_IR' has a wrong offset!");

}

