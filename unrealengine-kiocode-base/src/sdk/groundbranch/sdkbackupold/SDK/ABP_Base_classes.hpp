#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Base

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DistanceMatching_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Base.ABP_Base_C
// 0x3080 (0x3D10 - 0x0C90)
class UABP_Base_C final : public UGBCharAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x0C98(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0CC8(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x0DE0(0x0030)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x0E10(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0E40(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x0F58(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x0F88(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0FD0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_9;                   // 0x1098(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x1148(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1190(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x12E8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x1310(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x13D0(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x1418(0x0018)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1430(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1588(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x15B0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1678(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x16C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x16E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x1710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x17B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x17D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1850(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x18A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x18C8(0x0028)()
	struct FAnimNode_DistanceMatching             AnimGraphNode_DistanceMatching;                    // 0x18F0(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1978(0x0030)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_8;                   // 0x19A8(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1A58(0x0030)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_7;                   // 0x1A88(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1B38(0x0030)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_6;                   // 0x1B68(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1C18(0x0030)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_5;                   // 0x1C48(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1CF8(0x0030)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_4;                   // 0x1D28(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1DD8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1E08(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x1EB8(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x1F68(0x00B0)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_3;                        // 0x2018(0x0368)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x2380(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x23A8(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x23D0(0x00B0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x2480(0x00C0)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_2;                        // 0x2540(0x0368)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x28A8(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x2968(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x2A28(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_1;                        // 0x2A50(0x0368)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x2DB8(0x0070)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x2E28(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x2E50(0x00B0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x2F00(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x3018(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x3048(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x3090(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x30C0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x3108(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x31C8(0x0158)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x3320(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x3350(0x0118)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3468(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x35C0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x35E8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x3610(0x0030)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x3640(0x0030)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x3670(0x00A0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x3710(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x37D0(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x37F8(0x0368)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x3B60(0x0030)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x3B90(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x3C50(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3C80(0x0028)()
	bool                                          K2Node_PropertyAccess_9;                           // 0x3CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_8;                           // 0x3CA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_7;                           // 0x3CAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_6;                           // 0x3CAB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_5;                           // 0x3CAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_4;                           // 0x3CAD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_3;                           // 0x3CAE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_2;                           // 0x3CAF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_1;                           // 0x3CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess;                             // 0x3CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB2[0x2];                                     // 0x3CB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   __CustomProperty_DynamicRightItemParent_A127D59AE00D4BCE977DB3150B0B88AE; // 0x3CB4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   __CustomProperty_DynamicRightHandIKParent_CB584B86F3A8460C80FCB8E101D93AA1; // 0x3CBC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_DynamicLeftHandIKRoot_RotOffset_4C1F2A5C42854D638936F7E321A1DA54; // 0x3CC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_DynamicLeftHandIKRoot_LocOffset_4C1F2A5C42854D638936F7E321A1DA54; // 0x3CD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   __CustomProperty_DynamicLeftHandIKRoot_BoneName_4C1F2A5C42854D638936F7E321A1DA54; // 0x3CDC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   __CustomProperty_DynamicRightItemRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80; // 0x3CE4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   __CustomProperty_DynamicRightHandIKRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80; // 0x3CEC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   __CustomProperty_DynamicLeftHandIKRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80; // 0x3CF4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_HeadOffset_CDC0D867E23F4429A518CC1C60D99A80; // 0x3CFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Base(int32 EntryPoint);
	void AnimNotify_LeftFootDown();
	void AnimNotify_RightFootDown();
	void IdleFullBlendedState();
	void IdleLeftState();
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void FullBody_SkeletalControls(const struct FPoseLink& InNearFinal, struct FPoseLink* FullBody_SkeletalControls_0);
	void FullBody_Additives(struct FPoseLink* FullBody_Additives_0);
	void FullBody_Aiming(const struct FPoseLink& InUpperbodyLowerbodySplit, struct FPoseLink* FullBody_Aiming_0);
	void HandPose_OverrideState(const struct FPoseLink& InLocomotion, struct FPoseLink* HandPose_OverrideState_0);
	void FullBody_IdleState(struct FPoseLink* FullBody_IdleState_0);
	void FullBody_CycleState(struct FPoseLink* FullBody_CycleState_0);
	void FullBody_PreAim(const struct FPoseLink& InPreAim, struct FPoseLink* FullBody_PreAim_0);
	void FullBody_ProneIdleState(struct FPoseLink* FullBody_ProneIdleState_0);
	void FullBody_ProneCycleState(struct FPoseLink* FullBody_ProneCycleState_0);
	void FullBody_SprintCycleState(struct FPoseLink* FullBody_SprintCycleState_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Base_C">();
	}
	static class UABP_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Base_C>();
	}
};
static_assert(alignof(UABP_Base_C) == 0x000010, "Wrong alignment on UABP_Base_C");
static_assert(sizeof(UABP_Base_C) == 0x003D10, "Wrong size on UABP_Base_C");
static_assert(offsetof(UABP_Base_C, UberGraphFrame) == 0x000C90, "Member 'UABP_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_10) == 0x000C98, "Member 'UABP_Base_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedInputPose_3) == 0x000CC8, "Member 'UABP_Base_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_9) == 0x000DE0, "Member 'UABP_Base_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_8) == 0x000E10, "Member 'UABP_Base_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedInputPose_2) == 0x000E40, "Member 'UABP_Base_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_7) == 0x000F58, "Member 'UABP_Base_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Slot_5) == 0x000F88, "Member 'UABP_Base_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_ApplyAdditive_1) == 0x000FD0, "Member 'UABP_Base_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_9) == 0x001098, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Slot_4) == 0x001148, "Member 'UABP_Base_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_SaveCachedPose_3) == 0x001190, "Member 'UABP_Base_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_10) == 0x0012E8, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LayeredBoneBlend_6) == 0x001310, "Member 'UABP_Base_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Slot_3) == 0x0013D0, "Member 'UABP_Base_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_IdentityPose) == 0x001418, "Member 'UABP_Base_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_SaveCachedPose_2) == 0x001430, "Member 'UABP_Base_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_9) == 0x001588, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_ApplyAdditive) == 0x0015B0, "Member 'UABP_Base_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Slot_2) == 0x001678, "Member 'UABP_Base_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_8) == 0x0016C0, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_12) == 0x0016E8, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_11) == 0x001710, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_10) == 0x001738, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_9) == 0x001760, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_8) == 0x001788, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_7) == 0x0017B0, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_6) == 0x0017D8, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_5) == 0x001800, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_4) == 0x001828, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_3) == 0x001850, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_2) == 0x001878, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult_1) == 0x0018A0, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_TransitionResult) == 0x0018C8, "Member 'UABP_Base_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_DistanceMatching) == 0x0018F0, "Member 'UABP_Base_C::AnimGraphNode_DistanceMatching' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_StateResult_5) == 0x001978, "Member 'UABP_Base_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_8) == 0x0019A8, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_StateResult_4) == 0x001A58, "Member 'UABP_Base_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_7) == 0x001A88, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_StateResult_3) == 0x001B38, "Member 'UABP_Base_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_6) == 0x001B68, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_StateResult_2) == 0x001C18, "Member 'UABP_Base_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_5) == 0x001C48, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_StateResult_1) == 0x001CF8, "Member 'UABP_Base_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_4) == 0x001D28, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_StateResult) == 0x001DD8, "Member 'UABP_Base_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_StateMachine) == 0x001E08, "Member 'UABP_Base_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_3) == 0x001EB8, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_2) == 0x001F68, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_ControlRig_3) == 0x002018, "Member 'UABP_Base_C::AnimGraphNode_ControlRig_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_7) == 0x002380, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_6) == 0x0023A8, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer_1) == 0x0023D0, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LayeredBoneBlend_5) == 0x002480, "Member 'UABP_Base_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_ControlRig_2) == 0x002540, "Member 'UABP_Base_C::AnimGraphNode_ControlRig_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LayeredBoneBlend_4) == 0x0028A8, "Member 'UABP_Base_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LayeredBoneBlend_3) == 0x002968, "Member 'UABP_Base_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_5) == 0x002A28, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_ControlRig_1) == 0x002A50, "Member 'UABP_Base_C::AnimGraphNode_ControlRig_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Inertialization) == 0x002DB8, "Member 'UABP_Base_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_4) == 0x002E28, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedAnimLayer) == 0x002E50, "Member 'UABP_Base_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedInputPose_1) == 0x002F00, "Member 'UABP_Base_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_6) == 0x003018, "Member 'UABP_Base_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Slot_1) == 0x003048, "Member 'UABP_Base_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_5) == 0x003090, "Member 'UABP_Base_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Slot) == 0x0030C0, "Member 'UABP_Base_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LayeredBoneBlend_2) == 0x003108, "Member 'UABP_Base_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_SaveCachedPose_1) == 0x0031C8, "Member 'UABP_Base_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_4) == 0x003320, "Member 'UABP_Base_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LinkedInputPose) == 0x003350, "Member 'UABP_Base_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_SaveCachedPose) == 0x003468, "Member 'UABP_Base_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_3) == 0x0035C0, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_2) == 0x0035E8, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_3) == 0x003610, "Member 'UABP_Base_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_2) == 0x003640, "Member 'UABP_Base_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_RotateRootBone) == 0x003670, "Member 'UABP_Base_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LayeredBoneBlend_1) == 0x003710, "Member 'UABP_Base_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose_1) == 0x0037D0, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_ControlRig) == 0x0037F8, "Member 'UABP_Base_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root_1) == 0x003B60, "Member 'UABP_Base_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_LayeredBoneBlend) == 0x003B90, "Member 'UABP_Base_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_Root) == 0x003C50, "Member 'UABP_Base_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, AnimGraphNode_UseCachedPose) == 0x003C80, "Member 'UABP_Base_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_9) == 0x003CA8, "Member 'UABP_Base_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_8) == 0x003CA9, "Member 'UABP_Base_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_7) == 0x003CAA, "Member 'UABP_Base_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_6) == 0x003CAB, "Member 'UABP_Base_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_5) == 0x003CAC, "Member 'UABP_Base_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_4) == 0x003CAD, "Member 'UABP_Base_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_3) == 0x003CAE, "Member 'UABP_Base_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_2) == 0x003CAF, "Member 'UABP_Base_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess_1) == 0x003CB0, "Member 'UABP_Base_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, K2Node_PropertyAccess) == 0x003CB1, "Member 'UABP_Base_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_DynamicRightItemParent_A127D59AE00D4BCE977DB3150B0B88AE) == 0x003CB4, "Member 'UABP_Base_C::__CustomProperty_DynamicRightItemParent_A127D59AE00D4BCE977DB3150B0B88AE' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_DynamicRightHandIKParent_CB584B86F3A8460C80FCB8E101D93AA1) == 0x003CBC, "Member 'UABP_Base_C::__CustomProperty_DynamicRightHandIKParent_CB584B86F3A8460C80FCB8E101D93AA1' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_DynamicLeftHandIKRoot_RotOffset_4C1F2A5C42854D638936F7E321A1DA54) == 0x003CC4, "Member 'UABP_Base_C::__CustomProperty_DynamicLeftHandIKRoot_RotOffset_4C1F2A5C42854D638936F7E321A1DA54' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_DynamicLeftHandIKRoot_LocOffset_4C1F2A5C42854D638936F7E321A1DA54) == 0x003CD0, "Member 'UABP_Base_C::__CustomProperty_DynamicLeftHandIKRoot_LocOffset_4C1F2A5C42854D638936F7E321A1DA54' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_DynamicLeftHandIKRoot_BoneName_4C1F2A5C42854D638936F7E321A1DA54) == 0x003CDC, "Member 'UABP_Base_C::__CustomProperty_DynamicLeftHandIKRoot_BoneName_4C1F2A5C42854D638936F7E321A1DA54' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_DynamicRightItemRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80) == 0x003CE4, "Member 'UABP_Base_C::__CustomProperty_DynamicRightItemRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_DynamicRightHandIKRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80) == 0x003CEC, "Member 'UABP_Base_C::__CustomProperty_DynamicRightHandIKRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_DynamicLeftHandIKRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80) == 0x003CF4, "Member 'UABP_Base_C::__CustomProperty_DynamicLeftHandIKRoot_BoneName_CDC0D867E23F4429A518CC1C60D99A80' has a wrong offset!");
static_assert(offsetof(UABP_Base_C, __CustomProperty_HeadOffset_CDC0D867E23F4429A518CC1C60D99A80) == 0x003CFC, "Member 'UABP_Base_C::__CustomProperty_HeadOffset_CDC0D867E23F4429A518CC1C60D99A80' has a wrong offset!");

}

