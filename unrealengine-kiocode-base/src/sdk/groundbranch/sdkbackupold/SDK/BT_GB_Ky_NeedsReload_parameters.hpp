#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BT_GB_Ky_NeedsReload

#include "Basic.hpp"

#include "KytheraPlugin_structs.hpp"


namespace SDK::Params
{

// Function BT_GB_Ky_NeedsReload.BT_GB_Ky_NeedsReload_C.CheckCondition
// 0x0058 (0x0058 - 0x0000)
struct BT_GB_Ky_NeedsReload_C_CheckCondition final
{
public:
	class AKytController*                         Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         BehaviorBlackboard;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKytBTConditionResult                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKytBTConditionResult                         Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKytBTConditionResult                         Temp_byte_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBFirearm*                             K2Node_DynamicCast_AsGBFirearm;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EKytBTConditionResult                         K2Node_Select_Default;                             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BT_GB_Ky_NeedsReload_C_CheckCondition) == 0x000008, "Wrong alignment on BT_GB_Ky_NeedsReload_C_CheckCondition");
static_assert(sizeof(BT_GB_Ky_NeedsReload_C_CheckCondition) == 0x000058, "Wrong size on BT_GB_Ky_NeedsReload_C_CheckCondition");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, Controller) == 0x000000, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::Controller' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, BehaviorBlackboard) == 0x000008, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::BehaviorBlackboard' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, ReturnValue) == 0x000010, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, Temp_bool_Variable) == 0x000011, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, Temp_byte_Variable) == 0x000020, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, K2Node_DynamicCast_AsGBCharacter) == 0x000028, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, CallFunc_GetEquipped_ReturnValue) == 0x000038, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, Temp_byte_Variable_1) == 0x000040, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, K2Node_DynamicCast_AsGBFirearm) == 0x000048, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::K2Node_DynamicCast_AsGBFirearm' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, CallFunc_IsEmpty_ReturnValue) == 0x000051, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_NeedsReload_C_CheckCondition, K2Node_Select_Default) == 0x000052, "Member 'BT_GB_Ky_NeedsReload_C_CheckCondition::K2Node_Select_Default' has a wrong offset!");

}

