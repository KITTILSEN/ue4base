#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CharacterEditor

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CharacterEditor.ABP_CharacterEditor_C
// 0x0D30 (0x0FF0 - 0x02C0)
class UABP_CharacterEditor_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x02F8(0x00A0)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x0398(0x0070)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0408(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0450(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x04D0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0570(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x05F0(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x06B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0730(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07B0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0830(0x00A0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0x08D0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x09C0(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0AB0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0AD0(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0AF0(0x0050)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x0B40(0x0090)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0BD0(0x00C8)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x0C98(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0D88(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0DA8(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0DC8(0x00C0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x0E88(0x00F0)()
	int32                                         IdleAnim;                                          // 0x0F78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F7C[0x4];                                      // 0x0F7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  FidgetAnimations;                                  // 0x0F80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           TimerHandle_Fidget;                                // 0x0F90(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasFirearm;                                       // 0x0F98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F99[0x7];                                      // 0x0F99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          RightHandOverlay;                                  // 0x0FA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightHandOverlayAlpha;                             // 0x0FA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FAC[0x4];                                      // 0x0FAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          CopiedSnapShot;                                    // 0x0FB0(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SnapShotAlpha;                                     // 0x0FE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_CharacterEditor(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void Fidget();
	void RandomiseFidgetTimer(float Time);
	void BlueprintInitializeAnimation();
	void CopyPoseFrom(class UAnimInstance* AnimInstance);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CharacterEditor_C">();
	}
	static class UABP_CharacterEditor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CharacterEditor_C>();
	}
};
static_assert(alignof(UABP_CharacterEditor_C) == 0x000010, "Wrong alignment on UABP_CharacterEditor_C");
static_assert(sizeof(UABP_CharacterEditor_C) == 0x000FF0, "Wrong size on UABP_CharacterEditor_C");
static_assert(offsetof(UABP_CharacterEditor_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_CharacterEditor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UABP_CharacterEditor_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_BlendListByInt) == 0x0002F8, "Member 'UABP_CharacterEditor_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_Inertialization) == 0x000398, "Member 'UABP_CharacterEditor_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_Slot) == 0x000408, "Member 'UABP_CharacterEditor_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_SequencePlayer_4) == 0x000450, "Member 'UABP_CharacterEditor_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_BlendListByBool_1) == 0x0004D0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_SequencePlayer_3) == 0x000570, "Member 'UABP_CharacterEditor_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0005F0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_SequencePlayer_2) == 0x0006B0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_SequencePlayer_1) == 0x000730, "Member 'UABP_CharacterEditor_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_SequencePlayer) == 0x0007B0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_BlendListByBool) == 0x000830, "Member 'UABP_CharacterEditor_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_CopyBone_3) == 0x0008D0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_CopyBone_2) == 0x0009C0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000AB0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000AD0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_SequenceEvaluator) == 0x000AF0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_PoseSnapshot) == 0x000B40, "Member 'UABP_CharacterEditor_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_TwoWayBlend) == 0x000BD0, "Member 'UABP_CharacterEditor_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_CopyBone_1) == 0x000C98, "Member 'UABP_CharacterEditor_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_LocalToComponentSpace) == 0x000D88, "Member 'UABP_CharacterEditor_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_ComponentToLocalSpace) == 0x000DA8, "Member 'UABP_CharacterEditor_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_LayeredBoneBlend) == 0x000DC8, "Member 'UABP_CharacterEditor_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, AnimGraphNode_CopyBone) == 0x000E88, "Member 'UABP_CharacterEditor_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, IdleAnim) == 0x000F78, "Member 'UABP_CharacterEditor_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, FidgetAnimations) == 0x000F80, "Member 'UABP_CharacterEditor_C::FidgetAnimations' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, TimerHandle_Fidget) == 0x000F90, "Member 'UABP_CharacterEditor_C::TimerHandle_Fidget' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, bHasFirearm) == 0x000F98, "Member 'UABP_CharacterEditor_C::bHasFirearm' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, RightHandOverlay) == 0x000FA0, "Member 'UABP_CharacterEditor_C::RightHandOverlay' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, RightHandOverlayAlpha) == 0x000FA8, "Member 'UABP_CharacterEditor_C::RightHandOverlayAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, CopiedSnapShot) == 0x000FB0, "Member 'UABP_CharacterEditor_C::CopiedSnapShot' has a wrong offset!");
static_assert(offsetof(UABP_CharacterEditor_C, SnapShotAlpha) == 0x000FE8, "Member 'UABP_CharacterEditor_C::SnapShotAlpha' has a wrong offset!");

}

