#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LoadingScreen_Travel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ModKit_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LoadingScreen_Travel.WBP_LoadingScreen_Travel_C
// 0x01E0 (0x0440 - 0x0260)
class UWBP_LoadingScreen_Travel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowCloseButtonAnim;                               // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_InfoScreen;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Close;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_GameMode;                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_GameModeAuthor;                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Map;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_MapAuthor;                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_MissionAuthor;                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RandomHint_C*                      RandomHint;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_443;                                     // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_GameMode;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_GameModeAuthor;                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_LoadingMessage;                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MapBy;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MapName;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MissionAuthor;                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UThrobber*                              Throbber_Dots;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Info;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_InfoScreen;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_ServerInfo;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_ServerInfoAttachWidget;                // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModIcon_C*                         WBP_ModIcon_GameMode;                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModIcon_C*                         WBP_ModIcon_Map;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModIcon_C*                         WBP_ModIcon_Mission;                               // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 ServerName;                                        // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MissionTitle;                                      // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MapTitle;                                          // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MapAuthor;                                         // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MissionAuthor;                                     // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 GameModeAuthor;                                    // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bMapIsModded;                                      // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMissionIsModded;                                  // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUInt64                                GameModeModID;                                     // 0x0390(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 InviteFrom;                                        // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 FrontEndMap;                                       // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UWBP_ServerInfo_C*                      ServerInfoReference;                               // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Loading;                                           // 0x03C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_ServerInfo_C*                      InviteReference;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Info_Widget;                                       // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowMissionAuthor;                                // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowGameModeAuthor;                               // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ByText;                                            // 0x03F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   MapText;                                           // 0x0408(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   UnknownAuthorText;                                 // 0x0420(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   GameModeTableId;                                   // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_LoadingScreen_Travel(int32 EntryPoint);
	void UpdateAuthorInfo();
	void OnTryToFadeAwayLoadingScreen_Event_0();
	void ShowCloseButton();
	void BndEvt__WBP_LoadingScreen_Button_Close_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void SetInfoWidget(class UUserWidget* InfoWidget);
	void OnInitialized();
	void GetFancyGameModeName(const class FString& ScriptFilename, const struct FUInt64& ScriptModID, class FText* FancyDanGameModeName);
	void SetVariablesFromLoadingScreenManager();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LoadingScreen_Travel_C">();
	}
	static class UWBP_LoadingScreen_Travel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LoadingScreen_Travel_C>();
	}
};
static_assert(alignof(UWBP_LoadingScreen_Travel_C) == 0x000008, "Wrong alignment on UWBP_LoadingScreen_Travel_C");
static_assert(sizeof(UWBP_LoadingScreen_Travel_C) == 0x000440, "Wrong size on UWBP_LoadingScreen_Travel_C");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, UberGraphFrame) == 0x000260, "Member 'UWBP_LoadingScreen_Travel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, ShowCloseButtonAnim) == 0x000268, "Member 'UWBP_LoadingScreen_Travel_C::ShowCloseButtonAnim' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, Border_InfoScreen) == 0x000270, "Member 'UWBP_LoadingScreen_Travel_C::Border_InfoScreen' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, Button_Close) == 0x000278, "Member 'UWBP_LoadingScreen_Travel_C::Button_Close' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, HorizontalBox_GameMode) == 0x000280, "Member 'UWBP_LoadingScreen_Travel_C::HorizontalBox_GameMode' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, HorizontalBox_GameModeAuthor) == 0x000288, "Member 'UWBP_LoadingScreen_Travel_C::HorizontalBox_GameModeAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, HorizontalBox_Map) == 0x000290, "Member 'UWBP_LoadingScreen_Travel_C::HorizontalBox_Map' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, HorizontalBox_MapAuthor) == 0x000298, "Member 'UWBP_LoadingScreen_Travel_C::HorizontalBox_MapAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, HorizontalBox_MissionAuthor) == 0x0002A0, "Member 'UWBP_LoadingScreen_Travel_C::HorizontalBox_MissionAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, RandomHint) == 0x0002A8, "Member 'UWBP_LoadingScreen_Travel_C::RandomHint' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, TextBlock_443) == 0x0002B0, "Member 'UWBP_LoadingScreen_Travel_C::TextBlock_443' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, TextBlock_GameMode) == 0x0002B8, "Member 'UWBP_LoadingScreen_Travel_C::TextBlock_GameMode' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, TextBlock_GameModeAuthor) == 0x0002C0, "Member 'UWBP_LoadingScreen_Travel_C::TextBlock_GameModeAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, TextBlock_LoadingMessage) == 0x0002C8, "Member 'UWBP_LoadingScreen_Travel_C::TextBlock_LoadingMessage' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, TextBlock_MapBy) == 0x0002D0, "Member 'UWBP_LoadingScreen_Travel_C::TextBlock_MapBy' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, TextBlock_MapName) == 0x0002D8, "Member 'UWBP_LoadingScreen_Travel_C::TextBlock_MapName' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, TextBlock_MissionAuthor) == 0x0002E0, "Member 'UWBP_LoadingScreen_Travel_C::TextBlock_MissionAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, Throbber_Dots) == 0x0002E8, "Member 'UWBP_LoadingScreen_Travel_C::Throbber_Dots' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, VerticalBox_Info) == 0x0002F0, "Member 'UWBP_LoadingScreen_Travel_C::VerticalBox_Info' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, VerticalBox_InfoScreen) == 0x0002F8, "Member 'UWBP_LoadingScreen_Travel_C::VerticalBox_InfoScreen' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, VerticalBox_ServerInfo) == 0x000300, "Member 'UWBP_LoadingScreen_Travel_C::VerticalBox_ServerInfo' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, VerticalBox_ServerInfoAttachWidget) == 0x000308, "Member 'UWBP_LoadingScreen_Travel_C::VerticalBox_ServerInfoAttachWidget' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, WBP_ModIcon_GameMode) == 0x000310, "Member 'UWBP_LoadingScreen_Travel_C::WBP_ModIcon_GameMode' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, WBP_ModIcon_Map) == 0x000318, "Member 'UWBP_LoadingScreen_Travel_C::WBP_ModIcon_Map' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, WBP_ModIcon_Mission) == 0x000320, "Member 'UWBP_LoadingScreen_Travel_C::WBP_ModIcon_Mission' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, ServerName) == 0x000328, "Member 'UWBP_LoadingScreen_Travel_C::ServerName' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, MissionTitle) == 0x000338, "Member 'UWBP_LoadingScreen_Travel_C::MissionTitle' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, MapTitle) == 0x000348, "Member 'UWBP_LoadingScreen_Travel_C::MapTitle' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, MapAuthor) == 0x000358, "Member 'UWBP_LoadingScreen_Travel_C::MapAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, MissionAuthor) == 0x000368, "Member 'UWBP_LoadingScreen_Travel_C::MissionAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, GameModeAuthor) == 0x000378, "Member 'UWBP_LoadingScreen_Travel_C::GameModeAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, bMapIsModded) == 0x000388, "Member 'UWBP_LoadingScreen_Travel_C::bMapIsModded' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, bMissionIsModded) == 0x000389, "Member 'UWBP_LoadingScreen_Travel_C::bMissionIsModded' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, GameModeModID) == 0x000390, "Member 'UWBP_LoadingScreen_Travel_C::GameModeModID' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, InviteFrom) == 0x000398, "Member 'UWBP_LoadingScreen_Travel_C::InviteFrom' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, FrontEndMap) == 0x0003A8, "Member 'UWBP_LoadingScreen_Travel_C::FrontEndMap' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, ServerInfoReference) == 0x0003B8, "Member 'UWBP_LoadingScreen_Travel_C::ServerInfoReference' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, Loading) == 0x0003C0, "Member 'UWBP_LoadingScreen_Travel_C::Loading' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, InviteReference) == 0x0003D8, "Member 'UWBP_LoadingScreen_Travel_C::InviteReference' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, Info_Widget) == 0x0003E0, "Member 'UWBP_LoadingScreen_Travel_C::Info_Widget' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, bShowMissionAuthor) == 0x0003E8, "Member 'UWBP_LoadingScreen_Travel_C::bShowMissionAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, bShowGameModeAuthor) == 0x0003E9, "Member 'UWBP_LoadingScreen_Travel_C::bShowGameModeAuthor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, ByText) == 0x0003F0, "Member 'UWBP_LoadingScreen_Travel_C::ByText' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, MapText) == 0x000408, "Member 'UWBP_LoadingScreen_Travel_C::MapText' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, UnknownAuthorText) == 0x000420, "Member 'UWBP_LoadingScreen_Travel_C::UnknownAuthorText' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_Travel_C, GameModeTableId) == 0x000438, "Member 'UWBP_LoadingScreen_Travel_C::GameModeTableId' has a wrong offset!");

}

