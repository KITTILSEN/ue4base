#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RIG_ArmAndHeadIK

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass RIG_ArmAndHeadIK.RIG_ArmAndHeadIK_C
// 0x0070 (0x06C0 - 0x0650)
class URIG_ArmAndHeadIK_C final : public UControlRig
{
public:
	struct FRotator                               HeadOffset;                                        // 0x0650(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             IKHandTM;                                          // 0x0660(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   DynamicLeftHandIKRoot_BoneName;                    // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DynamicLeftHandIKRootAlpha;                        // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DynamicRightHandIKRoot_BoneName;                   // 0x069C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DynamicRightHandIKRootAlpha;                       // 0x06A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DynamicRightItemRoot_BoneName;                     // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DynamicRightItemRootAlpha;                         // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RIG_ArmAndHeadIK_C">();
	}
	static class URIG_ArmAndHeadIK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URIG_ArmAndHeadIK_C>();
	}
};
static_assert(alignof(URIG_ArmAndHeadIK_C) == 0x000010, "Wrong alignment on URIG_ArmAndHeadIK_C");
static_assert(sizeof(URIG_ArmAndHeadIK_C) == 0x0006C0, "Wrong size on URIG_ArmAndHeadIK_C");
static_assert(offsetof(URIG_ArmAndHeadIK_C, HeadOffset) == 0x000650, "Member 'URIG_ArmAndHeadIK_C::HeadOffset' has a wrong offset!");
static_assert(offsetof(URIG_ArmAndHeadIK_C, IKHandTM) == 0x000660, "Member 'URIG_ArmAndHeadIK_C::IKHandTM' has a wrong offset!");
static_assert(offsetof(URIG_ArmAndHeadIK_C, DynamicLeftHandIKRoot_BoneName) == 0x000690, "Member 'URIG_ArmAndHeadIK_C::DynamicLeftHandIKRoot_BoneName' has a wrong offset!");
static_assert(offsetof(URIG_ArmAndHeadIK_C, DynamicLeftHandIKRootAlpha) == 0x000698, "Member 'URIG_ArmAndHeadIK_C::DynamicLeftHandIKRootAlpha' has a wrong offset!");
static_assert(offsetof(URIG_ArmAndHeadIK_C, DynamicRightHandIKRoot_BoneName) == 0x00069C, "Member 'URIG_ArmAndHeadIK_C::DynamicRightHandIKRoot_BoneName' has a wrong offset!");
static_assert(offsetof(URIG_ArmAndHeadIK_C, DynamicRightHandIKRootAlpha) == 0x0006A4, "Member 'URIG_ArmAndHeadIK_C::DynamicRightHandIKRootAlpha' has a wrong offset!");
static_assert(offsetof(URIG_ArmAndHeadIK_C, DynamicRightItemRoot_BoneName) == 0x0006A8, "Member 'URIG_ArmAndHeadIK_C::DynamicRightItemRoot_BoneName' has a wrong offset!");
static_assert(offsetof(URIG_ArmAndHeadIK_C, DynamicRightItemRootAlpha) == 0x0006B0, "Member 'URIG_ArmAndHeadIK_C::DynamicRightItemRootAlpha' has a wrong offset!");

}

