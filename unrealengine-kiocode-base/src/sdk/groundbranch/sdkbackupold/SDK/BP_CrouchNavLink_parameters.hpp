#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CrouchNavLink

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "KytheraPlugin_structs.hpp"


namespace SDK::Params
{

// Function BP_CrouchNavLink.BP_CrouchNavLink_C.GetMoveGoal
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CrouchNavLink_C_GetMoveGoal final
{
public:
	struct FVector                                MoveGoal;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKytNavMeshLink                        CallFunc_Array_Get_Item;                           // 0x0030(0x0060)()
	float                                         CallFunc_BreakVector_X;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CrouchNavLink_C_GetMoveGoal) == 0x000010, "Wrong alignment on BP_CrouchNavLink_C_GetMoveGoal");
static_assert(sizeof(BP_CrouchNavLink_C_GetMoveGoal) == 0x0000D0, "Wrong size on BP_CrouchNavLink_C_GetMoveGoal");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, MoveGoal) == 0x000000, "Member 'BP_CrouchNavLink_C_GetMoveGoal::MoveGoal' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_GetActorRightVector_ReturnValue) == 0x00000C, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_BreakVector_X) == 0x000090, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_BreakVector_Y) == 0x000094, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_BreakVector_Z) == 0x000098, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00009C, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000A8, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CrouchNavLink_C_GetMoveGoal, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'BP_CrouchNavLink_C_GetMoveGoal::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

}

