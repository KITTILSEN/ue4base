#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FriendlyPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_FriendlyPlayer.WBP_FriendlyPlayer_C
// 0x0088 (0x02E8 - 0x0260)
class UWBP_FriendlyPlayer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_NormalName;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_TeamElementIcon;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_PlayerName;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bFadingIn;                                         // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ETeamElement, TSoftObjectPtr<class UTexture2D>> TeamElementIcons;                           // 0x0290(0x0050)(Edit, BlueprintVisible)
	bool                                          bObscured;                                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_FriendlyPlayer(int32 EntryPoint);
	void Construct();
	void Hide();
	void Show(const class FString& PlayerName, ETeamElement TeamElement);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_FriendlyPlayer_C">();
	}
	static class UWBP_FriendlyPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_FriendlyPlayer_C>();
	}
};
static_assert(alignof(UWBP_FriendlyPlayer_C) == 0x000008, "Wrong alignment on UWBP_FriendlyPlayer_C");
static_assert(sizeof(UWBP_FriendlyPlayer_C) == 0x0002E8, "Wrong size on UWBP_FriendlyPlayer_C");
static_assert(offsetof(UWBP_FriendlyPlayer_C, UberGraphFrame) == 0x000260, "Member 'UWBP_FriendlyPlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_FriendlyPlayer_C, FadeIn) == 0x000268, "Member 'UWBP_FriendlyPlayer_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_FriendlyPlayer_C, Border_NormalName) == 0x000270, "Member 'UWBP_FriendlyPlayer_C::Border_NormalName' has a wrong offset!");
static_assert(offsetof(UWBP_FriendlyPlayer_C, Image_TeamElementIcon) == 0x000278, "Member 'UWBP_FriendlyPlayer_C::Image_TeamElementIcon' has a wrong offset!");
static_assert(offsetof(UWBP_FriendlyPlayer_C, TextBlock_PlayerName) == 0x000280, "Member 'UWBP_FriendlyPlayer_C::TextBlock_PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_FriendlyPlayer_C, bFadingIn) == 0x000288, "Member 'UWBP_FriendlyPlayer_C::bFadingIn' has a wrong offset!");
static_assert(offsetof(UWBP_FriendlyPlayer_C, TeamElementIcons) == 0x000290, "Member 'UWBP_FriendlyPlayer_C::TeamElementIcons' has a wrong offset!");
static_assert(offsetof(UWBP_FriendlyPlayer_C, bObscured) == 0x0002E0, "Member 'UWBP_FriendlyPlayer_C::bObscured' has a wrong offset!");

}

