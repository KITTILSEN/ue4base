#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Patch_ListEntry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Patch_ListEntry.WBP_Patch_ListEntry_C
// 0x01A0 (0x0400 - 0x0260)
class UWBP_Patch_ListEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FlashCensoredIcon;                                 // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FlashModIcon;                                      // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_0;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_CensorPatch;                                // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Selected;                                   // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_CensorPatch;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BadSize;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_NoPatch;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_NotFound;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Patch;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_BadSize;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_NoPatch;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_NotFound;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModIcon_C*                         WBP_ModIcon;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_150;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             LoadedPatchTexture;                                // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CantSelectTooltipText;                             // 0x02E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NoPatchTooltipText;                                // 0x0300(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_Patch_ListObj_C*                    PatchFileObjRef;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedBorderColour;                            // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedBorderColour;                              // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PatchXSize;                                        // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PatchYSize;                                        // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PatchTooltipText;                                  // 0x0348(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ToolTipCensorPatch;                                // 0x0360(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NativePatchTooltip;                                // 0x0378(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ModdedPatchTooltip;                                // 0x0390(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BadSizeTooltip;                                    // 0x03A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NotFoundToolTip;                                   // 0x03C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           BorderHoveredColour;                               // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BorderNormalColour;                                // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Patch_SelectionDialog_C*           PatchesDialogRef;                                  // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Patch_ListEntry(int32 EntryPoint);
	void SwitchToNoneIndex();
	void SwitchToBadSizeIndex();
	void SwitchToNotFoundIndex();
	void OnInitialized();
	void UpdateCensoredAnimation();
	void BndEvt__WBP_Patch_TileViewItem_CheckBox_CensorPatch_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void SwitchToPatchIndex();
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	struct FLinearColor GetBorderHoverColor();
	struct FLinearColor GetBorderWhiteTrimColour();
	class UWidget* GetNativePatchTooltip();
	class UWidget* GetCensoredToolTip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Patch_ListEntry_C">();
	}
	static class UWBP_Patch_ListEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Patch_ListEntry_C>();
	}
};
static_assert(alignof(UWBP_Patch_ListEntry_C) == 0x000008, "Wrong alignment on UWBP_Patch_ListEntry_C");
static_assert(sizeof(UWBP_Patch_ListEntry_C) == 0x000400, "Wrong size on UWBP_Patch_ListEntry_C");
static_assert(offsetof(UWBP_Patch_ListEntry_C, UberGraphFrame) == 0x000260, "Member 'UWBP_Patch_ListEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, FlashCensoredIcon) == 0x000268, "Member 'UWBP_Patch_ListEntry_C::FlashCensoredIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, FlashModIcon) == 0x000270, "Member 'UWBP_Patch_ListEntry_C::FlashModIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Border_0) == 0x000278, "Member 'UWBP_Patch_ListEntry_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Border_CensorPatch) == 0x000280, "Member 'UWBP_Patch_ListEntry_C::Border_CensorPatch' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Border_Selected) == 0x000288, "Member 'UWBP_Patch_ListEntry_C::Border_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, CheckBox_CensorPatch) == 0x000290, "Member 'UWBP_Patch_ListEntry_C::CheckBox_CensorPatch' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Image_BadSize) == 0x000298, "Member 'UWBP_Patch_ListEntry_C::Image_BadSize' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Image_NoPatch) == 0x0002A0, "Member 'UWBP_Patch_ListEntry_C::Image_NoPatch' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Image_NotFound) == 0x0002A8, "Member 'UWBP_Patch_ListEntry_C::Image_NotFound' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Image_Patch) == 0x0002B0, "Member 'UWBP_Patch_ListEntry_C::Image_Patch' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Text_BadSize) == 0x0002B8, "Member 'UWBP_Patch_ListEntry_C::Text_BadSize' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Text_NoPatch) == 0x0002C0, "Member 'UWBP_Patch_ListEntry_C::Text_NoPatch' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, Text_NotFound) == 0x0002C8, "Member 'UWBP_Patch_ListEntry_C::Text_NotFound' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, WBP_ModIcon) == 0x0002D0, "Member 'UWBP_Patch_ListEntry_C::WBP_ModIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, WidgetSwitcher_150) == 0x0002D8, "Member 'UWBP_Patch_ListEntry_C::WidgetSwitcher_150' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, LoadedPatchTexture) == 0x0002E0, "Member 'UWBP_Patch_ListEntry_C::LoadedPatchTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, CantSelectTooltipText) == 0x0002E8, "Member 'UWBP_Patch_ListEntry_C::CantSelectTooltipText' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, NoPatchTooltipText) == 0x000300, "Member 'UWBP_Patch_ListEntry_C::NoPatchTooltipText' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, PatchFileObjRef) == 0x000318, "Member 'UWBP_Patch_ListEntry_C::PatchFileObjRef' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, UnselectedBorderColour) == 0x000320, "Member 'UWBP_Patch_ListEntry_C::UnselectedBorderColour' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, SelectedBorderColour) == 0x000330, "Member 'UWBP_Patch_ListEntry_C::SelectedBorderColour' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, PatchXSize) == 0x000340, "Member 'UWBP_Patch_ListEntry_C::PatchXSize' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, PatchYSize) == 0x000344, "Member 'UWBP_Patch_ListEntry_C::PatchYSize' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, PatchTooltipText) == 0x000348, "Member 'UWBP_Patch_ListEntry_C::PatchTooltipText' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, ToolTipCensorPatch) == 0x000360, "Member 'UWBP_Patch_ListEntry_C::ToolTipCensorPatch' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, NativePatchTooltip) == 0x000378, "Member 'UWBP_Patch_ListEntry_C::NativePatchTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, ModdedPatchTooltip) == 0x000390, "Member 'UWBP_Patch_ListEntry_C::ModdedPatchTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, BadSizeTooltip) == 0x0003A8, "Member 'UWBP_Patch_ListEntry_C::BadSizeTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, NotFoundToolTip) == 0x0003C0, "Member 'UWBP_Patch_ListEntry_C::NotFoundToolTip' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, BorderHoveredColour) == 0x0003D8, "Member 'UWBP_Patch_ListEntry_C::BorderHoveredColour' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, BorderNormalColour) == 0x0003E8, "Member 'UWBP_Patch_ListEntry_C::BorderNormalColour' has a wrong offset!");
static_assert(offsetof(UWBP_Patch_ListEntry_C, PatchesDialogRef) == 0x0003F8, "Member 'UWBP_Patch_ListEntry_C::PatchesDialogRef' has a wrong offset!");

}

