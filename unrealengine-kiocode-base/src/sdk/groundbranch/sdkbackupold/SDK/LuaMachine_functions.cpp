#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LuaMachine

#include "Basic.hpp"

#include "LuaMachine_classes.hpp"
#include "LuaMachine_parameters.hpp"


namespace SDK
{

// Function LuaMachine.LuaBlueprintFunctionLibrary.AssignLuaValueToLuaState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::AssignLuaValueToLuaState(class UObject* WorldContextObject, const struct FLuaValue& Value, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "AssignLuaValueToLuaState");

	Params::LuaBlueprintFunctionLibrary_AssignLuaValueToLuaState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Value = std::move(Value);
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_BoolToLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const bool                              Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::Conv_BoolToLuaValue(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_BoolToLuaValue");

	Params::LuaBlueprintFunctionLibrary_Conv_BoolToLuaValue Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_FloatToLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const float                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::Conv_FloatToLuaValue(const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_FloatToLuaValue");

	Params::LuaBlueprintFunctionLibrary_Conv_FloatToLuaValue Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_IntToLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::Conv_IntToLuaValue(const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_IntToLuaValue");

	Params::LuaBlueprintFunctionLibrary_Conv_IntToLuaValue Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToBool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::Conv_LuaValueToBool(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToBool");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToBool Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* ULuaBlueprintFunctionLibrary::Conv_LuaValueToClass(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToClass");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToClass Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULuaBlueprintFunctionLibrary::Conv_LuaValueToFloat(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToFloat");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToFloat Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToFVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ULuaBlueprintFunctionLibrary::Conv_LuaValueToFVector(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToFVector");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToFVector Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULuaBlueprintFunctionLibrary::Conv_LuaValueToInt(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToInt");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToInt Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ULuaBlueprintFunctionLibrary::Conv_LuaValueToName(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToName");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToName Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* ULuaBlueprintFunctionLibrary::Conv_LuaValueToObject(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToObject");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToObject Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULuaBlueprintFunctionLibrary::Conv_LuaValueToString(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToString");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToString Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_LuaValueToText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ULuaBlueprintFunctionLibrary::Conv_LuaValueToText(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_LuaValueToText");

	Params::LuaBlueprintFunctionLibrary_Conv_LuaValueToText Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_NameToLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FName                       Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::Conv_NameToLuaValue(const class FName Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_NameToLuaValue");

	Params::LuaBlueprintFunctionLibrary_Conv_NameToLuaValue Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_ObjectToLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::Conv_ObjectToLuaValue(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_ObjectToLuaValue");

	Params::LuaBlueprintFunctionLibrary_Conv_ObjectToLuaValue Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_StringToLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::Conv_StringToLuaValue(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_StringToLuaValue");

	Params::LuaBlueprintFunctionLibrary_Conv_StringToLuaValue Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.Conv_TextToLuaValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FText&                      Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::Conv_TextToLuaValue(const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "Conv_TextToLuaValue");

	Params::LuaBlueprintFunctionLibrary_Conv_TextToLuaValue Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.GetLuaComponentAsLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::GetLuaComponentAsLuaValue(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "GetLuaComponentAsLuaValue");

	Params::LuaBlueprintFunctionLibrary_GetLuaComponentAsLuaValue Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.GetLuaComponentByNameAsLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::GetLuaComponentByNameAsLuaValue(class AActor* Actor, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "GetLuaComponentByNameAsLuaValue");

	Params::LuaBlueprintFunctionLibrary_GetLuaComponentByNameAsLuaValue Parms{};

	Parms.Actor = Actor;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.GetLuaComponentByStateAndNameAsLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::GetLuaComponentByStateAndNameAsLuaValue(class AActor* Actor, TSubclassOf<class ULuaState> State, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "GetLuaComponentByStateAndNameAsLuaValue");

	Params::LuaBlueprintFunctionLibrary_GetLuaComponentByStateAndNameAsLuaValue Parms{};

	Parms.Actor = Actor;
	Parms.State = State;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.GetLuaComponentByStateAsLuaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::GetLuaComponentByStateAsLuaValue(class AActor* Actor, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "GetLuaComponentByStateAsLuaValue");

	Params::LuaBlueprintFunctionLibrary_GetLuaComponentByStateAsLuaValue Parms{};

	Parms.Actor = Actor;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.GetLuaReflectionType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELuaReflectionType*                     LuaReflectionTypes                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::GetLuaReflectionType(class UObject* InObject, const class FString& Name_0, ELuaReflectionType* LuaReflectionTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "GetLuaReflectionType");

	Params::LuaBlueprintFunctionLibrary_GetLuaReflectionType Parms{};

	Parms.InObject = InObject;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LuaReflectionTypes != nullptr)
		*LuaReflectionTypes = Parms.LuaReflectionTypes;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaComponentGetField
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 LuaComponent                                           (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaComponentGetField(const struct FLuaValue& LuaComponent, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaComponentGetField");

	Params::LuaBlueprintFunctionLibrary_LuaComponentGetField Parms{};

	Parms.LuaComponent = std::move(LuaComponent);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateBool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const bool                              bInBool                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateBool(const bool bInBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateBool");

	Params::LuaBlueprintFunctionLibrary_LuaCreateBool Parms{};

	Parms.bInBool = bInBool;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateInteger
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateInteger(const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateInteger");

	Params::LuaBlueprintFunctionLibrary_LuaCreateInteger Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateLazyTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateLazyTable(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateLazyTable");

	Params::LuaBlueprintFunctionLibrary_LuaCreateLazyTable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateNil
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateNil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateNil");

	Params::LuaBlueprintFunctionLibrary_LuaCreateNil Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const float                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateNumber(const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateNumber");

	Params::LuaBlueprintFunctionLibrary_LuaCreateNumber Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateObject(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateObject");

	Params::LuaBlueprintFunctionLibrary_LuaCreateObject Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateObjectInState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateObjectInState(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateObjectInState");

	Params::LuaBlueprintFunctionLibrary_LuaCreateObjectInState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateString(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateString");

	Params::LuaBlueprintFunctionLibrary_LuaCreateString Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateTable(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateTable");

	Params::LuaBlueprintFunctionLibrary_LuaCreateTable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateThread
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateThread(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateThread");

	Params::LuaBlueprintFunctionLibrary_LuaCreateThread Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaCreateUFunction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaCreateUFunction(class UObject* InObject, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaCreateUFunction");

	Params::LuaBlueprintFunctionLibrary_LuaCreateUFunction Parms{};

	Parms.InObject = InObject;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGCCollect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaGCCollect(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGCCollect");

	Params::LuaBlueprintFunctionLibrary_LuaGCCollect Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGCRestart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaGCRestart(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGCRestart");

	Params::LuaBlueprintFunctionLibrary_LuaGCRestart Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGCStop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaGCStop(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGCStop");

	Params::LuaBlueprintFunctionLibrary_LuaGCStop Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGetGlobal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaGetGlobal(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGetGlobal");

	Params::LuaBlueprintFunctionLibrary_LuaGetGlobal Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGetState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULuaState*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULuaState* ULuaBlueprintFunctionLibrary::LuaGetState(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGetState");

	Params::LuaBlueprintFunctionLibrary_LuaGetState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGetTop
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULuaBlueprintFunctionLibrary::LuaGetTop(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGetTop");

	Params::LuaBlueprintFunctionLibrary_LuaGetTop Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGetUsedMemory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULuaBlueprintFunctionLibrary::LuaGetUsedMemory(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGetUsedMemory");

	Params::LuaBlueprintFunctionLibrary_LuaGetUsedMemory Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGlobalCall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaGlobalCall(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& Name_0, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGlobalCall");

	Params::LuaBlueprintFunctionLibrary_LuaGlobalCall Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Name_0 = std::move(Name_0);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGlobalCallMulti
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaGlobalCallMulti(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& Name_0, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGlobalCallMulti");

	Params::LuaBlueprintFunctionLibrary_LuaGlobalCallMulti Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Name_0 = std::move(Name_0);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGlobalCallValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaGlobalCallValue(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGlobalCallValue");

	Params::LuaBlueprintFunctionLibrary_LuaGlobalCallValue Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaGlobalCallValueMulti
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaGlobalCallValueMulti(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaGlobalCallValueMulti");

	Params::LuaBlueprintFunctionLibrary_LuaGlobalCallValueMulti Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaHttpRequest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Method                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&Headers                                                (Parm, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Body                                                   (Parm, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Context                                                (Parm, NativeAccessSpecifierPublic)
// const TDelegate<void(const struct FLuaValue& Context, const struct FLuaValue& Response)>&ResponseReceived                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const struct FLuaValue& Context)>&Error                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaHttpRequest(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& Method, const class FString& URL, const TMap<class FString, class FString>& Headers, const struct FLuaValue& Body, const struct FLuaValue& Context, const TDelegate<void(const struct FLuaValue& Context, const struct FLuaValue& Response)>& ResponseReceived, const TDelegate<void(const struct FLuaValue& Context)>& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaHttpRequest");

	Params::LuaBlueprintFunctionLibrary_LuaHttpRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Method = std::move(Method);
	Parms.URL = std::move(URL);
	Parms.Headers = std::move(Headers);
	Parms.Body = std::move(Body);
	Parms.Context = std::move(Context);
	Parms.ResponseReceived = ResponseReceived;
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaLoadPakFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Mountpoint                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>*               Assets                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const class FString&                    ContentPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AssetRegistryPath                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaLoadPakFile(const class FString& Filename, const class FString& Mountpoint, TArray<struct FLuaValue>* Assets, const class FString& ContentPath, const class FString& AssetRegistryPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaLoadPakFile");

	Params::LuaBlueprintFunctionLibrary_LuaLoadPakFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.Mountpoint = std::move(Mountpoint);
	Parms.ContentPath = std::move(ContentPath);
	Parms.AssetRegistryPath = std::move(AssetRegistryPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Assets != nullptr)
		*Assets = std::move(Parms.Assets);

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaNewLuaUserDataObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaUserDataObject>   UserDataObjectClass                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTrackObject                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaNewLuaUserDataObject(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, TSubclassOf<class ULuaUserDataObject> UserDataObjectClass, bool bTrackObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaNewLuaUserDataObject");

	Params::LuaBlueprintFunctionLibrary_LuaNewLuaUserDataObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.UserDataObjectClass = UserDataObjectClass;
	Parms.bTrackObject = bTrackObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaRunByteCode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    ByteCode                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    CodePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaRunByteCode(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const TArray<uint8>& ByteCode, const class FString& CodePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaRunByteCode");

	Params::LuaBlueprintFunctionLibrary_LuaRunByteCode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.ByteCode = std::move(ByteCode);
	Parms.CodePath = std::move(CodePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaRunCodeAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULuaCode*                         CodeAsset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaRunCodeAsset(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, class ULuaCode* CodeAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaRunCodeAsset");

	Params::LuaBlueprintFunctionLibrary_LuaRunCodeAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.CodeAsset = CodeAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaRunFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIgnoreNonExistent                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaRunFile(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& Filename, const bool bIgnoreNonExistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaRunFile");

	Params::LuaBlueprintFunctionLibrary_LuaRunFile Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Filename = std::move(Filename);
	Parms.bIgnoreNonExistent = bIgnoreNonExistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaRunNonContentFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIgnoreNonExistent                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaRunNonContentFile(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& Filename, const bool bIgnoreNonExistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaRunNonContentFile");

	Params::LuaBlueprintFunctionLibrary_LuaRunNonContentFile Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Filename = std::move(Filename);
	Parms.bIgnoreNonExistent = bIgnoreNonExistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaRunString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CodeString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CodePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaRunString(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& CodeString, const class FString& CodePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaRunString");

	Params::LuaBlueprintFunctionLibrary_LuaRunString Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.CodeString = std::move(CodeString);
	Parms.CodePath = std::move(CodePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaRunURL
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&Headers                                                (Parm, NativeAccessSpecifierPublic)
// const class FString&                    SecurityHeader                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SignaturePublicExponent                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SignatureModulus                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FLuaValue& ReturnValue, bool bWasSuccessful, int32 StatusCode)>Completed                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaRunURL(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& URL, const TMap<class FString, class FString>& Headers, const class FString& SecurityHeader, const class FString& SignaturePublicExponent, const class FString& SignatureModulus, TDelegate<void(const struct FLuaValue& ReturnValue, bool bWasSuccessful, int32 StatusCode)> Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaRunURL");

	Params::LuaBlueprintFunctionLibrary_LuaRunURL Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.URL = std::move(URL);
	Parms.Headers = std::move(Headers);
	Parms.SecurityHeader = std::move(SecurityHeader);
	Parms.SignaturePublicExponent = std::move(SignaturePublicExponent);
	Parms.SignatureModulus = std::move(SignatureModulus);
	Parms.Completed = Completed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaSetGlobal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaSetGlobal(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& Name_0, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaSetGlobal");

	Params::LuaBlueprintFunctionLibrary_LuaSetGlobal Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Name_0 = std::move(Name_0);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaSetUserDataMetaTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 MetaTable                                              (Parm, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaSetUserDataMetaTable(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const struct FLuaValue& MetaTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaSetUserDataMetaTable");

	Params::LuaBlueprintFunctionLibrary_LuaSetUserDataMetaTable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.MetaTable = std::move(MetaTable);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaStateDestroy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaStateDestroy(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaStateDestroy");

	Params::LuaBlueprintFunctionLibrary_LuaStateDestroy Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaStateReload
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaStateReload(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaStateReload");

	Params::LuaBlueprintFunctionLibrary_LuaStateReload Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableAssetToLuaTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULuaTableAsset*                   TableAsset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableAssetToLuaTable(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, class ULuaTableAsset* TableAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableAssetToLuaTable");

	Params::LuaBlueprintFunctionLibrary_LuaTableAssetToLuaTable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.TableAsset = TableAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableFillObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaTableFillObject(const struct FLuaValue& InTable, class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableFillObject");

	Params::LuaBlueprintFunctionLibrary_LuaTableFillObject Parms{};

	Parms.InTable = std::move(InTable);
	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableFromMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, struct FLuaValue>&Map                                                    (Parm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableFromMap(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const TMap<class FString, struct FLuaValue>& Map)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableFromMap");

	Params::LuaBlueprintFunctionLibrary_LuaTableFromMap Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Map = std::move(Map);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableGetByIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableGetByIndex(const struct FLuaValue& Table, const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableGetByIndex");

	Params::LuaBlueprintFunctionLibrary_LuaTableGetByIndex Parms{};

	Parms.Table = std::move(Table);
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableGetField
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableGetField(const struct FLuaValue& Table, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableGetField");

	Params::LuaBlueprintFunctionLibrary_LuaTableGetField Parms{};

	Parms.Table = std::move(Table);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableGetKeys
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaTableGetKeys(const struct FLuaValue& Table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableGetKeys");

	Params::LuaBlueprintFunctionLibrary_LuaTableGetKeys Parms{};

	Parms.Table = std::move(Table);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableGetValues
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaTableGetValues(const struct FLuaValue& Table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableGetValues");

	Params::LuaBlueprintFunctionLibrary_LuaTableGetValues Parms{};

	Parms.Table = std::move(Table);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableImplements
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// class ULuaTableAsset*                   TableAsset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaTableImplements(const struct FLuaValue& Table, class ULuaTableAsset* TableAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableImplements");

	Params::LuaBlueprintFunctionLibrary_LuaTableImplements Parms{};

	Parms.Table = std::move(Table);
	Parms.TableAsset = TableAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableImplementsAll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<class ULuaTableAsset*>&    TableAssets                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaTableImplementsAll(const struct FLuaValue& Table, const TArray<class ULuaTableAsset*>& TableAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableImplementsAll");

	Params::LuaBlueprintFunctionLibrary_LuaTableImplementsAll Parms{};

	Parms.Table = std::move(Table);
	Parms.TableAssets = std::move(TableAssets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableImplementsAny
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<class ULuaTableAsset*>&    TableAssets                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaTableImplementsAny(const struct FLuaValue& Table, const TArray<class ULuaTableAsset*>& TableAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableImplementsAny");

	Params::LuaBlueprintFunctionLibrary_LuaTableImplementsAny Parms{};

	Parms.Table = std::move(Table);
	Parms.TableAssets = std::move(TableAssets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableIndexCall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableIndexCall(const struct FLuaValue& InTable, const int32 Index_0, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableIndexCall");

	Params::LuaBlueprintFunctionLibrary_LuaTableIndexCall Parms{};

	Parms.InTable = std::move(InTable);
	Parms.Index_0 = Index_0;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableKeyCall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableKeyCall(const struct FLuaValue& InTable, const class FString& Key, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableKeyCall");

	Params::LuaBlueprintFunctionLibrary_LuaTableKeyCall Parms{};

	Parms.InTable = std::move(InTable);
	Parms.Key = std::move(Key);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableKeyCallWithSelf
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableKeyCallWithSelf(const struct FLuaValue& InTable, const class FString& Key, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableKeyCallWithSelf");

	Params::LuaBlueprintFunctionLibrary_LuaTableKeyCallWithSelf Parms{};

	Parms.InTable = std::move(InTable);
	Parms.Key = std::move(Key);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableMergePack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Values1                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Values2                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableMergePack(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const TArray<struct FLuaValue>& Values1, const TArray<struct FLuaValue>& Values2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableMergePack");

	Params::LuaBlueprintFunctionLibrary_LuaTableMergePack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Values1 = std::move(Values1);
	Parms.Values2 = std::move(Values2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableMergeUnpack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 InTable1                                               (Parm, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 InTable2                                               (Parm, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaTableMergeUnpack(const struct FLuaValue& InTable1, const struct FLuaValue& InTable2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableMergeUnpack");

	Params::LuaBlueprintFunctionLibrary_LuaTableMergeUnpack Parms{};

	Parms.InTable1 = std::move(InTable1);
	Parms.InTable2 = std::move(InTable2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTablePack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Values                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTablePack(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const TArray<struct FLuaValue>& Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTablePack");

	Params::LuaBlueprintFunctionLibrary_LuaTablePack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Values = std::move(Values);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// const int32                             First                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Last                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaTableRange(const struct FLuaValue& InTable, const int32 First, const int32 Last)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableRange");

	Params::LuaBlueprintFunctionLibrary_LuaTableRange Parms{};

	Parms.InTable = std::move(InTable);
	Parms.First = First;
	Parms.Last = Last;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableSetByIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableSetByIndex(const struct FLuaValue& Table, const int32 Index_0, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableSetByIndex");

	Params::LuaBlueprintFunctionLibrary_LuaTableSetByIndex Parms{};

	Parms.Table = std::move(Table);
	Parms.Index_0 = Index_0;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableSetField
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Table                                                  (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableSetField(const struct FLuaValue& Table, const class FString& Key, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableSetField");

	Params::LuaBlueprintFunctionLibrary_LuaTableSetField Parms{};

	Parms.Table = std::move(Table);
	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableSetMetaTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 InMetaTable                                            (Parm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaTableSetMetaTable(const struct FLuaValue& InTable, const struct FLuaValue& InMetaTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableSetMetaTable");

	Params::LuaBlueprintFunctionLibrary_LuaTableSetMetaTable Parms{};

	Parms.InTable = std::move(InTable);
	Parms.InMetaTable = std::move(InMetaTable);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableToVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ULuaBlueprintFunctionLibrary::LuaTableToVector(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableToVector");

	Params::LuaBlueprintFunctionLibrary_LuaTableToVector Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaTableUnpack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaTableUnpack(const struct FLuaValue& InTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaTableUnpack");

	Params::LuaBlueprintFunctionLibrary_LuaTableUnpack Parms{};

	Parms.InTable = std::move(InTable);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaThreadGetStackTop
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULuaBlueprintFunctionLibrary::LuaThreadGetStackTop(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaThreadGetStackTop");

	Params::LuaBlueprintFunctionLibrary_LuaThreadGetStackTop Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaThreadGetStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// ELuaThreadStatus                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELuaThreadStatus ULuaBlueprintFunctionLibrary::LuaThreadGetStatus(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaThreadGetStatus");

	Params::LuaBlueprintFunctionLibrary_LuaThreadGetStatus Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueArrayAppend
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<struct FLuaValue>&         Array                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaValueArrayAppend(const TArray<struct FLuaValue>& Array, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueArrayAppend");

	Params::LuaBlueprintFunctionLibrary_LuaValueArrayAppend Parms{};

	Parms.Array = std::move(Array);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueArrayMerge
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<struct FLuaValue>&         Array1                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Array2                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaValueArrayMerge(const TArray<struct FLuaValue>& Array1, const TArray<struct FLuaValue>& Array2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueArrayMerge");

	Params::LuaBlueprintFunctionLibrary_LuaValueArrayMerge Parms{};

	Parms.Array1 = std::move(Array1);
	Parms.Array2 = std::move(Array2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueCall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaValueCall(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueCall");

	Params::LuaBlueprintFunctionLibrary_LuaValueCall Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueCallIfNotNil
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaValueCallIfNotNil(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueCallIfNotNil");

	Params::LuaBlueprintFunctionLibrary_LuaValueCallIfNotNil Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueCallMulti
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaValueCallMulti(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueCallMulti");

	Params::LuaBlueprintFunctionLibrary_LuaValueCallMulti Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueFromBase64
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Base64                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaValueFromBase64(const class FString& Base64)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueFromBase64");

	Params::LuaBlueprintFunctionLibrary_LuaValueFromBase64 Parms{};

	Parms.Base64 = std::move(Base64);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueFromJson
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Json                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue*                       Value                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueFromJson(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const class FString& Json, struct FLuaValue* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueFromJson");

	Params::LuaBlueprintFunctionLibrary_LuaValueFromJson Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Json = std::move(Json);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueFromUTF16
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaValueFromUTF16(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueFromUTF16");

	Params::LuaBlueprintFunctionLibrary_LuaValueFromUTF16 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueFromUTF32
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaValueFromUTF32(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueFromUTF32");

	Params::LuaBlueprintFunctionLibrary_LuaValueFromUTF32 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueFromUTF8
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintFunctionLibrary::LuaValueFromUTF8(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueFromUTF8");

	Params::LuaBlueprintFunctionLibrary_LuaValueFromUTF8 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueGetOwner
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ULuaState> ULuaBlueprintFunctionLibrary::LuaValueGetOwner(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueGetOwner");

	Params::LuaBlueprintFunctionLibrary_LuaValueGetOwner Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsBoolean
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsBoolean(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsBoolean");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsBoolean Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsFunction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsFunction(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsFunction");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsFunction Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsInteger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsInteger(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsInteger");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsInteger Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsNil
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsNil(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsNil");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsNil Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsNotNil
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsNotNil(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsNotNil");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsNotNil Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsNumber
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsNumber(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsNumber");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsNumber Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsOwned
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsOwned(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsOwned");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsOwned Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsReferencedInLuaRegistry
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsReferencedInLuaRegistry(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsReferencedInLuaRegistry");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsReferencedInLuaRegistry Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsString(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsString");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsString Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsTable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsTable(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsTable");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsTable Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueIsThread
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaBlueprintFunctionLibrary::LuaValueIsThread(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueIsThread");

	Params::LuaBlueprintFunctionLibrary_LuaValueIsThread Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueLength
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULuaBlueprintFunctionLibrary::LuaValueLength(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueLength");

	Params::LuaBlueprintFunctionLibrary_LuaValueLength Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueLoadClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bDetectBlueprintGeneratedClass                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* ULuaBlueprintFunctionLibrary::LuaValueLoadClass(const struct FLuaValue& Value, const bool bDetectBlueprintGeneratedClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueLoadClass");

	Params::LuaBlueprintFunctionLibrary_LuaValueLoadClass Parms{};

	Parms.Value = std::move(Value);
	Parms.bDetectBlueprintGeneratedClass = bDetectBlueprintGeneratedClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueLoadObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* ULuaBlueprintFunctionLibrary::LuaValueLoadObject(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueLoadObject");

	Params::LuaBlueprintFunctionLibrary_LuaValueLoadObject Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueResumeMulti
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaBlueprintFunctionLibrary::LuaValueResumeMulti(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueResumeMulti");

	Params::LuaBlueprintFunctionLibrary_LuaValueResumeMulti Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToBase64
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULuaBlueprintFunctionLibrary::LuaValueToBase64(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToBase64");

	Params::LuaBlueprintFunctionLibrary_LuaValueToBase64 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToBlueprintGeneratedClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* ULuaBlueprintFunctionLibrary::LuaValueToBlueprintGeneratedClass(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToBlueprintGeneratedClass");

	Params::LuaBlueprintFunctionLibrary_LuaValueToBlueprintGeneratedClass Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToHexPointer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULuaBlueprintFunctionLibrary::LuaValueToHexPointer(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToHexPointer");

	Params::LuaBlueprintFunctionLibrary_LuaValueToHexPointer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToJson
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULuaBlueprintFunctionLibrary::LuaValueToJson(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToJson");

	Params::LuaBlueprintFunctionLibrary_LuaValueToJson Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToPointer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULuaState>            State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 ULuaBlueprintFunctionLibrary::LuaValueToPointer(class UObject* WorldContextObject, TSubclassOf<class ULuaState> State, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToPointer");

	Params::LuaBlueprintFunctionLibrary_LuaValueToPointer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.State = State;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToTransientTexture
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             Width                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Height                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const EPixelFormat                      PixelFormat                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDetectFormat                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* ULuaBlueprintFunctionLibrary::LuaValueToTransientTexture(const int32 Width, const int32 Height, const struct FLuaValue& Value, const EPixelFormat PixelFormat, bool bDetectFormat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToTransientTexture");

	Params::LuaBlueprintFunctionLibrary_LuaValueToTransientTexture Parms{};

	Parms.Width = Width;
	Parms.Height = Height;
	Parms.Value = std::move(Value);
	Parms.PixelFormat = PixelFormat;
	Parms.bDetectFormat = bDetectFormat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToUTF16
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULuaBlueprintFunctionLibrary::LuaValueToUTF16(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToUTF16");

	Params::LuaBlueprintFunctionLibrary_LuaValueToUTF16 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToUTF32
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULuaBlueprintFunctionLibrary::LuaValueToUTF32(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToUTF32");

	Params::LuaBlueprintFunctionLibrary_LuaValueToUTF32 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueToUTF8
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULuaBlueprintFunctionLibrary::LuaValueToUTF8(const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueToUTF8");

	Params::LuaBlueprintFunctionLibrary_LuaValueToUTF8 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.LuaValueYield
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::LuaValueYield(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "LuaValueYield");

	Params::LuaBlueprintFunctionLibrary_LuaValueYield Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.RegisterLuaConsoleCommand
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    CommandName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 LuaConsoleCommand                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::RegisterLuaConsoleCommand(const class FString& CommandName, const struct FLuaValue& LuaConsoleCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "RegisterLuaConsoleCommand");

	Params::LuaBlueprintFunctionLibrary_RegisterLuaConsoleCommand Parms{};

	Parms.CommandName = std::move(CommandName);
	Parms.LuaConsoleCommand = std::move(LuaConsoleCommand);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.SwitchOnLuaValueType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 LuaValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ELuaValueType*                          LuaValueTypes                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::SwitchOnLuaValueType(const struct FLuaValue& LuaValue, ELuaValueType* LuaValueTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "SwitchOnLuaValueType");

	Params::LuaBlueprintFunctionLibrary_SwitchOnLuaValueType Parms{};

	Parms.LuaValue = std::move(LuaValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LuaValueTypes != nullptr)
		*LuaValueTypes = Parms.LuaValueTypes;
}


// Function LuaMachine.LuaBlueprintFunctionLibrary.UnregisterLuaConsoleCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    CommandName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaBlueprintFunctionLibrary::UnregisterLuaConsoleCommand(const class FString& CommandName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaBlueprintFunctionLibrary", "UnregisterLuaConsoleCommand");

	Params::LuaBlueprintFunctionLibrary_UnregisterLuaConsoleCommand Parms{};

	Parms.CommandName = std::move(CommandName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaBlueprintPackage.ReceiveInit
// (Event, Public, BlueprintEvent)

void ULuaBlueprintPackage::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaBlueprintPackage", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LuaMachine.LuaBlueprintPackage.GetLuaState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ULuaState>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ULuaState> ULuaBlueprintPackage::GetLuaState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaBlueprintPackage", "GetLuaState");

	Params::LuaBlueprintPackage_GetLuaState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaBlueprintPackage.GetSelfLuaTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaBlueprintPackage::GetSelfLuaTable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaBlueprintPackage", "GetSelfLuaTable");

	Params::LuaBlueprintPackage_GetSelfLuaTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.CursorGoTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Line                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaMultiLineEditableTextBox::CursorGoTo(int32 Line, int32 Column)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "CursorGoTo");

	Params::LuaMultiLineEditableTextBox_CursorGoTo Parms{};

	Parms.Line = Line;
	Parms.Column = Column;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.MoveCursorDown
// (Final, Native, Public, BlueprintCallable)

void ULuaMultiLineEditableTextBox::MoveCursorDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "MoveCursorDown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.MoveCursorLeft
// (Final, Native, Public, BlueprintCallable)

void ULuaMultiLineEditableTextBox::MoveCursorLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "MoveCursorLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.MoveCursorRight
// (Final, Native, Public, BlueprintCallable)

void ULuaMultiLineEditableTextBox::MoveCursorRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "MoveCursorRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.MoveCursorUp
// (Final, Native, Public, BlueprintCallable)

void ULuaMultiLineEditableTextBox::MoveCursorUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "MoveCursorUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (Parm, NativeAccessSpecifierPublic)

void ULuaMultiLineEditableTextBox::SetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "SetText");

	Params::LuaMultiLineEditableTextBox_SetText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.GetCursorColumn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULuaMultiLineEditableTextBox::GetCursorColumn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "GetCursorColumn");

	Params::LuaMultiLineEditableTextBox_GetCursorColumn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.GetCursorLine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULuaMultiLineEditableTextBox::GetCursorLine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "GetCursorLine");

	Params::LuaMultiLineEditableTextBox_GetCursorLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.GetSelectedText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ULuaMultiLineEditableTextBox::GetSelectedText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "GetSelectedText");

	Params::LuaMultiLineEditableTextBox_GetSelectedText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaMultiLineEditableTextBox.GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ULuaMultiLineEditableTextBox::GetText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaMultiLineEditableTextBox", "GetText");

	Params::LuaMultiLineEditableTextBox_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.ToByteCode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Code                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CodePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          ErrorString                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> ULuaState::ToByteCode(const class FString& Code, const class FString& CodePath, class FString* ErrorString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LuaState", "ToByteCode");

	Params::LuaState_ToByteCode Parms{};

	Parms.Code = std::move(Code);
	Parms.CodePath = std::move(CodePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ErrorString != nullptr)
		*ErrorString = std::move(Parms.ErrorString);

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.GetLuaBlueprintPackageTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    PackageName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaState::GetLuaBlueprintPackageTable(const class FString& PackageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "GetLuaBlueprintPackageTable");

	Params::LuaState_GetLuaBlueprintPackageTable Parms{};

	Parms.PackageName = std::move(PackageName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.GetLuaUserDataField
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLuaValue&                 UserData                                               (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaState::GetLuaUserDataField(const struct FLuaValue& UserData, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "GetLuaUserDataField");

	Params::LuaState_GetLuaUserDataField Parms{};

	Parms.UserData = std::move(UserData);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.GetLuaValueFromProperty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaState::GetLuaValueFromProperty(class UObject* InObject, const class FString& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "GetLuaValueFromProperty");

	Params::LuaState_GetLuaValueFromProperty Parms{};

	Parms.InObject = InObject;
	Parms.PropertyName = std::move(PropertyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.LuaGetInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaDebug                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaDebug ULuaState::LuaGetInfo(const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "LuaGetInfo");

	Params::LuaState_LuaGetInfo Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.LuaGetLocals
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, struct FLuaValue>   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, struct FLuaValue> ULuaState::LuaGetLocals(const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "LuaGetLocals");

	Params::LuaState_LuaGetLocals Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.NewLuaUserDataObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ULuaUserDataObject>   LuaUserDataObjectClass                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTrackObject                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaState::NewLuaUserDataObject(TSubclassOf<class ULuaUserDataObject> LuaUserDataObjectClass, bool bTrackObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "NewLuaUserDataObject");

	Params::LuaState_NewLuaUserDataObject Parms{};

	Parms.LuaUserDataObjectClass = LuaUserDataObjectClass;
	Parms.bTrackObject = bTrackObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.ReceiveLuaCallHook
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FLuaDebug&                 LuaDebug                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULuaState::ReceiveLuaCallHook(const struct FLuaDebug& LuaDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "ReceiveLuaCallHook");

	Params::LuaState_ReceiveLuaCallHook Parms{};

	Parms.LuaDebug = std::move(LuaDebug);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.ReceiveLuaError
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaState::ReceiveLuaError(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "ReceiveLuaError");

	Params::LuaState_ReceiveLuaError Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.ReceiveLuaLevelAddedToWorld
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ULevel*                           Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaState::ReceiveLuaLevelAddedToWorld(class ULevel* Level, class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "ReceiveLuaLevelAddedToWorld");

	Params::LuaState_ReceiveLuaLevelAddedToWorld Parms{};

	Parms.Level = Level;
	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.ReceiveLuaLevelRemovedFromWorld
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ULevel*                           Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULuaState::ReceiveLuaLevelRemovedFromWorld(class ULevel* Level, class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "ReceiveLuaLevelRemovedFromWorld");

	Params::LuaState_ReceiveLuaLevelRemovedFromWorld Parms{};

	Parms.Level = Level;
	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.ReceiveLuaLineHook
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FLuaDebug&                 LuaDebug                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULuaState::ReceiveLuaLineHook(const struct FLuaDebug& LuaDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "ReceiveLuaLineHook");

	Params::LuaState_ReceiveLuaLineHook Parms{};

	Parms.LuaDebug = std::move(LuaDebug);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.ReceiveLuaReturnHook
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FLuaDebug&                 LuaDebug                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULuaState::ReceiveLuaReturnHook(const struct FLuaDebug& LuaDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "ReceiveLuaReturnHook");

	Params::LuaState_ReceiveLuaReturnHook Parms{};

	Parms.LuaDebug = std::move(LuaDebug);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.ReceiveLuaStateInitialized
// (Native, Event, Public, BlueprintEvent)

void ULuaState::ReceiveLuaStateInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "ReceiveLuaStateInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.ReceiveLuaStatePreInitialized
// (Native, Event, Public, BlueprintEvent)

void ULuaState::ReceiveLuaStatePreInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "ReceiveLuaStatePreInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.SetLuaUserDataField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 UserData                                               (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)

void ULuaState::SetLuaUserDataField(const struct FLuaValue& UserData, const class FString& Key, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "SetLuaUserDataField");

	Params::LuaState_SetLuaUserDataField Parms{};

	Parms.UserData = std::move(UserData);
	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaState.SetPropertyFromLuaValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaState::SetPropertyFromLuaValue(class UObject* InObject, const class FString& PropertyName, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "SetPropertyFromLuaValue");

	Params::LuaState_SetPropertyFromLuaValue Parms{};

	Parms.InObject = InObject;
	Parms.PropertyName = std::move(PropertyName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.StructToLuaTable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptStruct*                    InScriptStruct                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    StructData                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaState::StructToLuaTable(class UScriptStruct* InScriptStruct, const TArray<uint8>& StructData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "StructToLuaTable");

	Params::LuaState_StructToLuaTable Parms{};

	Parms.InScriptStruct = InScriptStruct;
	Parms.StructData = std::move(StructData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaState.GetSelfLuaState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ULuaState>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ULuaState> ULuaState::GetSelfLuaState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaState", "GetSelfLuaState");

	Params::LuaState_GetSelfLuaState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bGlobal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaComponent::LuaCallFunction(const class FString& Name_0, const TArray<struct FLuaValue>& Args, bool bGlobal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallFunction");

	Params::LuaComponent_LuaCallFunction Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Args = std::move(Args);
	Parms.bGlobal = bGlobal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallFunctionMulti
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bGlobal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaComponent::LuaCallFunctionMulti(const class FString& Name_0, const TArray<struct FLuaValue>& Args, bool bGlobal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallFunctionMulti");

	Params::LuaComponent_LuaCallFunctionMulti Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Args = std::move(Args);
	Parms.bGlobal = bGlobal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallTableIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaComponent::LuaCallTableIndex(const struct FLuaValue& InTable, int32 Index_0, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallTableIndex");

	Params::LuaComponent_LuaCallTableIndex Parms{};

	Parms.InTable = std::move(InTable);
	Parms.Index_0 = Index_0;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallTableIndexMulti
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaComponent::LuaCallTableIndexMulti(const struct FLuaValue& InTable, int32 Index_0, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallTableIndexMulti");

	Params::LuaComponent_LuaCallTableIndexMulti Parms{};

	Parms.InTable = std::move(InTable);
	Parms.Index_0 = Index_0;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallTableKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaComponent::LuaCallTableKey(const struct FLuaValue& InTable, const class FString& Key, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallTableKey");

	Params::LuaComponent_LuaCallTableKey Parms{};

	Parms.InTable = std::move(InTable);
	Parms.Key = std::move(Key);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallTableKeyMulti
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 InTable                                                (Parm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaComponent::LuaCallTableKeyMulti(const struct FLuaValue& InTable, const class FString& Key, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallTableKeyMulti");

	Params::LuaComponent_LuaCallTableKeyMulti Parms{};

	Parms.InTable = std::move(InTable);
	Parms.Key = std::move(Key);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaComponent::LuaCallValue(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallValue");

	Params::LuaComponent_LuaCallValue Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallValueIfNotNil
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaComponent::LuaCallValueIfNotNil(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallValueIfNotNil");

	Params::LuaComponent_LuaCallValueIfNotNil Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallValueMulti
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaComponent::LuaCallValueMulti(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallValueMulti");

	Params::LuaComponent_LuaCallValueMulti Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaCallValueMultiIfNotNil
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FLuaValue>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLuaValue> ULuaComponent::LuaCallValueMultiIfNotNil(const struct FLuaValue& Value, const TArray<struct FLuaValue>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaCallValueMultiIfNotNil");

	Params::LuaComponent_LuaCallValueMultiIfNotNil Parms{};

	Parms.Value = std::move(Value);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaComponentGetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULuaState*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULuaState* ULuaComponent::LuaComponentGetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaComponentGetState");

	Params::LuaComponent_LuaComponentGetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaGetField
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaComponent::LuaGetField(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaGetField");

	Params::LuaComponent_LuaGetField Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.LuaSetField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)

void ULuaComponent::LuaSetField(const class FString& Name_0, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "LuaSetField");

	Params::LuaComponent_LuaSetField Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaComponent.ReceiveLuaMetaIndex
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FLuaValue&                 Key                                                    (Parm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaComponent::ReceiveLuaMetaIndex(const struct FLuaValue& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "ReceiveLuaMetaIndex");

	Params::LuaComponent_ReceiveLuaMetaIndex Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaComponent.ReceiveLuaMetaNewIndex
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FLuaValue&                 Key                                                    (Parm, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULuaComponent::ReceiveLuaMetaNewIndex(const struct FLuaValue& Key, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaComponent", "ReceiveLuaMetaNewIndex");

	Params::LuaComponent_ReceiveLuaMetaNewIndex Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaDelegate.LuaDelegateFunction
// (Final, Native, Public)

void ULuaDelegate::LuaDelegateFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaDelegate", "LuaDelegateFunction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaUserDataObject.GetObjectUFunctions
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bOnlyPublic                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> ULuaUserDataObject::GetObjectUFunctions(bool bOnlyPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "GetObjectUFunctions");

	Params::LuaUserDataObject_GetObjectUFunctions Parms{};

	Parms.bOnlyPublic = bOnlyPublic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaUserDataObject.LuaCallFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLuaValue>&         Args                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bGlobal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaUserDataObject::LuaCallFunction(const class FString& Name_0, const TArray<struct FLuaValue>& Args, bool bGlobal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "LuaCallFunction");

	Params::LuaUserDataObject_LuaCallFunction Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Args = std::move(Args);
	Parms.bGlobal = bGlobal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaUserDataObject.LuaGetField
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaUserDataObject::LuaGetField(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "LuaGetField");

	Params::LuaUserDataObject_LuaGetField Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaUserDataObject.LuaSetField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLuaValue&                 Value                                                  (Parm, NativeAccessSpecifierPublic)

void ULuaUserDataObject::LuaSetField(const class FString& Name_0, const struct FLuaValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "LuaSetField");

	Params::LuaUserDataObject_LuaSetField Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaUserDataObject.ReceiveLuaGC
// (Native, Event, Public, BlueprintEvent)

void ULuaUserDataObject::ReceiveLuaGC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "ReceiveLuaGC");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaUserDataObject.ReceiveLuaMetaIndex
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FLuaValue&                 Key                                                    (Parm, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaUserDataObject::ReceiveLuaMetaIndex(const struct FLuaValue& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "ReceiveLuaMetaIndex");

	Params::LuaUserDataObject_ReceiveLuaMetaIndex Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaUserDataObject.ReceiveLuaUserDataTableInit
// (Native, Event, Public, BlueprintEvent)

void ULuaUserDataObject::ReceiveLuaUserDataTableInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "ReceiveLuaUserDataTableInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LuaMachine.LuaUserDataObject.UFunctionToLuaValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLuaValue                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLuaValue ULuaUserDataObject::UFunctionToLuaValue(const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "UFunctionToLuaValue");

	Params::LuaUserDataObject_UFunctionToLuaValue Parms{};

	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaUserDataObject.GetLuaState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ULuaState>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ULuaState> ULuaUserDataObject::GetLuaState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "GetLuaState");

	Params::LuaUserDataObject_GetLuaState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LuaMachine.LuaUserDataObject.GetLuaStateInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULuaState*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULuaState* ULuaUserDataObject::GetLuaStateInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LuaUserDataObject", "GetLuaStateInstance");

	Params::LuaUserDataObject_GetLuaStateInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

