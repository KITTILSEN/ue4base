#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerHead_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerHead_Master.BP_PlayerHead_Master_C
// 0x00D0 (0x05A8 - 0x04D8)
class ABP_PlayerHead_Master_C : public AGBHead
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 ArmsMeshComp;                                      // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EyeLashComp;                                       // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             EyelashMesh;                                       // 0x04F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   EyeLashSocket;                                     // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      ArmsSkin;                                          // 0x0520(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ArmsSkinMID;                                       // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class FName>                             ArmBones;                                          // 0x0550(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         ArmWoundCount;                                     // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlayerHead_Master(int32 EntryPoint);
	void OnPostLoadMeshComplete();
	void OnTakeHit_Event_0(const class FName& RefBoneName, const struct FVector& RefPosPosition);
	void OnAddedToCharacter(class AGBCharacter* NewParentCharacter);
	void OnLoaded_0F1FEBD6DC0A4DAF8F2D1676BEDC5E4F(class UObject* Loaded);
	void OnLoaded_EE3797AC15CD45F09107972131E51CA1(class UObject* Loaded);
	TArray<class UPrimitiveComponent*> GetHiddenComponents();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerHead_Master_C">();
	}
	static class ABP_PlayerHead_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerHead_Master_C>();
	}
};
static_assert(alignof(ABP_PlayerHead_Master_C) == 0x000008, "Wrong alignment on ABP_PlayerHead_Master_C");
static_assert(sizeof(ABP_PlayerHead_Master_C) == 0x0005A8, "Wrong size on ABP_PlayerHead_Master_C");
static_assert(offsetof(ABP_PlayerHead_Master_C, UberGraphFrame) == 0x0004D8, "Member 'ABP_PlayerHead_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerHead_Master_C, ArmsMeshComp) == 0x0004E0, "Member 'ABP_PlayerHead_Master_C::ArmsMeshComp' has a wrong offset!");
static_assert(offsetof(ABP_PlayerHead_Master_C, EyeLashComp) == 0x0004E8, "Member 'ABP_PlayerHead_Master_C::EyeLashComp' has a wrong offset!");
static_assert(offsetof(ABP_PlayerHead_Master_C, EyelashMesh) == 0x0004F0, "Member 'ABP_PlayerHead_Master_C::EyelashMesh' has a wrong offset!");
static_assert(offsetof(ABP_PlayerHead_Master_C, EyeLashSocket) == 0x000518, "Member 'ABP_PlayerHead_Master_C::EyeLashSocket' has a wrong offset!");
static_assert(offsetof(ABP_PlayerHead_Master_C, ArmsSkin) == 0x000520, "Member 'ABP_PlayerHead_Master_C::ArmsSkin' has a wrong offset!");
static_assert(offsetof(ABP_PlayerHead_Master_C, ArmsSkinMID) == 0x000548, "Member 'ABP_PlayerHead_Master_C::ArmsSkinMID' has a wrong offset!");
static_assert(offsetof(ABP_PlayerHead_Master_C, ArmBones) == 0x000550, "Member 'ABP_PlayerHead_Master_C::ArmBones' has a wrong offset!");
static_assert(offsetof(ABP_PlayerHead_Master_C, ArmWoundCount) == 0x0005A0, "Member 'ABP_PlayerHead_Master_C::ArmWoundCount' has a wrong offset!");

}

