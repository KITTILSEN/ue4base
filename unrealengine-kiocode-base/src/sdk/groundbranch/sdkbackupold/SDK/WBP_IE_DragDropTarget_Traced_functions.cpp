#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IE_DragDropTarget_Traced

#include "Basic.hpp"

#include "WBP_IE_DragDropTarget_Traced_classes.hpp"
#include "WBP_IE_DragDropTarget_Traced_parameters.hpp"


namespace SDK
{

// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.ExecuteUbergraph_WBP_IE_DragDropTarget_Traced
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IE_DragDropTarget_Traced_C::ExecuteUbergraph_WBP_IE_DragDropTarget_Traced(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "ExecuteUbergraph_WBP_IE_DragDropTarget_Traced");

	Params::WBP_IE_DragDropTarget_Traced_C_ExecuteUbergraph_WBP_IE_DragDropTarget_Traced Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IE_DragDropTarget_Traced_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "Tick");

	Params::WBP_IE_DragDropTarget_Traced_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.OnDragLeave
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IE_DragDropTarget_Traced_C::OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "OnDragLeave");

	Params::WBP_IE_DragDropTarget_Traced_C_OnDragLeave Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.OnDragEnter
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IE_DragDropTarget_Traced_C::OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "OnDragEnter");

	Params::WBP_IE_DragDropTarget_Traced_C_OnDragEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.Init
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  SceneComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   RelativeLoc_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   VisualOffset_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class AActor*>&            IgnoreActors                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_IE_DragDropTarget_Traced_C::Init(class USceneComponent* SceneComp, class FName SocketName_0, const struct FVector& RelativeLoc_0, const struct FVector& VisualOffset_0, float Scale, const TArray<class AActor*>& IgnoreActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "Init");

	Params::WBP_IE_DragDropTarget_Traced_C_Init Parms{};

	Parms.SceneComp = SceneComp;
	Parms.SocketName_0 = SocketName_0;
	Parms.RelativeLoc_0 = std::move(RelativeLoc_0);
	Parms.VisualOffset_0 = std::move(VisualOffset_0);
	Parms.Scale = Scale;
	Parms.IgnoreActors = std::move(IgnoreActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.position
// (BlueprintCallable, BlueprintEvent)

void UWBP_IE_DragDropTarget_Traced_C::position()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "position");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_IE_DragDropTarget_Traced_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWBP_IE_DragDropTarget_Traced_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "OnDrop");

	Params::WBP_IE_DragDropTarget_Traced_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.UpdateAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_IE_DragDropTarget_Traced_C::UpdateAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "UpdateAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C.OnPaint
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FPaintContext&                   Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_IE_DragDropTarget_Traced_C::OnPaint(struct FPaintContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IE_DragDropTarget_Traced_C", "OnPaint");

	Params::WBP_IE_DragDropTarget_Traced_C_OnPaint Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	Context = std::move(Parms.Context);
}

}

