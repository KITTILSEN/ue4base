#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IE_DragDropTarget_Traced

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_IE_DragDropTarget_Traced.WBP_IE_DragDropTarget_Traced_C
// 0x06C0 (0x0920 - 0x0260)
class UWBP_IE_DragDropTarget_Traced_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Throb;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_54;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USceneComponent*                        Component;                                         // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VisualOffset;                                      // 0x0280(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BlockedColour;                                     // 0x028C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x029C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelativeLoc;                                       // 0x02A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VisualScale;                                       // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceLocation;                                    // 0x02B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x02C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlocked;                                          // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         IgnoreTargets;                                     // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FMinimalViewInfo                       CameraView;                                        // 0x02E0(0x05F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              CanvasPoint;                                       // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceFromCamera;                                // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ClosestColour;                                     // 0x08DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FurthestColour;                                    // 0x08EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LineEndPoint;                                      // 0x08FC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ClosestSize;                                       // 0x0904(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FurthestScale;                                     // 0x090C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachedComponent;                                 // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_IE_DragDropTarget_Traced(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void Init(class USceneComponent* SceneComp, class FName SocketName_0, const struct FVector& RelativeLoc_0, const struct FVector& VisualOffset_0, float Scale, const TArray<class AActor*>& IgnoreActors);
	void position();
	void Construct();
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void UpdateAll();

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_IE_DragDropTarget_Traced_C">();
	}
	static class UWBP_IE_DragDropTarget_Traced_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_IE_DragDropTarget_Traced_C>();
	}
};
static_assert(alignof(UWBP_IE_DragDropTarget_Traced_C) == 0x000010, "Wrong alignment on UWBP_IE_DragDropTarget_Traced_C");
static_assert(sizeof(UWBP_IE_DragDropTarget_Traced_C) == 0x000920, "Wrong size on UWBP_IE_DragDropTarget_Traced_C");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, UberGraphFrame) == 0x000260, "Member 'UWBP_IE_DragDropTarget_Traced_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, Throb) == 0x000268, "Member 'UWBP_IE_DragDropTarget_Traced_C::Throb' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, Image_54) == 0x000270, "Member 'UWBP_IE_DragDropTarget_Traced_C::Image_54' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, Component) == 0x000278, "Member 'UWBP_IE_DragDropTarget_Traced_C::Component' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, VisualOffset) == 0x000280, "Member 'UWBP_IE_DragDropTarget_Traced_C::VisualOffset' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, BlockedColour) == 0x00028C, "Member 'UWBP_IE_DragDropTarget_Traced_C::BlockedColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, SocketName) == 0x00029C, "Member 'UWBP_IE_DragDropTarget_Traced_C::SocketName' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, RelativeLoc) == 0x0002A4, "Member 'UWBP_IE_DragDropTarget_Traced_C::RelativeLoc' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, VisualScale) == 0x0002B0, "Member 'UWBP_IE_DragDropTarget_Traced_C::VisualScale' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, SourceLocation) == 0x0002B4, "Member 'UWBP_IE_DragDropTarget_Traced_C::SourceLocation' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, WorldLocation) == 0x0002C0, "Member 'UWBP_IE_DragDropTarget_Traced_C::WorldLocation' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, bBlocked) == 0x0002CC, "Member 'UWBP_IE_DragDropTarget_Traced_C::bBlocked' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, IgnoreTargets) == 0x0002D0, "Member 'UWBP_IE_DragDropTarget_Traced_C::IgnoreTargets' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, CameraView) == 0x0002E0, "Member 'UWBP_IE_DragDropTarget_Traced_C::CameraView' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, CanvasPoint) == 0x0008D0, "Member 'UWBP_IE_DragDropTarget_Traced_C::CanvasPoint' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, DistanceFromCamera) == 0x0008D8, "Member 'UWBP_IE_DragDropTarget_Traced_C::DistanceFromCamera' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, ClosestColour) == 0x0008DC, "Member 'UWBP_IE_DragDropTarget_Traced_C::ClosestColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, FurthestColour) == 0x0008EC, "Member 'UWBP_IE_DragDropTarget_Traced_C::FurthestColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, LineEndPoint) == 0x0008FC, "Member 'UWBP_IE_DragDropTarget_Traced_C::LineEndPoint' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, ClosestSize) == 0x000904, "Member 'UWBP_IE_DragDropTarget_Traced_C::ClosestSize' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, FurthestScale) == 0x00090C, "Member 'UWBP_IE_DragDropTarget_Traced_C::FurthestScale' has a wrong offset!");
static_assert(offsetof(UWBP_IE_DragDropTarget_Traced_C, AttachedComponent) == 0x000910, "Member 'UWBP_IE_DragDropTarget_Traced_C::AttachedComponent' has a wrong offset!");

}

