#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIB_PassiveCombat

#include "Basic.hpp"


namespace SDK::Params
{

// Function AIB_PassiveCombat.AIB_PassiveCombat_C.ExecuteUbergraph_AIB_PassiveCombat
// 0x0018 (0x0018 - 0x0000)
struct AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FriendlyAIController_C*             K2Node_DynamicCast_AsBP_Friendly_AIController;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RunBehavior_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat) == 0x000008, "Wrong alignment on AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat");
static_assert(sizeof(AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat) == 0x000018, "Wrong size on AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat");
static_assert(offsetof(AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat, EntryPoint) == 0x000000, "Member 'AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat, K2Node_DynamicCast_AsBP_Friendly_AIController) == 0x000008, "Member 'AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat::K2Node_DynamicCast_AsBP_Friendly_AIController' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat, CallFunc_RunBehavior_ReturnValue) == 0x000011, "Member 'AIB_PassiveCombat_C_ExecuteUbergraph_AIB_PassiveCombat::CallFunc_RunBehavior_ReturnValue' has a wrong offset!");

// Function AIB_PassiveCombat.AIB_PassiveCombat_C.PreCondition
// 0x0040 (0x0040 - 0x0000)
struct AIB_PassiveCombat_C_PreCondition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBKytFriendlyController*               K2Node_DynamicCast_AsGBKyt_Friendly_Controller;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKytBlackboard*                         CallFunc_GetEntityState_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         CallFunc_GetBlackboardValueAsBlackboard_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSuppressionValue_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIB_PassiveCombat_C_PreCondition) == 0x000008, "Wrong alignment on AIB_PassiveCombat_C_PreCondition");
static_assert(sizeof(AIB_PassiveCombat_C_PreCondition) == 0x000040, "Wrong size on AIB_PassiveCombat_C_PreCondition");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, ReturnValue) == 0x000000, "Member 'AIB_PassiveCombat_C_PreCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, K2Node_DynamicCast_AsGBKyt_Friendly_Controller) == 0x000008, "Member 'AIB_PassiveCombat_C_PreCondition::K2Node_DynamicCast_AsGBKyt_Friendly_Controller' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'AIB_PassiveCombat_C_PreCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_GetEntityState_ReturnValue) == 0x000018, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_GetEntityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_GetBlackboardValueAsBlackboard_ReturnValue) == 0x000020, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_GetBlackboardValueAsBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_GetSuppressionValue_ReturnValue) == 0x000028, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_GetSuppressionValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x00002C, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002D, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000030, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIB_PassiveCombat_C_PreCondition, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'AIB_PassiveCombat_C_PreCondition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AIB_PassiveCombat.AIB_PassiveCombat_C.GetScore
// 0x0004 (0x0004 - 0x0000)
struct AIB_PassiveCombat_C_GetScore final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIB_PassiveCombat_C_GetScore) == 0x000004, "Wrong alignment on AIB_PassiveCombat_C_GetScore");
static_assert(sizeof(AIB_PassiveCombat_C_GetScore) == 0x000004, "Wrong size on AIB_PassiveCombat_C_GetScore");
static_assert(offsetof(AIB_PassiveCombat_C_GetScore, ReturnValue) == 0x000000, "Member 'AIB_PassiveCombat_C_GetScore::ReturnValue' has a wrong offset!");

}

