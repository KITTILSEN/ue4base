#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RIG_GenericItem_SkeletalControls

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass RIG_GenericItem_SkeletalControls.RIG_GenericItem_SkeletalControls_C
// 0x00C0 (0x0710 - 0x0650)
class URIG_GenericItem_SkeletalControls_C final : public UControlRig
{
public:
	struct FVector                                CollisionTraceEndOffset;                           // 0x0650(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStart;                                        // 0x065C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x0668(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0xC];                                      // 0x0674(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             IKHandTM;                                          // 0x0680(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CollisionDistance;                                 // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastCollisionDistance;                             // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EngagedAlpha;                                      // 0x06B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CollisionNormalDotUp;                              // 0x06BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bApplyMovementSway;                                // 0x06C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C1[0x3];                                      // 0x06C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ApplyMovementSwayAsAlpha;                          // 0x06C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRunning;                                          // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C9[0x3];                                      // 0x06C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotationalInertiaOffset;                           // 0x06CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MovementSwayWalkPitch;                             // 0x06D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSwayWalkYaw;                               // 0x06DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSwayRunPitch;                              // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSwayRunYaw;                                // 0x06E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMovementSwayPitch;                          // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMovementSwayYaw;                            // 0x06EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetMovementSwayPitch;                           // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetMovementSwayYaw;                             // 0x06F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinStep;                                           // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxStep;                                           // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSwayCurveValue;                            // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               MovementSwayOffset;                                // 0x0704(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RIG_GenericItem_SkeletalControls_C">();
	}
	static class URIG_GenericItem_SkeletalControls_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URIG_GenericItem_SkeletalControls_C>();
	}
};
static_assert(alignof(URIG_GenericItem_SkeletalControls_C) == 0x000010, "Wrong alignment on URIG_GenericItem_SkeletalControls_C");
static_assert(sizeof(URIG_GenericItem_SkeletalControls_C) == 0x000710, "Wrong size on URIG_GenericItem_SkeletalControls_C");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, CollisionTraceEndOffset) == 0x000650, "Member 'URIG_GenericItem_SkeletalControls_C::CollisionTraceEndOffset' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, TraceStart) == 0x00065C, "Member 'URIG_GenericItem_SkeletalControls_C::TraceStart' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, TraceEnd) == 0x000668, "Member 'URIG_GenericItem_SkeletalControls_C::TraceEnd' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, IKHandTM) == 0x000680, "Member 'URIG_GenericItem_SkeletalControls_C::IKHandTM' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, CollisionDistance) == 0x0006B0, "Member 'URIG_GenericItem_SkeletalControls_C::CollisionDistance' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, LastCollisionDistance) == 0x0006B4, "Member 'URIG_GenericItem_SkeletalControls_C::LastCollisionDistance' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, EngagedAlpha) == 0x0006B8, "Member 'URIG_GenericItem_SkeletalControls_C::EngagedAlpha' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, CollisionNormalDotUp) == 0x0006BC, "Member 'URIG_GenericItem_SkeletalControls_C::CollisionNormalDotUp' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, bApplyMovementSway) == 0x0006C0, "Member 'URIG_GenericItem_SkeletalControls_C::bApplyMovementSway' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, ApplyMovementSwayAsAlpha) == 0x0006C4, "Member 'URIG_GenericItem_SkeletalControls_C::ApplyMovementSwayAsAlpha' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, bRunning) == 0x0006C8, "Member 'URIG_GenericItem_SkeletalControls_C::bRunning' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, RotationalInertiaOffset) == 0x0006CC, "Member 'URIG_GenericItem_SkeletalControls_C::RotationalInertiaOffset' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, MovementSwayWalkPitch) == 0x0006D8, "Member 'URIG_GenericItem_SkeletalControls_C::MovementSwayWalkPitch' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, MovementSwayWalkYaw) == 0x0006DC, "Member 'URIG_GenericItem_SkeletalControls_C::MovementSwayWalkYaw' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, MovementSwayRunPitch) == 0x0006E0, "Member 'URIG_GenericItem_SkeletalControls_C::MovementSwayRunPitch' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, MovementSwayRunYaw) == 0x0006E4, "Member 'URIG_GenericItem_SkeletalControls_C::MovementSwayRunYaw' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, CurrentMovementSwayPitch) == 0x0006E8, "Member 'URIG_GenericItem_SkeletalControls_C::CurrentMovementSwayPitch' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, CurrentMovementSwayYaw) == 0x0006EC, "Member 'URIG_GenericItem_SkeletalControls_C::CurrentMovementSwayYaw' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, TargetMovementSwayPitch) == 0x0006F0, "Member 'URIG_GenericItem_SkeletalControls_C::TargetMovementSwayPitch' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, TargetMovementSwayYaw) == 0x0006F4, "Member 'URIG_GenericItem_SkeletalControls_C::TargetMovementSwayYaw' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, MinStep) == 0x0006F8, "Member 'URIG_GenericItem_SkeletalControls_C::MinStep' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, MaxStep) == 0x0006FC, "Member 'URIG_GenericItem_SkeletalControls_C::MaxStep' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, MovementSwayCurveValue) == 0x000700, "Member 'URIG_GenericItem_SkeletalControls_C::MovementSwayCurveValue' has a wrong offset!");
static_assert(offsetof(URIG_GenericItem_SkeletalControls_C, MovementSwayOffset) == 0x000704, "Member 'URIG_GenericItem_SkeletalControls_C::MovementSwayOffset' has a wrong offset!");

}

