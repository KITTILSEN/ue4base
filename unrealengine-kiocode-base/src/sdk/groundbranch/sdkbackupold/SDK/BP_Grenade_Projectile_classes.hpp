#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Grenade_Projectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Grenade_Projectile.BP_Grenade_Projectile_C
// 0x0030 (0x02C0 - 0x0290)
class ABP_Grenade_Projectile_C final : public AGBItemProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMulticastInlineDelegate<void(class ABP_Grenade_Projectile_C* Grenade)> ExplodeEvent;            // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class AActor*>                         NotifiedActors;                                    // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           AIGrenadeCheckTimerHandle;                         // 0x02B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Grenade_Projectile(int32 EntryPoint);
	void BeginSpoonDetach();
	void BeginAIGrenadeCheckTimer();
	void AIGrenadeCheck();
	void DetachSppon();
	void Explode();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Grenade_Projectile_C">();
	}
	static class ABP_Grenade_Projectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Grenade_Projectile_C>();
	}
};
static_assert(alignof(ABP_Grenade_Projectile_C) == 0x000008, "Wrong alignment on ABP_Grenade_Projectile_C");
static_assert(sizeof(ABP_Grenade_Projectile_C) == 0x0002C0, "Wrong size on ABP_Grenade_Projectile_C");
static_assert(offsetof(ABP_Grenade_Projectile_C, UberGraphFrame) == 0x000290, "Member 'ABP_Grenade_Projectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Projectile_C, ExplodeEvent) == 0x000298, "Member 'ABP_Grenade_Projectile_C::ExplodeEvent' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Projectile_C, NotifiedActors) == 0x0002A8, "Member 'ABP_Grenade_Projectile_C::NotifiedActors' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Projectile_C, AIGrenadeCheckTimerHandle) == 0x0002B8, "Member 'ABP_Grenade_Projectile_C::AIGrenadeCheckTimerHandle' has a wrong offset!");

}

