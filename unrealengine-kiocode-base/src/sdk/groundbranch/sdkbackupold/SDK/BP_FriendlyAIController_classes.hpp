#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FriendlyAIController

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FriendlyAIController.BP_FriendlyAIController_C
// 0x0030 (0x04F8 - 0x04C8)
class ABP_FriendlyAIController_C final : public AGBKytFriendlyController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkGameObject*                          AkGameObject;                                      // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGBAIBehaviorSelectionComponent*        GBAIBehaviorSelection;                             // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EGBAICommands                                 CurrentCommand;                                    // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGBAICommands                                 PreviousCommand;                                   // 0x04E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ResetFireTimerHandle;                              // 0x04E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SquadIdx;                                          // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FriendlyAIController(int32 EntryPoint);
	void ReceiveBeginPlay();
	void CommandReceived(EGBAICommands Command, const struct FVector& Location, class AActor* Actor);
	void ResetFired();
	void PlayerShotFired();
	void ReceivePossess(class APawn* PossessedPawn);
	class UKytBlackboard* GetCommandBB();
	void KytGroupSetup(class AActor* PossessedPawn);
	void CheckMoveDoor(const struct FVector& InputLoc, class AActor* InputActor, struct FVector* MoveLocation);
	void FriendlyBark(class FName BarkKey);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FriendlyAIController_C">();
	}
	static class ABP_FriendlyAIController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FriendlyAIController_C>();
	}
};
static_assert(alignof(ABP_FriendlyAIController_C) == 0x000008, "Wrong alignment on ABP_FriendlyAIController_C");
static_assert(sizeof(ABP_FriendlyAIController_C) == 0x0004F8, "Wrong size on ABP_FriendlyAIController_C");
static_assert(offsetof(ABP_FriendlyAIController_C, UberGraphFrame) == 0x0004C8, "Member 'ABP_FriendlyAIController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FriendlyAIController_C, AkGameObject) == 0x0004D0, "Member 'ABP_FriendlyAIController_C::AkGameObject' has a wrong offset!");
static_assert(offsetof(ABP_FriendlyAIController_C, GBAIBehaviorSelection) == 0x0004D8, "Member 'ABP_FriendlyAIController_C::GBAIBehaviorSelection' has a wrong offset!");
static_assert(offsetof(ABP_FriendlyAIController_C, CurrentCommand) == 0x0004E0, "Member 'ABP_FriendlyAIController_C::CurrentCommand' has a wrong offset!");
static_assert(offsetof(ABP_FriendlyAIController_C, PreviousCommand) == 0x0004E1, "Member 'ABP_FriendlyAIController_C::PreviousCommand' has a wrong offset!");
static_assert(offsetof(ABP_FriendlyAIController_C, ResetFireTimerHandle) == 0x0004E8, "Member 'ABP_FriendlyAIController_C::ResetFireTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_FriendlyAIController_C, SquadIdx) == 0x0004F0, "Member 'ABP_FriendlyAIController_C::SquadIdx' has a wrong offset!");

}

