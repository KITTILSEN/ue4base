#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_G33_Magnifier

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.ExecuteUbergraph_BP_G33_Magnifier
// 0x0250 (0x0250 - 0x0000)
struct BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_InEnumAsByte_3;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InName_3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte_2;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_TotalDuration_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte_1;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_FrameDeltaTime_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_Event_UsageMenu_1;                          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_RadialMenu_C*                      K2Node_Event_UsageMenu;                            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_RadialMenu_C*                      K2Node_DynamicCast_AsWBP_Radial_Menu;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x005C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateItemAbilityByTag_ReturnValue;  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_Event_UICharacter;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBHUD*                                 CallFunc_GetGBHUD_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_2;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_TotalDuration;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_1;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_Base_C*                            K2Node_DynamicCast_AsABP_Base;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InName;                               // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_FrameDeltaTime;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_1;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_2;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_Base_C*                            K2Node_DynamicCast_AsABP_Base_1;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0xF];                                      // 0x0111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_3;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetBaseItem_ReturnValue;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	class AGBFirearm*                             K2Node_DynamicCast_AsGBFirearm;                    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RadialMenu_Entry_C*                CallFunc_Create_ReturnValue;                       // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             CallFunc_GetBaseItem_ReturnValue_1;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_4;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBFirearm*                             K2Node_DynamicCast_AsGBFirearm_1;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBSightComponent*                      CallFunc_GetCurrentSight_ReturnValue;              // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier) == 0x000010, "Wrong alignment on BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier");
static_assert(sizeof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier) == 0x000250, "Wrong size on BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, EntryPoint) == 0x000000, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, Temp_struct_Variable) == 0x000008, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, Temp_struct_Variable_1) == 0x000010, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, Temp_bool_Variable) == 0x000018, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsDedicatedServer_ReturnValue) == 0x000019, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00001A, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00001B, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_InEnumAsByte_3) == 0x00001C, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_InEnumAsByte_3' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_InName_3) == 0x000020, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_InName_3' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_InEnumAsByte_2) == 0x000028, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_InEnumAsByte_2' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_TotalDuration_1) == 0x00002C, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_TotalDuration_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_InEnumAsByte_1) == 0x000030, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_InEnumAsByte_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_InEnumAsByte) == 0x000031, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_FrameDeltaTime_1) == 0x000034, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_FrameDeltaTime_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_UsageMenu_1) == 0x000038, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_UsageMenu_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_UsageMenu) == 0x000040, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_UsageMenu' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_AsWBP_Radial_Menu) == 0x000048, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_AsWBP_Radial_Menu' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_CustomEvent_Index) == 0x000054, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsActive_ReturnValue) == 0x000059, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Select_Default) == 0x00005C, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_TryActivateItemAbilityByTag_ReturnValue) == 0x000064, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_TryActivateItemAbilityByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_MakeRotator_ReturnValue) == 0x00006C, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_UICharacter) == 0x000080, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_UICharacter' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000088, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetGBHUD_ReturnValue) == 0x000098, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetGBHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetGBInstigator_ReturnValue) == 0x0000A0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetGBInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_InName_2) == 0x0000A8, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_InName_2' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_TotalDuration) == 0x0000B0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_TotalDuration' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsValid_ReturnValue_1) == 0x0000B4, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_SwitchName_CmpSuccess) == 0x0000B5, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetAnimInstance_ReturnValue) == 0x0000B8, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_InName_1) == 0x0000C0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_InName_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_AsABP_Base) == 0x0000C8, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_AsABP_Base' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_SwitchName_CmpSuccess_1) == 0x0000D1, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_InName) == 0x0000D4, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_Event_FrameDeltaTime) == 0x0000DC, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_Event_FrameDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_SwitchName_CmpSuccess_2) == 0x0000E0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetGBInstigator_ReturnValue_1) == 0x0000E8, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetGBInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetGBInstigator_ReturnValue_2) == 0x0000F0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetGBInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsValid_ReturnValue_2) == 0x0000F8, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsValid_ReturnValue_3) == 0x0000F9, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000100, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_AsABP_Base_1) == 0x000108, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_AsABP_Base_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_bSuccess_3) == 0x000110, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetSocketTransform_ReturnValue) == 0x000120, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_BreakTransform_Location) == 0x000150, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_BreakTransform_Rotation) == 0x00015C, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_BreakTransform_Scale) == 0x000168, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_BreakRotator_Roll) == 0x000174, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_BreakRotator_Pitch) == 0x000178, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_BreakRotator_Yaw) == 0x00017C, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_MapRangeClamped_ReturnValue) == 0x000180, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000184, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetGBInstigator_ReturnValue_3) == 0x000188, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetGBInstigator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000190, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsValid_ReturnValue_4) == 0x00019C, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetBaseItem_ReturnValue) == 0x0001A0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetBaseItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_CreateDelegate_OutputDelegate) == 0x0001A8, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_AsGBFirearm) == 0x0001B8, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_AsGBFirearm' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_bSuccess_4) == 0x0001C0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_Create_ReturnValue) == 0x0001C8, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetTransform_ReturnValue) == 0x0001D0, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_InverseTransformLocation_ReturnValue) == 0x000200, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00020C, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetBaseItem_ReturnValue_1) == 0x000218, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetBaseItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetGBInstigator_ReturnValue_4) == 0x000220, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetGBInstigator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_AsGBFirearm_1) == 0x000228, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_AsGBFirearm_1' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, K2Node_DynamicCast_bSuccess_5) == 0x000230, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsPlayerControlled_ReturnValue) == 0x000231, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_GetCurrentSight_ReturnValue) == 0x000238, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_GetCurrentSight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_IsLocallyControlled_ReturnValue) == 0x000240, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_BooleanAND_ReturnValue) == 0x000241, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000242, "Member 'BP_G33_Magnifier_C_ExecuteUbergraph_BP_G33_Magnifier::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.NotifyStateTickName
// 0x000C (0x000C - 0x0000)
struct BP_G33_Magnifier_C_NotifyStateTickName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDeltaTime;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_NotifyStateTickName) == 0x000004, "Wrong alignment on BP_G33_Magnifier_C_NotifyStateTickName");
static_assert(sizeof(BP_G33_Magnifier_C_NotifyStateTickName) == 0x00000C, "Wrong size on BP_G33_Magnifier_C_NotifyStateTickName");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateTickName, InName) == 0x000000, "Member 'BP_G33_Magnifier_C_NotifyStateTickName::InName' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateTickName, FrameDeltaTime) == 0x000008, "Member 'BP_G33_Magnifier_C_NotifyStateTickName::FrameDeltaTime' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.NotifyStateEndName
// 0x0008 (0x0008 - 0x0000)
struct BP_G33_Magnifier_C_NotifyStateEndName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_NotifyStateEndName) == 0x000004, "Wrong alignment on BP_G33_Magnifier_C_NotifyStateEndName");
static_assert(sizeof(BP_G33_Magnifier_C_NotifyStateEndName) == 0x000008, "Wrong size on BP_G33_Magnifier_C_NotifyStateEndName");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateEndName, InName) == 0x000000, "Member 'BP_G33_Magnifier_C_NotifyStateEndName::InName' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.NotifyStateBeginName
// 0x000C (0x000C - 0x0000)
struct BP_G33_Magnifier_C_NotifyStateBeginName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_NotifyStateBeginName) == 0x000004, "Wrong alignment on BP_G33_Magnifier_C_NotifyStateBeginName");
static_assert(sizeof(BP_G33_Magnifier_C_NotifyStateBeginName) == 0x00000C, "Wrong size on BP_G33_Magnifier_C_NotifyStateBeginName");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateBeginName, InName) == 0x000000, "Member 'BP_G33_Magnifier_C_NotifyStateBeginName::InName' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateBeginName, TotalDuration) == 0x000008, "Member 'BP_G33_Magnifier_C_NotifyStateBeginName::TotalDuration' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.EditItemSetup
// 0x0008 (0x0008 - 0x0000)
struct BP_G33_Magnifier_C_EditItemSetup final
{
public:
	class AGBCharacter*                           UICharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_EditItemSetup) == 0x000008, "Wrong alignment on BP_G33_Magnifier_C_EditItemSetup");
static_assert(sizeof(BP_G33_Magnifier_C_EditItemSetup) == 0x000008, "Wrong size on BP_G33_Magnifier_C_EditItemSetup");
static_assert(offsetof(BP_G33_Magnifier_C_EditItemSetup, UICharacter) == 0x000000, "Member 'BP_G33_Magnifier_C_EditItemSetup::UICharacter' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.OnSelected_Magnifier
// 0x0004 (0x0004 - 0x0000)
struct BP_G33_Magnifier_C_OnSelected_Magnifier final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_OnSelected_Magnifier) == 0x000004, "Wrong alignment on BP_G33_Magnifier_C_OnSelected_Magnifier");
static_assert(sizeof(BP_G33_Magnifier_C_OnSelected_Magnifier) == 0x000004, "Wrong size on BP_G33_Magnifier_C_OnSelected_Magnifier");
static_assert(offsetof(BP_G33_Magnifier_C_OnSelected_Magnifier, Index_0) == 0x000000, "Member 'BP_G33_Magnifier_C_OnSelected_Magnifier::Index_0' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.AddMagnifierEntry
// 0x0008 (0x0008 - 0x0000)
struct BP_G33_Magnifier_C_AddMagnifierEntry final
{
public:
	class UWBP_RadialMenu_C*                      UsageMenu;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_AddMagnifierEntry) == 0x000008, "Wrong alignment on BP_G33_Magnifier_C_AddMagnifierEntry");
static_assert(sizeof(BP_G33_Magnifier_C_AddMagnifierEntry) == 0x000008, "Wrong size on BP_G33_Magnifier_C_AddMagnifierEntry");
static_assert(offsetof(BP_G33_Magnifier_C_AddMagnifierEntry, UsageMenu) == 0x000000, "Member 'BP_G33_Magnifier_C_AddMagnifierEntry::UsageMenu' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.AddAttachedUseMenuEntries
// 0x0008 (0x0008 - 0x0000)
struct BP_G33_Magnifier_C_AddAttachedUseMenuEntries final
{
public:
	class UUserWidget*                            UsageMenu;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_AddAttachedUseMenuEntries) == 0x000008, "Wrong alignment on BP_G33_Magnifier_C_AddAttachedUseMenuEntries");
static_assert(sizeof(BP_G33_Magnifier_C_AddAttachedUseMenuEntries) == 0x000008, "Wrong size on BP_G33_Magnifier_C_AddAttachedUseMenuEntries");
static_assert(offsetof(BP_G33_Magnifier_C_AddAttachedUseMenuEntries, UsageMenu) == 0x000000, "Member 'BP_G33_Magnifier_C_AddAttachedUseMenuEntries::UsageMenu' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.NotifyStateTickEnum
// 0x0008 (0x0008 - 0x0000)
struct BP_G33_Magnifier_C_NotifyStateTickEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FrameDeltaTime;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_NotifyStateTickEnum) == 0x000004, "Wrong alignment on BP_G33_Magnifier_C_NotifyStateTickEnum");
static_assert(sizeof(BP_G33_Magnifier_C_NotifyStateTickEnum) == 0x000008, "Wrong size on BP_G33_Magnifier_C_NotifyStateTickEnum");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateTickEnum, InEnumAsByte) == 0x000000, "Member 'BP_G33_Magnifier_C_NotifyStateTickEnum::InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateTickEnum, FrameDeltaTime) == 0x000004, "Member 'BP_G33_Magnifier_C_NotifyStateTickEnum::FrameDeltaTime' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.NotifyStateEndEnum
// 0x0001 (0x0001 - 0x0000)
struct BP_G33_Magnifier_C_NotifyStateEndEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_NotifyStateEndEnum) == 0x000001, "Wrong alignment on BP_G33_Magnifier_C_NotifyStateEndEnum");
static_assert(sizeof(BP_G33_Magnifier_C_NotifyStateEndEnum) == 0x000001, "Wrong size on BP_G33_Magnifier_C_NotifyStateEndEnum");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateEndEnum, InEnumAsByte) == 0x000000, "Member 'BP_G33_Magnifier_C_NotifyStateEndEnum::InEnumAsByte' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.NotifyStateBeginEnum
// 0x0008 (0x0008 - 0x0000)
struct BP_G33_Magnifier_C_NotifyStateBeginEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalDuration;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_NotifyStateBeginEnum) == 0x000004, "Wrong alignment on BP_G33_Magnifier_C_NotifyStateBeginEnum");
static_assert(sizeof(BP_G33_Magnifier_C_NotifyStateBeginEnum) == 0x000008, "Wrong size on BP_G33_Magnifier_C_NotifyStateBeginEnum");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateBeginEnum, InEnumAsByte) == 0x000000, "Member 'BP_G33_Magnifier_C_NotifyStateBeginEnum::InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyStateBeginEnum, TotalDuration) == 0x000004, "Member 'BP_G33_Magnifier_C_NotifyStateBeginEnum::TotalDuration' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.NotifyName
// 0x0008 (0x0008 - 0x0000)
struct BP_G33_Magnifier_C_NotifyName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_NotifyName) == 0x000004, "Wrong alignment on BP_G33_Magnifier_C_NotifyName");
static_assert(sizeof(BP_G33_Magnifier_C_NotifyName) == 0x000008, "Wrong size on BP_G33_Magnifier_C_NotifyName");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyName, InName) == 0x000000, "Member 'BP_G33_Magnifier_C_NotifyName::InName' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.NotifyEnum
// 0x0001 (0x0001 - 0x0000)
struct BP_G33_Magnifier_C_NotifyEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_NotifyEnum) == 0x000001, "Wrong alignment on BP_G33_Magnifier_C_NotifyEnum");
static_assert(sizeof(BP_G33_Magnifier_C_NotifyEnum) == 0x000001, "Wrong size on BP_G33_Magnifier_C_NotifyEnum");
static_assert(offsetof(BP_G33_Magnifier_C_NotifyEnum, InEnumAsByte) == 0x000000, "Member 'BP_G33_Magnifier_C_NotifyEnum::InEnumAsByte' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.AllowUsageWhileAttached
// 0x0001 (0x0001 - 0x0000)
struct BP_G33_Magnifier_C_AllowUsageWhileAttached final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_G33_Magnifier_C_AllowUsageWhileAttached) == 0x000001, "Wrong alignment on BP_G33_Magnifier_C_AllowUsageWhileAttached");
static_assert(sizeof(BP_G33_Magnifier_C_AllowUsageWhileAttached) == 0x000001, "Wrong size on BP_G33_Magnifier_C_AllowUsageWhileAttached");
static_assert(offsetof(BP_G33_Magnifier_C_AllowUsageWhileAttached, ReturnValue) == 0x000000, "Member 'BP_G33_Magnifier_C_AllowUsageWhileAttached::ReturnValue' has a wrong offset!");

// Function BP_G33_Magnifier.BP_G33_Magnifier_C.OnRep_bFlippedUp
// 0x0004 (0x0004 - 0x0000)
struct BP_G33_Magnifier_C_OnRep_bFlippedUp final
{
public:
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G33_Magnifier_C_OnRep_bFlippedUp) == 0x000004, "Wrong alignment on BP_G33_Magnifier_C_OnRep_bFlippedUp");
static_assert(sizeof(BP_G33_Magnifier_C_OnRep_bFlippedUp) == 0x000004, "Wrong size on BP_G33_Magnifier_C_OnRep_bFlippedUp");
static_assert(offsetof(BP_G33_Magnifier_C_OnRep_bFlippedUp, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000000, "Member 'BP_G33_Magnifier_C_OnRep_bFlippedUp::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

}

