#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FireMode_Border

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_FireMode_Border.WBP_FireMode_Border_C
// 0x0118 (0x0378 - 0x0260)
class UWBP_FireMode_Border_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pulse;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Flash;                                             // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_262;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_343;                                        // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BulletContainer;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_513;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_514;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_515;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_516;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_517;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Selected;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_FireMode;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         BurstCount;                                        // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DefaultColour;                                     // 0x02D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedColour;                                    // 0x02E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text_Semi;                                         // 0x02F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_Auto;                                         // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_Burst;                                        // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           SelectedBulletColour;                              // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultTextColor;                                  // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedTextColor;                                 // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InternalCount;                                     // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_FireMode_Border(int32 EntryPoint);
	void Construct();
	struct FLinearColor GetBorderColour();
	ESlateVisibility GetSelectedImageVis();
	struct FLinearColor GetBurstColourAndOpacity();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_FireMode_Border_C">();
	}
	static class UWBP_FireMode_Border_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_FireMode_Border_C>();
	}
};
static_assert(alignof(UWBP_FireMode_Border_C) == 0x000008, "Wrong alignment on UWBP_FireMode_Border_C");
static_assert(sizeof(UWBP_FireMode_Border_C) == 0x000378, "Wrong size on UWBP_FireMode_Border_C");
static_assert(offsetof(UWBP_FireMode_Border_C, UberGraphFrame) == 0x000260, "Member 'UWBP_FireMode_Border_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Pulse) == 0x000268, "Member 'UWBP_FireMode_Border_C::Pulse' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Flash) == 0x000270, "Member 'UWBP_FireMode_Border_C::Flash' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Border) == 0x000278, "Member 'UWBP_FireMode_Border_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Border_262) == 0x000280, "Member 'UWBP_FireMode_Border_C::Border_262' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Border_343) == 0x000288, "Member 'UWBP_FireMode_Border_C::Border_343' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, BulletContainer) == 0x000290, "Member 'UWBP_FireMode_Border_C::BulletContainer' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Image_513) == 0x000298, "Member 'UWBP_FireMode_Border_C::Image_513' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Image_514) == 0x0002A0, "Member 'UWBP_FireMode_Border_C::Image_514' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Image_515) == 0x0002A8, "Member 'UWBP_FireMode_Border_C::Image_515' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Image_516) == 0x0002B0, "Member 'UWBP_FireMode_Border_C::Image_516' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Image_517) == 0x0002B8, "Member 'UWBP_FireMode_Border_C::Image_517' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Image_Selected) == 0x0002C0, "Member 'UWBP_FireMode_Border_C::Image_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, TextBlock_FireMode) == 0x0002C8, "Member 'UWBP_FireMode_Border_C::TextBlock_FireMode' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, BurstCount) == 0x0002D0, "Member 'UWBP_FireMode_Border_C::BurstCount' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Selected) == 0x0002D1, "Member 'UWBP_FireMode_Border_C::Selected' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, DefaultColour) == 0x0002D4, "Member 'UWBP_FireMode_Border_C::DefaultColour' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, SelectedColour) == 0x0002E4, "Member 'UWBP_FireMode_Border_C::SelectedColour' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Text_Semi) == 0x0002F8, "Member 'UWBP_FireMode_Border_C::Text_Semi' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Text_Auto) == 0x000310, "Member 'UWBP_FireMode_Border_C::Text_Auto' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, Text_Burst) == 0x000328, "Member 'UWBP_FireMode_Border_C::Text_Burst' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, SelectedBulletColour) == 0x000340, "Member 'UWBP_FireMode_Border_C::SelectedBulletColour' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, DefaultTextColor) == 0x000350, "Member 'UWBP_FireMode_Border_C::DefaultTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, SelectedTextColor) == 0x000360, "Member 'UWBP_FireMode_Border_C::SelectedTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_FireMode_Border_C, InternalCount) == 0x000370, "Member 'UWBP_FireMode_Border_C::InternalCount' has a wrong offset!");

}

