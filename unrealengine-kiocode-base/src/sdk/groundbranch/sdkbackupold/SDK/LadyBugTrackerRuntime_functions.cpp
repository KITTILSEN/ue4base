#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LadyBugTrackerRuntime

#include "Basic.hpp"

#include "LadyBugTrackerRuntime_classes.hpp"
#include "LadyBugTrackerRuntime_parameters.hpp"


namespace SDK
{

// Function LadyBugTrackerRuntime.IssueConstructor.ConstructIssue
// (Event, Public, BlueprintEvent)
// Parameters:
// class UIssueData*                       Issue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EIssueProfile                           Profile                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIssueConstructor::ConstructIssue(class UIssueData* Issue, EIssueProfile Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueConstructor", "ConstructIssue");

	Params::IssueConstructor_ConstructIssue Parms{};

	Parms.Issue = Issue;
	Parms.Profile = Profile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LadyBugTrackerRuntime.IssueConstructor.GetCamera
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIssueConstructor::GetCamera(struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueConstructor", "GetCamera");

	Params::IssueConstructor_GetCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.IssueConstructor.GetLevelName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIssueConstructor::GetLevelName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueConstructor", "GetLevelName");

	Params::IssueConstructor_GetLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.IssueConstructor.GetLevelNameFromSreamingLevel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULevelStreaming*                  LevelStreaming                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIssueConstructor::GetLevelNameFromSreamingLevel(class ULevelStreaming* LevelStreaming) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueConstructor", "GetLevelNameFromSreamingLevel");

	Params::IssueConstructor_GetLevelNameFromSreamingLevel Parms{};

	Parms.LevelStreaming = LevelStreaming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.IssueData.SetCameraTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UIssueData::SetCameraTransform(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueData", "SetCameraTransform");

	Params::IssueData_SetCameraTransform Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LadyBugTrackerRuntime.IssueData.SetCustomFieldValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIssueData::SetCustomFieldValue(const class FString& FieldName, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueData", "SetCustomFieldValue");

	Params::IssueData_SetCustomFieldValue Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.IssueData.GetCameraTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UIssueData::GetCameraTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueData", "GetCameraTransform");

	Params::IssueData_GetCameraTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.IssueData.GetCustomFieldValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIssueData::GetCustomFieldValue(const class FString& FieldName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueData", "GetCustomFieldValue");

	Params::IssueData_GetCustomFieldValue Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.IssueData.GetLevelName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIssueData::GetLevelName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IssueData", "GetLevelName");

	Params::IssueData_GetLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.AddCustomField
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFeedbackData*                    Feedback                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Field                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeUtilities::AddCustomField(class UFeedbackData* Feedback, const class FString& Field, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "AddCustomField");

	Params::RuntimeUtilities_AddCustomField Parms{};

	Parms.Feedback = Feedback;
	Parms.Field = std::move(Field);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.AddLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFeedbackData*                    Feedback                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URuntimeUtilities::AddLog(class UFeedbackData* Feedback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "AddLog");

	Params::RuntimeUtilities_AddLog Parms{};

	Parms.Feedback = Feedback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.AddScreenshot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFeedbackData*                    Feedback                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowUI                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DesiredWidth                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DesiredHeight                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeUtilities::AddScreenshot(class UFeedbackData* Feedback, const struct FLatentActionInfo& LatentInfo, bool* bSuccess, bool bInShowUI, int32 DesiredWidth, int32 DesiredHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "AddScreenshot");

	Params::RuntimeUtilities_AddScreenshot Parms{};

	Parms.Feedback = Feedback;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bInShowUI = bInShowUI;
	Parms.DesiredWidth = DesiredWidth;
	Parms.DesiredHeight = DesiredHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.CreateFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFeedbackData*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFeedbackData* URuntimeUtilities::CreateFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "CreateFeedback");

	Params::RuntimeUtilities_CreateFeedback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.CreateIssue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UIssueData*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UIssueData* URuntimeUtilities::CreateIssue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "CreateIssue");

	Params::RuntimeUtilities_CreateIssue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.GetCategories
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TDelegate<void(const struct FCategoriesHelper& Categories)>&OnSuccess                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const class FString& Response)>&OnFail                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void URuntimeUtilities::GetCategories(const TDelegate<void(const struct FCategoriesHelper& Categories)>& OnSuccess, const TDelegate<void(const class FString& Response)>& OnFail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "GetCategories");

	Params::RuntimeUtilities_GetCategories Parms{};

	Parms.OnSuccess = OnSuccess;
	Parms.OnFail = OnFail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.ReportIssue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Summary                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Attachments                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bTakeScreenshots                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttachLogs                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URuntimeUtilities::ReportIssue(const class FString& Summary, const TArray<class FString>& Attachments, bool bTakeScreenshots, bool bAttachLogs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "ReportIssue");

	Params::RuntimeUtilities_ReportIssue Parms{};

	Parms.Summary = std::move(Summary);
	Parms.Attachments = std::move(Attachments);
	Parms.bTakeScreenshots = bTakeScreenshots;
	Parms.bAttachLogs = bAttachLogs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.ReportIssueData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UIssueData*                       Issue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Attachments                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bTakeScreenshots                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttachLogs                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URuntimeUtilities::ReportIssueData(class UIssueData* Issue, const TArray<class FString>& Attachments, bool bTakeScreenshots, bool bAttachLogs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "ReportIssueData");

	Params::RuntimeUtilities_ReportIssueData Parms{};

	Parms.Issue = Issue;
	Parms.Attachments = std::move(Attachments);
	Parms.bTakeScreenshots = bTakeScreenshots;
	Parms.bAttachLogs = bAttachLogs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.SendAttachment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   IssueId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FullPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ContentMimeType                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Username                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PasswordOrToken                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnSuccess                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const class FString& Response)>&OnFail                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void URuntimeUtilities::SendAttachment(int32 IssueId, const class FString& FullPath, const class FString& Filename, const class FString& ContentMimeType, const class FString& Username, const class FString& PasswordOrToken, const TDelegate<void()>& OnSuccess, const TDelegate<void(const class FString& Response)>& OnFail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "SendAttachment");

	Params::RuntimeUtilities_SendAttachment Parms{};

	Parms.IssueId = IssueId;
	Parms.FullPath = std::move(FullPath);
	Parms.Filename = std::move(Filename);
	Parms.ContentMimeType = std::move(ContentMimeType);
	Parms.Username = std::move(Username);
	Parms.PasswordOrToken = std::move(PasswordOrToken);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFail = OnFail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LadyBugTrackerRuntime.RuntimeUtilities.SendFeedback
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFeedbackData*                    Feedback                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Username                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PasswordOrToken                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(int32 IssueId)>&   OnSuccess                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const class FString& Response)>&OnFail                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void URuntimeUtilities::SendFeedback(class UFeedbackData* Feedback, const class FString& Username, const class FString& PasswordOrToken, const TDelegate<void(int32 IssueId)>& OnSuccess, const TDelegate<void(const class FString& Response)>& OnFail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeUtilities", "SendFeedback");

	Params::RuntimeUtilities_SendFeedback Parms{};

	Parms.Feedback = Feedback;
	Parms.Username = std::move(Username);
	Parms.PasswordOrToken = std::move(PasswordOrToken);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFail = OnFail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

