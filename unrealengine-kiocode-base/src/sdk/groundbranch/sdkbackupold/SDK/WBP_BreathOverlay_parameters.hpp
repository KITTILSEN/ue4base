#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BreathOverlay

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_BreathOverlay.WBP_BreathOverlay_C.ExecuteUbergraph_WBP_BreathOverlay
// 0x0120 (0x0120 - 0x0000)
struct WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGBPlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName OldCameraStyle, class FName NewCameraStyle)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0028(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(class FName OldState, class FName NewState)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0048(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_DynamicCast_AsGBPlayer_Controller;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerCameraManager*                 K2Node_DynamicCast_AsGBPlayer_Camera_Manager;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerController*                    K2Node_CustomEvent_PlayerController_1;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerController*                    K2Node_CustomEvent_PlayerController;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue_1;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_GetVoiceComp_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter_1;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_GetVoiceComp_ReturnValue_1;               // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_OldCameraStyle;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NewCameraStyle;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_OldState;                       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NewState;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGBPlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate_3; // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay) == 0x000008, "Wrong alignment on WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay");
static_assert(sizeof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay) == 0x000120, "Wrong size on WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, EntryPoint) == 0x000000, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, Temp_bool_Variable) == 0x000024, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, Temp_byte_Variable) == 0x000025, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, Temp_byte_Variable_1) == 0x000026, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, Temp_delegate_Variable) == 0x000028, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, Temp_delegate_Variable_1) == 0x000048, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_DynamicCast_AsGBPlayer_Controller) == 0x000060, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_DynamicCast_AsGBPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_DynamicCast_AsGBPlayer_Camera_Manager) == 0x000078, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_DynamicCast_AsGBPlayer_Camera_Manager' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CustomEvent_PlayerController_1) == 0x000088, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_PlayAnimation_ReturnValue_1) == 0x000090, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_GetViewTarget_ReturnValue) == 0x000098, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CustomEvent_PlayerController) == 0x0000A0, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_DynamicCast_AsGBCharacter) == 0x0000A8, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_GetViewTarget_ReturnValue_1) == 0x0000B8, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_GetViewTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_GetVoiceComp_ReturnValue) == 0x0000C0, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_GetVoiceComp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_DynamicCast_AsGBCharacter_1) == 0x0000C8, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_DynamicCast_AsGBCharacter_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_PostAkEvent_ReturnValue) == 0x0000D4, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_GetVoiceComp_ReturnValue_1) == 0x0000D8, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_GetVoiceComp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CustomEvent_OldCameraStyle) == 0x0000E0, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CustomEvent_OldCameraStyle' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CustomEvent_NewCameraStyle) == 0x0000E8, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CustomEvent_NewCameraStyle' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000F0, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000F4, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000F5, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0000F6, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_BooleanOR_ReturnValue) == 0x0000F7, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CustomEvent_OldState) == 0x0000F8, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CustomEvent_NewState) == 0x000100, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, CallFunc_BooleanOR_ReturnValue_1) == 0x000108, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_Select_Default) == 0x000109, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay, K2Node_CreateDelegate_OutputDelegate_3) == 0x00010C, "Member 'WBP_BreathOverlay_C_ExecuteUbergraph_WBP_BreathOverlay::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function WBP_BreathOverlay.WBP_BreathOverlay_C.OnPlayerControllerStateChanged_Event_0
// 0x0010 (0x0010 - 0x0000)
struct WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0 final
{
public:
	class FName                                   OldState;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewState;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0) == 0x000004, "Wrong alignment on WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0");
static_assert(sizeof(WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0) == 0x000010, "Wrong size on WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0");
static_assert(offsetof(WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0, OldState) == 0x000000, "Member 'WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0::OldState' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0, NewState) == 0x000008, "Member 'WBP_BreathOverlay_C_OnPlayerControllerStateChanged_Event_0::NewState' has a wrong offset!");

// Function WBP_BreathOverlay.WBP_BreathOverlay_C.OnCameraStyleChanged_Event_0
// 0x0010 (0x0010 - 0x0000)
struct WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0 final
{
public:
	class FName                                   OldCameraStyle;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewCameraStyle;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0) == 0x000004, "Wrong alignment on WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0");
static_assert(sizeof(WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0) == 0x000010, "Wrong size on WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0");
static_assert(offsetof(WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0, OldCameraStyle) == 0x000000, "Member 'WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0::OldCameraStyle' has a wrong offset!");
static_assert(offsetof(WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0, NewCameraStyle) == 0x000008, "Member 'WBP_BreathOverlay_C_OnCameraStyleChanged_Event_0::NewCameraStyle' has a wrong offset!");

// Function WBP_BreathOverlay.WBP_BreathOverlay_C.OnControlBreathInhale_Event_0
// 0x0008 (0x0008 - 0x0000)
struct WBP_BreathOverlay_C_OnControlBreathInhale_Event_0 final
{
public:
	class AGBPlayerController*                    PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BreathOverlay_C_OnControlBreathInhale_Event_0) == 0x000008, "Wrong alignment on WBP_BreathOverlay_C_OnControlBreathInhale_Event_0");
static_assert(sizeof(WBP_BreathOverlay_C_OnControlBreathInhale_Event_0) == 0x000008, "Wrong size on WBP_BreathOverlay_C_OnControlBreathInhale_Event_0");
static_assert(offsetof(WBP_BreathOverlay_C_OnControlBreathInhale_Event_0, PlayerController) == 0x000000, "Member 'WBP_BreathOverlay_C_OnControlBreathInhale_Event_0::PlayerController' has a wrong offset!");

// Function WBP_BreathOverlay.WBP_BreathOverlay_C.OnControlBreathExhale_Event_0
// 0x0008 (0x0008 - 0x0000)
struct WBP_BreathOverlay_C_OnControlBreathExhale_Event_0 final
{
public:
	class AGBPlayerController*                    PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BreathOverlay_C_OnControlBreathExhale_Event_0) == 0x000008, "Wrong alignment on WBP_BreathOverlay_C_OnControlBreathExhale_Event_0");
static_assert(sizeof(WBP_BreathOverlay_C_OnControlBreathExhale_Event_0) == 0x000008, "Wrong size on WBP_BreathOverlay_C_OnControlBreathExhale_Event_0");
static_assert(offsetof(WBP_BreathOverlay_C_OnControlBreathExhale_Event_0, PlayerController) == 0x000000, "Member 'WBP_BreathOverlay_C_OnControlBreathExhale_Event_0::PlayerController' has a wrong offset!");

}

