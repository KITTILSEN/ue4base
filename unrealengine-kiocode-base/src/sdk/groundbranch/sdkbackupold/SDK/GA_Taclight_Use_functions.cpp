#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Taclight_Use

#include "Basic.hpp"

#include "GA_Taclight_Use_classes.hpp"
#include "GA_Taclight_Use_parameters.hpp"


namespace SDK
{

// Function GA_Taclight_Use.GA_Taclight_Use_C.InitReferences
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bOutSuccess                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Taclight_Use_C::InitReferences(bool* bOutSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Taclight_Use_C", "InitReferences");

	Params::GA_Taclight_Use_C_InitReferences Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutSuccess != nullptr)
		*bOutSuccess = Parms.bOutSuccess;
}


// Function GA_Taclight_Use.GA_Taclight_Use_C.ClearReferences
// (Protected, BlueprintCallable, BlueprintEvent)

void UGA_Taclight_Use_C::ClearReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Taclight_Use_C", "ClearReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Taclight_Use.GA_Taclight_Use_C.StartUsing
// (Protected, BlueprintCallable, BlueprintEvent)

void UGA_Taclight_Use_C::StartUsing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Taclight_Use_C", "StartUsing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Taclight_Use.GA_Taclight_Use_C.StopUsing
// (Protected, BlueprintCallable, BlueprintEvent)

void UGA_Taclight_Use_C::StopUsing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Taclight_Use_C", "StopUsing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Taclight_Use.GA_Taclight_Use_C.K2_CanActivateAbility
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// const struct FGameplayAbilitySpecHandle&Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer*           RelevantTags                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UGA_Taclight_Use_C::K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Taclight_Use_C", "K2_CanActivateAbility");

	Params::GA_Taclight_Use_C_K2_CanActivateAbility Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (RelevantTags != nullptr)
		*RelevantTags = std::move(Parms.RelevantTags);

	return Parms.ReturnValue;
}

}

