#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InvItemEditor

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FMModdingPlugin_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InvItemEditor.WBP_InvItemEditor_C
// 0x06B8 (0x0918 - 0x0260)
class UWBP_InvItemEditor_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOutAllUI;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_Clear;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Discard;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IE_RootInvItem_Button_C*           Button_RootItem;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Save;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_SaveAs;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_SaveAsButtons;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_ApplyToChildren;                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           EditCanvas;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           FloatingCanvas;                                    // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ApplyToChildren;                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ClearAllIcon;                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EscKeyIcon;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LCtrlIcon;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LMBIcon;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_MouseWheelIcon;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RMBIcon;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IE_InvItemSkin_ComboBox_C*         ItemSkin_ComboBox;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_14;                                        // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Message;                                 // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_BuildNameVerbosity;                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InvItemTags;                                       // 0x0310(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UVaRestJsonObject*                      ItemJsonObj;                                       // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWBP_CharacterEditor_C*                 CharacterEditorRef;                                // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWBP_CE_InvItem_Button_C*               ButtonItemRef;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AGBCharacter*                           ItemEditorCharacterRef;                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBInvItem*                             RootItem;                                          // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterEditor_Camera_C*           OverviewCamera;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TranslationMultiplier;                             // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RelativeCameraLimit;                               // 0x0364(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationMultiplier;                                // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomMultiplier;                                    // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomOutMaxScale;                                   // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AttachedItemBounds;                                // 0x037C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AttachedCameraVecOffset;                           // 0x0384(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AttachedCameraRotOffset;                           // 0x0390(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRotateToDesiredCharYaw;                           // 0x039C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitCharYaw;                                       // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DesiredCharYaw;                                    // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DesiredCharYawTime;                                // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFloatingItem;                                     // 0x03AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnCancel;                                          // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UVaRestJsonObject* KitJsonObj)> OnOk;                        // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   OverWriteTitle;                                    // 0x03D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   OverWriteMessage;                                  // 0x03E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 BuildName;                                         // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 OriginalBuildName;                                 // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SaveFileName;                                      // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class AGBInvItem*                             DraggedItem;                                       // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveDelay;                                         // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemBuildNameTitle;                                // 0x0440(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AGBInvItem*                             InvItemUnderCursor;                                // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_IE_HoveredInvItem_Tooltip_C*       HoveredInvItemTooltip;                             // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ItemBuildNameMessage;                              // 0x0468(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SaveFailedTitle;                                   // 0x0480(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SaveFailedMessage;                                 // 0x0498(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TooMany;                                           // 0x04B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   AcrossTooManyRails;                                // 0x04C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NotEnoughMountPoints;                              // 0x04E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TooFarBack;                                        // 0x04F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TooFarForward;                                     // 0x0510(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Unknown;                                           // 0x0528(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Overappling;                                       // 0x0540(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NoSight;                                           // 0x0558(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BadPreMod;                                         // 0x0570(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BadPostMod;                                        // 0x0588(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BlockedByFrontSight;                               // 0x05A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BadCombo;                                          // 0x05B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BlockedBy;                                         // 0x05D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NoFrontSightPost;                                  // 0x05E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   InvalidItemSetup;                                  // 0x0600(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BadFrontSightPostBuiltIn;                          // 0x0618(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BadFrontSightPost;                                 // 0x0630(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPrimaryAssetId                        InvItemSkinId;                                     // 0x0648(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 SkipShowClearConfirmation;                         // 0x0658(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   ClearWarningTitle;                                 // 0x0668(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ClearWarningMessage;                               // 0x0680(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TextConfirmItemBuildNameChanged;                   // 0x0698(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TextConfirmItemBuildNameUnchanged;                 // 0x06B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TextEnterItemBuildName;                            // 0x06C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_Modding_MutatorOption_Entry_C*     ItemBuildNameOptionWidget;                         // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLuaScriptInfo                         MutatorLuaScriptInfo;                              // 0x06E8(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bHidingUI;                                         // 0x0768(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769[0x3];                                      // 0x0769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemEditorTargetTag;                               // 0x076C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemEditorSkipShowClearConfimationDialogName;      // 0x0774(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      MirroredCharacterKitJsonObj;                       // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                InvItemSkinIdsToLoad;                              // 0x0788(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, struct FGameplayTag> DragDropOperationRemaps;                          // 0x0798(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bCustomItemBuild;                                  // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_7E9[0x3];                                      // 0x07E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemBuildNameVerbosity;                            // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bItemBuildNameVerbosityChanged;                    // 0x07F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_IE_Customisation_Master_C*         ItemCustomisationWidgetRef;                        // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool bApplyToChildren)> OnSkinApplyToChildrenUpdated;              // 0x0800(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bApplySkinToChildren;                              // 0x0810(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AGBInvItem*, struct FPrimaryAssetId> InvItemToInvItemSkinIdMap;                       // 0x0818(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         ExcludedActors;                                    // 0x0868(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class AGBInvItem*, struct FPrimaryAssetId> InvItemToPrevInvItemSkinIdMap;                   // 0x0878(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class FName>                           LoadBundles;                                       // 0x08C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   InvItemCollisionProfileName;                       // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PouchContentsText;                                 // 0x08E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ApplyToChildrenText;                               // 0x08F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           OriginalInvItemSkinNameTag;                        // 0x0910(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_InvItemEditor(int32 EntryPoint);
	void SharedPrepAndApplyItemSkinIdMap();
	void KitChangeMonitor();
	void StartKitChangeMonitor();
	void BndEvt__WBP_ItemEditor_CheckBox_ApplyToChildren_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_ItemEditor_ItemSkin_ComboBox_K2Node_ComponentBoundEvent_4_OnSkinIdSelected__DelegateSignature(const struct FPrimaryAssetId& SkinId);
	void InitItemSkinComboBox();
	void OnSettingChanged_Event_0(class FName OptionName, int32 NewValue);
	void SetupRootItemSkin();
	void PostConstruct();
	void CreateItemBuildOptionWidget();
	void SaveOverwriteCheck();
	void BndEvt__WBP_ItemEditor_Button_SaveAs_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void OnOkClicked_Event_1(class UWBP_DialogueBox_C* Dialogue);
	void BndEvt__WBP_ItemEditor_Button_Clear_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void Destruct();
	void OnKitAssetsLoaded_Event(const TArray<class UObject*>& LoadedAssets);
	void MoveArmsOutOfWay();
	void OnCancelClicked_Event_0();
	void SaveAsPrompt();
	void Cancel();
	void MakeAllInteractive();
	void AddItemCustomisationWidget();
	void OnConfirmOkClicked_Event_0(class UWBP_DialogueBox_C* Dialogue);
	void SaveJsonObjToDisk();
	void OnOkClicked_DoSave_Event(const class FString& Filename);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetupAttachedItem(const struct FVector2D& AttachedItemBounds_0, const struct FVector& AttachedCameraVecOffset_0, const struct FRotator& AttachedCameraRotOffset_0);
	void Close();
	void BndEvt__Button_Cancel_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_Ok_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void SetupFloatingItem(float BoundsMultiplier, float ZOffset, float XOffset, float PitchOffset, float YawOffset, bool bOffsetItemBy90);
	void Construct();
	void Completed_16950A03920346EFA03F6C83777EE459(const TArray<class UObject*>& Loaded);
	void Completed_57E34F25027142E684BFEC1008E73A32(const TArray<class UObject*>& Loaded);
	void Completed_D494691E0C9446C1AE0D3C795FE48508(const TArray<class UObject*>& Loaded);
	void Completed_F7D295B345644C0DBEECEE40AC987DFC(const TArray<class UObject*>& Loaded);
	void MoveCamera(const struct FVector2D& MouseDelta);
	void RotateItemOrChar(const struct FVector2D& MouseDelta);
	void Zoom_Camera(float WheelDelta);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void MakeInteractive(class AActor* InActor);
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	void UpdateItemUnderCursor(const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	class UWidget* GetHoveredInvItemTooltip();
	void IsValidSetup(bool* bOutIsValid, class FText* OutInvalidMessage);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void NukeEditorRelatedActors();
	bool GetButtonSaveEnabled();
	void CreateNewItemJsonObj(bool* bSuccess);
	void PrepItemToItemSkinIdMap(TArray<struct FPrimaryAssetId>* OutItemSkinsToLoad);
	void ApplyItemToItemSkinMap();
	void DetermineExcludedActors();
	void SetBuildName(const class FString& NewBuildName);
	void UpdateBuildNameUsingLua();
	void GetFirstInvItemMatchingMostTags(class AGBCharacter* InGBCharacter, class AGBInvItem** OutFirstInvItem);
	void GetDragDropVisualsInfo(class AGBInvItem* InDraggedItem, class FText* OutDisplayText, TSoftObjectPtr<class UTexture2D>* OutIcon);
	class FText GetApplyToChildrenText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InvItemEditor_C">();
	}
	static class UWBP_InvItemEditor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InvItemEditor_C>();
	}
};
static_assert(alignof(UWBP_InvItemEditor_C) == 0x000008, "Wrong alignment on UWBP_InvItemEditor_C");
static_assert(sizeof(UWBP_InvItemEditor_C) == 0x000918, "Wrong size on UWBP_InvItemEditor_C");
static_assert(offsetof(UWBP_InvItemEditor_C, UberGraphFrame) == 0x000260, "Member 'UWBP_InvItemEditor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, FadeOutAllUI) == 0x000268, "Member 'UWBP_InvItemEditor_C::FadeOutAllUI' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Button_Clear) == 0x000270, "Member 'UWBP_InvItemEditor_C::Button_Clear' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Button_Discard) == 0x000278, "Member 'UWBP_InvItemEditor_C::Button_Discard' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Button_RootItem) == 0x000280, "Member 'UWBP_InvItemEditor_C::Button_RootItem' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Button_Save) == 0x000288, "Member 'UWBP_InvItemEditor_C::Button_Save' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Button_SaveAs) == 0x000290, "Member 'UWBP_InvItemEditor_C::Button_SaveAs' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Button_SaveAsButtons) == 0x000298, "Member 'UWBP_InvItemEditor_C::Button_SaveAsButtons' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, CheckBox_ApplyToChildren) == 0x0002A0, "Member 'UWBP_InvItemEditor_C::CheckBox_ApplyToChildren' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, EditCanvas) == 0x0002A8, "Member 'UWBP_InvItemEditor_C::EditCanvas' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, FloatingCanvas) == 0x0002B0, "Member 'UWBP_InvItemEditor_C::FloatingCanvas' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, HorizontalBox_ApplyToChildren) == 0x0002B8, "Member 'UWBP_InvItemEditor_C::HorizontalBox_ApplyToChildren' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Image_ClearAllIcon) == 0x0002C0, "Member 'UWBP_InvItemEditor_C::Image_ClearAllIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Image_EscKeyIcon) == 0x0002C8, "Member 'UWBP_InvItemEditor_C::Image_EscKeyIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Image_LCtrlIcon) == 0x0002D0, "Member 'UWBP_InvItemEditor_C::Image_LCtrlIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Image_LMBIcon) == 0x0002D8, "Member 'UWBP_InvItemEditor_C::Image_LMBIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Image_MouseWheelIcon) == 0x0002E0, "Member 'UWBP_InvItemEditor_C::Image_MouseWheelIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Image_RMBIcon) == 0x0002E8, "Member 'UWBP_InvItemEditor_C::Image_RMBIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemSkin_ComboBox) == 0x0002F0, "Member 'UWBP_InvItemEditor_C::ItemSkin_ComboBox' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Overlay_14) == 0x0002F8, "Member 'UWBP_InvItemEditor_C::Overlay_14' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, TextBlock_Message) == 0x000300, "Member 'UWBP_InvItemEditor_C::TextBlock_Message' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, VerticalBox_BuildNameVerbosity) == 0x000308, "Member 'UWBP_InvItemEditor_C::VerticalBox_BuildNameVerbosity' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InvItemTags) == 0x000310, "Member 'UWBP_InvItemEditor_C::InvItemTags' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemJsonObj) == 0x000330, "Member 'UWBP_InvItemEditor_C::ItemJsonObj' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, CharacterEditorRef) == 0x000338, "Member 'UWBP_InvItemEditor_C::CharacterEditorRef' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ButtonItemRef) == 0x000340, "Member 'UWBP_InvItemEditor_C::ButtonItemRef' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemEditorCharacterRef) == 0x000348, "Member 'UWBP_InvItemEditor_C::ItemEditorCharacterRef' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, RootItem) == 0x000350, "Member 'UWBP_InvItemEditor_C::RootItem' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, OverviewCamera) == 0x000358, "Member 'UWBP_InvItemEditor_C::OverviewCamera' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, TranslationMultiplier) == 0x000360, "Member 'UWBP_InvItemEditor_C::TranslationMultiplier' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, RelativeCameraLimit) == 0x000364, "Member 'UWBP_InvItemEditor_C::RelativeCameraLimit' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, RotationMultiplier) == 0x00036C, "Member 'UWBP_InvItemEditor_C::RotationMultiplier' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ZoomMultiplier) == 0x000370, "Member 'UWBP_InvItemEditor_C::ZoomMultiplier' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ZoomOutMaxScale) == 0x000374, "Member 'UWBP_InvItemEditor_C::ZoomOutMaxScale' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Alpha) == 0x000378, "Member 'UWBP_InvItemEditor_C::Alpha' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, AttachedItemBounds) == 0x00037C, "Member 'UWBP_InvItemEditor_C::AttachedItemBounds' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, AttachedCameraVecOffset) == 0x000384, "Member 'UWBP_InvItemEditor_C::AttachedCameraVecOffset' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, AttachedCameraRotOffset) == 0x000390, "Member 'UWBP_InvItemEditor_C::AttachedCameraRotOffset' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, bRotateToDesiredCharYaw) == 0x00039C, "Member 'UWBP_InvItemEditor_C::bRotateToDesiredCharYaw' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InitCharYaw) == 0x0003A0, "Member 'UWBP_InvItemEditor_C::InitCharYaw' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, DesiredCharYaw) == 0x0003A4, "Member 'UWBP_InvItemEditor_C::DesiredCharYaw' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, DesiredCharYawTime) == 0x0003A8, "Member 'UWBP_InvItemEditor_C::DesiredCharYawTime' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, bFloatingItem) == 0x0003AC, "Member 'UWBP_InvItemEditor_C::bFloatingItem' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, OnCancel) == 0x0003B0, "Member 'UWBP_InvItemEditor_C::OnCancel' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, OnOk) == 0x0003C0, "Member 'UWBP_InvItemEditor_C::OnOk' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, OverWriteTitle) == 0x0003D0, "Member 'UWBP_InvItemEditor_C::OverWriteTitle' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, OverWriteMessage) == 0x0003E8, "Member 'UWBP_InvItemEditor_C::OverWriteMessage' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, BuildName) == 0x000400, "Member 'UWBP_InvItemEditor_C::BuildName' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, OriginalBuildName) == 0x000410, "Member 'UWBP_InvItemEditor_C::OriginalBuildName' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, SaveFileName) == 0x000420, "Member 'UWBP_InvItemEditor_C::SaveFileName' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, DraggedItem) == 0x000430, "Member 'UWBP_InvItemEditor_C::DraggedItem' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, MoveDelay) == 0x000438, "Member 'UWBP_InvItemEditor_C::MoveDelay' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemBuildNameTitle) == 0x000440, "Member 'UWBP_InvItemEditor_C::ItemBuildNameTitle' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InvItemUnderCursor) == 0x000458, "Member 'UWBP_InvItemEditor_C::InvItemUnderCursor' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, HoveredInvItemTooltip) == 0x000460, "Member 'UWBP_InvItemEditor_C::HoveredInvItemTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemBuildNameMessage) == 0x000468, "Member 'UWBP_InvItemEditor_C::ItemBuildNameMessage' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, SaveFailedTitle) == 0x000480, "Member 'UWBP_InvItemEditor_C::SaveFailedTitle' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, SaveFailedMessage) == 0x000498, "Member 'UWBP_InvItemEditor_C::SaveFailedMessage' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, TooMany) == 0x0004B0, "Member 'UWBP_InvItemEditor_C::TooMany' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, AcrossTooManyRails) == 0x0004C8, "Member 'UWBP_InvItemEditor_C::AcrossTooManyRails' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, NotEnoughMountPoints) == 0x0004E0, "Member 'UWBP_InvItemEditor_C::NotEnoughMountPoints' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, TooFarBack) == 0x0004F8, "Member 'UWBP_InvItemEditor_C::TooFarBack' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, TooFarForward) == 0x000510, "Member 'UWBP_InvItemEditor_C::TooFarForward' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Unknown) == 0x000528, "Member 'UWBP_InvItemEditor_C::Unknown' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, Overappling) == 0x000540, "Member 'UWBP_InvItemEditor_C::Overappling' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, NoSight) == 0x000558, "Member 'UWBP_InvItemEditor_C::NoSight' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, BadPreMod) == 0x000570, "Member 'UWBP_InvItemEditor_C::BadPreMod' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, BadPostMod) == 0x000588, "Member 'UWBP_InvItemEditor_C::BadPostMod' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, BlockedByFrontSight) == 0x0005A0, "Member 'UWBP_InvItemEditor_C::BlockedByFrontSight' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, BadCombo) == 0x0005B8, "Member 'UWBP_InvItemEditor_C::BadCombo' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, BlockedBy) == 0x0005D0, "Member 'UWBP_InvItemEditor_C::BlockedBy' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, NoFrontSightPost) == 0x0005E8, "Member 'UWBP_InvItemEditor_C::NoFrontSightPost' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InvalidItemSetup) == 0x000600, "Member 'UWBP_InvItemEditor_C::InvalidItemSetup' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, BadFrontSightPostBuiltIn) == 0x000618, "Member 'UWBP_InvItemEditor_C::BadFrontSightPostBuiltIn' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, BadFrontSightPost) == 0x000630, "Member 'UWBP_InvItemEditor_C::BadFrontSightPost' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InvItemSkinId) == 0x000648, "Member 'UWBP_InvItemEditor_C::InvItemSkinId' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, SkipShowClearConfirmation) == 0x000658, "Member 'UWBP_InvItemEditor_C::SkipShowClearConfirmation' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ClearWarningTitle) == 0x000668, "Member 'UWBP_InvItemEditor_C::ClearWarningTitle' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ClearWarningMessage) == 0x000680, "Member 'UWBP_InvItemEditor_C::ClearWarningMessage' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, TextConfirmItemBuildNameChanged) == 0x000698, "Member 'UWBP_InvItemEditor_C::TextConfirmItemBuildNameChanged' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, TextConfirmItemBuildNameUnchanged) == 0x0006B0, "Member 'UWBP_InvItemEditor_C::TextConfirmItemBuildNameUnchanged' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, TextEnterItemBuildName) == 0x0006C8, "Member 'UWBP_InvItemEditor_C::TextEnterItemBuildName' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemBuildNameOptionWidget) == 0x0006E0, "Member 'UWBP_InvItemEditor_C::ItemBuildNameOptionWidget' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, MutatorLuaScriptInfo) == 0x0006E8, "Member 'UWBP_InvItemEditor_C::MutatorLuaScriptInfo' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, bHidingUI) == 0x000768, "Member 'UWBP_InvItemEditor_C::bHidingUI' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemEditorTargetTag) == 0x00076C, "Member 'UWBP_InvItemEditor_C::ItemEditorTargetTag' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemEditorSkipShowClearConfimationDialogName) == 0x000774, "Member 'UWBP_InvItemEditor_C::ItemEditorSkipShowClearConfimationDialogName' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, MirroredCharacterKitJsonObj) == 0x000780, "Member 'UWBP_InvItemEditor_C::MirroredCharacterKitJsonObj' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InvItemSkinIdsToLoad) == 0x000788, "Member 'UWBP_InvItemEditor_C::InvItemSkinIdsToLoad' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, DragDropOperationRemaps) == 0x000798, "Member 'UWBP_InvItemEditor_C::DragDropOperationRemaps' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, bCustomItemBuild) == 0x0007E8, "Member 'UWBP_InvItemEditor_C::bCustomItemBuild' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemBuildNameVerbosity) == 0x0007EC, "Member 'UWBP_InvItemEditor_C::ItemBuildNameVerbosity' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, bItemBuildNameVerbosityChanged) == 0x0007F0, "Member 'UWBP_InvItemEditor_C::bItemBuildNameVerbosityChanged' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ItemCustomisationWidgetRef) == 0x0007F8, "Member 'UWBP_InvItemEditor_C::ItemCustomisationWidgetRef' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, OnSkinApplyToChildrenUpdated) == 0x000800, "Member 'UWBP_InvItemEditor_C::OnSkinApplyToChildrenUpdated' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, bApplySkinToChildren) == 0x000810, "Member 'UWBP_InvItemEditor_C::bApplySkinToChildren' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InvItemToInvItemSkinIdMap) == 0x000818, "Member 'UWBP_InvItemEditor_C::InvItemToInvItemSkinIdMap' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ExcludedActors) == 0x000868, "Member 'UWBP_InvItemEditor_C::ExcludedActors' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InvItemToPrevInvItemSkinIdMap) == 0x000878, "Member 'UWBP_InvItemEditor_C::InvItemToPrevInvItemSkinIdMap' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, LoadBundles) == 0x0008C8, "Member 'UWBP_InvItemEditor_C::LoadBundles' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, InvItemCollisionProfileName) == 0x0008D8, "Member 'UWBP_InvItemEditor_C::InvItemCollisionProfileName' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, PouchContentsText) == 0x0008E0, "Member 'UWBP_InvItemEditor_C::PouchContentsText' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, ApplyToChildrenText) == 0x0008F8, "Member 'UWBP_InvItemEditor_C::ApplyToChildrenText' has a wrong offset!");
static_assert(offsetof(UWBP_InvItemEditor_C, OriginalInvItemSkinNameTag) == 0x000910, "Member 'UWBP_InvItemEditor_C::OriginalInvItemSkinNameTag' has a wrong offset!");

}

