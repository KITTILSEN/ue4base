#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StanceIndicator

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetProneVis
// 0x0040 (0x0040 - 0x0000)
struct WBP_StanceIndicator_C_GetProneVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProne_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBLocalPlayer*                         CallFunc_GetGBLocalPlayer_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGBPlayerSettings*                      CallFunc_GetPlayerSettings_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceIndicator_C_GetProneVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetProneVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetProneVis) == 0x000040, "Wrong size on WBP_StanceIndicator_C_GetProneVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetProneVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_StanceIndicator_C_GetProneVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, Temp_byte_Variable) == 0x000010, "Member 'WBP_StanceIndicator_C_GetProneVis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, K2Node_DynamicCast_AsGBCharacter) == 0x000018, "Member 'WBP_StanceIndicator_C_GetProneVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_StanceIndicator_C_GetProneVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, CallFunc_IsProne_ReturnValue) == 0x000021, "Member 'WBP_StanceIndicator_C_GetProneVis::CallFunc_IsProne_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, CallFunc_IsAlive_ReturnValue) == 0x000022, "Member 'WBP_StanceIndicator_C_GetProneVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, CallFunc_IsValid_ReturnValue) == 0x000023, "Member 'WBP_StanceIndicator_C_GetProneVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, Temp_byte_Variable_1) == 0x000024, "Member 'WBP_StanceIndicator_C_GetProneVis::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, CallFunc_GetGBLocalPlayer_ReturnValue) == 0x000028, "Member 'WBP_StanceIndicator_C_GetProneVis::CallFunc_GetGBLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, CallFunc_GetPlayerSettings_ReturnValue) == 0x000030, "Member 'WBP_StanceIndicator_C_GetProneVis::CallFunc_GetPlayerSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, Temp_bool_Variable) == 0x000038, "Member 'WBP_StanceIndicator_C_GetProneVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetProneVis, K2Node_Select_Default) == 0x000039, "Member 'WBP_StanceIndicator_C_GetProneVis::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetCrouchingVis
// 0x0048 (0x0048 - 0x0000)
struct WBP_StanceIndicator_C_GetCrouchingVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrouched_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProne_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBLocalPlayer*                         CallFunc_GetGBLocalPlayer_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGBPlayerSettings*                      CallFunc_GetPlayerSettings_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceIndicator_C_GetCrouchingVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetCrouchingVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetCrouchingVis) == 0x000048, "Wrong size on WBP_StanceIndicator_C_GetCrouchingVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, Temp_byte_Variable) == 0x000010, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, K2Node_DynamicCast_AsGBCharacter) == 0x000018, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_IsCrouched_ReturnValue) == 0x000021, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_IsCrouched_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_IsProne_ReturnValue) == 0x000022, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_IsProne_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_IsAlive_ReturnValue) == 0x000023, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_IsValid_ReturnValue) == 0x000026, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_GetGBLocalPlayer_ReturnValue) == 0x000028, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_GetGBLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, Temp_byte_Variable_1) == 0x000030, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, CallFunc_GetPlayerSettings_ReturnValue) == 0x000038, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::CallFunc_GetPlayerSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, Temp_bool_Variable) == 0x000040, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetCrouchingVis, K2Node_Select_Default) == 0x000041, "Member 'WBP_StanceIndicator_C_GetCrouchingVis::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetStandingVis
// 0x0040 (0x0040 - 0x0000)
struct WBP_StanceIndicator_C_GetStandingVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrouched_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProne_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGBLocalPlayer*                         CallFunc_GetGBLocalPlayer_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGBPlayerSettings*                      CallFunc_GetPlayerSettings_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceIndicator_C_GetStandingVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetStandingVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetStandingVis) == 0x000040, "Wrong size on WBP_StanceIndicator_C_GetStandingVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetStandingVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, Temp_byte_Variable) == 0x000010, "Member 'WBP_StanceIndicator_C_GetStandingVis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, K2Node_DynamicCast_AsGBCharacter) == 0x000018, "Member 'WBP_StanceIndicator_C_GetStandingVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_StanceIndicator_C_GetStandingVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_IsCrouched_ReturnValue) == 0x000021, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_IsCrouched_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_IsProne_ReturnValue) == 0x000022, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_IsProne_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_Not_PreBool_ReturnValue_1) == 0x000024, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_IsAlive_ReturnValue) == 0x000025, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_IsValid_ReturnValue) == 0x000027, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_GetGBLocalPlayer_ReturnValue) == 0x000028, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_GetGBLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, CallFunc_GetPlayerSettings_ReturnValue) == 0x000030, "Member 'WBP_StanceIndicator_C_GetStandingVis::CallFunc_GetPlayerSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, Temp_byte_Variable_1) == 0x000038, "Member 'WBP_StanceIndicator_C_GetStandingVis::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, Temp_bool_Variable) == 0x000039, "Member 'WBP_StanceIndicator_C_GetStandingVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetStandingVis, K2Node_Select_Default) == 0x00003A, "Member 'WBP_StanceIndicator_C_GetStandingVis::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetItemTypeTagVis
// 0x0070 (0x0070 - 0x0000)
struct WBP_StanceIndicator_C_GetItemTypeTagVis final
{
public:
	struct FGameplayTagContainer                  InInvItemTags;                                     // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetInvItemTags_ReturnValue;               // 0x0048(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_StanceIndicator_C_GetItemTypeTagVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetItemTypeTagVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetItemTypeTagVis) == 0x000070, "Wrong size on WBP_StanceIndicator_C_GetItemTypeTagVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, InInvItemTags) == 0x000000, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::InInvItemTags' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, ReturnValue) == 0x000020, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, K2Node_DynamicCast_AsGBCharacter) == 0x000030, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, CallFunc_GetEquipped_ReturnValue) == 0x000040, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, CallFunc_GetInvItemTags_ReturnValue) == 0x000048, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::CallFunc_GetInvItemTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, CallFunc_HasAllTags_ReturnValue) == 0x000069, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetItemTypeTagVis, CallFunc_IsAlive_ReturnValue) == 0x00006A, "Member 'WBP_StanceIndicator_C_GetItemTypeTagVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetRifleVis
// 0x0002 (0x0002 - 0x0000)
struct WBP_StanceIndicator_C_GetRifleVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetItemTypeTagVis_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceIndicator_C_GetRifleVis) == 0x000001, "Wrong alignment on WBP_StanceIndicator_C_GetRifleVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetRifleVis) == 0x000002, "Wrong size on WBP_StanceIndicator_C_GetRifleVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetRifleVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetRifleVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetRifleVis, CallFunc_GetItemTypeTagVis_ReturnValue) == 0x000001, "Member 'WBP_StanceIndicator_C_GetRifleVis::CallFunc_GetItemTypeTagVis_ReturnValue' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetSidearmVis
// 0x0002 (0x0002 - 0x0000)
struct WBP_StanceIndicator_C_GetSidearmVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetItemTypeTagVis_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceIndicator_C_GetSidearmVis) == 0x000001, "Wrong alignment on WBP_StanceIndicator_C_GetSidearmVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetSidearmVis) == 0x000002, "Wrong size on WBP_StanceIndicator_C_GetSidearmVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetSidearmVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetSidearmVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetSidearmVis, CallFunc_GetItemTypeTagVis_ReturnValue) == 0x000001, "Member 'WBP_StanceIndicator_C_GetSidearmVis::CallFunc_GetItemTypeTagVis_ReturnValue' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetHighReadyVis
// 0x0028 (0x0028 - 0x0000)
struct WBP_StanceIndicator_C_GetHighReadyVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetOffTargetAlpha_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_StanceIndicator_C_GetHighReadyVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetHighReadyVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetHighReadyVis) == 0x000028, "Wrong size on WBP_StanceIndicator_C_GetHighReadyVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetHighReadyVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetHighReadyVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetHighReadyVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_StanceIndicator_C_GetHighReadyVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetHighReadyVis, K2Node_DynamicCast_AsGBCharacter) == 0x000010, "Member 'WBP_StanceIndicator_C_GetHighReadyVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetHighReadyVis, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_StanceIndicator_C_GetHighReadyVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetHighReadyVis, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_StanceIndicator_C_GetHighReadyVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetHighReadyVis, CallFunc_GetOffTargetAlpha_ReturnValue) == 0x00001C, "Member 'WBP_StanceIndicator_C_GetHighReadyVis::CallFunc_GetOffTargetAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetHighReadyVis, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_StanceIndicator_C_GetHighReadyVis::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetHighReadyVis, CallFunc_IsAlive_ReturnValue) == 0x000021, "Member 'WBP_StanceIndicator_C_GetHighReadyVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetLowReadyVis
// 0x0028 (0x0028 - 0x0000)
struct WBP_StanceIndicator_C_GetLowReadyVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetOffTargetAlpha_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_StanceIndicator_C_GetLowReadyVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetLowReadyVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetLowReadyVis) == 0x000028, "Wrong size on WBP_StanceIndicator_C_GetLowReadyVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetLowReadyVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetLowReadyVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetLowReadyVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_StanceIndicator_C_GetLowReadyVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetLowReadyVis, K2Node_DynamicCast_AsGBCharacter) == 0x000010, "Member 'WBP_StanceIndicator_C_GetLowReadyVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetLowReadyVis, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_StanceIndicator_C_GetLowReadyVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetLowReadyVis, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_StanceIndicator_C_GetLowReadyVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetLowReadyVis, CallFunc_GetOffTargetAlpha_ReturnValue) == 0x00001C, "Member 'WBP_StanceIndicator_C_GetLowReadyVis::CallFunc_GetOffTargetAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetLowReadyVis, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_StanceIndicator_C_GetLowReadyVis::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetLowReadyVis, CallFunc_IsAlive_ReturnValue) == 0x000021, "Member 'WBP_StanceIndicator_C_GetLowReadyVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetReadyVis
// 0x0030 (0x0030 - 0x0000)
struct WBP_StanceIndicator_C_GetReadyVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEngagedAlpha_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetOffTargetAlpha_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_StanceIndicator_C_GetReadyVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetReadyVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetReadyVis) == 0x000030, "Wrong size on WBP_StanceIndicator_C_GetReadyVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetReadyVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_StanceIndicator_C_GetReadyVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, K2Node_DynamicCast_AsGBCharacter) == 0x000010, "Member 'WBP_StanceIndicator_C_GetReadyVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_StanceIndicator_C_GetReadyVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_StanceIndicator_C_GetReadyVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, CallFunc_GetEngagedAlpha_ReturnValue) == 0x00001C, "Member 'WBP_StanceIndicator_C_GetReadyVis::CallFunc_GetEngagedAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_StanceIndicator_C_GetReadyVis::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, CallFunc_GetOffTargetAlpha_ReturnValue) == 0x000024, "Member 'WBP_StanceIndicator_C_GetReadyVis::CallFunc_GetOffTargetAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, CallFunc_IsAlive_ReturnValue) == 0x000028, "Member 'WBP_StanceIndicator_C_GetReadyVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000029, "Member 'WBP_StanceIndicator_C_GetReadyVis::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetReadyVis, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'WBP_StanceIndicator_C_GetReadyVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetEngagedVis
// 0x0030 (0x0030 - 0x0000)
struct WBP_StanceIndicator_C_GetEngagedVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEngagedAlpha_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetOffTargetAlpha_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_StanceIndicator_C_GetEngagedVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetEngagedVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetEngagedVis) == 0x000030, "Wrong size on WBP_StanceIndicator_C_GetEngagedVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetEngagedVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_StanceIndicator_C_GetEngagedVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, K2Node_DynamicCast_AsGBCharacter) == 0x000010, "Member 'WBP_StanceIndicator_C_GetEngagedVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_StanceIndicator_C_GetEngagedVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_StanceIndicator_C_GetEngagedVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, CallFunc_GetEngagedAlpha_ReturnValue) == 0x00001C, "Member 'WBP_StanceIndicator_C_GetEngagedVis::CallFunc_GetEngagedAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_StanceIndicator_C_GetEngagedVis::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, CallFunc_GetOffTargetAlpha_ReturnValue) == 0x000024, "Member 'WBP_StanceIndicator_C_GetEngagedVis::CallFunc_GetOffTargetAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, CallFunc_IsAlive_ReturnValue) == 0x000028, "Member 'WBP_StanceIndicator_C_GetEngagedVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000029, "Member 'WBP_StanceIndicator_C_GetEngagedVis::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetEngagedVis, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'WBP_StanceIndicator_C_GetEngagedVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.GetNoItemVis
// 0x0058 (0x0058 - 0x0000)
struct WBP_StanceIndicator_C_GetNoItemVis final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetInvItemTags_ReturnValue;               // 0x0030(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceIndicator_C_GetNoItemVis) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_GetNoItemVis");
static_assert(sizeof(WBP_StanceIndicator_C_GetNoItemVis) == 0x000058, "Wrong size on WBP_StanceIndicator_C_GetNoItemVis");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, ReturnValue) == 0x000000, "Member 'WBP_StanceIndicator_C_GetNoItemVis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, Temp_bool_Variable) == 0x000010, "Member 'WBP_StanceIndicator_C_GetNoItemVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, K2Node_DynamicCast_AsGBCharacter) == 0x000018, "Member 'WBP_StanceIndicator_C_GetNoItemVis::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_StanceIndicator_C_GetNoItemVis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_GetEquipped_ReturnValue) == 0x000028, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_GetInvItemTags_ReturnValue) == 0x000030, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_GetInvItemTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_HasTag_ReturnValue) == 0x000051, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_HasTag_ReturnValue_1) == 0x000052, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_IsAlive_ReturnValue) == 0x000053, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, CallFunc_BooleanOR_ReturnValue) == 0x000054, "Member 'WBP_StanceIndicator_C_GetNoItemVis::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, Temp_byte_Variable) == 0x000055, "Member 'WBP_StanceIndicator_C_GetNoItemVis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, Temp_byte_Variable_1) == 0x000056, "Member 'WBP_StanceIndicator_C_GetNoItemVis::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_GetNoItemVis, K2Node_Select_Default) == 0x000057, "Member 'WBP_StanceIndicator_C_GetNoItemVis::K2Node_Select_Default' has a wrong offset!");

}

