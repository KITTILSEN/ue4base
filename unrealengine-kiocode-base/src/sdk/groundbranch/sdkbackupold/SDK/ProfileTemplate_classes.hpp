#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProfileTemplate

#include "Basic.hpp"

#include "Perception_structs.hpp"
#include "AreaProfile_structs.hpp"
#include "KytheraPlugin_classes.hpp"
#include "AdvancedMovement_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ProfileTemplate.ProfileTemplate_C
// 0x00D0 (0x0108 - 0x0038)
class UProfileTemplate_C final : public UKytProfile
{
public:
	struct FPerception                            Perception;                                        // 0x0038(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UKytNavMeshAgentGroup*                  NavMeshGroup;                                      // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytNavMeshAgentType*                   NavMeshAgentType;                                  // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TargetSelector;                                    // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FAreaProfile                           AreaProfile;                                       // 0x00B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         TurnRateLimit;                                     // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAdvancedMovement                      AdvancedMovement;                                  // 0x00E4(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProfileTemplate_C">();
	}
	static class UProfileTemplate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProfileTemplate_C>();
	}
};
static_assert(alignof(UProfileTemplate_C) == 0x000008, "Wrong alignment on UProfileTemplate_C");
static_assert(sizeof(UProfileTemplate_C) == 0x000108, "Wrong size on UProfileTemplate_C");
static_assert(offsetof(UProfileTemplate_C, Perception) == 0x000038, "Member 'UProfileTemplate_C::Perception' has a wrong offset!");
static_assert(offsetof(UProfileTemplate_C, NavMeshGroup) == 0x000090, "Member 'UProfileTemplate_C::NavMeshGroup' has a wrong offset!");
static_assert(offsetof(UProfileTemplate_C, NavMeshAgentType) == 0x000098, "Member 'UProfileTemplate_C::NavMeshAgentType' has a wrong offset!");
static_assert(offsetof(UProfileTemplate_C, TargetSelector) == 0x0000A0, "Member 'UProfileTemplate_C::TargetSelector' has a wrong offset!");
static_assert(offsetof(UProfileTemplate_C, AreaProfile) == 0x0000B0, "Member 'UProfileTemplate_C::AreaProfile' has a wrong offset!");
static_assert(offsetof(UProfileTemplate_C, TurnRateLimit) == 0x0000E0, "Member 'UProfileTemplate_C::TurnRateLimit' has a wrong offset!");
static_assert(offsetof(UProfileTemplate_C, AdvancedMovement) == 0x0000E4, "Member 'UProfileTemplate_C::AdvancedMovement' has a wrong offset!");

}

