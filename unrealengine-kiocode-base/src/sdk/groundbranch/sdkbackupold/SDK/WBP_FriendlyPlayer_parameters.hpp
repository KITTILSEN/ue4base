#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FriendlyPlayer

#include "Basic.hpp"

#include "GroundBranch_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_FriendlyPlayer.WBP_FriendlyPlayer_C.ExecuteUbergraph_WBP_FriendlyPlayer
// 0x0090 (0x0090 - 0x0000)
struct WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PlayerName;                     // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ETeamElement                                  K2Node_CustomEvent_TeamElement;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0050(0x0010)(NoDestructor)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0060(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue_1;  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer) == 0x000008, "Wrong alignment on WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer");
static_assert(sizeof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer) == 0x000090, "Wrong size on WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, EntryPoint) == 0x000000, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000004, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000010, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000011, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, K2Node_CustomEvent_PlayerName) == 0x000020, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, K2Node_CustomEvent_TeamElement) == 0x000030, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::K2Node_CustomEvent_TeamElement' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, K2Node_MakeStruct_Anchors) == 0x000050, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_Map_Find_Value) == 0x000060, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer, CallFunc_IsAnimationPlayingForward_ReturnValue_1) == 0x000089, "Member 'WBP_FriendlyPlayer_C_ExecuteUbergraph_WBP_FriendlyPlayer::CallFunc_IsAnimationPlayingForward_ReturnValue_1' has a wrong offset!");

// Function WBP_FriendlyPlayer.WBP_FriendlyPlayer_C.Show
// 0x0018 (0x0018 - 0x0000)
struct WBP_FriendlyPlayer_C_Show final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ETeamElement                                  TeamElement;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FriendlyPlayer_C_Show) == 0x000008, "Wrong alignment on WBP_FriendlyPlayer_C_Show");
static_assert(sizeof(WBP_FriendlyPlayer_C_Show) == 0x000018, "Wrong size on WBP_FriendlyPlayer_C_Show");
static_assert(offsetof(WBP_FriendlyPlayer_C_Show, PlayerName) == 0x000000, "Member 'WBP_FriendlyPlayer_C_Show::PlayerName' has a wrong offset!");
static_assert(offsetof(WBP_FriendlyPlayer_C_Show, TeamElement) == 0x000010, "Member 'WBP_FriendlyPlayer_C_Show::TeamElement' has a wrong offset!");

}

