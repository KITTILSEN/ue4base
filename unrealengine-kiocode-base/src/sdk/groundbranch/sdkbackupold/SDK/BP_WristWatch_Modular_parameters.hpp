#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WristWatch_Modular

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.ExecuteUbergraph_BP_WristWatch_Modular
// 0x0180 (0x0180 - 0x0000)
struct BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_CustomEvent_Character;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBPlayerState*                         K2Node_CustomEvent_GBPlayerState;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;         // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_WatchApp_Simple_C*                 K2Node_DynamicCast_AsWBP_Watch_App_Simple;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController_1;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_CustomEvent_Character_1;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIcon_ReturnValue;                      // 0x0078(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UWBP_RadialMenu_Entry_C*                CallFunc_Create_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_1;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_Event_Character;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_2;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_AttachItemTo_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_3;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_4;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_5;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUICharacter_ReturnValue;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBPlayerState*                         K2Node_DynamicCast_AsGBPlayer_State;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGBPlayerState* GBPlayerState)> K2Node_CreateDelegate_OutputDelegate_2;     // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_6;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APlayerController* PlayerController, class AGBCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_UsageMenu;                            // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* PlayerController, class AGBCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	class UWBP_RadialMenu_C*                      K2Node_DynamicCast_AsWBP_Radial_Menu;              // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index;                          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsWBP_Watch_App;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_WatchApp_C*                        CallFunc_Create_ReturnValue_1;                     // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular) == 0x000008, "Wrong alignment on BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular");
static_assert(sizeof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular) == 0x000180, "Wrong size on BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, EntryPoint) == 0x000000, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CustomEvent_PlayerController) == 0x000010, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CustomEvent_Character) == 0x000018, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CustomEvent_GBPlayerState) == 0x000020, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CustomEvent_GBPlayerState' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_DynamicCast_AsGBCharacter) == 0x000038, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_IsLocallyViewed_ReturnValue) == 0x000041, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_IsPlayerControlled_ReturnValue) == 0x000042, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_IsLocallyControlled_ReturnValue) == 0x000043, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_BooleanAND_ReturnValue) == 0x000044, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetWidget_ReturnValue) == 0x000048, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_DynamicCast_AsWBP_Watch_App_Simple) == 0x000050, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_DynamicCast_AsWBP_Watch_App_Simple' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_SelectFloat_ReturnValue) == 0x00005C, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CustomEvent_PlayerController_1) == 0x000060, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CustomEvent_Character_1) == 0x000068, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetGBInstigator_ReturnValue) == 0x000070, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetGBInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetIcon_ReturnValue) == 0x000078, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_Create_ReturnValue) == 0x0000A0, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A8, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetGBInstigator_ReturnValue_1) == 0x0000B8, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetGBInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_Event_Character) == 0x0000C0, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetGBInstigator_ReturnValue_2) == 0x0000C8, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetGBInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_BP_AttachItemTo_ReturnValue) == 0x0000D0, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_BP_AttachItemTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetGBInstigator_ReturnValue_3) == 0x0000D8, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetGBInstigator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetGBInstigator_ReturnValue_4) == 0x0000E0, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetGBInstigator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetGBInstigator_ReturnValue_5) == 0x0000E8, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetGBInstigator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_IsUICharacter_ReturnValue) == 0x0000F0, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_IsUICharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_DynamicCast_AsGBPlayer_State) == 0x0000F8, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_DynamicCast_AsGBPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_Not_PreBool_ReturnValue) == 0x000101, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_IsValid_ReturnValue) == 0x000102, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CreateDelegate_OutputDelegate_2) == 0x000104, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_GetGBInstigator_ReturnValue_6) == 0x000118, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_GetGBInstigator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_IsAlive_ReturnValue) == 0x000120, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_Not_PreBool_ReturnValue_1) == 0x000121, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CreateDelegate_OutputDelegate_3) == 0x000124, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_Event_UsageMenu) == 0x000138, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_Event_UsageMenu' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CreateDelegate_OutputDelegate_4) == 0x000140, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_DynamicCast_AsWBP_Radial_Menu) == 0x000150, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_DynamicCast_AsWBP_Radial_Menu' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_DynamicCast_bSuccess_3) == 0x000158, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_CustomEvent_Index) == 0x00015C, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, Temp_class_Variable) == 0x000160, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_ClassDynamicCast_AsWBP_Watch_App) == 0x000168, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_ClassDynamicCast_AsWBP_Watch_App' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, K2Node_ClassDynamicCast_bSuccess) == 0x000170, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular, CallFunc_Create_ReturnValue_1) == 0x000178, "Member 'BP_WristWatch_Modular_C_ExecuteUbergraph_BP_WristWatch_Modular::CallFunc_Create_ReturnValue_1' has a wrong offset!");

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.OnSelected_Watch_Event
// 0x0004 (0x0004 - 0x0000)
struct BP_WristWatch_Modular_C_OnSelected_Watch_Event final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WristWatch_Modular_C_OnSelected_Watch_Event) == 0x000004, "Wrong alignment on BP_WristWatch_Modular_C_OnSelected_Watch_Event");
static_assert(sizeof(BP_WristWatch_Modular_C_OnSelected_Watch_Event) == 0x000004, "Wrong size on BP_WristWatch_Modular_C_OnSelected_Watch_Event");
static_assert(offsetof(BP_WristWatch_Modular_C_OnSelected_Watch_Event, Index_0) == 0x000000, "Member 'BP_WristWatch_Modular_C_OnSelected_Watch_Event::Index_0' has a wrong offset!");

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.AddAttachedUseMenuEntries
// 0x0008 (0x0008 - 0x0000)
struct BP_WristWatch_Modular_C_AddAttachedUseMenuEntries final
{
public:
	class UUserWidget*                            UsageMenu;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WristWatch_Modular_C_AddAttachedUseMenuEntries) == 0x000008, "Wrong alignment on BP_WristWatch_Modular_C_AddAttachedUseMenuEntries");
static_assert(sizeof(BP_WristWatch_Modular_C_AddAttachedUseMenuEntries) == 0x000008, "Wrong size on BP_WristWatch_Modular_C_AddAttachedUseMenuEntries");
static_assert(offsetof(BP_WristWatch_Modular_C_AddAttachedUseMenuEntries, UsageMenu) == 0x000000, "Member 'BP_WristWatch_Modular_C_AddAttachedUseMenuEntries::UsageMenu' has a wrong offset!");

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.OnAddedToInventoryEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_WristWatch_Modular_C_OnAddedToInventoryEvent final
{
public:
	class AGBCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WristWatch_Modular_C_OnAddedToInventoryEvent) == 0x000008, "Wrong alignment on BP_WristWatch_Modular_C_OnAddedToInventoryEvent");
static_assert(sizeof(BP_WristWatch_Modular_C_OnAddedToInventoryEvent) == 0x000008, "Wrong size on BP_WristWatch_Modular_C_OnAddedToInventoryEvent");
static_assert(offsetof(BP_WristWatch_Modular_C_OnAddedToInventoryEvent, Character) == 0x000000, "Member 'BP_WristWatch_Modular_C_OnAddedToInventoryEvent::Character' has a wrong offset!");

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.OnReceivePlayerState_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_WristWatch_Modular_C_OnReceivePlayerState_Event_0 final
{
public:
	class AGBPlayerState*                         GBPlayerState;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WristWatch_Modular_C_OnReceivePlayerState_Event_0) == 0x000008, "Wrong alignment on BP_WristWatch_Modular_C_OnReceivePlayerState_Event_0");
static_assert(sizeof(BP_WristWatch_Modular_C_OnReceivePlayerState_Event_0) == 0x000008, "Wrong size on BP_WristWatch_Modular_C_OnReceivePlayerState_Event_0");
static_assert(offsetof(BP_WristWatch_Modular_C_OnReceivePlayerState_Event_0, GBPlayerState) == 0x000000, "Member 'BP_WristWatch_Modular_C_OnReceivePlayerState_Event_0::GBPlayerState' has a wrong offset!");

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.OnEndViewTarget_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_WristWatch_Modular_C_OnEndViewTarget_Event_0 final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WristWatch_Modular_C_OnEndViewTarget_Event_0) == 0x000008, "Wrong alignment on BP_WristWatch_Modular_C_OnEndViewTarget_Event_0");
static_assert(sizeof(BP_WristWatch_Modular_C_OnEndViewTarget_Event_0) == 0x000010, "Wrong size on BP_WristWatch_Modular_C_OnEndViewTarget_Event_0");
static_assert(offsetof(BP_WristWatch_Modular_C_OnEndViewTarget_Event_0, PlayerController) == 0x000000, "Member 'BP_WristWatch_Modular_C_OnEndViewTarget_Event_0::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_OnEndViewTarget_Event_0, Character) == 0x000008, "Member 'BP_WristWatch_Modular_C_OnEndViewTarget_Event_0::Character' has a wrong offset!");

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.OnBecomeViewTarget_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0 final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0) == 0x000008, "Wrong alignment on BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0");
static_assert(sizeof(BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0) == 0x000010, "Wrong size on BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0");
static_assert(offsetof(BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0, PlayerController) == 0x000000, "Member 'BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0, Character) == 0x000008, "Member 'BP_WristWatch_Modular_C_OnBecomeViewTarget_Event_0::Character' has a wrong offset!");

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.OnLoaded_ACB25BB1431690D222BD5B836B55DB38
// 0x0008 (0x0008 - 0x0000)
struct BP_WristWatch_Modular_C_OnLoaded_ACB25BB1431690D222BD5B836B55DB38 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_WristWatch_Modular_C_OnLoaded_ACB25BB1431690D222BD5B836B55DB38) == 0x000008, "Wrong alignment on BP_WristWatch_Modular_C_OnLoaded_ACB25BB1431690D222BD5B836B55DB38");
static_assert(sizeof(BP_WristWatch_Modular_C_OnLoaded_ACB25BB1431690D222BD5B836B55DB38) == 0x000008, "Wrong size on BP_WristWatch_Modular_C_OnLoaded_ACB25BB1431690D222BD5B836B55DB38");
static_assert(offsetof(BP_WristWatch_Modular_C_OnLoaded_ACB25BB1431690D222BD5B836B55DB38, Loaded) == 0x000000, "Member 'BP_WristWatch_Modular_C_OnLoaded_ACB25BB1431690D222BD5B836B55DB38::Loaded' has a wrong offset!");

// Function BP_WristWatch_Modular.BP_WristWatch_Modular_C.AllowUsageWhileAttached
// 0x0001 (0x0001 - 0x0000)
struct BP_WristWatch_Modular_C_AllowUsageWhileAttached final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WristWatch_Modular_C_AllowUsageWhileAttached) == 0x000001, "Wrong alignment on BP_WristWatch_Modular_C_AllowUsageWhileAttached");
static_assert(sizeof(BP_WristWatch_Modular_C_AllowUsageWhileAttached) == 0x000001, "Wrong size on BP_WristWatch_Modular_C_AllowUsageWhileAttached");
static_assert(offsetof(BP_WristWatch_Modular_C_AllowUsageWhileAttached, ReturnValue) == 0x000000, "Member 'BP_WristWatch_Modular_C_AllowUsageWhileAttached::ReturnValue' has a wrong offset!");

}

