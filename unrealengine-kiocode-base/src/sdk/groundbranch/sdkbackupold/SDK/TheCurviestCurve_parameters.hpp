#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheCurviestCurve

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function TheCurviestCurve.CurveCurviestBlueprintUtils.GetValueFromCurve
// 0x0018 (0x0018 - 0x0000)
struct CurveCurviestBlueprintUtils_GetValueFromCurve final
{
public:
	class UCurveBase*                             Curve;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTime;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurveCurviestBlueprintUtils_GetValueFromCurve) == 0x000008, "Wrong alignment on CurveCurviestBlueprintUtils_GetValueFromCurve");
static_assert(sizeof(CurveCurviestBlueprintUtils_GetValueFromCurve) == 0x000018, "Wrong size on CurveCurviestBlueprintUtils_GetValueFromCurve");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromCurve, Curve) == 0x000000, "Member 'CurveCurviestBlueprintUtils_GetValueFromCurve::Curve' has a wrong offset!");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromCurve, Name_0) == 0x000008, "Member 'CurveCurviestBlueprintUtils_GetValueFromCurve::Name_0' has a wrong offset!");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromCurve, InTime) == 0x000010, "Member 'CurveCurviestBlueprintUtils_GetValueFromCurve::InTime' has a wrong offset!");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromCurve, ReturnValue) == 0x000014, "Member 'CurveCurviestBlueprintUtils_GetValueFromCurve::ReturnValue' has a wrong offset!");

// Function TheCurviestCurve.CurveCurviestBlueprintUtils.GetValueFromTaggedCurve
// 0x0020 (0x0020 - 0x0000)
struct CurveCurviestBlueprintUtils_GetValueFromTaggedCurve final
{
public:
	class UCurveCurviest*                         Curve;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTime;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowParamLookup;                                 // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurveCurviestBlueprintUtils_GetValueFromTaggedCurve) == 0x000008, "Wrong alignment on CurveCurviestBlueprintUtils_GetValueFromTaggedCurve");
static_assert(sizeof(CurveCurviestBlueprintUtils_GetValueFromTaggedCurve) == 0x000020, "Wrong size on CurveCurviestBlueprintUtils_GetValueFromTaggedCurve");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromTaggedCurve, Curve) == 0x000000, "Member 'CurveCurviestBlueprintUtils_GetValueFromTaggedCurve::Curve' has a wrong offset!");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromTaggedCurve, Tag) == 0x000008, "Member 'CurveCurviestBlueprintUtils_GetValueFromTaggedCurve::Tag' has a wrong offset!");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromTaggedCurve, InTime) == 0x000010, "Member 'CurveCurviestBlueprintUtils_GetValueFromTaggedCurve::InTime' has a wrong offset!");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromTaggedCurve, bAllowParamLookup) == 0x000014, "Member 'CurveCurviestBlueprintUtils_GetValueFromTaggedCurve::bAllowParamLookup' has a wrong offset!");
static_assert(offsetof(CurveCurviestBlueprintUtils_GetValueFromTaggedCurve, ReturnValue) == 0x000018, "Member 'CurveCurviestBlueprintUtils_GetValueFromTaggedCurve::ReturnValue' has a wrong offset!");

// Function TheCurviestCurve.CurveCurviest.GetFloatValue
// 0x0010 (0x0010 - 0x0000)
struct CurveCurviest_GetFloatValue final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTime;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurveCurviest_GetFloatValue) == 0x000004, "Wrong alignment on CurveCurviest_GetFloatValue");
static_assert(sizeof(CurveCurviest_GetFloatValue) == 0x000010, "Wrong size on CurveCurviest_GetFloatValue");
static_assert(offsetof(CurveCurviest_GetFloatValue, Name_0) == 0x000000, "Member 'CurveCurviest_GetFloatValue::Name_0' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValue, InTime) == 0x000008, "Member 'CurveCurviest_GetFloatValue::InTime' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValue, ReturnValue) == 0x00000C, "Member 'CurveCurviest_GetFloatValue::ReturnValue' has a wrong offset!");

// Function TheCurviestCurve.CurveCurviest.GetFloatValueFromNamedCurve
// 0x0014 (0x0014 - 0x0000)
struct CurveCurviest_GetFloatValueFromNamedCurve final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTime;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValueOut;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurveCurviest_GetFloatValueFromNamedCurve) == 0x000004, "Wrong alignment on CurveCurviest_GetFloatValueFromNamedCurve");
static_assert(sizeof(CurveCurviest_GetFloatValueFromNamedCurve) == 0x000014, "Wrong size on CurveCurviest_GetFloatValueFromNamedCurve");
static_assert(offsetof(CurveCurviest_GetFloatValueFromNamedCurve, Name_0) == 0x000000, "Member 'CurveCurviest_GetFloatValueFromNamedCurve::Name_0' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromNamedCurve, InTime) == 0x000008, "Member 'CurveCurviest_GetFloatValueFromNamedCurve::InTime' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromNamedCurve, ValueOut) == 0x00000C, "Member 'CurveCurviest_GetFloatValueFromNamedCurve::ValueOut' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromNamedCurve, ReturnValue) == 0x000010, "Member 'CurveCurviest_GetFloatValueFromNamedCurve::ReturnValue' has a wrong offset!");

// Function TheCurviestCurve.CurveCurviest.GetFloatValueFromTaggedCurve
// 0x0014 (0x0014 - 0x0000)
struct CurveCurviest_GetFloatValueFromTaggedCurve final
{
public:
	struct FGameplayTag                           IdentifierTag;                                     // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTime;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValueOut;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowParamLookup;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurveCurviest_GetFloatValueFromTaggedCurve) == 0x000004, "Wrong alignment on CurveCurviest_GetFloatValueFromTaggedCurve");
static_assert(sizeof(CurveCurviest_GetFloatValueFromTaggedCurve) == 0x000014, "Wrong size on CurveCurviest_GetFloatValueFromTaggedCurve");
static_assert(offsetof(CurveCurviest_GetFloatValueFromTaggedCurve, IdentifierTag) == 0x000000, "Member 'CurveCurviest_GetFloatValueFromTaggedCurve::IdentifierTag' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromTaggedCurve, InTime) == 0x000008, "Member 'CurveCurviest_GetFloatValueFromTaggedCurve::InTime' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromTaggedCurve, ValueOut) == 0x00000C, "Member 'CurveCurviest_GetFloatValueFromTaggedCurve::ValueOut' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromTaggedCurve, bAllowParamLookup) == 0x000010, "Member 'CurveCurviest_GetFloatValueFromTaggedCurve::bAllowParamLookup' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromTaggedCurve, ReturnValue) == 0x000011, "Member 'CurveCurviest_GetFloatValueFromTaggedCurve::ReturnValue' has a wrong offset!");

// Function TheCurviestCurve.CurveCurviest.GetFloatValueFromTaggedParam
// 0x0010 (0x0010 - 0x0000)
struct CurveCurviest_GetFloatValueFromTaggedParam final
{
public:
	struct FGameplayTag                           IdentifierTag;                                     // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValueOut;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurveCurviest_GetFloatValueFromTaggedParam) == 0x000004, "Wrong alignment on CurveCurviest_GetFloatValueFromTaggedParam");
static_assert(sizeof(CurveCurviest_GetFloatValueFromTaggedParam) == 0x000010, "Wrong size on CurveCurviest_GetFloatValueFromTaggedParam");
static_assert(offsetof(CurveCurviest_GetFloatValueFromTaggedParam, IdentifierTag) == 0x000000, "Member 'CurveCurviest_GetFloatValueFromTaggedParam::IdentifierTag' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromTaggedParam, ValueOut) == 0x000008, "Member 'CurveCurviest_GetFloatValueFromTaggedParam::ValueOut' has a wrong offset!");
static_assert(offsetof(CurveCurviest_GetFloatValueFromTaggedParam, ReturnValue) == 0x00000C, "Member 'CurveCurviest_GetFloatValueFromTaggedParam::ReturnValue' has a wrong offset!");

}

