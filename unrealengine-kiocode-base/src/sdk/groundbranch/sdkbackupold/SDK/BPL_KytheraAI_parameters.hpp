#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_KytheraAI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "KytheraPlugin_structs.hpp"


namespace SDK::Params
{

// Function BPL_KytheraAI.BPL_KytheraAI_C.Ky Emit Sound
// 0x0088 (0x0088 - 0x0000)
struct BPL_KytheraAI_C_Ky_Emit_Sound final
{
public:
	EKytSignalDispatchModeEnum                    DispatchMode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SignalRange;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SignalPos;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SignalRadius;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SignalType;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SignalCategory;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContinuous_;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SignalUncertainityRadius;                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SignalDirection;                                   // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourcePosition;                                    // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  SourcePawn;                                        // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawDebugSpheres;                                  // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            LocalController;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytSignal*                             Local_Signal;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UKytSignal*                             CallFunc_CreateKytSignal_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_KytheraAI_C_Ky_Emit_Sound) == 0x000008, "Wrong alignment on BPL_KytheraAI_C_Ky_Emit_Sound");
static_assert(sizeof(BPL_KytheraAI_C_Ky_Emit_Sound) == 0x000088, "Wrong size on BPL_KytheraAI_C_Ky_Emit_Sound");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, DispatchMode) == 0x000000, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::DispatchMode' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SignalRange) == 0x000004, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SignalRange' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SignalPos) == 0x000008, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SignalPos' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SignalRadius) == 0x000014, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SignalRadius' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SignalType) == 0x000018, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SignalType' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SignalCategory) == 0x00001C, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SignalCategory' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, IsContinuous_) == 0x000020, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::IsContinuous_' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SignalUncertainityRadius) == 0x000024, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SignalUncertainityRadius' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SignalDirection) == 0x000028, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SignalDirection' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SourcePosition) == 0x000034, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SourcePosition' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, SourcePawn) == 0x000040, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::SourcePawn' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, DrawDebugSpheres) == 0x000048, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::DrawDebugSpheres' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, __WorldContext) == 0x000050, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, LocalController) == 0x000058, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::LocalController' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, Local_Signal) == 0x000060, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::Local_Signal' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, CallFunc_GetController_ReturnValue) == 0x000070, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, CallFunc_IsPlayerController_ReturnValue) == 0x000079, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, CallFunc_Not_PreBool_ReturnValue) == 0x00007A, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_KytheraAI_C_Ky_Emit_Sound, CallFunc_CreateKytSignal_ReturnValue) == 0x000080, "Member 'BPL_KytheraAI_C_Ky_Emit_Sound::CallFunc_CreateKytSignal_ReturnValue' has a wrong offset!");

}

