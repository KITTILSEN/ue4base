#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_HeadUnderWater

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function GCN_HeadUnderWater.GCN_HeadUnderWater_C.ExecuteUbergraph_GCN_HeadUnderWater
// 0x00A8 (0x00A8 - 0x0000)
struct GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* PlayerController, class AGBCharacter* Character)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        K2Node_CustomEvent_InCameraModifier;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCM_HeadUnderWater_BreathEffects_C*     K2Node_DynamicCast_AsCM_Head_Under_Water_Breath_Effects; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_CustomEvent_Character;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController_1;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_CustomEvent_Character_1;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveCameraModifier_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_AddNewCameraModifier_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue_1;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_CustomEvent_InGBCharacter;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_CustomEvent_InGBCharacter_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APlayerController* PlayerController, class AGBCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater) == 0x000008, "Wrong alignment on GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater");
static_assert(sizeof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater) == 0x0000A8, "Wrong size on GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, EntryPoint) == 0x000000, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CustomEvent_InCameraModifier) == 0x000018, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CustomEvent_InCameraModifier' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_DynamicCast_AsCM_Head_Under_Water_Breath_Effects) == 0x000020, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_DynamicCast_AsCM_Head_Under_Water_Breath_Effects' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CustomEvent_PlayerController) == 0x000030, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CustomEvent_Character) == 0x000038, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CustomEvent_PlayerController_1) == 0x000040, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CustomEvent_Character_1) == 0x000048, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000050, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, CallFunc_RemoveCameraModifier_ReturnValue) == 0x000058, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::CallFunc_RemoveCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, CallFunc_AddNewCameraModifier_ReturnValue) == 0x000060, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::CallFunc_AddNewCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, CallFunc_FindCameraModifierByClass_ReturnValue_1) == 0x000068, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::CallFunc_FindCameraModifierByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CustomEvent_InGBCharacter) == 0x000078, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CustomEvent_InGBCharacter' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CustomEvent_InGBCharacter_1) == 0x000080, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CustomEvent_InGBCharacter_1' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, CallFunc_IsLocallyViewed_ReturnValue) == 0x000090, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater, K2Node_CreateDelegate_OutputDelegate_1) == 0x000094, "Member 'GCN_HeadUnderWater_C_ExecuteUbergraph_GCN_HeadUnderWater::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function GCN_HeadUnderWater.GCN_HeadUnderWater_C.UpdateCameraModifier
// 0x0008 (0x0008 - 0x0000)
struct GCN_HeadUnderWater_C_UpdateCameraModifier final
{
public:
	class UCameraModifier*                        InCameraModifier;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_HeadUnderWater_C_UpdateCameraModifier) == 0x000008, "Wrong alignment on GCN_HeadUnderWater_C_UpdateCameraModifier");
static_assert(sizeof(GCN_HeadUnderWater_C_UpdateCameraModifier) == 0x000008, "Wrong size on GCN_HeadUnderWater_C_UpdateCameraModifier");
static_assert(offsetof(GCN_HeadUnderWater_C_UpdateCameraModifier, InCameraModifier) == 0x000000, "Member 'GCN_HeadUnderWater_C_UpdateCameraModifier::InCameraModifier' has a wrong offset!");

// Function GCN_HeadUnderWater.GCN_HeadUnderWater_C.OnEndViewTarget_Event_0
// 0x0010 (0x0010 - 0x0000)
struct GCN_HeadUnderWater_C_OnEndViewTarget_Event_0 final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_HeadUnderWater_C_OnEndViewTarget_Event_0) == 0x000008, "Wrong alignment on GCN_HeadUnderWater_C_OnEndViewTarget_Event_0");
static_assert(sizeof(GCN_HeadUnderWater_C_OnEndViewTarget_Event_0) == 0x000010, "Wrong size on GCN_HeadUnderWater_C_OnEndViewTarget_Event_0");
static_assert(offsetof(GCN_HeadUnderWater_C_OnEndViewTarget_Event_0, PlayerController) == 0x000000, "Member 'GCN_HeadUnderWater_C_OnEndViewTarget_Event_0::PlayerController' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnEndViewTarget_Event_0, Character) == 0x000008, "Member 'GCN_HeadUnderWater_C_OnEndViewTarget_Event_0::Character' has a wrong offset!");

// Function GCN_HeadUnderWater.GCN_HeadUnderWater_C.OnBecomeViewTarget_Event_0
// 0x0010 (0x0010 - 0x0000)
struct GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0 final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0) == 0x000008, "Wrong alignment on GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0");
static_assert(sizeof(GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0) == 0x000010, "Wrong size on GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0");
static_assert(offsetof(GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0, PlayerController) == 0x000000, "Member 'GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0::PlayerController' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0, Character) == 0x000008, "Member 'GCN_HeadUnderWater_C_OnBecomeViewTarget_Event_0::Character' has a wrong offset!");

// Function GCN_HeadUnderWater.GCN_HeadUnderWater_C.UnbindViewTargetEvents
// 0x0008 (0x0008 - 0x0000)
struct GCN_HeadUnderWater_C_UnbindViewTargetEvents final
{
public:
	class AGBCharacter*                           InGBCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_HeadUnderWater_C_UnbindViewTargetEvents) == 0x000008, "Wrong alignment on GCN_HeadUnderWater_C_UnbindViewTargetEvents");
static_assert(sizeof(GCN_HeadUnderWater_C_UnbindViewTargetEvents) == 0x000008, "Wrong size on GCN_HeadUnderWater_C_UnbindViewTargetEvents");
static_assert(offsetof(GCN_HeadUnderWater_C_UnbindViewTargetEvents, InGBCharacter) == 0x000000, "Member 'GCN_HeadUnderWater_C_UnbindViewTargetEvents::InGBCharacter' has a wrong offset!");

// Function GCN_HeadUnderWater.GCN_HeadUnderWater_C.BindViewTargetEvents
// 0x0008 (0x0008 - 0x0000)
struct GCN_HeadUnderWater_C_BindViewTargetEvents final
{
public:
	class AGBCharacter*                           InGBCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_HeadUnderWater_C_BindViewTargetEvents) == 0x000008, "Wrong alignment on GCN_HeadUnderWater_C_BindViewTargetEvents");
static_assert(sizeof(GCN_HeadUnderWater_C_BindViewTargetEvents) == 0x000008, "Wrong size on GCN_HeadUnderWater_C_BindViewTargetEvents");
static_assert(offsetof(GCN_HeadUnderWater_C_BindViewTargetEvents, InGBCharacter) == 0x000000, "Member 'GCN_HeadUnderWater_C_BindViewTargetEvents::InGBCharacter' has a wrong offset!");

// Function GCN_HeadUnderWater.GCN_HeadUnderWater_C.WhileActive
// 0x00F8 (0x00F8 - 0x0000)
struct GCN_HeadUnderWater_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x00CC(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_HeadUnderWater_C_WhileActive) == 0x000008, "Wrong alignment on GCN_HeadUnderWater_C_WhileActive");
static_assert(sizeof(GCN_HeadUnderWater_C_WhileActive) == 0x0000F8, "Wrong size on GCN_HeadUnderWater_C_WhileActive");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, MyTarget) == 0x000000, "Member 'GCN_HeadUnderWater_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, Parameters) == 0x000008, "Member 'GCN_HeadUnderWater_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, ReturnValue) == 0x0000C8, "Member 'GCN_HeadUnderWater_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, Temp_delegate_Variable) == 0x0000CC, "Member 'GCN_HeadUnderWater_C_WhileActive::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, K2Node_DynamicCast_AsGBCharacter) == 0x0000E0, "Member 'GCN_HeadUnderWater_C_WhileActive::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GCN_HeadUnderWater_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, CallFunc_IsLocallyViewed_ReturnValue) == 0x0000E9, "Member 'GCN_HeadUnderWater_C_WhileActive::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, CallFunc_PostEvent_ReturnValue) == 0x0000EC, "Member 'GCN_HeadUnderWater_C_WhileActive::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_WhileActive, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000F0, "Member 'GCN_HeadUnderWater_C_WhileActive::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function GCN_HeadUnderWater.GCN_HeadUnderWater_C.OnRemove
// 0x0138 (0x0138 - 0x0000)
struct GCN_HeadUnderWater_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           LocalGBCharacter;                                  // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x00EC(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveCameraModifier_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_HeadUnderWater_C_OnRemove) == 0x000008, "Wrong alignment on GCN_HeadUnderWater_C_OnRemove");
static_assert(sizeof(GCN_HeadUnderWater_C_OnRemove) == 0x000138, "Wrong size on GCN_HeadUnderWater_C_OnRemove");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, MyTarget) == 0x000000, "Member 'GCN_HeadUnderWater_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, Parameters) == 0x000008, "Member 'GCN_HeadUnderWater_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, ReturnValue) == 0x0000C8, "Member 'GCN_HeadUnderWater_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, LocalGBCharacter) == 0x0000D0, "Member 'GCN_HeadUnderWater_C_OnRemove::LocalGBCharacter' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000D8, "Member 'GCN_HeadUnderWater_C_OnRemove::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, K2Node_DynamicCast_AsGBCharacter) == 0x0000E0, "Member 'GCN_HeadUnderWater_C_OnRemove::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GCN_HeadUnderWater_C_OnRemove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, Temp_delegate_Variable) == 0x0000EC, "Member 'GCN_HeadUnderWater_C_OnRemove::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, Temp_bool_Variable) == 0x0000FC, "Member 'GCN_HeadUnderWater_C_OnRemove::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, CallFunc_GetPlayerController_ReturnValue) == 0x000100, "Member 'GCN_HeadUnderWater_C_OnRemove::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, CallFunc_IsLocallyViewed_ReturnValue) == 0x000108, "Member 'GCN_HeadUnderWater_C_OnRemove::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000110, "Member 'GCN_HeadUnderWater_C_OnRemove::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, CallFunc_RemoveCameraModifier_ReturnValue) == 0x000118, "Member 'GCN_HeadUnderWater_C_OnRemove::CallFunc_RemoveCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00011C, "Member 'GCN_HeadUnderWater_C_OnRemove::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000120, "Member 'GCN_HeadUnderWater_C_OnRemove::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, K2Node_Select_Default) == 0x000128, "Member 'GCN_HeadUnderWater_C_OnRemove::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GCN_HeadUnderWater_C_OnRemove, CallFunc_PostEvent_ReturnValue) == 0x000130, "Member 'GCN_HeadUnderWater_C_OnRemove::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

}

