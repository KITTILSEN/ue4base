#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BT_GB_Ky_FireWeapon_Node

#include "Basic.hpp"

#include "GroundBranch_structs.hpp"
#include "KytheraPlugin_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BT_GB_Ky_FireWeapon_Node.BT_GB_Ky_FireWeapon_Node_C.ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node
// 0x0018 (0x0018 - 0x0000)
struct BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AKytController*                         K2Node_Event_Controller;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         K2Node_Event_BehaviorBlackboard;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node) == 0x000008, "Wrong alignment on BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node");
static_assert(sizeof(BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node) == 0x000018, "Wrong size on BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node, EntryPoint) == 0x000000, "Member 'BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node::EntryPoint' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node, K2Node_Event_Controller) == 0x000008, "Member 'BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node, K2Node_Event_BehaviorBlackboard) == 0x000010, "Member 'BT_GB_Ky_FireWeapon_Node_C_ExecuteUbergraph_BT_GB_Ky_FireWeapon_Node::K2Node_Event_BehaviorBlackboard' has a wrong offset!");

// Function BT_GB_Ky_FireWeapon_Node.BT_GB_Ky_FireWeapon_Node_C.DoCleanup
// 0x0010 (0x0010 - 0x0000)
struct BT_GB_Ky_FireWeapon_Node_C_DoCleanup final
{
public:
	class AKytController*                         Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         BehaviorBlackboard;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BT_GB_Ky_FireWeapon_Node_C_DoCleanup) == 0x000008, "Wrong alignment on BT_GB_Ky_FireWeapon_Node_C_DoCleanup");
static_assert(sizeof(BT_GB_Ky_FireWeapon_Node_C_DoCleanup) == 0x000010, "Wrong size on BT_GB_Ky_FireWeapon_Node_C_DoCleanup");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoCleanup, Controller) == 0x000000, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoCleanup::Controller' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoCleanup, BehaviorBlackboard) == 0x000008, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoCleanup::BehaviorBlackboard' has a wrong offset!");

// Function BT_GB_Ky_FireWeapon_Node.BT_GB_Ky_FireWeapon_Node_C.DoEnter
// 0x0270 (0x0270 - 0x0000)
struct BT_GB_Ky_FireWeapon_Node_C_DoEnter final
{
public:
	class AKytController*                         Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         BehaviorBlackboard;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKytBTEnterResult                             ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLOSBlocked;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBKytFriendlyController*               K2Node_DynamicCast_AsGBKyt_Friendly_Controller;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameMode*                            K2Node_DynamicCast_AsGBGame_Mode;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBAIBarkManager*                       CallFunc_GetAIBarkManager_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKytBlackboard*                         CallFunc_GetEntityState_ReturnValue;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         CallFunc_GetCommonBlackboard_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Blufor_C*                 K2Node_DynamicCast_AsBP_Character_Blufor;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KytGoodGuy_C*                       K2Node_DynamicCast_AsBP_Kyt_Good_Guy;              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KytBadGuy_C*                        K2Node_DynamicCast_AsBP_Kyt_Bad_Guy;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBKytController*                       K2Node_DynamicCast_AsGBKyt_Controller;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_DynamicCast_AsGBCharacter;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBInvItem*                             CallFunc_GetEquipped_ReturnValue;                  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBFirearm*                             K2Node_DynamicCast_AsGBFirearm;                    // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKytBlackboard*                         CallFunc_GetBlackboardValueAsBlackboard_ReturnValue; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BT_GB_Ky_FireWeapon_Node_C_DoEnter) == 0x000008, "Wrong alignment on BT_GB_Ky_FireWeapon_Node_C_DoEnter");
static_assert(sizeof(BT_GB_Ky_FireWeapon_Node_C_DoEnter) == 0x000270, "Wrong size on BT_GB_Ky_FireWeapon_Node_C_DoEnter");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, Controller) == 0x000000, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::Controller' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, BehaviorBlackboard) == 0x000008, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::BehaviorBlackboard' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, ReturnValue) == 0x000010, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, bLOSBlocked) == 0x000011, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::bLOSBlocked' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_MakeArray_Array) == 0x000030, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_MakeArray_Array_1) == 0x000040, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000050, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000060, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_HasTag_ReturnValue) == 0x000068, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x000071, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_AsGBKyt_Friendly_Controller) == 0x000078, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_AsGBKyt_Friendly_Controller' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_GetGameMode_ReturnValue) == 0x000088, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_AsGBGame_Mode) == 0x000090, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_AsGBGame_Mode' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_GetAIBarkManager_ReturnValue) == 0x0000A0, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_GetAIBarkManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0000B0, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000C0, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_GetEntityState_ReturnValue) == 0x0000C8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_GetEntityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_GetCommonBlackboard_ReturnValue) == 0x0000D0, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_GetCommonBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_Array_Get_Item) == 0x0000DC, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_bBlockingHit) == 0x000164, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_bInitialOverlap) == 0x000165, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_Time) == 0x000168, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_Distance) == 0x00016C, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_ImpactPoint) == 0x00017C, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_Normal) == 0x000188, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_ImpactNormal) == 0x000194, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_HitItem) == 0x0001C0, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_ElementIndex) == 0x0001C4, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_FaceIndex) == 0x0001C8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_TraceStart) == 0x0001CC, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_BreakHitResult_TraceEnd) == 0x0001D8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_AsBP_Character_Blufor) == 0x0001E8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_AsBP_Character_Blufor' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_bSuccess_2) == 0x0001F0, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_AsBP_Kyt_Good_Guy) == 0x0001F8, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_AsBP_Kyt_Good_Guy' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_bSuccess_3) == 0x000200, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_AsBP_Kyt_Bad_Guy) == 0x000208, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_AsBP_Kyt_Bad_Guy' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_bSuccess_4) == 0x000210, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_AsGBKyt_Controller) == 0x000218, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_AsGBKyt_Controller' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_bSuccess_5) == 0x000220, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_K2_GetPawn_ReturnValue) == 0x000228, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_AsGBCharacter) == 0x000230, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_AsGBCharacter' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_bSuccess_6) == 0x000238, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_GetEquipped_ReturnValue) == 0x000240, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_AsGBFirearm) == 0x000248, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_AsGBFirearm' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, K2Node_DynamicCast_bSuccess_7) == 0x000250, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_GetBlackboardValueAsBlackboard_ReturnValue) == 0x000258, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_GetBlackboardValueAsBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000260, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoEnter, CallFunc_IsEmpty_ReturnValue) == 0x000268, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoEnter::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function BT_GB_Ky_FireWeapon_Node.BT_GB_Ky_FireWeapon_Node_C.DoUpdate
// 0x0020 (0x0020 - 0x0000)
struct BT_GB_Ky_FireWeapon_Node_C_DoUpdate final
{
public:
	class AKytController*                         Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         BehaviorBlackboard;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKytBTUpdateResult                            ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKytBTUpdateResult                            CallFunc_DoUpdate_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate) == 0x000008, "Wrong alignment on BT_GB_Ky_FireWeapon_Node_C_DoUpdate");
static_assert(sizeof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate) == 0x000020, "Wrong size on BT_GB_Ky_FireWeapon_Node_C_DoUpdate");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate, Controller) == 0x000000, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoUpdate::Controller' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate, BehaviorBlackboard) == 0x000008, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoUpdate::BehaviorBlackboard' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate, ReturnValue) == 0x000010, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoUpdate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate, CallFunc_DoUpdate_ReturnValue) == 0x000011, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoUpdate::CallFunc_DoUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000013, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoUpdate::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000014, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoUpdate::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_DoUpdate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BT_GB_Ky_FireWeapon_Node_C_DoUpdate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BT_GB_Ky_FireWeapon_Node.BT_GB_Ky_FireWeapon_Node_C.CheckFiringModes
// 0x0070 (0x0070 - 0x0000)
struct BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes final
{
public:
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBKytFriendlyController*               K2Node_DynamicCast_AsGBKyt_Friendly_Controller;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_5;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_6;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_7;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_8;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_9;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFiringModeData>                CallFunc_GetFiringModes_ReturnValue;               // 0x0050(0x0010)(ReferenceParm)
	struct FFiringModeData                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes) == 0x000008, "Wrong alignment on BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes");
static_assert(sizeof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes) == 0x000070, "Wrong size on BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_GetDistanceTo_ReturnValue) == 0x000000, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000006, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000007, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue) == 0x000014, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, K2Node_DynamicCast_AsGBKyt_Friendly_Controller) == 0x000018, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::K2Node_DynamicCast_AsGBKyt_Friendly_Controller' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000024, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000028, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x00002C, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x000034, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_5) == 0x000038, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_6) == 0x00003C, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_7) == 0x000040, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_8) == 0x000044, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_RandomFloatInRange_ReturnValue_9) == 0x000048, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_RandomFloatInRange_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_GetFiringModes_ReturnValue) == 0x000050, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_GetFiringModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_Array_Get_Item) == 0x000060, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006D, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00006E, "Member 'BT_GB_Ky_FireWeapon_Node_C_CheckFiringModes::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BT_GB_Ky_FireWeapon_Node.BT_GB_Ky_FireWeapon_Node_C.SetFireBetweenShots
// 0x0028 (0x0028 - 0x0000)
struct BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKytBlackboard*                         FireModeBB;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKytBlackboard*                         CallFunc_CreateKytBlackboard_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots) == 0x000008, "Wrong alignment on BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots");
static_assert(sizeof(BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots) == 0x000028, "Wrong size on BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots, Value) == 0x000000, "Member 'BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots::Value' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots, FireModeBB) == 0x000008, "Member 'BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots::FireModeBB' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots, CallFunc_CreateKytBlackboard_ReturnValue) == 0x000010, "Member 'BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots::CallFunc_CreateKytBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots, CallFunc_Conv_FloatToString_ReturnValue) == 0x000018, "Member 'BT_GB_Ky_FireWeapon_Node_C_SetFireBetweenShots::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

}

