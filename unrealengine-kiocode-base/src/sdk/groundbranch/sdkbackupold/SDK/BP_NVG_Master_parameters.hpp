#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NVG_Master

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function BP_NVG_Master.BP_NVG_Master_C.ExecuteUbergraph_BP_NVG_Master
// 0x0258 (0x0258 - 0x0000)
struct BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* PlayerController, class AGBCharacter* Character)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_InEnumAsByte_3;                       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InName_3;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte_2;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_TotalDuration_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte_1;                       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InEnumAsByte;                         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_FrameDeltaTime_1;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_MountMesh;                      // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           K2Node_Event_Character_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_Event_Character;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUICharacter_ReturnValue;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_2;                             // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_TotalDuration;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InName_1;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName;                               // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_FrameDeltaTime;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController_1;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_CustomEvent_Character_1;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           K2Node_CustomEvent_Character;                      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* PlayerController, class AGBCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_2;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_3;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NewCount)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_4;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGBGameplayTagEventHandle              CallFunc_RegisterGameplayTagEvent_ReturnValue;     // 0x0188(0x0018)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_5;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUICharacter_ReturnValue_1;              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetPPMID_OutPPMID;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	class UCM_NVG_Master_C*                       CallFunc_AddNewItemCameraModifier_ReturnValue;     // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue_6;            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0234(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_NewCount;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master) == 0x000008, "Wrong alignment on BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master");
static_assert(sizeof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master) == 0x000258, "Wrong size on BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, EntryPoint) == 0x000000, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GetGBInstigator_ReturnValue) == 0x000018, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GetGBInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsLocallyViewed_ReturnValue) == 0x000020, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_InEnumAsByte_3) == 0x000021, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_InEnumAsByte_3' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_InName_3) == 0x000024, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_InName_3' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_InEnumAsByte_2) == 0x00002C, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_InEnumAsByte_2' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_TotalDuration_1) == 0x000030, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_TotalDuration_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_InEnumAsByte_1) == 0x000034, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_InEnumAsByte_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_InEnumAsByte) == 0x000035, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_FrameDeltaTime_1) == 0x000038, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_FrameDeltaTime_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CustomEvent_MountMesh) == 0x000040, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CustomEvent_MountMesh' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsDedicatedServer_ReturnValue) == 0x000068, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_Character_1) == 0x000070, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_Character_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_Character) == 0x000078, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GetGBInstigator_ReturnValue_1) == 0x000080, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GetGBInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsUICharacter_ReturnValue) == 0x000088, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsUICharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_InName_2) == 0x000094, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_InName_2' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_TotalDuration) == 0x00009C, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_TotalDuration' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_MakeRotator_ReturnValue) == 0x0000A0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000AC, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_InName_1) == 0x0000B0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_InName_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0000B8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000BC, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x0000C0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_InName) == 0x0000C4, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_Event_FrameDeltaTime) == 0x0000CC, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_Event_FrameDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_SwitchName_CmpSuccess) == 0x0000D0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000D4, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000DC, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_FClamp_ReturnValue) == 0x0000E4, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_FClamp_ReturnValue_1) == 0x0000E8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CustomEvent_PlayerController_1) == 0x0000F0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CustomEvent_Character_1) == 0x0000F8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CustomEvent_PlayerController) == 0x000100, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CustomEvent_Character) == 0x000108, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CreateDelegate_OutputDelegate_1) == 0x000110, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000120, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsValid_ReturnValue_1) == 0x000121, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsValid_ReturnValue_2) == 0x000122, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000123, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GetGBInstigator_ReturnValue_2) == 0x000128, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GetGBInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GetGBInstigator_ReturnValue_3) == 0x000130, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GetGBInstigator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000138, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000148, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00014C, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CreateDelegate_OutputDelegate_2) == 0x000150, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, Temp_object_Variable) == 0x000160, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CustomEvent_Loaded_1) == 0x000168, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000170, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GetGBInstigator_ReturnValue_4) == 0x000180, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GetGBInstigator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_RegisterGameplayTagEvent_ReturnValue) == 0x000188, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_RegisterGameplayTagEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsValid_ReturnValue_3) == 0x0001A0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GetGBInstigator_ReturnValue_5) == 0x0001A8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GetGBInstigator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, Temp_object_Variable_1) == 0x0001B0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsUICharacter_ReturnValue_1) == 0x0001B8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsUICharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_DynamicCast_AsMaterial_Interface) == 0x0001C0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001C9, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001D0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsValid_ReturnValue_4) == 0x0001D8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GetPPMID_OutPPMID) == 0x0001E0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GetPPMID_OutPPMID' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CustomEvent_Loaded) == 0x0001E8, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001F0, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_AddNewItemCameraModifier_ReturnValue) == 0x000200, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_AddNewItemCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsValid_ReturnValue_5) == 0x000208, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Not_PreBool_ReturnValue_2) == 0x000209, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GetGBInstigator_ReturnValue_6) == 0x000210, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GetGBInstigator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsValid_ReturnValue_6) == 0x000218, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000220, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000230, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CreateDelegate_OutputDelegate_4) == 0x000234, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_IsValid_ReturnValue_7) == 0x000244, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, K2Node_CustomEvent_NewCount) == 0x000248, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::K2Node_CustomEvent_NewCount' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Clamp_ReturnValue) == 0x00024C, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000250, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000254, "Member 'BP_NVG_Master_C_ExecuteUbergraph_BP_NVG_Master::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.OnNVGFlippedDownTagChanged_Event
// 0x0004 (0x0004 - 0x0000)
struct BP_NVG_Master_C_OnNVGFlippedDownTagChanged_Event final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_OnNVGFlippedDownTagChanged_Event) == 0x000004, "Wrong alignment on BP_NVG_Master_C_OnNVGFlippedDownTagChanged_Event");
static_assert(sizeof(BP_NVG_Master_C_OnNVGFlippedDownTagChanged_Event) == 0x000004, "Wrong size on BP_NVG_Master_C_OnNVGFlippedDownTagChanged_Event");
static_assert(offsetof(BP_NVG_Master_C_OnNVGFlippedDownTagChanged_Event, NewCount) == 0x000000, "Member 'BP_NVG_Master_C_OnNVGFlippedDownTagChanged_Event::NewCount' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.OnEndViewTarget_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_NVG_Master_C_OnEndViewTarget_Event final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_OnEndViewTarget_Event) == 0x000008, "Wrong alignment on BP_NVG_Master_C_OnEndViewTarget_Event");
static_assert(sizeof(BP_NVG_Master_C_OnEndViewTarget_Event) == 0x000010, "Wrong size on BP_NVG_Master_C_OnEndViewTarget_Event");
static_assert(offsetof(BP_NVG_Master_C_OnEndViewTarget_Event, PlayerController) == 0x000000, "Member 'BP_NVG_Master_C_OnEndViewTarget_Event::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_OnEndViewTarget_Event, Character) == 0x000008, "Member 'BP_NVG_Master_C_OnEndViewTarget_Event::Character' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.OnBecomeViewTarget_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_NVG_Master_C_OnBecomeViewTarget_Event final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBCharacter*                           Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_OnBecomeViewTarget_Event) == 0x000008, "Wrong alignment on BP_NVG_Master_C_OnBecomeViewTarget_Event");
static_assert(sizeof(BP_NVG_Master_C_OnBecomeViewTarget_Event) == 0x000010, "Wrong size on BP_NVG_Master_C_OnBecomeViewTarget_Event");
static_assert(offsetof(BP_NVG_Master_C_OnBecomeViewTarget_Event, PlayerController) == 0x000000, "Member 'BP_NVG_Master_C_OnBecomeViewTarget_Event::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_OnBecomeViewTarget_Event, Character) == 0x000008, "Member 'BP_NVG_Master_C_OnBecomeViewTarget_Event::Character' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.NotifyStateTickName
// 0x000C (0x000C - 0x0000)
struct BP_NVG_Master_C_NotifyStateTickName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDeltaTime;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_NotifyStateTickName) == 0x000004, "Wrong alignment on BP_NVG_Master_C_NotifyStateTickName");
static_assert(sizeof(BP_NVG_Master_C_NotifyStateTickName) == 0x00000C, "Wrong size on BP_NVG_Master_C_NotifyStateTickName");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateTickName, InName) == 0x000000, "Member 'BP_NVG_Master_C_NotifyStateTickName::InName' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateTickName, FrameDeltaTime) == 0x000008, "Member 'BP_NVG_Master_C_NotifyStateTickName::FrameDeltaTime' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.NotifyStateEndName
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_NotifyStateEndName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_NotifyStateEndName) == 0x000004, "Wrong alignment on BP_NVG_Master_C_NotifyStateEndName");
static_assert(sizeof(BP_NVG_Master_C_NotifyStateEndName) == 0x000008, "Wrong size on BP_NVG_Master_C_NotifyStateEndName");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateEndName, InName) == 0x000000, "Member 'BP_NVG_Master_C_NotifyStateEndName::InName' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.NotifyStateBeginName
// 0x000C (0x000C - 0x0000)
struct BP_NVG_Master_C_NotifyStateBeginName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_NotifyStateBeginName) == 0x000004, "Wrong alignment on BP_NVG_Master_C_NotifyStateBeginName");
static_assert(sizeof(BP_NVG_Master_C_NotifyStateBeginName) == 0x00000C, "Wrong size on BP_NVG_Master_C_NotifyStateBeginName");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateBeginName, InName) == 0x000000, "Member 'BP_NVG_Master_C_NotifyStateBeginName::InName' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateBeginName, TotalDuration) == 0x000008, "Member 'BP_NVG_Master_C_NotifyStateBeginName::TotalDuration' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.OnRemovedFromInventoryEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_OnRemovedFromInventoryEvent final
{
public:
	class AGBCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_OnRemovedFromInventoryEvent) == 0x000008, "Wrong alignment on BP_NVG_Master_C_OnRemovedFromInventoryEvent");
static_assert(sizeof(BP_NVG_Master_C_OnRemovedFromInventoryEvent) == 0x000008, "Wrong size on BP_NVG_Master_C_OnRemovedFromInventoryEvent");
static_assert(offsetof(BP_NVG_Master_C_OnRemovedFromInventoryEvent, Character) == 0x000000, "Member 'BP_NVG_Master_C_OnRemovedFromInventoryEvent::Character' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.OnAddedToInventoryEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_OnAddedToInventoryEvent final
{
public:
	class AGBCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_OnAddedToInventoryEvent) == 0x000008, "Wrong alignment on BP_NVG_Master_C_OnAddedToInventoryEvent");
static_assert(sizeof(BP_NVG_Master_C_OnAddedToInventoryEvent) == 0x000008, "Wrong size on BP_NVG_Master_C_OnAddedToInventoryEvent");
static_assert(offsetof(BP_NVG_Master_C_OnAddedToInventoryEvent, Character) == 0x000000, "Member 'BP_NVG_Master_C_OnAddedToInventoryEvent::Character' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.SetNVGMountMesh
// 0x0028 (0x0028 - 0x0000)
struct BP_NVG_Master_C_SetNVGMountMesh final
{
public:
	TSoftObjectPtr<class UObject>                 MountMesh;                                         // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_SetNVGMountMesh) == 0x000008, "Wrong alignment on BP_NVG_Master_C_SetNVGMountMesh");
static_assert(sizeof(BP_NVG_Master_C_SetNVGMountMesh) == 0x000028, "Wrong size on BP_NVG_Master_C_SetNVGMountMesh");
static_assert(offsetof(BP_NVG_Master_C_SetNVGMountMesh, MountMesh) == 0x000000, "Member 'BP_NVG_Master_C_SetNVGMountMesh::MountMesh' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.NotifyStateTickEnum
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_NotifyStateTickEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FrameDeltaTime;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_NotifyStateTickEnum) == 0x000004, "Wrong alignment on BP_NVG_Master_C_NotifyStateTickEnum");
static_assert(sizeof(BP_NVG_Master_C_NotifyStateTickEnum) == 0x000008, "Wrong size on BP_NVG_Master_C_NotifyStateTickEnum");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateTickEnum, InEnumAsByte) == 0x000000, "Member 'BP_NVG_Master_C_NotifyStateTickEnum::InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateTickEnum, FrameDeltaTime) == 0x000004, "Member 'BP_NVG_Master_C_NotifyStateTickEnum::FrameDeltaTime' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.NotifyStateEndEnum
// 0x0001 (0x0001 - 0x0000)
struct BP_NVG_Master_C_NotifyStateEndEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_NotifyStateEndEnum) == 0x000001, "Wrong alignment on BP_NVG_Master_C_NotifyStateEndEnum");
static_assert(sizeof(BP_NVG_Master_C_NotifyStateEndEnum) == 0x000001, "Wrong size on BP_NVG_Master_C_NotifyStateEndEnum");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateEndEnum, InEnumAsByte) == 0x000000, "Member 'BP_NVG_Master_C_NotifyStateEndEnum::InEnumAsByte' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.NotifyStateBeginEnum
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_NotifyStateBeginEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalDuration;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_NotifyStateBeginEnum) == 0x000004, "Wrong alignment on BP_NVG_Master_C_NotifyStateBeginEnum");
static_assert(sizeof(BP_NVG_Master_C_NotifyStateBeginEnum) == 0x000008, "Wrong size on BP_NVG_Master_C_NotifyStateBeginEnum");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateBeginEnum, InEnumAsByte) == 0x000000, "Member 'BP_NVG_Master_C_NotifyStateBeginEnum::InEnumAsByte' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_NotifyStateBeginEnum, TotalDuration) == 0x000004, "Member 'BP_NVG_Master_C_NotifyStateBeginEnum::TotalDuration' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.NotifyName
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_NotifyName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_NotifyName) == 0x000004, "Wrong alignment on BP_NVG_Master_C_NotifyName");
static_assert(sizeof(BP_NVG_Master_C_NotifyName) == 0x000008, "Wrong size on BP_NVG_Master_C_NotifyName");
static_assert(offsetof(BP_NVG_Master_C_NotifyName, InName) == 0x000000, "Member 'BP_NVG_Master_C_NotifyName::InName' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.NotifyEnum
// 0x0001 (0x0001 - 0x0000)
struct BP_NVG_Master_C_NotifyEnum final
{
public:
	uint8                                         InEnumAsByte;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_NotifyEnum) == 0x000001, "Wrong alignment on BP_NVG_Master_C_NotifyEnum");
static_assert(sizeof(BP_NVG_Master_C_NotifyEnum) == 0x000001, "Wrong size on BP_NVG_Master_C_NotifyEnum");
static_assert(offsetof(BP_NVG_Master_C_NotifyEnum, InEnumAsByte) == 0x000000, "Member 'BP_NVG_Master_C_NotifyEnum::InEnumAsByte' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.OnLoaded_706554FACD9C47C081908ABBCD795869
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_OnLoaded_706554FACD9C47C081908ABBCD795869 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_OnLoaded_706554FACD9C47C081908ABBCD795869) == 0x000008, "Wrong alignment on BP_NVG_Master_C_OnLoaded_706554FACD9C47C081908ABBCD795869");
static_assert(sizeof(BP_NVG_Master_C_OnLoaded_706554FACD9C47C081908ABBCD795869) == 0x000008, "Wrong size on BP_NVG_Master_C_OnLoaded_706554FACD9C47C081908ABBCD795869");
static_assert(offsetof(BP_NVG_Master_C_OnLoaded_706554FACD9C47C081908ABBCD795869, Loaded) == 0x000000, "Member 'BP_NVG_Master_C_OnLoaded_706554FACD9C47C081908ABBCD795869::Loaded' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.OnLoaded_000A6EC458D442F7BD1E3720E3CEA6D6
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_OnLoaded_000A6EC458D442F7BD1E3720E3CEA6D6 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_OnLoaded_000A6EC458D442F7BD1E3720E3CEA6D6) == 0x000008, "Wrong alignment on BP_NVG_Master_C_OnLoaded_000A6EC458D442F7BD1E3720E3CEA6D6");
static_assert(sizeof(BP_NVG_Master_C_OnLoaded_000A6EC458D442F7BD1E3720E3CEA6D6) == 0x000008, "Wrong size on BP_NVG_Master_C_OnLoaded_000A6EC458D442F7BD1E3720E3CEA6D6");
static_assert(offsetof(BP_NVG_Master_C_OnLoaded_000A6EC458D442F7BD1E3720E3CEA6D6, Loaded) == 0x000000, "Member 'BP_NVG_Master_C_OnLoaded_000A6EC458D442F7BD1E3720E3CEA6D6::Loaded' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.AllowUsageWhileAttached
// 0x0001 (0x0001 - 0x0000)
struct BP_NVG_Master_C_AllowUsageWhileAttached final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVG_Master_C_AllowUsageWhileAttached) == 0x000001, "Wrong alignment on BP_NVG_Master_C_AllowUsageWhileAttached");
static_assert(sizeof(BP_NVG_Master_C_AllowUsageWhileAttached) == 0x000001, "Wrong size on BP_NVG_Master_C_AllowUsageWhileAttached");
static_assert(offsetof(BP_NVG_Master_C_AllowUsageWhileAttached, ReturnValue) == 0x000000, "Member 'BP_NVG_Master_C_AllowUsageWhileAttached::ReturnValue' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.GetHiddenComponents
// 0x0048 (0x0048 - 0x0000)
struct BP_NVG_Master_C_GetHiddenComponents final
{
public:
	TArray<class UPrimitiveComponent*>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AGBCharacter*                           CallFunc_GetGBInstigator_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVG_Master_C_GetHiddenComponents) == 0x000008, "Wrong alignment on BP_NVG_Master_C_GetHiddenComponents");
static_assert(sizeof(BP_NVG_Master_C_GetHiddenComponents) == 0x000048, "Wrong size on BP_NVG_Master_C_GetHiddenComponents");
static_assert(offsetof(BP_NVG_Master_C_GetHiddenComponents, ReturnValue) == 0x000000, "Member 'BP_NVG_Master_C_GetHiddenComponents::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_GetHiddenComponents, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_NVG_Master_C_GetHiddenComponents::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_GetHiddenComponents, CallFunc_GetGBInstigator_ReturnValue) == 0x000020, "Member 'BP_NVG_Master_C_GetHiddenComponents::CallFunc_GetGBInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_GetHiddenComponents, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_NVG_Master_C_GetHiddenComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_GetHiddenComponents, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000030, "Member 'BP_NVG_Master_C_GetHiddenComponents::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_NVG_Master_C_GetHiddenComponents, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'BP_NVG_Master_C_GetHiddenComponents::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.GetBracketAlpha
// 0x0004 (0x0004 - 0x0000)
struct BP_NVG_Master_C_GetBracketAlpha final
{
public:
	float                                         OutBracketAlpha;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_GetBracketAlpha) == 0x000004, "Wrong alignment on BP_NVG_Master_C_GetBracketAlpha");
static_assert(sizeof(BP_NVG_Master_C_GetBracketAlpha) == 0x000004, "Wrong size on BP_NVG_Master_C_GetBracketAlpha");
static_assert(offsetof(BP_NVG_Master_C_GetBracketAlpha, OutBracketAlpha) == 0x000000, "Member 'BP_NVG_Master_C_GetBracketAlpha::OutBracketAlpha' has a wrong offset!");

// Function BP_NVG_Master.BP_NVG_Master_C.GetPPMID
// 0x0008 (0x0008 - 0x0000)
struct BP_NVG_Master_C_GetPPMID final
{
public:
	class UMaterialInstanceDynamic*               OutPPMID;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVG_Master_C_GetPPMID) == 0x000008, "Wrong alignment on BP_NVG_Master_C_GetPPMID");
static_assert(sizeof(BP_NVG_Master_C_GetPPMID) == 0x000008, "Wrong size on BP_NVG_Master_C_GetPPMID");
static_assert(offsetof(BP_NVG_Master_C_GetPPMID, OutPPMID) == 0x000000, "Member 'BP_NVG_Master_C_GetPPMID::OutPPMID' has a wrong offset!");

}

