#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheCurviestCurve

#include "Basic.hpp"

#include "TheCurviestCurve_classes.hpp"
#include "TheCurviestCurve_parameters.hpp"


namespace SDK
{

// Function TheCurviestCurve.CurveCurviestBlueprintUtils.GetValueFromCurve
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UCurveBase*                       Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCurveCurviestBlueprintUtils::GetValueFromCurve(class UCurveBase* Curve, class FName Name_0, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CurveCurviestBlueprintUtils", "GetValueFromCurve");

	Params::CurveCurviestBlueprintUtils_GetValueFromCurve Parms{};

	Parms.Curve = Curve;
	Parms.Name_0 = Name_0;
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheCurviestCurve.CurveCurviestBlueprintUtils.GetValueFromTaggedCurve
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UCurveCurviest*                   Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowParamLookup                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCurveCurviestBlueprintUtils::GetValueFromTaggedCurve(class UCurveCurviest* Curve, const struct FGameplayTag& Tag, float InTime, bool bAllowParamLookup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CurveCurviestBlueprintUtils", "GetValueFromTaggedCurve");

	Params::CurveCurviestBlueprintUtils_GetValueFromTaggedCurve Parms{};

	Parms.Curve = Curve;
	Parms.Tag = std::move(Tag);
	Parms.InTime = InTime;
	Parms.bAllowParamLookup = bAllowParamLookup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheCurviestCurve.CurveCurviest.GetFloatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCurveCurviest::GetFloatValue(class FName Name_0, float InTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CurveCurviest", "GetFloatValue");

	Params::CurveCurviest_GetFloatValue Parms{};

	Parms.Name_0 = Name_0;
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheCurviestCurve.CurveCurviest.GetFloatValueFromNamedCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  ValueOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCurveCurviest::GetFloatValueFromNamedCurve(class FName Name_0, float InTime, float* ValueOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CurveCurviest", "GetFloatValueFromNamedCurve");

	Params::CurveCurviest_GetFloatValueFromNamedCurve Parms{};

	Parms.Name_0 = Name_0;
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ValueOut != nullptr)
		*ValueOut = Parms.ValueOut;

	return Parms.ReturnValue;
}


// Function TheCurviestCurve.CurveCurviest.GetFloatValueFromTaggedCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              IdentifierTag                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  ValueOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowParamLookup                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCurveCurviest::GetFloatValueFromTaggedCurve(const struct FGameplayTag& IdentifierTag, float InTime, float* ValueOut, bool bAllowParamLookup) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CurveCurviest", "GetFloatValueFromTaggedCurve");

	Params::CurveCurviest_GetFloatValueFromTaggedCurve Parms{};

	Parms.IdentifierTag = std::move(IdentifierTag);
	Parms.InTime = InTime;
	Parms.bAllowParamLookup = bAllowParamLookup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ValueOut != nullptr)
		*ValueOut = Parms.ValueOut;

	return Parms.ReturnValue;
}


// Function TheCurviestCurve.CurveCurviest.GetFloatValueFromTaggedParam
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              IdentifierTag                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  ValueOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCurveCurviest::GetFloatValueFromTaggedParam(const struct FGameplayTag& IdentifierTag, float* ValueOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CurveCurviest", "GetFloatValueFromTaggedParam");

	Params::CurveCurviest_GetFloatValueFromTaggedParam Parms{};

	Parms.IdentifierTag = std::move(IdentifierTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ValueOut != nullptr)
		*ValueOut = Parms.ValueOut;

	return Parms.ReturnValue;
}

}

