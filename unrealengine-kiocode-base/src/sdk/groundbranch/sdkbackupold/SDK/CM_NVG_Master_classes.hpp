#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_NVG_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CM_NVG_Master.CM_NVG_Master_C
// 0x0B18 (0x0B70 - 0x0058)
class UCM_NVG_Master_C : public UGBItemCameraModifier
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0058(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   NightVisionEnabledTag;                             // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NightVisionVerticalFOV;                            // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NightVisionPPMID;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedNightVisionHorizontalFOV;                    // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostProcessBlendWeight;                            // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BracketAlpha;                                      // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinFadeToBlackAlpha;                               // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFadeToBlackAlpha;                               // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlackAlphaParameterName;                           // 0x008C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SceneAlphaParameterName;                           // 0x0094(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   NightVisionPostProcessSettings;                    // 0x00A0(0x0560)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPostProcessSettings                   FadeInPostProcessSettings;                         // 0x0600(0x0560)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bValidCharacterForHint;                            // 0x0B60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAlreadyCalledShowHintMaybe;                       // 0x0B61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B62[0x2];                                      // 0x0B62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FullSizeMaskScreenScale;                           // 0x0B64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CM_NVG_Master(int32 EntryPoint);
	void ShowHintMaybe();
	void OnPositionAlphaMet_Event_0(class AGBCharacter* Character);
	void BlueprintAddedToCamera(class AGBPlayerCameraManager* GBPlayerCameraManager);
	void BlueprintRemovedFromCamera(class AGBPlayerCameraManager* GBPlayerCameraManager);
	void SetPostProcessMID(class UMaterialInstanceDynamic* InPPMID);
	void SetPostProcessMIDParameters(float BlackAlpha, float SceneAlpha);
	void BlueprintPreApplyCameraModifier(class AGBPlayerCameraManager* GBPlayerCameraManager, float DeltaTime);
	void AddNightVisionEnabledTag();
	void RemoveNightVisionEnabledTag();
	void OnModifierDisabledEvent();
	void BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight_0, struct FPostProcessSettings* PostProcessSettings);
	void BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_NVG_Master_C">();
	}
	static class UCM_NVG_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_NVG_Master_C>();
	}
};
static_assert(alignof(UCM_NVG_Master_C) == 0x000010, "Wrong alignment on UCM_NVG_Master_C");
static_assert(sizeof(UCM_NVG_Master_C) == 0x000B70, "Wrong size on UCM_NVG_Master_C");
static_assert(offsetof(UCM_NVG_Master_C, UberGraphFrame) == 0x000058, "Member 'UCM_NVG_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, NightVisionEnabledTag) == 0x000060, "Member 'UCM_NVG_Master_C::NightVisionEnabledTag' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, NightVisionVerticalFOV) == 0x000068, "Member 'UCM_NVG_Master_C::NightVisionVerticalFOV' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, NightVisionPPMID) == 0x000070, "Member 'UCM_NVG_Master_C::NightVisionPPMID' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, CachedNightVisionHorizontalFOV) == 0x000078, "Member 'UCM_NVG_Master_C::CachedNightVisionHorizontalFOV' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, PostProcessBlendWeight) == 0x00007C, "Member 'UCM_NVG_Master_C::PostProcessBlendWeight' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, BracketAlpha) == 0x000080, "Member 'UCM_NVG_Master_C::BracketAlpha' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, MinFadeToBlackAlpha) == 0x000084, "Member 'UCM_NVG_Master_C::MinFadeToBlackAlpha' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, MaxFadeToBlackAlpha) == 0x000088, "Member 'UCM_NVG_Master_C::MaxFadeToBlackAlpha' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, BlackAlphaParameterName) == 0x00008C, "Member 'UCM_NVG_Master_C::BlackAlphaParameterName' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, SceneAlphaParameterName) == 0x000094, "Member 'UCM_NVG_Master_C::SceneAlphaParameterName' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, NightVisionPostProcessSettings) == 0x0000A0, "Member 'UCM_NVG_Master_C::NightVisionPostProcessSettings' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, FadeInPostProcessSettings) == 0x000600, "Member 'UCM_NVG_Master_C::FadeInPostProcessSettings' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, bValidCharacterForHint) == 0x000B60, "Member 'UCM_NVG_Master_C::bValidCharacterForHint' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, bAlreadyCalledShowHintMaybe) == 0x000B61, "Member 'UCM_NVG_Master_C::bAlreadyCalledShowHintMaybe' has a wrong offset!");
static_assert(offsetof(UCM_NVG_Master_C, FullSizeMaskScreenScale) == 0x000B64, "Member 'UCM_NVG_Master_C::FullSizeMaskScreenScale' has a wrong offset!");

}

