#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Handgun_AnimLayerBase

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "GroundBranch_classes.hpp"
#include "DistanceMatching_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Handgun_AnimLayerBase.ABP_Handgun_AnimLayerBase_C
// 0x7260 (0x7D20 - 0x0AC0)
class UABP_Handgun_AnimLayerBase_C final : public UGBCharAnimInstanceLayer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_50;                   // 0x0AC8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_49;                   // 0x0B48(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x0BC8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_48;                   // 0x0BF8(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x0C78(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0CA8(0x0118)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_7;                 // 0x0DC0(0x0050)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_3;            // 0x0E10(0x00D0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x0EE0(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0F10(0x0118)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_2;                        // 0x1028(0x0368)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x1390(0x0158)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_2;            // 0x14E8(0x00D0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x15B8(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x16C0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x16E0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1700(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x1808(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x1828(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x1848(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x1870(0x00C0)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x1930(0x0018)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_10;                      // 0x1948(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x1A10(0x0028)()
	struct FAnimNode_DistanceMatching             AnimGraphNode_DistanceMatching_1;                  // 0x1A38(0x0088)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_9;                       // 0x1AC0(0x00C8)()
	struct FAnimNode_DistanceMatching             AnimGraphNode_DistanceMatching;                    // 0x1B88(0x0088)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x1C10(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x1D68(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_1;                        // 0x1D90(0x0368)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x20F8(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x2198(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x21C0(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x2260(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x2288(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x23E0(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x2408(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x2438(0x0018)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x2450(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x2480(0x0118)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x2598(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x26F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x2718(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x2740(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x27E0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x2938(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x2960(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x2A00(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_47;                   // 0x2A28(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x2AA8(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x2B48(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x2B70(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_46;                   // 0x2B98(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_8;                       // 0x2C18(0x00C8)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_4;          // 0x2CE0(0x0190)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x2E70(0x0190)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x3000(0x0190)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45;                   // 0x3190(0x0080)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_10;                         // 0x3210(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x3300(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x3320(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_9;                          // 0x3340(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_8;                          // 0x3430(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_7;                          // 0x3520(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_6;                          // 0x3610(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44;                   // 0x3700(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_43;                   // 0x3780(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_42;                   // 0x3800(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x3880(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_5;                          // 0x38A0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_4;                          // 0x3990(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0x3A80(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x3B70(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x3B90(0x00F0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x3C80(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x3D40(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x3D68(0x0190)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x3EF8(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x3F20(0x0190)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_7;                       // 0x40B0(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x4178(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x41A8(0x0118)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x42C0(0x0058)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x4318(0x00D0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_6;                       // 0x43E8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x44B0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x4608(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x4630(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x46D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x46F8(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_6;                   // 0x4720(0x00B0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x47D0(0x00C0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_6;                 // 0x4890(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x48E0(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x4930(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x4980(0x0050)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x49D0(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x4A98(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x4B60(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x4BE0(0x00A0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x4C80(0x0030)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x4CB0(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x4D80(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x4E00(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x4EA0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x4EC8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x5020(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x5048(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x50C8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x5148(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x51C8(0x00C0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x5288(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x52A8(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x5398(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x5488(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x54A8(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x5548(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x55E8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x5610(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x5690(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x5710(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x5738(0x00C0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x57F8(0x0050)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x5848(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x58C8(0x00C8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_5;                   // 0x5990(0x00B0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x5A40(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x5AF0(0x0030)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x5B20(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x5BE8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x5CA8(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x5CD0(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x5D20(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x5D70(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x5E10(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x5E38(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x5EF8(0x0028)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x5F20(0x0368)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x6288(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x62B8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x6338(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x63B8(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x6480(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x64B0(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x6550(0x00A0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x65F0(0x00B0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x66A0(0x00B0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x6750(0x00B0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x6800(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x68B0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x6978(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x69F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x6A78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x6AF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x6B78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x6BF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x6C78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x6CF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x6D78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x6DF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x6E78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x6EF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x6F78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x6FF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x7078(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x70F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x7178(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x71F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x7278(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x72F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x7378(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x73F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x7478(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x74F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x7578(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x75F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x7678(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x76F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x7778(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x77F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x7878(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x78F8(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x7978(0x0030)()
	bool                                          __CustomProperty_bClampCamera_6018282796084D48B919BF8079349557; // 0x79A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A9[0x3];                                     // 0x79A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_CameraOffset_6018282796084D48B919BF8079349557; // 0x79AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_MovementSwayRunYaw_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_MovementSwayRunPitch_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_MovementSwayWalkYaw_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_MovementSwayWalkPitch_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_RotationalInertiaOffset_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               __CustomProperty_CombinedRecoilSwayOffset_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_bRunning_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_bApplyMovementSway_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E2[0x2];                                     // 0x79E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         __CustomProperty_EngagedAlpha_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_CollisionTraceEndOffset_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_AnimRotOffset_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x79F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               __CustomProperty_SightLineRelativeRotation_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x7A00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_SightLineRelativeLocation_7A0248A3D84A4D1B88FBD4381E9ECC33; // 0x7A0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bClampCamera_AE75A5D8E927487FBA107DCE36D147AC; // 0x7A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A19[0x3];                                     // 0x7A19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_CameraOffset_AE75A5D8E927487FBA107DCE36D147AC; // 0x7A1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bClampCamera_2549F4404A414977B03975D4ADB77F66; // 0x7A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A29[0x3];                                     // 0x7A29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_CameraOffset_2549F4404A414977B03975D4ADB77F66; // 0x7A2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Idle_Prone;                                        // 0x7A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Idle_Crouch;                                       // 0x7A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Idle_Stand;                                        // 0x7A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_Base_C*                            BaseABPRef;                                        // 0x7A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StrideWarpingCycleAlpha;                           // 0x7A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OrientationAngle;                                  // 0x7A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocomotionAngleDeltaThreshold;                     // 0x7A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightLineRelativeLocation;                         // 0x7A64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SightLineRelativeRotation;                         // 0x7A70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                EyeRightOffset;                                    // 0x7A7C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EyeLeftOffset;                                     // 0x7A88(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AnimRotOffset;                                     // 0x7A94(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                CollisionTraceEndOffset;                           // 0x7AA0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AAC[0x4];                                     // 0x7AAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpaceBase*                        AimOffsetProne_Compressed;                         // 0x7AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpaceBase*                        AimOffsetProne_Engaged;                            // 0x7AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpaceBase*                        AimOffsetCrouch;                                   // 0x7AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpaceBase*                        AimOffsetStand;                                    // 0x7AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CantedAlpha;                                       // 0x7AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ControlRigAnimRotOffset;                           // 0x7AD4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LeftHandOverrideRelativeOffset;                    // 0x7AE0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirectionBlendTime;                                // 0x7AEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGBAnimDirectionSequences              Sprint_Crouch;                                     // 0x7AF0(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGBAnimDirectionSequences              Sprint_Stand;                                      // 0x7B30(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGBAnimDirectionSequences              Walk_Prone;                                        // 0x7B70(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UAnimSequence*                          Run_Prone;                                         // 0x7BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGBAnimDirectionSequences              Run_Crouch;                                        // 0x7BB8(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGBAnimDirectionSequences              Run_Stand;                                         // 0x7BF8(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGBAnimDirectionSequences              Walk_Crouch;                                       // 0x7C38(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGBAnimDirectionSequences              Walk_Stand;                                        // 0x7C78(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UAimOffsetBlendSpace*                   StandLeanPoses;                                    // 0x7CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   CrouchLeanPoses;                                   // 0x7CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ProneToStand;                                      // 0x7CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ProneToCrouch;                                     // 0x7CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StandToProne;                                      // 0x7CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CrouchToProne;                                     // 0x7CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           SprintToProne;                                     // 0x7CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ProneTurnRIght;                                    // 0x7CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ProneTurnLeft;                                     // 0x7CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          TriggerFingerAdditive;                             // 0x7D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           NVGFlipDownMontage;                                // 0x7D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           NVGFlipUpMontage;                                  // 0x7D10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_Handgun_AnimLayerBase(int32 EntryPoint);
	void AnimNotify_LeftFootDown();
	void AnimNotify_RightFootDown();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void UpdateCycleAnim(float DeltaTime);
	void UpdateOrientationWarping(float DeltaTime);
	void UpdateFirearmData(float DeltaTime);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void FullBody_CycleState(struct FPoseLink* FullBody_CycleState_0);
	void FullBody_IdleState(struct FPoseLink* FullBody_IdleState_0);
	void HandPose_OverrideState(const struct FPoseLink& InLocomotion, struct FPoseLink* HandPose_OverrideState_0);
	void FullBody_Aiming(const struct FPoseLink& InUpperbodyLowerbodySplit, struct FPoseLink* FullBody_Aiming_0);
	void FullBody_Additives(struct FPoseLink* FullBody_Additives_0);
	void FullBody_SkeletalControls(const struct FPoseLink& InNearFinal, struct FPoseLink* FullBody_SkeletalControls_0);
	void FullBody_PreAim(const struct FPoseLink& InPreAim, struct FPoseLink* FullBody_PreAim_0);
	void FullBody_ProneIdleState(struct FPoseLink* FullBody_ProneIdleState_0);
	void FullBody_ProneCycleState(struct FPoseLink* FullBody_ProneCycleState_0);
	void FullBody_SprintCycleState(struct FPoseLink* FullBody_SprintCycleState_0);

	class UAnimMontage* GetMontageFromLinkedLayer(class FName MontageName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Handgun_AnimLayerBase_C">();
	}
	static class UABP_Handgun_AnimLayerBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Handgun_AnimLayerBase_C>();
	}
};
static_assert(alignof(UABP_Handgun_AnimLayerBase_C) == 0x000010, "Wrong alignment on UABP_Handgun_AnimLayerBase_C");
static_assert(sizeof(UABP_Handgun_AnimLayerBase_C) == 0x007D20, "Wrong size on UABP_Handgun_AnimLayerBase_C");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, UberGraphFrame) == 0x000AC0, "Member 'UABP_Handgun_AnimLayerBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_50) == 0x000AC8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_50' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_49) == 0x000B48, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_49' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_10) == 0x000BC8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_48) == 0x000BF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_48' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_9) == 0x000C78, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LinkedInputPose_3) == 0x000CA8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequenceEvaluator_7) == 0x000DC0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequenceEvaluator_7' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ApplyMeshSpaceAdditive_3) == 0x000E10, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ApplyMeshSpaceAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_8) == 0x000EE0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LinkedInputPose_2) == 0x000F10, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ControlRig_2) == 0x001028, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ControlRig_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SaveCachedPose_6) == 0x001390, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ApplyMeshSpaceAdditive_2) == 0x0014E8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ApplyMeshSpaceAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ModifyBone_1) == 0x0015B8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LocalToComponentSpace_4) == 0x0016C0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x0016E0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ModifyBone) == 0x001700, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LocalToComponentSpace_3) == 0x001808, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x001828, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_23) == 0x001848, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LayeredBoneBlend_6) == 0x001870, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_IdentityPose_1) == 0x001930, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_10) == 0x001948, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_10' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_22) == 0x001A10, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_DistanceMatching_1) == 0x001A38, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_DistanceMatching_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_9) == 0x001AC0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_9' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_DistanceMatching) == 0x001B88, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_DistanceMatching' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SaveCachedPose_5) == 0x001C10, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_21) == 0x001D68, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ControlRig_1) == 0x001D90, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ControlRig_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_12) == 0x0020F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_20) == 0x002198, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_11) == 0x0021C0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_19) == 0x002260, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SaveCachedPose_4) == 0x002288, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_18) == 0x0023E0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_7) == 0x002408, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_IdentityPose) == 0x002438, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_6) == 0x002450, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LinkedInputPose_1) == 0x002480, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SaveCachedPose_3) == 0x002598, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_17) == 0x0026F0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_16) == 0x002718, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_10) == 0x002740, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SaveCachedPose_2) == 0x0027E0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_15) == 0x002938, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_9) == 0x002960, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_14) == 0x002A00, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_47) == 0x002A28, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_47' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_8) == 0x002AA8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_13) == 0x002B48, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_12) == 0x002B70, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_46) == 0x002B98, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_46' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_8) == 0x002C18, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_8' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_RotationOffsetBlendSpace_4) == 0x002CE0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_RotationOffsetBlendSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x002E70, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x003000, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_45) == 0x003190, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_45' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_10) == 0x003210, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LocalToComponentSpace_2) == 0x003300, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x003320, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_9) == 0x003340, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_8) == 0x003430, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_7) == 0x003520, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_6) == 0x003610, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_44) == 0x003700, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_44' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_43) == 0x003780, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_43' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_42) == 0x003800, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_42' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LocalToComponentSpace_1) == 0x003880, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_5) == 0x0038A0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_4) == 0x003990, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_3) == 0x003A80, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x003B70, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_2) == 0x003B90, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LayeredBoneBlend_5) == 0x003C80, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_11) == 0x003D40, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x003D68, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_10) == 0x003EF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x003F20, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_7) == 0x0040B0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_5) == 0x004178, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LinkedInputPose) == 0x0041A8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ModifyCurve) == 0x0042C0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x004318, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_6) == 0x0043E8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SaveCachedPose_1) == 0x0044B0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_9) == 0x004608, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_7) == 0x004630, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_8) == 0x0046D0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_7) == 0x0046F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByEnum_6) == 0x004720, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByEnum_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LayeredBoneBlend_4) == 0x0047D0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequenceEvaluator_6) == 0x004890, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequenceEvaluator_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequenceEvaluator_5) == 0x0048E0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequenceEvaluator_4) == 0x004930, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequenceEvaluator_3) == 0x004980, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_5) == 0x0049D0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_4) == 0x004A98, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_41) == 0x004B60, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_6) == 0x004BE0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_4) == 0x004C80, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x004CB0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_40) == 0x004D80, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_5) == 0x004E00, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_6) == 0x004EA0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SaveCachedPose) == 0x004EC8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_5) == 0x005020, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_39) == 0x005048, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_38) == 0x0050C8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_37) == 0x005148, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LayeredBoneBlend_3) == 0x0051C8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LocalToComponentSpace) == 0x005288, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone_1) == 0x0052A8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_CopyBone) == 0x005398, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ComponentToLocalSpace) == 0x005488, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_4) == 0x0054A8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_3) == 0x005548, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_4) == 0x0055E8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_36) == 0x005610, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_35) == 0x005690, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_3) == 0x005710, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LayeredBoneBlend_2) == 0x005738, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequenceEvaluator_2) == 0x0057F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_34) == 0x005848, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_3) == 0x0058C8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByEnum_5) == 0x005990, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByEnum_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByEnum_4) == 0x005A40, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_3) == 0x005AF0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_2) == 0x005B20, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LayeredBoneBlend_1) == 0x005BE8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_2) == 0x005CA8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequenceEvaluator_1) == 0x005CD0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequenceEvaluator) == 0x005D20, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_2) == 0x005D70, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose_1) == 0x005E10, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_LayeredBoneBlend) == 0x005E38, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_UseCachedPose) == 0x005EF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_ControlRig) == 0x005F20, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_2) == 0x006288, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_33) == 0x0062B8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_32) == 0x006338, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend_1) == 0x0063B8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root_1) == 0x006480, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool_1) == 0x0064B0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByBool) == 0x006550, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByEnum_3) == 0x0065F0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByEnum_2) == 0x0066A0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByEnum_1) == 0x006750, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_BlendListByEnum) == 0x006800, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_TwoWayBlend) == 0x0068B0, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_31) == 0x006978, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_30) == 0x0069F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_29) == 0x006A78, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_28) == 0x006AF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_27) == 0x006B78, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_26) == 0x006BF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_25) == 0x006C78, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_24) == 0x006CF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_23) == 0x006D78, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_22) == 0x006DF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_21) == 0x006E78, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_20) == 0x006EF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_19) == 0x006F78, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_18) == 0x006FF8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_17) == 0x007078, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_16) == 0x0070F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_15) == 0x007178, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_14) == 0x0071F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_13) == 0x007278, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_12) == 0x0072F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_11) == 0x007378, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_10) == 0x0073F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_9) == 0x007478, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_8) == 0x0074F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_7) == 0x007578, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_6) == 0x0075F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_5) == 0x007678, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_4) == 0x0076F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_3) == 0x007778, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_2) == 0x0077F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer_1) == 0x007878, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_SequencePlayer) == 0x0078F8, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimGraphNode_Root) == 0x007978, "Member 'UABP_Handgun_AnimLayerBase_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_bClampCamera_6018282796084D48B919BF8079349557) == 0x0079A8, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_bClampCamera_6018282796084D48B919BF8079349557' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_CameraOffset_6018282796084D48B919BF8079349557) == 0x0079AC, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_CameraOffset_6018282796084D48B919BF8079349557' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_MovementSwayRunYaw_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079B8, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_MovementSwayRunYaw_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_MovementSwayRunPitch_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079BC, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_MovementSwayRunPitch_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_MovementSwayWalkYaw_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079C0, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_MovementSwayWalkYaw_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_MovementSwayWalkPitch_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079C4, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_MovementSwayWalkPitch_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_RotationalInertiaOffset_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079C8, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_RotationalInertiaOffset_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_CombinedRecoilSwayOffset_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079D4, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_CombinedRecoilSwayOffset_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_bRunning_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079E0, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_bRunning_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_bApplyMovementSway_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079E1, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_bApplyMovementSway_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_EngagedAlpha_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079E4, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_EngagedAlpha_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_CollisionTraceEndOffset_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079E8, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_CollisionTraceEndOffset_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_AnimRotOffset_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x0079F4, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_AnimRotOffset_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_SightLineRelativeRotation_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x007A00, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_SightLineRelativeRotation_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_SightLineRelativeLocation_7A0248A3D84A4D1B88FBD4381E9ECC33) == 0x007A0C, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_SightLineRelativeLocation_7A0248A3D84A4D1B88FBD4381E9ECC33' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_bClampCamera_AE75A5D8E927487FBA107DCE36D147AC) == 0x007A18, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_bClampCamera_AE75A5D8E927487FBA107DCE36D147AC' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_CameraOffset_AE75A5D8E927487FBA107DCE36D147AC) == 0x007A1C, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_CameraOffset_AE75A5D8E927487FBA107DCE36D147AC' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_bClampCamera_2549F4404A414977B03975D4ADB77F66) == 0x007A28, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_bClampCamera_2549F4404A414977B03975D4ADB77F66' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, __CustomProperty_CameraOffset_2549F4404A414977B03975D4ADB77F66) == 0x007A2C, "Member 'UABP_Handgun_AnimLayerBase_C::__CustomProperty_CameraOffset_2549F4404A414977B03975D4ADB77F66' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Idle_Prone) == 0x007A38, "Member 'UABP_Handgun_AnimLayerBase_C::Idle_Prone' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Idle_Crouch) == 0x007A40, "Member 'UABP_Handgun_AnimLayerBase_C::Idle_Crouch' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Idle_Stand) == 0x007A48, "Member 'UABP_Handgun_AnimLayerBase_C::Idle_Stand' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, BaseABPRef) == 0x007A50, "Member 'UABP_Handgun_AnimLayerBase_C::BaseABPRef' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, StrideWarpingCycleAlpha) == 0x007A58, "Member 'UABP_Handgun_AnimLayerBase_C::StrideWarpingCycleAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, OrientationAngle) == 0x007A5C, "Member 'UABP_Handgun_AnimLayerBase_C::OrientationAngle' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, LocomotionAngleDeltaThreshold) == 0x007A60, "Member 'UABP_Handgun_AnimLayerBase_C::LocomotionAngleDeltaThreshold' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, SightLineRelativeLocation) == 0x007A64, "Member 'UABP_Handgun_AnimLayerBase_C::SightLineRelativeLocation' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, SightLineRelativeRotation) == 0x007A70, "Member 'UABP_Handgun_AnimLayerBase_C::SightLineRelativeRotation' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, EyeRightOffset) == 0x007A7C, "Member 'UABP_Handgun_AnimLayerBase_C::EyeRightOffset' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, EyeLeftOffset) == 0x007A88, "Member 'UABP_Handgun_AnimLayerBase_C::EyeLeftOffset' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AnimRotOffset) == 0x007A94, "Member 'UABP_Handgun_AnimLayerBase_C::AnimRotOffset' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, CollisionTraceEndOffset) == 0x007AA0, "Member 'UABP_Handgun_AnimLayerBase_C::CollisionTraceEndOffset' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AimOffsetProne_Compressed) == 0x007AB0, "Member 'UABP_Handgun_AnimLayerBase_C::AimOffsetProne_Compressed' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AimOffsetProne_Engaged) == 0x007AB8, "Member 'UABP_Handgun_AnimLayerBase_C::AimOffsetProne_Engaged' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AimOffsetCrouch) == 0x007AC0, "Member 'UABP_Handgun_AnimLayerBase_C::AimOffsetCrouch' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, AimOffsetStand) == 0x007AC8, "Member 'UABP_Handgun_AnimLayerBase_C::AimOffsetStand' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, CantedAlpha) == 0x007AD0, "Member 'UABP_Handgun_AnimLayerBase_C::CantedAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, ControlRigAnimRotOffset) == 0x007AD4, "Member 'UABP_Handgun_AnimLayerBase_C::ControlRigAnimRotOffset' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, LeftHandOverrideRelativeOffset) == 0x007AE0, "Member 'UABP_Handgun_AnimLayerBase_C::LeftHandOverrideRelativeOffset' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, DirectionBlendTime) == 0x007AEC, "Member 'UABP_Handgun_AnimLayerBase_C::DirectionBlendTime' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Sprint_Crouch) == 0x007AF0, "Member 'UABP_Handgun_AnimLayerBase_C::Sprint_Crouch' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Sprint_Stand) == 0x007B30, "Member 'UABP_Handgun_AnimLayerBase_C::Sprint_Stand' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Walk_Prone) == 0x007B70, "Member 'UABP_Handgun_AnimLayerBase_C::Walk_Prone' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Run_Prone) == 0x007BB0, "Member 'UABP_Handgun_AnimLayerBase_C::Run_Prone' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Run_Crouch) == 0x007BB8, "Member 'UABP_Handgun_AnimLayerBase_C::Run_Crouch' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Run_Stand) == 0x007BF8, "Member 'UABP_Handgun_AnimLayerBase_C::Run_Stand' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Walk_Crouch) == 0x007C38, "Member 'UABP_Handgun_AnimLayerBase_C::Walk_Crouch' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, Walk_Stand) == 0x007C78, "Member 'UABP_Handgun_AnimLayerBase_C::Walk_Stand' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, StandLeanPoses) == 0x007CB8, "Member 'UABP_Handgun_AnimLayerBase_C::StandLeanPoses' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, CrouchLeanPoses) == 0x007CC0, "Member 'UABP_Handgun_AnimLayerBase_C::CrouchLeanPoses' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, ProneToStand) == 0x007CC8, "Member 'UABP_Handgun_AnimLayerBase_C::ProneToStand' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, ProneToCrouch) == 0x007CD0, "Member 'UABP_Handgun_AnimLayerBase_C::ProneToCrouch' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, StandToProne) == 0x007CD8, "Member 'UABP_Handgun_AnimLayerBase_C::StandToProne' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, CrouchToProne) == 0x007CE0, "Member 'UABP_Handgun_AnimLayerBase_C::CrouchToProne' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, SprintToProne) == 0x007CE8, "Member 'UABP_Handgun_AnimLayerBase_C::SprintToProne' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, ProneTurnRIght) == 0x007CF0, "Member 'UABP_Handgun_AnimLayerBase_C::ProneTurnRIght' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, ProneTurnLeft) == 0x007CF8, "Member 'UABP_Handgun_AnimLayerBase_C::ProneTurnLeft' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, TriggerFingerAdditive) == 0x007D00, "Member 'UABP_Handgun_AnimLayerBase_C::TriggerFingerAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, NVGFlipDownMontage) == 0x007D08, "Member 'UABP_Handgun_AnimLayerBase_C::NVGFlipDownMontage' has a wrong offset!");
static_assert(offsetof(UABP_Handgun_AnimLayerBase_C, NVGFlipUpMontage) == 0x007D10, "Member 'UABP_Handgun_AnimLayerBase_C::NVGFlipUpMontage' has a wrong offset!");

}

