#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ME_MapSymbol

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"


namespace SDK::Params
{

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.ExecuteUbergraph_WBP_ME_MapSymbol
// 0x02B8 (0x02B8 - 0x0000)
struct WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGBMissionObjectiveStatus                     Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               K2Node_CustomEvent_ParentOverlay;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDragDropOperation*                     K2Node_CustomEvent_DragDropOp;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDragDropOperation*                     K2Node_CustomEvent_Operation;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ME_MapAnnotator_C*                 CallFunc_GetParentWidgetOfClass_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetPaintSpaceGeometry_ReturnValue;        // 0x0044(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0080(0x0070)(ConstParm)
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BreakGeometry_OutPosition;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BreakGeometry_OutAbsolutePosition;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BreakGeometry_OutSize;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGeometry_OutScale;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearlyZero2D_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State;                 // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsSelected;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGBGameState*                           K2Node_DynamicCast_AsGBGame_State_1;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_NewScale;                       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBCampaignMissionObjectiveInfo        CallFunc_GetCampaignMissionObjectiveInfoByRef_ReturnValue; // 0x01D8(0x0058)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGBCampaignMissionObjectiveInfo        CallFunc_GetCampaignMissionObjectiveInfoByRef_ReturnValue_1; // 0x0238(0x0058)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0294(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UDragDropOperation* Operation)> K2Node_CreateDelegate_OutputDelegate_2;     // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol");
static_assert(sizeof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol) == 0x0002B8, "Wrong size on WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, EntryPoint) == 0x000000, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, Temp_byte_Variable) == 0x000004, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_CustomEvent_ParentOverlay) == 0x000010, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_CustomEvent_ParentOverlay' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000018, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_CustomEvent_DragDropOp) == 0x000020, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_CustomEvent_DragDropOp' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_CustomEvent_Operation) == 0x000028, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_CustomEvent_Operation' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_GetParentWidgetOfClass_ReturnValue) == 0x000030, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_GetParentWidgetOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000038, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_GetPaintSpaceGeometry_ReturnValue) == 0x000044, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_GetPaintSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_Event_PointerEvent) == 0x000080, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_Event_Operation) == 0x0000F0, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_BreakGeometry_OutPosition) == 0x0000F8, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_BreakGeometry_OutPosition' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_BreakGeometry_OutAbsolutePosition) == 0x000100, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_BreakGeometry_OutAbsolutePosition' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_BreakGeometry_OutSize) == 0x000108, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_BreakGeometry_OutSize' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_BreakGeometry_OutScale) == 0x000110, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_BreakGeometry_OutScale' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000114, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_BreakVector2D_X) == 0x00011C, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_BreakVector2D_Y) == 0x000120, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000124, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_IsNearlyZero2D_ReturnValue) == 0x000128, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_IsNearlyZero2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00012C, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Not_PreBool_ReturnValue) == 0x000130, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_GetGameState_ReturnValue) == 0x000138, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_DynamicCast_AsGBGame_State) == 0x000140, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_DynamicCast_AsGBGame_State' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000150, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_IsValid_ReturnValue_1) == 0x000158, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_CustomEvent_bIsSelected) == 0x000159, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_CustomEvent_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_PlayAnimation_ReturnValue_1) == 0x000160, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_PlayAnimation_ReturnValue_2) == 0x000168, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_CreateDelegate_OutputDelegate) == 0x000170, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000180, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_IsHovered_ReturnValue) == 0x000188, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Not_PreBool_ReturnValue_1) == 0x000189, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_IsValid_ReturnValue_2) == 0x00018A, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_GetGameState_ReturnValue_1) == 0x000190, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_DynamicCast_AsGBGame_State_1) == 0x000198, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_DynamicCast_AsGBGame_State_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_DynamicCast_bSuccess_1) == 0x0001A0, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001A1, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_IsValid_ReturnValue_3) == 0x0001A2, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001A3, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_CustomEvent_NewScale) == 0x0001A4, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_CustomEvent_NewScale' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_BooleanAND_ReturnValue) == 0x0001A8, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001AC, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001B0, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_MakeVector2D_ReturnValue) == 0x0001C0, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0001C8, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_IsValid_ReturnValue_4) == 0x0001D0, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_GetCampaignMissionObjectiveInfoByRef_ReturnValue) == 0x0001D8, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_GetCampaignMissionObjectiveInfoByRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_IsEmpty_ReturnValue) == 0x000230, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_GetCampaignMissionObjectiveInfoByRef_ReturnValue_1) == 0x000238, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_GetCampaignMissionObjectiveInfoByRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_Not_PreBool_ReturnValue_4) == 0x000290, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000291, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_Select_Default) == 0x000294, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A4, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002A8, "Member 'WBP_ME_MapSymbol_C_ExecuteUbergraph_WBP_ME_MapSymbol::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.SetNewScale
// 0x0004 (0x0004 - 0x0000)
struct WBP_ME_MapSymbol_C_SetNewScale final
{
public:
	float                                         NewScale;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapSymbol_C_SetNewScale) == 0x000004, "Wrong alignment on WBP_ME_MapSymbol_C_SetNewScale");
static_assert(sizeof(WBP_ME_MapSymbol_C_SetNewScale) == 0x000004, "Wrong size on WBP_ME_MapSymbol_C_SetNewScale");
static_assert(offsetof(WBP_ME_MapSymbol_C_SetNewScale, NewScale) == 0x000000, "Member 'WBP_ME_MapSymbol_C_SetNewScale::NewScale' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_ME_MapSymbol_C_SetSelected final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapSymbol_C_SetSelected) == 0x000001, "Wrong alignment on WBP_ME_MapSymbol_C_SetSelected");
static_assert(sizeof(WBP_ME_MapSymbol_C_SetSelected) == 0x000001, "Wrong size on WBP_ME_MapSymbol_C_SetSelected");
static_assert(offsetof(WBP_ME_MapSymbol_C_SetSelected, bIsSelected) == 0x000000, "Member 'WBP_ME_MapSymbol_C_SetSelected::bIsSelected' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.OnDragCancelled
// 0x0078 (0x0078 - 0x0000)
struct WBP_ME_MapSymbol_C_OnDragCancelled final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapSymbol_C_OnDragCancelled) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_OnDragCancelled");
static_assert(sizeof(WBP_ME_MapSymbol_C_OnDragCancelled) == 0x000078, "Wrong size on WBP_ME_MapSymbol_C_OnDragCancelled");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDragCancelled, PointerEvent) == 0x000000, "Member 'WBP_ME_MapSymbol_C_OnDragCancelled::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDragCancelled, Operation) == 0x000070, "Member 'WBP_ME_MapSymbol_C_OnDragCancelled::Operation' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.OnDragged
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MapSymbol_C_OnDragged final
{
public:
	class UDragDropOperation*                     Operation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapSymbol_C_OnDragged) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_OnDragged");
static_assert(sizeof(WBP_ME_MapSymbol_C_OnDragged) == 0x000008, "Wrong size on WBP_ME_MapSymbol_C_OnDragged");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDragged, Operation) == 0x000000, "Member 'WBP_ME_MapSymbol_C_OnDragged::Operation' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.BindDragDropOperation
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MapSymbol_C_BindDragDropOperation final
{
public:
	class UDragDropOperation*                     DragDropOp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapSymbol_C_BindDragDropOperation) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_BindDragDropOperation");
static_assert(sizeof(WBP_ME_MapSymbol_C_BindDragDropOperation) == 0x000008, "Wrong size on WBP_ME_MapSymbol_C_BindDragDropOperation");
static_assert(offsetof(WBP_ME_MapSymbol_C_BindDragDropOperation, DragDropOp) == 0x000000, "Member 'WBP_ME_MapSymbol_C_BindDragDropOperation::DragDropOp' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.PositionSelf
// 0x0008 (0x0008 - 0x0000)
struct WBP_ME_MapSymbol_C_PositionSelf final
{
public:
	class UOverlay*                               ParentOverlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapSymbol_C_PositionSelf) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_PositionSelf");
static_assert(sizeof(WBP_ME_MapSymbol_C_PositionSelf) == 0x000008, "Wrong size on WBP_ME_MapSymbol_C_PositionSelf");
static_assert(offsetof(WBP_ME_MapSymbol_C_PositionSelf, ParentOverlay) == 0x000000, "Member 'WBP_ME_MapSymbol_C_PositionSelf::ParentOverlay' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.OnDragDetected
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_ME_MapSymbol_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHFDragDropOperation*                   CallFunc_CreateDragDropOperation_ReturnValue;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapSymbol_C_OnDragDetected) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_OnDragDetected");
static_assert(sizeof(WBP_ME_MapSymbol_C_OnDragDetected) == 0x0000B8, "Wrong size on WBP_ME_MapSymbol_C_OnDragDetected");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'WBP_ME_MapSymbol_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'WBP_ME_MapSymbol_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDragDetected, Operation) == 0x0000A8, "Member 'WBP_ME_MapSymbol_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x0000B0, "Member 'WBP_ME_MapSymbol_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.OnMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct WBP_ME_MapSymbol_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0160(0x00B8)()
};
static_assert(alignof(WBP_ME_MapSymbol_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_OnMouseButtonDown");
static_assert(sizeof(WBP_ME_MapSymbol_C_OnMouseButtonDown) == 0x000218, "Wrong size on WBP_ME_MapSymbol_C_OnMouseButtonDown");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000160, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.OnDrop
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_ME_MapSymbol_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapSymbol_C_OnDrop) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_OnDrop");
static_assert(sizeof(WBP_ME_MapSymbol_C_OnDrop) == 0x0000B8, "Wrong size on WBP_ME_MapSymbol_C_OnDrop");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDrop, MyGeometry) == 0x000000, "Member 'WBP_ME_MapSymbol_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDrop, PointerEvent) == 0x000038, "Member 'WBP_ME_MapSymbol_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDrop, Operation) == 0x0000A8, "Member 'WBP_ME_MapSymbol_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnDrop, ReturnValue) == 0x0000B0, "Member 'WBP_ME_MapSymbol_C_OnDrop::ReturnValue' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.OnMouseButtonUp
// 0x02E0 (0x02E0 - 0x0000)
struct WBP_ME_MapSymbol_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	class UWBP_ME_MapAnnotator_C*                 CallFunc_GetParentWidgetOfClass_ReturnValue;       // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0228(0x00B8)()
};
static_assert(alignof(WBP_ME_MapSymbol_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_OnMouseButtonUp");
static_assert(sizeof(WBP_ME_MapSymbol_C_OnMouseButtonUp) == 0x0002E0, "Wrong size on WBP_ME_MapSymbol_C_OnMouseButtonUp");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonUp, CallFunc_GetParentWidgetOfClass_ReturnValue) == 0x000218, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonUp::CallFunc_GetParentWidgetOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonUp, CallFunc_IsValid_ReturnValue) == 0x000220, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x000228, "Member 'WBP_ME_MapSymbol_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.MakeMissionObjectiveTooltip
// 0x0060 (0x0060 - 0x0000)
struct WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip final
{
public:
	class FText                                   TooltipTitle;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UImage*                                 HoveredImageRef;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OptionalText;                                      // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             OptionalImage;                                     // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CreatedWidget;                                     // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Tooltip_MapSymbolObjectives_C*     CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip) == 0x000008, "Wrong alignment on WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip");
static_assert(sizeof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip) == 0x000060, "Wrong size on WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, TooltipTitle) == 0x000000, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::TooltipTitle' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, HoveredImageRef) == 0x000018, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::HoveredImageRef' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, OptionalText) == 0x000020, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::OptionalText' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, OptionalImage) == 0x000038, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::OptionalImage' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CreatedWidget) == 0x000040, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CreatedWidget' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_Create_ReturnValue) == 0x000048, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_TextIsEmpty_ReturnValue) == 0x000052, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_BooleanOR_ReturnValue) == 0x000053, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, Temp_byte_Variable) == 0x000054, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_Not_PreBool_ReturnValue_1) == 0x000055, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_BooleanOR_ReturnValue_1) == 0x000056, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, Temp_byte_Variable_1) == 0x000057, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_IsEmpty_ReturnValue) == 0x000058, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_BooleanAND_ReturnValue_1) == 0x00005A, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005B, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, CallFunc_BooleanAND_ReturnValue_2) == 0x00005C, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, Temp_bool_Variable) == 0x00005D, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip, K2Node_Select_Default) == 0x00005E, "Member 'WBP_ME_MapSymbol_C_MakeMissionObjectiveTooltip::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ME_MapSymbol.WBP_ME_MapSymbol_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct WBP_ME_MapSymbol_C_IsInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ME_MapSymbol_C_IsInteractable) == 0x000001, "Wrong alignment on WBP_ME_MapSymbol_C_IsInteractable");
static_assert(sizeof(WBP_ME_MapSymbol_C_IsInteractable) == 0x000001, "Wrong size on WBP_ME_MapSymbol_C_IsInteractable");
static_assert(offsetof(WBP_ME_MapSymbol_C_IsInteractable, ReturnValue) == 0x000000, "Member 'WBP_ME_MapSymbol_C_IsInteractable::ReturnValue' has a wrong offset!");

}

