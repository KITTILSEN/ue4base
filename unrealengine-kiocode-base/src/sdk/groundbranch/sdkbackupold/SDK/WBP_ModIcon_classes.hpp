#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FMModdingPlugin_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "ModKit_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ModIcon.WBP_ModIcon_C
// 0x0160 (0x03C0 - 0x0260)
class UWBP_ModIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseModIcon;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_0;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ModTag;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ToolTipModdedContent;                              // 0x0280(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAssetData                             AssetData;                                         // 0x0298(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FPrimaryAssetId                        PrimaryAssetId;                                    // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FUInt64                                ModID;                                             // 0x0308(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bUnknownMod;                                       // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStaticImage;                                      // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bReceivedModDetails;                               // 0x0312(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSuccess;                                          // 0x0313(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUGCFileInfo                           DetailedModInfo;                                   // 0x0318(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TextIsModdedContent;                               // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   CustomTooltipText;                                 // 0x0388(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   KnownModIdToolTipText;                             // 0x03A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bBigOutline;                                       // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_WBP_ModIcon(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void UpdateOutlineSize();
	void ShowStaticImage();
	void InternalShowKnownMod();
	void ShowKnownMod();
	void SharedShow();
	void OnReceivedModDetails(const struct FUGCFileInfo& ModDetails, bool bSuccess_0);
	void Update();
	void Hide();
	void ShowUnknownMod();
	void SetUnknownMod(bool bUnknown);
	void SetModID(const struct FUInt64& SetModID_0);
	void SetObjectReference(class UObject* ObjectReference);
	void SetPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId_0);
	void Construct();
	void SetAssetData(const struct FAssetData& AssetData_0);
	class UWidget* GetToolTipWidget_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ModIcon_C">();
	}
	static class UWBP_ModIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ModIcon_C>();
	}
};
static_assert(alignof(UWBP_ModIcon_C) == 0x000008, "Wrong alignment on UWBP_ModIcon_C");
static_assert(sizeof(UWBP_ModIcon_C) == 0x0003C0, "Wrong size on UWBP_ModIcon_C");
static_assert(offsetof(UWBP_ModIcon_C, UberGraphFrame) == 0x000260, "Member 'UWBP_ModIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, PulseModIcon) == 0x000268, "Member 'UWBP_ModIcon_C::PulseModIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, Border_0) == 0x000270, "Member 'UWBP_ModIcon_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, TextBlock_ModTag) == 0x000278, "Member 'UWBP_ModIcon_C::TextBlock_ModTag' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, ToolTipModdedContent) == 0x000280, "Member 'UWBP_ModIcon_C::ToolTipModdedContent' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, AssetData) == 0x000298, "Member 'UWBP_ModIcon_C::AssetData' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, PrimaryAssetId) == 0x0002F8, "Member 'UWBP_ModIcon_C::PrimaryAssetId' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, ModID) == 0x000308, "Member 'UWBP_ModIcon_C::ModID' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, bUnknownMod) == 0x000310, "Member 'UWBP_ModIcon_C::bUnknownMod' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, bStaticImage) == 0x000311, "Member 'UWBP_ModIcon_C::bStaticImage' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, bReceivedModDetails) == 0x000312, "Member 'UWBP_ModIcon_C::bReceivedModDetails' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, bSuccess) == 0x000313, "Member 'UWBP_ModIcon_C::bSuccess' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, DetailedModInfo) == 0x000318, "Member 'UWBP_ModIcon_C::DetailedModInfo' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, TextIsModdedContent) == 0x000370, "Member 'UWBP_ModIcon_C::TextIsModdedContent' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, CustomTooltipText) == 0x000388, "Member 'UWBP_ModIcon_C::CustomTooltipText' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, KnownModIdToolTipText) == 0x0003A0, "Member 'UWBP_ModIcon_C::KnownModIdToolTipText' has a wrong offset!");
static_assert(offsetof(UWBP_ModIcon_C, bBigOutline) == 0x0003B8, "Member 'UWBP_ModIcon_C::bBigOutline' has a wrong offset!");

}

