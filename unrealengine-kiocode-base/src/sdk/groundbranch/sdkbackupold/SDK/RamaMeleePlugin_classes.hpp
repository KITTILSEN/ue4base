#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RamaMeleePlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "RamaMeleePlugin_structs.hpp"


namespace SDK
{

// Class RamaMeleePlugin.RamaMeleeCore
// 0x0000 (0x0028 - 0x0028)
class URamaMeleeCore final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RamaMeleeCore">();
	}
	static class URamaMeleeCore* GetDefaultObj()
	{
		return GetDefaultObjImpl<URamaMeleeCore>();
	}
};
static_assert(alignof(URamaMeleeCore) == 0x000008, "Wrong alignment on URamaMeleeCore");
static_assert(sizeof(URamaMeleeCore) == 0x000028, "Wrong size on URamaMeleeCore");

// Class RamaMeleePlugin.RamaMeleeWeapon
// 0x0070 (0x0F40 - 0x0ED0)
class URamaMeleeWeapon final : public USkeletalMeshComponent
{
public:
	TArray<EObjectTypeQuery>                      MeleeTraceObjectTypes;                             // 0x0EC8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* HitActor, class UPrimitiveComponent* HitComponent, const struct FVector& ImpactPoint, const struct FVector& ImpactNormal, int32 ShapeIndex, class FName HitBoneName, const struct FHitResult& HitResult)> RamaMeleeWeapon_OnHit; // 0x0ED8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          DrawShapes;                                        // 0x0EE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DrawSweeps;                                        // 0x0EE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DrawLines;                                         // 0x0EEA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EEB[0x1];                                      // 0x0EEB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DrawShapes_Thickness;                              // 0x0EEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DrawShapes_Duration;                               // 0x0EF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PerformDeepTrace;                                  // 0x0EF4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DeepTrace_SingleBodyMode;                          // 0x0EF5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EF6[0x2];                                      // 0x0EF6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRamaMeleeDamageMap                    DamageMap;                                         // 0x0EF8(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bUseMultiTrace;                                    // 0x0F08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F09[0x7];                                      // 0x0F09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPhysicalSurface>                      SurfaceTypesToIgnore;                              // 0x0F10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          DoingSwingTraces;                                  // 0x0F20(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F21[0x1F];                                     // 0x0F21(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool MeleeSweep(struct FHitResult* Hit, const TArray<struct FTransform>& BodyPreviousPose);
	void StartSwingDamage();
	void StopSwingDamage();
	void UpdateSwingPoseBodies();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RamaMeleeWeapon">();
	}
	static class URamaMeleeWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<URamaMeleeWeapon>();
	}
};
static_assert(alignof(URamaMeleeWeapon) == 0x000010, "Wrong alignment on URamaMeleeWeapon");
static_assert(sizeof(URamaMeleeWeapon) == 0x000F40, "Wrong size on URamaMeleeWeapon");
static_assert(offsetof(URamaMeleeWeapon, MeleeTraceObjectTypes) == 0x000EC8, "Member 'URamaMeleeWeapon::MeleeTraceObjectTypes' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, RamaMeleeWeapon_OnHit) == 0x000ED8, "Member 'URamaMeleeWeapon::RamaMeleeWeapon_OnHit' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, DrawShapes) == 0x000EE8, "Member 'URamaMeleeWeapon::DrawShapes' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, DrawSweeps) == 0x000EE9, "Member 'URamaMeleeWeapon::DrawSweeps' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, DrawLines) == 0x000EEA, "Member 'URamaMeleeWeapon::DrawLines' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, DrawShapes_Thickness) == 0x000EEC, "Member 'URamaMeleeWeapon::DrawShapes_Thickness' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, DrawShapes_Duration) == 0x000EF0, "Member 'URamaMeleeWeapon::DrawShapes_Duration' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, PerformDeepTrace) == 0x000EF4, "Member 'URamaMeleeWeapon::PerformDeepTrace' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, DeepTrace_SingleBodyMode) == 0x000EF5, "Member 'URamaMeleeWeapon::DeepTrace_SingleBodyMode' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, DamageMap) == 0x000EF8, "Member 'URamaMeleeWeapon::DamageMap' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, bUseMultiTrace) == 0x000F08, "Member 'URamaMeleeWeapon::bUseMultiTrace' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, SurfaceTypesToIgnore) == 0x000F10, "Member 'URamaMeleeWeapon::SurfaceTypesToIgnore' has a wrong offset!");
static_assert(offsetof(URamaMeleeWeapon, DoingSwingTraces) == 0x000F20, "Member 'URamaMeleeWeapon::DoingSwingTraces' has a wrong offset!");

}

