#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IE_ListEntry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_IE_ListEntry.WBP_IE_ListEntry_C
// 0x00D8 (0x0338 - 0x0260)
class UWBP_IE_ListEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        BackgroundBlur_0;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Background;                                 // 0x0270(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemIcon;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IE_InvItemSkin_ComboBox_C*         ItemSkin_ComboBox;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModIcon_C*                         ModIcon;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ItemName;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGBInvItemDragDropPayload*              InvItemDragDropPayload;                            // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        ItemAssetId;                                       // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UCanvasPanel*                           FloatingCanvas;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   DragDropOperatoinClassPtr;                         // 0x02B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   Drag;                                              // 0x02E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 DragDropOperationClass;                            // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DisplayNameTagKey;                                 // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredColour;                                     // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColour;                                     // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bParentSkinAppliedToChildren;                      // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CheckHoverTimer;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_IE_ListEntry(int32 EntryPoint);
	void CheckHoverStillHappening();
	void HoverBegins();
	void OnSkinApplyToChildrenUpdated_Event_0(bool bApplyToChildren);
	void OnInitialized();
	void BndEvt__WBP_DragItem_Entry_ItemSkin_ComboBox_K2Node_ComponentBoundEvent_0_OnSkinIdSelected__DelegateSignature(const struct FPrimaryAssetId& SkinId);
	void EnableSkinComboBoxMaybe();
	void Construct();
	void BP_OnEntryReleased();
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void OnLoaded_686A2F9744B64F989CB957400DB68083(TSubclassOf<class UObject> Loaded);
	void OnLoaded_29737857C2C847C1A904C4384675FA1E(class UObject* Loaded);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	class UWidget* GetToolTip();
	struct FLinearColor GetBackgroundColour();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_IE_ListEntry_C">();
	}
	static class UWBP_IE_ListEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_IE_ListEntry_C>();
	}
};
static_assert(alignof(UWBP_IE_ListEntry_C) == 0x000008, "Wrong alignment on UWBP_IE_ListEntry_C");
static_assert(sizeof(UWBP_IE_ListEntry_C) == 0x000338, "Wrong size on UWBP_IE_ListEntry_C");
static_assert(offsetof(UWBP_IE_ListEntry_C, UberGraphFrame) == 0x000260, "Member 'UWBP_IE_ListEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, BackgroundBlur_0) == 0x000268, "Member 'UWBP_IE_ListEntry_C::BackgroundBlur_0' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, Border_Background) == 0x000270, "Member 'UWBP_IE_ListEntry_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, Image_ItemIcon) == 0x000278, "Member 'UWBP_IE_ListEntry_C::Image_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, ItemSkin_ComboBox) == 0x000280, "Member 'UWBP_IE_ListEntry_C::ItemSkin_ComboBox' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, ModIcon) == 0x000288, "Member 'UWBP_IE_ListEntry_C::ModIcon' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, TextBlock_ItemName) == 0x000290, "Member 'UWBP_IE_ListEntry_C::TextBlock_ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, InvItemDragDropPayload) == 0x000298, "Member 'UWBP_IE_ListEntry_C::InvItemDragDropPayload' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, ItemAssetId) == 0x0002A0, "Member 'UWBP_IE_ListEntry_C::ItemAssetId' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, FloatingCanvas) == 0x0002B0, "Member 'UWBP_IE_ListEntry_C::FloatingCanvas' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, DragDropOperatoinClassPtr) == 0x0002B8, "Member 'UWBP_IE_ListEntry_C::DragDropOperatoinClassPtr' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, Drag) == 0x0002E0, "Member 'UWBP_IE_ListEntry_C::Drag' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, DragDropOperationClass) == 0x0002F8, "Member 'UWBP_IE_ListEntry_C::DragDropOperationClass' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, DisplayNameTagKey) == 0x000300, "Member 'UWBP_IE_ListEntry_C::DisplayNameTagKey' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, HoveredColour) == 0x000308, "Member 'UWBP_IE_ListEntry_C::HoveredColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, DefaultColour) == 0x000318, "Member 'UWBP_IE_ListEntry_C::DefaultColour' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, bParentSkinAppliedToChildren) == 0x000328, "Member 'UWBP_IE_ListEntry_C::bParentSkinAppliedToChildren' has a wrong offset!");
static_assert(offsetof(UWBP_IE_ListEntry_C, CheckHoverTimer) == 0x000330, "Member 'UWBP_IE_ListEntry_C::CheckHoverTimer' has a wrong offset!");

}

