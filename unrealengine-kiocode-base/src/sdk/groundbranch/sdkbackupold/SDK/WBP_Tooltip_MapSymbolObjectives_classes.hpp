#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Tooltip_MapSymbolObjectives

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GroundBranch_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Tooltip_MapSymbolObjectives.WBP_Tooltip_MapSymbolObjectives_C
// 0x0190 (0x03F0 - 0x0260)
class UWBP_Tooltip_MapSymbolObjectives_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_129;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PhotoDisplay;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ObjectiveBriefing;                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_OptionalText;                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_PrimaryOrSecondaryObjectives;            // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ToolTip;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Objectives;                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Photo;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TextToolTip;                                       // 0x02A8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FGBMapMarker                           MapMarkerInfo;                                     // 0x02C0(0x00B0)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Text_SecondaryObjective;                           // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_PrimaryObjective;                             // 0x0388(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   HotspotCodename;                                   // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MissionSequenceNo;                                 // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ObjectiveTitle;                                    // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   MissionDetailsTableId;                             // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPrimaryObjective;                               // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OptionalText;                                      // 0x03D0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UTexture2D*                             OptionalImage;                                     // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Tooltip_MapSymbolObjectives(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Tooltip_MapSymbolObjectives_C">();
	}
	static class UWBP_Tooltip_MapSymbolObjectives_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Tooltip_MapSymbolObjectives_C>();
	}
};
static_assert(alignof(UWBP_Tooltip_MapSymbolObjectives_C) == 0x000008, "Wrong alignment on UWBP_Tooltip_MapSymbolObjectives_C");
static_assert(sizeof(UWBP_Tooltip_MapSymbolObjectives_C) == 0x0003F0, "Wrong size on UWBP_Tooltip_MapSymbolObjectives_C");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, UberGraphFrame) == 0x000260, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, Image_129) == 0x000268, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::Image_129' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, Image_PhotoDisplay) == 0x000270, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::Image_PhotoDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, TextBlock_ObjectiveBriefing) == 0x000278, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::TextBlock_ObjectiveBriefing' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, TextBlock_OptionalText) == 0x000280, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::TextBlock_OptionalText' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, TextBlock_PrimaryOrSecondaryObjectives) == 0x000288, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::TextBlock_PrimaryOrSecondaryObjectives' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, TextBlock_ToolTip) == 0x000290, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::TextBlock_ToolTip' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, VerticalBox_Objectives) == 0x000298, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::VerticalBox_Objectives' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, VerticalBox_Photo) == 0x0002A0, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::VerticalBox_Photo' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, TextToolTip) == 0x0002A8, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::TextToolTip' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, MapMarkerInfo) == 0x0002C0, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::MapMarkerInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, Text_SecondaryObjective) == 0x000370, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::Text_SecondaryObjective' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, Text_PrimaryObjective) == 0x000388, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::Text_PrimaryObjective' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, HotspotCodename) == 0x0003A0, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::HotspotCodename' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, MissionSequenceNo) == 0x0003A8, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::MissionSequenceNo' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, ObjectiveTitle) == 0x0003B0, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::ObjectiveTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, MissionDetailsTableId) == 0x0003C0, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::MissionDetailsTableId' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, bIsPrimaryObjective) == 0x0003C8, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::bIsPrimaryObjective' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, OptionalText) == 0x0003D0, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::OptionalText' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_MapSymbolObjectives_C, OptionalImage) == 0x0003E8, "Member 'UWBP_Tooltip_MapSymbolObjectives_C::OptionalImage' has a wrong offset!");

}

