#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AmmoCheckIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_AmmoCheckIndicator.WBP_AmmoCheckIndicator_C.ExecuteUbergraph_WBP_AmmoCheckIndicator
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_AmmoCheckText;                  // 0x0048(0x0018)()
	class UTexture2D*                             K2Node_CustomEvent_AmmoCheckIcon;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DisplayTime;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShowInterdiction;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0078(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator) == 0x000008, "Wrong alignment on WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator");
static_assert(sizeof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator) == 0x0000B8, "Wrong size on WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, EntryPoint) == 0x000000, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, Temp_bool_Variable) == 0x000004, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000030, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_PlayAnimation_ReturnValue_2) == 0x000038, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, K2Node_CustomEvent_AmmoCheckText) == 0x000048, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::K2Node_CustomEvent_AmmoCheckText' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, K2Node_CustomEvent_AmmoCheckIcon) == 0x000060, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::K2Node_CustomEvent_AmmoCheckIcon' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, K2Node_CustomEvent_DisplayTime) == 0x000068, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::K2Node_CustomEvent_DisplayTime' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, K2Node_CustomEvent_bShowInterdiction) == 0x00006C, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::K2Node_CustomEvent_bShowInterdiction' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_FMax_ReturnValue) == 0x000070, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_TextToUpper_ReturnValue) == 0x000078, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_TextIsEmpty_ReturnValue) == 0x000090, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x000091, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000094, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_BooleanOR_ReturnValue) == 0x0000A4, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000A8, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, Temp_byte_Variable) == 0x0000B0, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, Temp_byte_Variable_1) == 0x0000B1, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator, K2Node_Select_Default) == 0x0000B2, "Member 'WBP_AmmoCheckIndicator_C_ExecuteUbergraph_WBP_AmmoCheckIndicator::K2Node_Select_Default' has a wrong offset!");

// Function WBP_AmmoCheckIndicator.WBP_AmmoCheckIndicator_C.DisplayAmmoCheck
// 0x0028 (0x0028 - 0x0000)
struct WBP_AmmoCheckIndicator_C_DisplayAmmoCheck final
{
public:
	class FText                                   AmmoCheckText;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             AmmoCheckIcon;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisplayTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowInterdiction;                                 // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AmmoCheckIndicator_C_DisplayAmmoCheck) == 0x000008, "Wrong alignment on WBP_AmmoCheckIndicator_C_DisplayAmmoCheck");
static_assert(sizeof(WBP_AmmoCheckIndicator_C_DisplayAmmoCheck) == 0x000028, "Wrong size on WBP_AmmoCheckIndicator_C_DisplayAmmoCheck");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_DisplayAmmoCheck, AmmoCheckText) == 0x000000, "Member 'WBP_AmmoCheckIndicator_C_DisplayAmmoCheck::AmmoCheckText' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_DisplayAmmoCheck, AmmoCheckIcon) == 0x000018, "Member 'WBP_AmmoCheckIndicator_C_DisplayAmmoCheck::AmmoCheckIcon' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_DisplayAmmoCheck, DisplayTime) == 0x000020, "Member 'WBP_AmmoCheckIndicator_C_DisplayAmmoCheck::DisplayTime' has a wrong offset!");
static_assert(offsetof(WBP_AmmoCheckIndicator_C_DisplayAmmoCheck, bShowInterdiction) == 0x000024, "Member 'WBP_AmmoCheckIndicator_C_DisplayAmmoCheck::bShowInterdiction' has a wrong offset!");

}

