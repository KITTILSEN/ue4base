#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GrenadeArc

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GrenadeArc.BP_GrenadeArc_C
// 0x0120 (0x0340 - 0x0220)
class ABP_GrenadeArc_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ImpactSphere;                                      // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       SplineComponent;                                   // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OriginSphere;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AGBGrenade*                             GrenadeRef;                                        // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0250(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0260(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         ArcIndex;                                          // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Source;                                            // 0x0274(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurPointIndex;                                     // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextPointIndex;                                    // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMeshSegment;                                 // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MeshSegment;                                       // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineMeshComponent*>           SpineMeshComponents;                               // 0x0298(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FHitResult                             HitResult;                                         // 0x02A8(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               GrenadeArcMID;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               GrenadeImpactPointMID;                             // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GrenadeArc(int32 EntryPoint);
	void Clear();
	void Update();
	void DrawArc();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GrenadeArc_C">();
	}
	static class ABP_GrenadeArc_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GrenadeArc_C>();
	}
};
static_assert(alignof(ABP_GrenadeArc_C) == 0x000008, "Wrong alignment on ABP_GrenadeArc_C");
static_assert(sizeof(ABP_GrenadeArc_C) == 0x000340, "Wrong size on ABP_GrenadeArc_C");
static_assert(offsetof(ABP_GrenadeArc_C, UberGraphFrame) == 0x000220, "Member 'ABP_GrenadeArc_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, ImpactSphere) == 0x000228, "Member 'ABP_GrenadeArc_C::ImpactSphere' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, SplineComponent) == 0x000230, "Member 'ABP_GrenadeArc_C::SplineComponent' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, OriginSphere) == 0x000238, "Member 'ABP_GrenadeArc_C::OriginSphere' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, Billboard) == 0x000240, "Member 'ABP_GrenadeArc_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, GrenadeRef) == 0x000248, "Member 'ABP_GrenadeArc_C::GrenadeRef' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, IgnoreActors) == 0x000250, "Member 'ABP_GrenadeArc_C::IgnoreActors' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, ObjectTypes) == 0x000260, "Member 'ABP_GrenadeArc_C::ObjectTypes' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, ArcIndex) == 0x000270, "Member 'ABP_GrenadeArc_C::ArcIndex' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, Source) == 0x000274, "Member 'ABP_GrenadeArc_C::Source' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, CurPointIndex) == 0x000280, "Member 'ABP_GrenadeArc_C::CurPointIndex' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, NextPointIndex) == 0x000284, "Member 'ABP_GrenadeArc_C::NextPointIndex' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, SplineMeshSegment) == 0x000288, "Member 'ABP_GrenadeArc_C::SplineMeshSegment' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, MeshSegment) == 0x000290, "Member 'ABP_GrenadeArc_C::MeshSegment' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, SpineMeshComponents) == 0x000298, "Member 'ABP_GrenadeArc_C::SpineMeshComponents' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, HitResult) == 0x0002A8, "Member 'ABP_GrenadeArc_C::HitResult' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, GrenadeArcMID) == 0x000330, "Member 'ABP_GrenadeArc_C::GrenadeArcMID' has a wrong offset!");
static_assert(offsetof(ABP_GrenadeArc_C, GrenadeImpactPointMID) == 0x000338, "Member 'ABP_GrenadeArc_C::GrenadeImpactPointMID' has a wrong offset!");

}

