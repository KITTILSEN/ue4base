#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_Gamepad_KeyCapture

#include "Basic.hpp"

#include "Options_Gamepad_KeyCapture_classes.hpp"
#include "Options_Gamepad_KeyCapture_parameters.hpp"


namespace SDK
{

// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.OnCapturingChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCapturing                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOptions_Gamepad_KeyCapture_C::OnCapturingChanged__DelegateSignature(bool InCapturing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "OnCapturingChanged__DelegateSignature");

	Params::Options_Gamepad_KeyCapture_C_OnCapturingChanged__DelegateSignature Parms{};

	Parms.InCapturing = InCapturing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.ExecuteUbergraph_Options_Gamepad_KeyCapture
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptions_Gamepad_KeyCapture_C::ExecuteUbergraph_Options_Gamepad_KeyCapture(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "ExecuteUbergraph_Options_Gamepad_KeyCapture");

	Params::Options_Gamepad_KeyCapture_C_ExecuteUbergraph_Options_Gamepad_KeyCapture Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOptions_Gamepad_KeyCapture_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "PreConstruct");

	Params::Options_Gamepad_KeyCapture_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.ReceiveKeyCaptured
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UOptions_Gamepad_KeyCapture_C::ReceiveKeyCaptured(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "ReceiveKeyCaptured");

	Params::Options_Gamepad_KeyCapture_C_ReceiveKeyCaptured Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.OnCustomKeyBindingsChanged
// (BlueprintCallable, BlueprintEvent)

void UOptions_Gamepad_KeyCapture_C::OnCustomKeyBindingsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "OnCustomKeyBindingsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UOptions_Gamepad_KeyCapture_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.ReceiveKeyChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UOptions_Gamepad_KeyCapture_C::ReceiveKeyChanged(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "ReceiveKeyChanged");

	Params::Options_Gamepad_KeyCapture_C_ReceiveKeyChanged Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.ReceiveCapturingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InCapturing                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOptions_Gamepad_KeyCapture_C::ReceiveCapturingChanged(bool InCapturing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "ReceiveCapturingChanged");

	Params::Options_Gamepad_KeyCapture_C_ReceiveCapturingChanged Parms{};

	Parms.InCapturing = InCapturing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.UpdateKeyDisplay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UOptions_Gamepad_KeyCapture_C::UpdateKeyDisplay(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "UpdateKeyDisplay");

	Params::Options_Gamepad_KeyCapture_C_UpdateKeyDisplay Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_Gamepad_KeyCapture.Options_Gamepad_KeyCapture_C.IsInteractable
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UOptions_Gamepad_KeyCapture_C::IsInteractable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_Gamepad_KeyCapture_C", "IsInteractable");

	Params::Options_Gamepad_KeyCapture_C_IsInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

