#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ENE_Spider_Tank_Boss

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.CheckIfOnlyOnePlayerAlive
// 0x0070 (0x0070 - 0x0000)
struct ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive final
{
public:
	class APlayerCharacter*                       OnlyPlayerAlive;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlivePlayers;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA8[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FAA[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FAB[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAC[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive) == 0x000070, "Wrong size on ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, OnlyPlayerAlive) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::OnlyPlayerAlive' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, AlivePlayers) == 0x000008, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::AlivePlayers' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000028, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_GetBlackboard_ReturnValue) == 0x000030, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_GetBlackboard_ReturnValue_1) == 0x000038, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, Temp_int_Variable) == 0x000044, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_GetFSDGameState_ReturnValue) == 0x000050, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_Array_Get_Item) == 0x000060, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive, CallFunc_IsAlive_ReturnValue) == 0x00006A, "Member 'ENE_Spider_Tank_Boss_C_CheckIfOnlyOnePlayerAlive::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.TrySelectDeathAnimation
// 0x002C (0x002C - 0x0000)
struct ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation final
{
public:
	bool                                          WasWeakpoint;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FAD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimationIndex;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasSelectedAnimation;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FAE[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation) == 0x000004, "Wrong alignment on ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation) == 0x00002C, "Wrong size on ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, WasWeakpoint) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::WasWeakpoint' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, AnimationIndex) == 0x000004, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::AnimationIndex' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, HasSelectedAnimation) == 0x000008, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::HasSelectedAnimation' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00000C, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, CallFunc_GetActorUpVector_ReturnValue) == 0x000010, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, CallFunc_BreakVector_X) == 0x00001C, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, CallFunc_BreakVector_Y) == 0x000020, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, CallFunc_BreakVector_Z) == 0x000024, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'ENE_Spider_Tank_Boss_C_TrySelectDeathAnimation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.ShouldExplode
// 0x0018 (0x0018 - 0x0000)
struct ENE_Spider_Tank_Boss_C_ShouldExplode final
{
public:
	TArray<class UDamageTag*>                     Param_Tags;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_ShouldExplode) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_ShouldExplode");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_ShouldExplode) == 0x000018, "Wrong size on ENE_Spider_Tank_Boss_C_ShouldExplode");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ShouldExplode, Param_Tags) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_ShouldExplode::Param_Tags' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ShouldExplode, ReturnValue) == 0x000010, "Member 'ENE_Spider_Tank_Boss_C_ShouldExplode::ReturnValue' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.Set achievement from server to all
// 0x0040 (0x0040 - 0x0000)
struct ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all final
{
public:
	class UFSDAchievement*                        Achievement_to_set;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FAF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all) == 0x000040, "Wrong size on ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, Achievement_to_set) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::Achievement_to_set' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, Progress) == 0x000008, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::Progress' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, CallFunc_GetFSDGameState_ReturnValue) == 0x000018, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, CallFunc_Array_Get_Item) == 0x000028, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'ENE_Spider_Tank_Boss_C_Set_achievement_from_server_to_all::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.CheckForPlayersAliveWithNoAmmo
// 0x0058 (0x0058 - 0x0000)
struct ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo final
{
public:
	class APlayerCharacter*                       OnlyPlayerAlive;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDAchievement*                        WithoutAPaddleAchievement;                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlivePlayers;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FB1[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FB2[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FB3[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FB4[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB5[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo) == 0x000058, "Wrong size on ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, OnlyPlayerAlive) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::OnlyPlayerAlive' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, WithoutAPaddleAchievement) == 0x000008, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::WithoutAPaddleAchievement' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, AlivePlayers) == 0x000010, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::AlivePlayers' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, Temp_int_Array_Index_Variable) == 0x000020, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, Temp_int_Variable) == 0x000028, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_GetFSDGameState_ReturnValue) == 0x000038, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_Array_Get_Item) == 0x000048, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo, CallFunc_IsAlive_ReturnValue) == 0x000052, "Member 'ENE_Spider_Tank_Boss_C_CheckForPlayersAliveWithNoAmmo::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.GetEnemyDamageResistance
// 0x0020 (0x0020 - 0x0000)
struct ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDifficultyManager*                     CallFunc_GetDifficultyManager_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnemyDamageResistance_ReturnValue;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance) == 0x000020, "Wrong size on ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance, ReturnValue) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance::ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance, CallFunc_GetFSDGameMode_ReturnValue) == 0x000008, "Member 'ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance::CallFunc_GetFSDGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance, CallFunc_GetDifficultyManager_ReturnValue) == 0x000010, "Member 'ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance::CallFunc_GetDifficultyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance, CallFunc_GetEnemyDamageResistance_ReturnValue) == 0x000018, "Member 'ENE_Spider_Tank_Boss_C_GetEnemyDamageResistance::CallFunc_GetEnemyDamageResistance_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.OnRep_TankArmorIntact
// 0x0020 (0x0020 - 0x0000)
struct ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact final
{
public:
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact) == 0x000020, "Wrong size on ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000008, "Member 'ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact, CallFunc_GetSocketLocation_ReturnValue) == 0x000010, "Member 'ENE_Spider_Tank_Boss_C_OnRep_TankArmorIntact::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct ENE_Spider_Tank_Boss_C_UserConstructionScript final
{
public:
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_UserConstructionScript) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_UserConstructionScript");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_UserConstructionScript) == 0x000020, "Wrong size on ENE_Spider_Tank_Boss_C_UserConstructionScript");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_UserConstructionScript, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_UserConstructionScript::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'ENE_Spider_Tank_Boss_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'ENE_Spider_Tank_Boss_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.PlayAnimatedDeath
// 0x0004 (0x0004 - 0x0000)
struct ENE_Spider_Tank_Boss_C_PlayAnimatedDeath final
{
public:
	int32                                         AnimationIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_PlayAnimatedDeath) == 0x000004, "Wrong alignment on ENE_Spider_Tank_Boss_C_PlayAnimatedDeath");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_PlayAnimatedDeath) == 0x000004, "Wrong size on ENE_Spider_Tank_Boss_C_PlayAnimatedDeath");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_PlayAnimatedDeath, AnimationIndex) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_PlayAnimatedDeath::AnimationIndex' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ENE_Spider_Tank_Boss_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature) == 0x000004, "Wrong alignment on ENE_Spider_Tank_Boss_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature) == 0x000004, "Wrong size on ENE_Spider_Tank_Boss_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature, Amount) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature::Amount' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_DamageSig__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_DamageSig__DelegateSignature final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_DamageSig__DelegateSignature) == 0x000004, "Wrong alignment on ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_DamageSig__DelegateSignature");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_DamageSig__DelegateSignature) == 0x000004, "Wrong size on ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_DamageSig__DelegateSignature");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_DamageSig__DelegateSignature, Amount) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_DamageSig__DelegateSignature::Amount' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature final
{
public:
	class UDestructibleSubHealthComponent*        SubHealth;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature) == 0x000008, "Wrong size on ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature, SubHealth) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature::SubHealth' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.OnFrozen
// 0x0008 (0x0008 - 0x0000)
struct ENE_Spider_Tank_Boss_C_OnFrozen final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_OnFrozen) == 0x000008, "Wrong alignment on ENE_Spider_Tank_Boss_C_OnFrozen");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_OnFrozen) == 0x000008, "Wrong size on ENE_Spider_Tank_Boss_C_OnFrozen");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_OnFrozen, Source) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_OnFrozen::Source' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.FractureArmor
// 0x000C (0x000C - 0x0000)
struct ENE_Spider_Tank_Boss_C_FractureArmor final
{
public:
	struct FVector                                HitPoint;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_FractureArmor) == 0x000004, "Wrong alignment on ENE_Spider_Tank_Boss_C_FractureArmor");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_FractureArmor) == 0x00000C, "Wrong size on ENE_Spider_Tank_Boss_C_FractureArmor");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_FractureArmor, HitPoint) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_FractureArmor::HitPoint' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.ExecuteUbergraph_ENE_Spider_Tank_Boss
// 0x0190 (0x0190 - 0x0000)
struct ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FB7[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB8[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4FB9[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_FindNearestPlayerCharacter_ReturnValue;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FBA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDifficultyManager*                     CallFunc_GetDifficultyManager_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBossDifficultyScaler_ReturnValue;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FBB[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AnimationIndex;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBC[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_1;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FBD[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Amount_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPct_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue_1;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FBE[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGoogleAnalyticsWrapper*                CallFunc_GetGoogleAnalyticsWrapper_ReturnValue;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FBF[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPct_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC0[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpiderAnimInstance*                    K2Node_DynamicCast_AsSpider_Anim_Instance;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FC1[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC2[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Amount;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddModifier_ReturnValue;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleSubHealthComponent*        K2Node_ComponentBoundEvent_subHealth;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPct_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FC3[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_source;                               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FC4[0x2];                                     // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue;     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitPoint;                       // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC5[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Spider_TankBoss_FracturedArmor_C*   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss) == 0x000010, "Wrong alignment on ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss) == 0x000190, "Wrong size on ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, EntryPoint) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::EntryPoint' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, Temp_bool_Variable) == 0x000014, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, Temp_int_Variable) == 0x000018, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, Temp_object_Variable) == 0x000020, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, Temp_object_Variable_1) == 0x000028, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_FindNearestPlayerCharacter_ReturnValue) == 0x000050, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_FindNearestPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetFSDGameMode_ReturnValue) == 0x000068, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetFSDGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetFSDGameState_ReturnValue) == 0x000070, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetDifficultyManager_ReturnValue) == 0x000078, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetDifficultyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetBossDifficultyScaler_ReturnValue) == 0x000080, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetBossDifficultyScaler_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00008C, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_Add_FloatFloat_ReturnValue) == 0x000090, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_Select_Default) == 0x000094, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000098, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_Event_AnimationIndex) == 0x0000A0, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_Event_AnimationIndex' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_Select_Default_1) == 0x0000A8, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_LinearColorLerp_ReturnValue) == 0x0000B0, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_IsAlive_ReturnValue) == 0x0000C0, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_ComponentBoundEvent_Amount_1) == 0x0000C4, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_ComponentBoundEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetHealthPct_ReturnValue) == 0x0000C8, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetHealthPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000CC, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_IsAlive_ReturnValue_1) == 0x0000CD, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_IsAlive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_BooleanAND_ReturnValue) == 0x0000CE, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetGoogleAnalyticsWrapper_ReturnValue) == 0x0000D0, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetGoogleAnalyticsWrapper_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetAnimInstance_ReturnValue) == 0x0000E0, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetHealthPct_ReturnValue_1) == 0x0000E8, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetHealthPct_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_DynamicCast_AsSpider_Anim_Instance) == 0x0000F0, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_DynamicCast_AsSpider_Anim_Instance' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F9, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_MakeLiteralName_ReturnValue) == 0x0000FC, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetBlackboard_ReturnValue) == 0x000108, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_ComponentBoundEvent_Amount) == 0x000110, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_ComponentBoundEvent_Amount' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_AddModifier_ReturnValue) == 0x000114, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_AddModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_ComponentBoundEvent_subHealth) == 0x000118, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_ComponentBoundEvent_subHealth' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetHealthPct_ReturnValue_2) == 0x000120, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetHealthPct_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_MathExpression_ReturnValue) == 0x000124, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_MathExpression_ReturnValue_1) == 0x000128, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_HasAuthority_ReturnValue) == 0x00012C, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_Event_source) == 0x000130, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_Event_source' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_HasAuthority_ReturnValue_1) == 0x000138, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_HasAuthority_ReturnValue_2) == 0x000139, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue) == 0x00013C, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, K2Node_CustomEvent_HitPoint) == 0x000140, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::K2Node_CustomEvent_HitPoint' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_GetSocketTransform_ReturnValue) == 0x000150, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000180, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss, CallFunc_FinishSpawningActor_ReturnValue) == 0x000188, "Member 'ENE_Spider_Tank_Boss_C_ExecuteUbergraph_ENE_Spider_Tank_Boss::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Tank_Boss.ENE_Spider_Tank_Boss_C.OnArmorDestroyed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ENE_Spider_Tank_Boss_C_OnArmorDestroyed__DelegateSignature final
{
public:
	float                                         EnrageDuration;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Tank_Boss_C_OnArmorDestroyed__DelegateSignature) == 0x000004, "Wrong alignment on ENE_Spider_Tank_Boss_C_OnArmorDestroyed__DelegateSignature");
static_assert(sizeof(ENE_Spider_Tank_Boss_C_OnArmorDestroyed__DelegateSignature) == 0x000004, "Wrong size on ENE_Spider_Tank_Boss_C_OnArmorDestroyed__DelegateSignature");
static_assert(offsetof(ENE_Spider_Tank_Boss_C_OnArmorDestroyed__DelegateSignature, EnrageDuration) == 0x000000, "Member 'ENE_Spider_Tank_Boss_C_OnArmorDestroyed__DelegateSignature::EnrageDuration' has a wrong offset!");

}

