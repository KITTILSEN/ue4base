#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SpaceRig_Rift_Gem_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_SpaceRig_Rift_Gem_01.ABP_SpaceRig_Rift_Gem_01_C
// 0x0080 (0x0370 - 0x02F0)
class UABP_SpaceRig_Rift_Gem_01_C final : public UDisplayCaseAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02F8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0328(0x0048)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_SpaceRig_Rift_Gem_01(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_SpaceRig_Rift_Gem_01_C">();
	}
	static class UABP_SpaceRig_Rift_Gem_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_SpaceRig_Rift_Gem_01_C>();
	}
};
static_assert(alignof(UABP_SpaceRig_Rift_Gem_01_C) == 0x000010, "Wrong alignment on UABP_SpaceRig_Rift_Gem_01_C");
static_assert(sizeof(UABP_SpaceRig_Rift_Gem_01_C) == 0x000370, "Wrong size on UABP_SpaceRig_Rift_Gem_01_C");
static_assert(offsetof(UABP_SpaceRig_Rift_Gem_01_C, UberGraphFrame) == 0x0002F0, "Member 'UABP_SpaceRig_Rift_Gem_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_SpaceRig_Rift_Gem_01_C, AnimGraphNode_Root) == 0x0002F8, "Member 'UABP_SpaceRig_Rift_Gem_01_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_SpaceRig_Rift_Gem_01_C, AnimGraphNode_Slot) == 0x000328, "Member 'UABP_SpaceRig_Rift_Gem_01_C::AnimGraphNode_Slot' has a wrong offset!");

}

