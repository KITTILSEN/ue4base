#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_JettyBoots_Character

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_JettyBoots_Character.UI_JettyBoots_Character_C
// 0x0040 (0x02B0 - 0x0270)
class UUI_JettyBoots_Character_C final : public USpriteRectWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimSafe;                                          // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimDead;                                          // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimJetActive;                                     // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Character_Sprite;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 JetBoost_Sprite;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Root_Canvas;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          JetActive;                                         // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDead;                                            // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSafe;                                            // 0x02AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_JettyBoots_Character(int32 EntryPoint);
	void OnEventActiveChanged_Event(const class UFSDEvent* InFsdEvent, bool InIsActive);
	void Construct();
	void SetJetActive(bool InJetActive, bool* OutValueChanged, bool* OutJetActive);
	void Set_Dead(bool InIsDead);
	void Set_Safe(bool InIsSafe);
	void CheckFSDEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_JettyBoots_Character_C">();
	}
	static class UUI_JettyBoots_Character_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_JettyBoots_Character_C>();
	}
};
static_assert(alignof(UUI_JettyBoots_Character_C) == 0x000008, "Wrong alignment on UUI_JettyBoots_Character_C");
static_assert(sizeof(UUI_JettyBoots_Character_C) == 0x0002B0, "Wrong size on UUI_JettyBoots_Character_C");
static_assert(offsetof(UUI_JettyBoots_Character_C, UberGraphFrame) == 0x000270, "Member 'UUI_JettyBoots_Character_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, AnimSafe) == 0x000278, "Member 'UUI_JettyBoots_Character_C::AnimSafe' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, AnimDead) == 0x000280, "Member 'UUI_JettyBoots_Character_C::AnimDead' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, AnimJetActive) == 0x000288, "Member 'UUI_JettyBoots_Character_C::AnimJetActive' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, Character_Sprite) == 0x000290, "Member 'UUI_JettyBoots_Character_C::Character_Sprite' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, JetBoost_Sprite) == 0x000298, "Member 'UUI_JettyBoots_Character_C::JetBoost_Sprite' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, Root_Canvas) == 0x0002A0, "Member 'UUI_JettyBoots_Character_C::Root_Canvas' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, JetActive) == 0x0002A8, "Member 'UUI_JettyBoots_Character_C::JetActive' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, IsDead) == 0x0002A9, "Member 'UUI_JettyBoots_Character_C::IsDead' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Character_C, IsSafe) == 0x0002AA, "Member 'UUI_JettyBoots_Character_C::IsSafe' has a wrong offset!");

}

