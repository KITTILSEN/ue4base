#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_RadioButton

#include "Basic.hpp"

#include "ENUM_MenuColors_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Basic_RadioButton.Basic_RadioButton_C.GetText
// 0x0018 (0x0018 - 0x0000)
struct Basic_RadioButton_C_GetText final
{
public:
	class FText                                   Param_Text;                                        // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(Basic_RadioButton_C_GetText) == 0x000008, "Wrong alignment on Basic_RadioButton_C_GetText");
static_assert(sizeof(Basic_RadioButton_C_GetText) == 0x000018, "Wrong size on Basic_RadioButton_C_GetText");
static_assert(offsetof(Basic_RadioButton_C_GetText, Param_Text) == 0x000000, "Member 'Basic_RadioButton_C_GetText::Param_Text' has a wrong offset!");

// Function Basic_RadioButton.Basic_RadioButton_C.SetTextColor
// 0x0001 (0x0001 - 0x0000)
struct Basic_RadioButton_C_SetTextColor final
{
public:
	ENUM_MenuColors                               Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_RadioButton_C_SetTextColor) == 0x000001, "Wrong alignment on Basic_RadioButton_C_SetTextColor");
static_assert(sizeof(Basic_RadioButton_C_SetTextColor) == 0x000001, "Wrong size on Basic_RadioButton_C_SetTextColor");
static_assert(offsetof(Basic_RadioButton_C_SetTextColor, Color) == 0x000000, "Member 'Basic_RadioButton_C_SetTextColor::Color' has a wrong offset!");

// Function Basic_RadioButton.Basic_RadioButton_C.SetText
// 0x0060 (0x0060 - 0x0000)
struct Basic_RadioButton_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InUpperCase;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A6[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UButtonSlot*                            K2Node_DynamicCast_AsButton_Slot;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A7[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0030(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0048(0x0018)()
};
static_assert(alignof(Basic_RadioButton_C_SetText) == 0x000008, "Wrong alignment on Basic_RadioButton_C_SetText");
static_assert(sizeof(Basic_RadioButton_C_SetText) == 0x000060, "Wrong size on Basic_RadioButton_C_SetText");
static_assert(offsetof(Basic_RadioButton_C_SetText, InText) == 0x000000, "Member 'Basic_RadioButton_C_SetText::InText' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, InUpperCase) == 0x000018, "Member 'Basic_RadioButton_C_SetText::InUpperCase' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, Temp_bool_Variable) == 0x000019, "Member 'Basic_RadioButton_C_SetText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, Temp_byte_Variable) == 0x00001A, "Member 'Basic_RadioButton_C_SetText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, Temp_byte_Variable_1) == 0x00001B, "Member 'Basic_RadioButton_C_SetText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, Temp_bool_Variable_1) == 0x00001C, "Member 'Basic_RadioButton_C_SetText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, CallFunc_TextIsEmpty_ReturnValue) == 0x00001D, "Member 'Basic_RadioButton_C_SetText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, K2Node_DynamicCast_AsButton_Slot) == 0x000020, "Member 'Basic_RadioButton_C_SetText::K2Node_DynamicCast_AsButton_Slot' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Basic_RadioButton_C_SetText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, CallFunc_SelectVisibility_IsVisible) == 0x000029, "Member 'Basic_RadioButton_C_SetText::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, CallFunc_SelectVisibility_VisibilityChanged) == 0x00002A, "Member 'Basic_RadioButton_C_SetText::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, CallFunc_SelectVisibility_New_Visibility) == 0x00002B, "Member 'Basic_RadioButton_C_SetText::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, K2Node_Select_Default) == 0x00002C, "Member 'Basic_RadioButton_C_SetText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, CallFunc_TextToUpper_ReturnValue) == 0x000030, "Member 'Basic_RadioButton_C_SetText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetText, K2Node_Select_Default_1) == 0x000048, "Member 'Basic_RadioButton_C_SetText::K2Node_Select_Default_1' has a wrong offset!");

// Function Basic_RadioButton.Basic_RadioButton_C.SetIsChecked
// 0x001C (0x001C - 0x0000)
struct Basic_RadioButton_C_SetIsChecked final
{
public:
	bool                                          InIsChecked;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A8[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_RadioButton_C_SetIsChecked) == 0x000004, "Wrong alignment on Basic_RadioButton_C_SetIsChecked");
static_assert(sizeof(Basic_RadioButton_C_SetIsChecked) == 0x00001C, "Wrong size on Basic_RadioButton_C_SetIsChecked");
static_assert(offsetof(Basic_RadioButton_C_SetIsChecked, InIsChecked) == 0x000000, "Member 'Basic_RadioButton_C_SetIsChecked::InIsChecked' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetIsChecked, Temp_bool_Variable) == 0x000001, "Member 'Basic_RadioButton_C_SetIsChecked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetIsChecked, Temp_struct_Variable) == 0x000004, "Member 'Basic_RadioButton_C_SetIsChecked::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetIsChecked, Temp_struct_Variable_1) == 0x00000C, "Member 'Basic_RadioButton_C_SetIsChecked::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_SetIsChecked, K2Node_Select_Default) == 0x000014, "Member 'Basic_RadioButton_C_SetIsChecked::K2Node_Select_Default' has a wrong offset!");

// Function Basic_RadioButton.Basic_RadioButton_C.GetIsChecked
// 0x0001 (0x0001 - 0x0000)
struct Basic_RadioButton_C_GetIsChecked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_RadioButton_C_GetIsChecked) == 0x000001, "Wrong alignment on Basic_RadioButton_C_GetIsChecked");
static_assert(sizeof(Basic_RadioButton_C_GetIsChecked) == 0x000001, "Wrong size on Basic_RadioButton_C_GetIsChecked");
static_assert(offsetof(Basic_RadioButton_C_GetIsChecked, ReturnValue) == 0x000000, "Member 'Basic_RadioButton_C_GetIsChecked::ReturnValue' has a wrong offset!");

// Function Basic_RadioButton.Basic_RadioButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_RadioButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_RadioButton_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_RadioButton_C_PreConstruct");
static_assert(sizeof(Basic_RadioButton_C_PreConstruct) == 0x000001, "Wrong size on Basic_RadioButton_C_PreConstruct");
static_assert(offsetof(Basic_RadioButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_RadioButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Basic_RadioButton.Basic_RadioButton_C.ExecuteUbergraph_Basic_RadioButton
// 0x0070 (0x0070 - 0x0000)
struct Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A9[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32AA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32AB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32AC[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_3;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton) == 0x000008, "Wrong alignment on Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton");
static_assert(sizeof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton) == 0x000070, "Wrong size on Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, EntryPoint) == 0x000000, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, Temp_byte_Variable) == 0x000004, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, Temp_byte_Variable_1) == 0x000005, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_MenuColors_OutputColor) == 0x000008, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, Temp_bool_Variable) == 0x000018, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_MenuColors_OutputColor_1) == 0x00002C, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_MenuColors_OutputColor_2) == 0x00003C, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, K2Node_Event_IsDesignTime) == 0x00004C, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, K2Node_Select_Default) == 0x00004D, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_PlayAnimation_ReturnValue_1) == 0x000050, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_MenuColors_OutputColor_3) == 0x000058, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_MenuColors_OutputColor_3' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_Not_PreBool_ReturnValue_1) == 0x000068, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'Basic_RadioButton_C_ExecuteUbergraph_Basic_RadioButton::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Basic_RadioButton.Basic_RadioButton_C.OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Basic_RadioButton_C_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          Param_IsChecked;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_RadioButton_C_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on Basic_RadioButton_C_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(Basic_RadioButton_C_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on Basic_RadioButton_C_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(Basic_RadioButton_C_OnCheckStateChanged__DelegateSignature, Param_IsChecked) == 0x000000, "Member 'Basic_RadioButton_C_OnCheckStateChanged__DelegateSignature::Param_IsChecked' has a wrong offset!");

}

