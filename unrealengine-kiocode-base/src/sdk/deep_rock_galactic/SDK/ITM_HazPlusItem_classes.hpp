#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_HazPlusItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ENUM_MenuColors_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_HazPlusItem.ITM_HazPlusItem_C
// 0x00B8 (0x0318 - 0x0260)
class UITM_HazPlusItem_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimFade;                                          // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBasic_Image_C*                         Arrow_Left;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Image_C*                         Arrow_Right;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Image_C*                         BG_Left_Image;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Image_C*                         BG_Right_Image;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Left;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Right;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Label_C*                         Header_Label;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Icons_HBox;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Locked_Button;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Root_Overlay;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        State_Switcher;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Unlocked_Button;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnApplicationsChanged;                             // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDifficultyMutatorItem                 Mutator;                                           // 0x02E0(0x0010)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn)
	class UDifficultyMutatorSetupItem*            DifficultyMutator;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C7[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnItemHoveredChanged;                              // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Is_Unlocked;                                       // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void OnApplicationsChanged__DelegateSignature(const struct FDifficultyMutatorItem& Param_Mutator);
	void OnItemHoveredChanged__DelegateSignature();
	void ExecuteUbergraph_ITM_HazPlusItem(int32 EntryPoint);
	void BndEvt__ITM_HazPlusItem_Locked_Button_K2Node_ComponentBoundEvent_9_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ITM_HazPlusItem_Locked_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__ITM_HazPlusItem_Button_Left_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ITM_HazPlusItem_Button_Left_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ITM_HazPlusItem_MainButton_K2Node_ComponentBoundEvent_8_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ITM_HazPlusItem_MainButton_K2Node_ComponentBoundEvent_7_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ITM_HazPlusItem_Button_Right_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__ITM_HazPlusItem_Button_Left_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__ITM_HazPlusItem_Button_Right_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ITM_HazPlusItem_Button_Right_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void ButtonHoveredChanged(class UButton* InButton, class UBasic_Image_C* InArrow);
	void ClickButton(class UButton* InButton, class UBasic_Image_C* InArrow, int32 InIncrement);
	void Refresh();
	void SetAmount(int32 InAmount, int32* OutAmount);
	void RefreshFromManager();
	void SetIsUnlocked(bool InIsUnlocked);
	void GetInfo(struct FDifficultyMutatorInfo* Info);
	bool IsItemHovered();
	void SetData(const struct FDifficultyMutatorItem& InMutator, bool InIs_Unlocked);
	void GetAmountFromManager(int32* OutAmount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_HazPlusItem_C">();
	}
	static class UITM_HazPlusItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_HazPlusItem_C>();
	}
};
static_assert(alignof(UITM_HazPlusItem_C) == 0x000008, "Wrong alignment on UITM_HazPlusItem_C");
static_assert(sizeof(UITM_HazPlusItem_C) == 0x000318, "Wrong size on UITM_HazPlusItem_C");
static_assert(offsetof(UITM_HazPlusItem_C, UberGraphFrame) == 0x000260, "Member 'UITM_HazPlusItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, AnimFade) == 0x000268, "Member 'UITM_HazPlusItem_C::AnimFade' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Arrow_Left) == 0x000270, "Member 'UITM_HazPlusItem_C::Arrow_Left' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Arrow_Right) == 0x000278, "Member 'UITM_HazPlusItem_C::Arrow_Right' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, BG_Left_Image) == 0x000280, "Member 'UITM_HazPlusItem_C::BG_Left_Image' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, BG_Right_Image) == 0x000288, "Member 'UITM_HazPlusItem_C::BG_Right_Image' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Button_Left) == 0x000290, "Member 'UITM_HazPlusItem_C::Button_Left' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Button_Right) == 0x000298, "Member 'UITM_HazPlusItem_C::Button_Right' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Header_Label) == 0x0002A0, "Member 'UITM_HazPlusItem_C::Header_Label' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Icons_HBox) == 0x0002A8, "Member 'UITM_HazPlusItem_C::Icons_HBox' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Locked_Button) == 0x0002B0, "Member 'UITM_HazPlusItem_C::Locked_Button' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Root_Overlay) == 0x0002B8, "Member 'UITM_HazPlusItem_C::Root_Overlay' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, State_Switcher) == 0x0002C0, "Member 'UITM_HazPlusItem_C::State_Switcher' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Unlocked_Button) == 0x0002C8, "Member 'UITM_HazPlusItem_C::Unlocked_Button' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, OnApplicationsChanged) == 0x0002D0, "Member 'UITM_HazPlusItem_C::OnApplicationsChanged' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Mutator) == 0x0002E0, "Member 'UITM_HazPlusItem_C::Mutator' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, DifficultyMutator) == 0x0002F0, "Member 'UITM_HazPlusItem_C::DifficultyMutator' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Amount) == 0x0002F8, "Member 'UITM_HazPlusItem_C::Amount' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, OnItemHoveredChanged) == 0x000300, "Member 'UITM_HazPlusItem_C::OnItemHoveredChanged' has a wrong offset!");
static_assert(offsetof(UITM_HazPlusItem_C, Is_Unlocked) == 0x000310, "Member 'UITM_HazPlusItem_C::Is_Unlocked' has a wrong offset!");

}

