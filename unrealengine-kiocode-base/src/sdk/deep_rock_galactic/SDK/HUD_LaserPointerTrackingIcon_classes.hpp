#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_LaserPointerTrackingIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUD_LaserPointerTrackingIcon.HUD_LaserPointerTrackingIcon_C
// 0x0070 (0x0320 - 0x02B0)
class UHUD_LaserPointerTrackingIcon_C final : public UActorTrackingWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimIcon;                                          // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow;                                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_HUD_BracketWindowSmall_C*        Basic_HUD_BracketWindowSmall;                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DistanceLabel;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Image_C*                         IconImage;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NameLabel;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerName;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootCanvas;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ArrowRotation;                                     // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrowRadius;                                       // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrowAngle;                                        // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E5[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALaserPointerMarker*                    Marker;                                            // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCanvasVisible;                                   // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E6[0x3];                                     // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeNotLookingAt;                                  // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetIconColor(const struct FLinearColor& InColor);
	void UpdateVisibility();
	void UpdatePixelOffset();
	void OnInViewChanged(bool InView, float Angle);
	void PreConstruct(bool IsDesignTime);
	void UpdateArrow(bool InView, float Angle);
	void OnShow();
	void OnTargetDistanceChanged(float Distance);
	void OnTargetSet(class AActor* NewTarget);
	void ExecuteUbergraph_HUD_LaserPointerTrackingIcon(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_LaserPointerTrackingIcon_C">();
	}
	static class UHUD_LaserPointerTrackingIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_LaserPointerTrackingIcon_C>();
	}
};
static_assert(alignof(UHUD_LaserPointerTrackingIcon_C) == 0x000008, "Wrong alignment on UHUD_LaserPointerTrackingIcon_C");
static_assert(sizeof(UHUD_LaserPointerTrackingIcon_C) == 0x000320, "Wrong size on UHUD_LaserPointerTrackingIcon_C");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, UberGraphFrame) == 0x0002B0, "Member 'UHUD_LaserPointerTrackingIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, FadeIn) == 0x0002B8, "Member 'UHUD_LaserPointerTrackingIcon_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, AnimIcon) == 0x0002C0, "Member 'UHUD_LaserPointerTrackingIcon_C::AnimIcon' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, Arrow) == 0x0002C8, "Member 'UHUD_LaserPointerTrackingIcon_C::Arrow' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, Basic_HUD_BracketWindowSmall) == 0x0002D0, "Member 'UHUD_LaserPointerTrackingIcon_C::Basic_HUD_BracketWindowSmall' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, DistanceLabel) == 0x0002D8, "Member 'UHUD_LaserPointerTrackingIcon_C::DistanceLabel' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, IconImage) == 0x0002E0, "Member 'UHUD_LaserPointerTrackingIcon_C::IconImage' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, NameLabel) == 0x0002E8, "Member 'UHUD_LaserPointerTrackingIcon_C::NameLabel' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, PlayerName) == 0x0002F0, "Member 'UHUD_LaserPointerTrackingIcon_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, RootCanvas) == 0x0002F8, "Member 'UHUD_LaserPointerTrackingIcon_C::RootCanvas' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, ArrowRotation) == 0x000300, "Member 'UHUD_LaserPointerTrackingIcon_C::ArrowRotation' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, ArrowRadius) == 0x000304, "Member 'UHUD_LaserPointerTrackingIcon_C::ArrowRadius' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, ArrowAngle) == 0x000308, "Member 'UHUD_LaserPointerTrackingIcon_C::ArrowAngle' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, Marker) == 0x000310, "Member 'UHUD_LaserPointerTrackingIcon_C::Marker' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, IsCanvasVisible) == 0x000318, "Member 'UHUD_LaserPointerTrackingIcon_C::IsCanvasVisible' has a wrong offset!");
static_assert(offsetof(UHUD_LaserPointerTrackingIcon_C, TimeNotLookingAt) == 0x00031C, "Member 'UHUD_LaserPointerTrackingIcon_C::TimeNotLookingAt' has a wrong offset!");

}

