#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerReadyBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerReadyBox.PlayerReadyBox_C
// 0x0070 (0x02D0 - 0x0260)
class UPlayerReadyBox_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProgressBar*                           Bar_Loading;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Menu_ColorBarVertical_C*         Basic_Menu_ColorBarVertical;                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber_128;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_CharacterData_C*                   ITM_CharacterData;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_CharacterIcon_C*                   ITM_CharacterIcon;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           NotReadyColor;                                     // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReadyColor;                                        // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReady;                                           // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F4F[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        PlayerState;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetPct;                                         // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPct;                                        // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       NewVar_0;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void HideClass();
	void SetReady(bool Param_IsReady);
	void ReadyChanged(bool Param_IsReady);
	void Init(class AFSDPlayerState* Param_PlayerState);
	void NameChanged(const class FString& NewName);
	void OnSelectedCharacterChanged(TSubclassOf<class APlayerCharacter> NewCharacter);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void FractionGenerated(float Fraction);
	void LevelGenState(const class FString& NewState);
	void UpdateHeroInfo(class UPlayerCharacterID* HeroClass);
	void OnCharacterStatsChanged(class AFSDPlayerState* Param_PlayerState);
	void ExecuteUbergraph_PlayerReadyBox(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerReadyBox_C">();
	}
	static class UPlayerReadyBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerReadyBox_C>();
	}
};
static_assert(alignof(UPlayerReadyBox_C) == 0x000008, "Wrong alignment on UPlayerReadyBox_C");
static_assert(sizeof(UPlayerReadyBox_C) == 0x0002D0, "Wrong size on UPlayerReadyBox_C");
static_assert(offsetof(UPlayerReadyBox_C, UberGraphFrame) == 0x000260, "Member 'UPlayerReadyBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, Bar_Loading) == 0x000268, "Member 'UPlayerReadyBox_C::Bar_Loading' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, Basic_Menu_ColorBarVertical) == 0x000270, "Member 'UPlayerReadyBox_C::Basic_Menu_ColorBarVertical' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, CircularThrobber_128) == 0x000278, "Member 'UPlayerReadyBox_C::CircularThrobber_128' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, ITM_CharacterData) == 0x000280, "Member 'UPlayerReadyBox_C::ITM_CharacterData' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, ITM_CharacterIcon) == 0x000288, "Member 'UPlayerReadyBox_C::ITM_CharacterIcon' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, NotReadyColor) == 0x000290, "Member 'UPlayerReadyBox_C::NotReadyColor' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, ReadyColor) == 0x0002A0, "Member 'UPlayerReadyBox_C::ReadyColor' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, IsReady) == 0x0002B0, "Member 'UPlayerReadyBox_C::IsReady' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, PlayerState) == 0x0002B8, "Member 'UPlayerReadyBox_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, TargetPct) == 0x0002C0, "Member 'UPlayerReadyBox_C::TargetPct' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, CurrentPct) == 0x0002C4, "Member 'UPlayerReadyBox_C::CurrentPct' has a wrong offset!");
static_assert(offsetof(UPlayerReadyBox_C, NewVar_0) == 0x0002C8, "Member 'UPlayerReadyBox_C::NewVar_0' has a wrong offset!");

}

