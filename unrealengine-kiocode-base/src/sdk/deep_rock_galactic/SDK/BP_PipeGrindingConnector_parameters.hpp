#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PipeGrindingConnector

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.ExecuteUbergraph_BP_PipeGrindingConnector
// 0x01F0 (0x01F0 - 0x0000)
struct BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WorldLocation_1;                      // 0x0004(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0010(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WorldLocation;                        // 0x001C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Directioy;                            // 0x0028(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Speeding;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47F9[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Direction;                      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47FA[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFirstPerson_ReturnValue;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47FB[0x1];                                     // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFirstPerson_ReturnValue_1;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47FC[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47FD[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFirstPerson_ReturnValue_2;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47FE[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47FF[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector) == 0x000010, "Wrong alignment on BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector");
static_assert(sizeof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector) == 0x0001F0, "Wrong size on BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, EntryPoint) == 0x000000, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, K2Node_Event_WorldLocation_1) == 0x000004, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::K2Node_Event_WorldLocation_1' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, K2Node_Event_Direction) == 0x000010, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, K2Node_Event_WorldLocation) == 0x00001C, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::K2Node_Event_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, K2Node_Event_Directioy) == 0x000028, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::K2Node_Event_Directioy' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, K2Node_Event_Speeding) == 0x000034, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::K2Node_Event_Speeding' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, K2Node_CustomEvent_Location) == 0x000038, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, K2Node_CustomEvent_Direction) == 0x000044, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000050, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000090, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000118, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_IsFirstPerson_ReturnValue) == 0x000119, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_IsFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_Not_PreBool_ReturnValue) == 0x00011A, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00011C, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000128, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_IsFirstPerson_ReturnValue_1) == 0x000130, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_IsFirstPerson_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_ComposeRotators_ReturnValue) == 0x000134, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_Not_PreBool_ReturnValue_1) == 0x000140, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000144, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_GetVelocity_ReturnValue) == 0x0001CC, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_IsFirstPerson_ReturnValue_2) == 0x0001D8, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_IsFirstPerson_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_VSize_ReturnValue) == 0x0001DC, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001E0, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001E4, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_FClamp_ReturnValue) == 0x0001E8, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector, CallFunc_Square_ReturnValue) == 0x0001EC, "Member 'BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector::CallFunc_Square_ReturnValue' has a wrong offset!");

// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.UpdateLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_PipeGrindingConnector_C_UpdateLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PipeGrindingConnector_C_UpdateLocation) == 0x000004, "Wrong alignment on BP_PipeGrindingConnector_C_UpdateLocation");
static_assert(sizeof(BP_PipeGrindingConnector_C_UpdateLocation) == 0x000018, "Wrong size on BP_PipeGrindingConnector_C_UpdateLocation");
static_assert(offsetof(BP_PipeGrindingConnector_C_UpdateLocation, Location) == 0x000000, "Member 'BP_PipeGrindingConnector_C_UpdateLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_UpdateLocation, Direction) == 0x00000C, "Member 'BP_PipeGrindingConnector_C_UpdateLocation::Direction' has a wrong offset!");

// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.ReceiveUpdateZipLinePoint
// 0x001C (0x001C - 0x0000)
struct BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Directioy;                                         // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Speeding;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint) == 0x000004, "Wrong alignment on BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint");
static_assert(sizeof(BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint) == 0x00001C, "Wrong size on BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint");
static_assert(offsetof(BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint, WorldLocation) == 0x000000, "Member 'BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint, Directioy) == 0x00000C, "Member 'BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint::Directioy' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint, Speeding) == 0x000018, "Member 'BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint::Speeding' has a wrong offset!");

// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.ReceiveConnected
// 0x0018 (0x0018 - 0x0000)
struct BP_PipeGrindingConnector_C_ReceiveConnected final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PipeGrindingConnector_C_ReceiveConnected) == 0x000004, "Wrong alignment on BP_PipeGrindingConnector_C_ReceiveConnected");
static_assert(sizeof(BP_PipeGrindingConnector_C_ReceiveConnected) == 0x000018, "Wrong size on BP_PipeGrindingConnector_C_ReceiveConnected");
static_assert(offsetof(BP_PipeGrindingConnector_C_ReceiveConnected, WorldLocation) == 0x000000, "Member 'BP_PipeGrindingConnector_C_ReceiveConnected::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_ReceiveConnected, Direction) == 0x00000C, "Member 'BP_PipeGrindingConnector_C_ReceiveConnected::Direction' has a wrong offset!");

// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.SetConnectorVisible
// 0x0002 (0x0002 - 0x0000)
struct BP_PipeGrindingConnector_C_SetConnectorVisible final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PipeGrindingConnector_C_SetConnectorVisible) == 0x000001, "Wrong alignment on BP_PipeGrindingConnector_C_SetConnectorVisible");
static_assert(sizeof(BP_PipeGrindingConnector_C_SetConnectorVisible) == 0x000002, "Wrong size on BP_PipeGrindingConnector_C_SetConnectorVisible");
static_assert(offsetof(BP_PipeGrindingConnector_C_SetConnectorVisible, InVisible) == 0x000000, "Member 'BP_PipeGrindingConnector_C_SetConnectorVisible::InVisible' has a wrong offset!");
static_assert(offsetof(BP_PipeGrindingConnector_C_SetConnectorVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PipeGrindingConnector_C_SetConnectorVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

