#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NetworkPlayerController

#include "Basic.hpp"

#include "BP_NetworkPlayerController_classes.hpp"
#include "BP_NetworkPlayerController_parameters.hpp"


namespace SDK
{

// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.CollapseAndRemoveFromParent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NetworkPlayerController_C::CollapseAndRemoveFromParent(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "CollapseAndRemoveFromParent");

	Params::BP_NetworkPlayerController_C_CollapseAndRemoveFromParent Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.GetLoaderScreenUIClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UClass* ABP_NetworkPlayerController_C::GetLoaderScreenUIClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "GetLoaderScreenUIClass");

	Params::BP_NetworkPlayerController_C_GetLoaderScreenUIClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.CleanupUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NetworkPlayerController_C::CleanupUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "CleanupUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.GetNonTakenHero
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayerCharacterID*               SelectedClass                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NetworkPlayerController_C::GetNonTakenHero(class UPlayerCharacterID** SelectedClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "GetNonTakenHero");

	Params::BP_NetworkPlayerController_C_GetNonTakenHero Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedClass != nullptr)
		*SelectedClass = Parms.SelectedClass;
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NetworkPlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.OnBack
// (BlueprintCallable, BlueprintEvent)

void ABP_NetworkPlayerController_C::OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "OnBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.OnPlayerCharacterPossesed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Pawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NetworkPlayerController_C::OnPlayerCharacterPossesed_Event(class APawn* Param_Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "OnPlayerCharacterPossesed_Event");

	Params::BP_NetworkPlayerController_C_OnPlayerCharacterPossesed_Event Parms{};

	Parms.Param_Pawn = Param_Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.Server_RequestNonTakenHero
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_NetworkPlayerController_C::Server_RequestNonTakenHero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "Server_RequestNonTakenHero");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.Client_RecieveNonTakenHero
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayerCharacterID*               New_Character                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NetworkPlayerController_C::Client_RecieveNonTakenHero(class UPlayerCharacterID* New_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "Client_RecieveNonTakenHero");

	Params::BP_NetworkPlayerController_C_Client_RecieveNonTakenHero Parms{};

	Parms.New_Character = New_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.Server_SetCharacterSelected
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_NetworkPlayerController_C::Server_SetCharacterSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "Server_SetCharacterSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.RecievePreClientTravel
// (Event, Protected, BlueprintEvent)

void ABP_NetworkPlayerController_C::RecievePreClientTravel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "RecievePreClientTravel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_NetworkPlayerController_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.ShowReconnect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NetworkPlayerController_C::ShowReconnect(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "ShowReconnect");

	Params::BP_NetworkPlayerController_C_ShowReconnect Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NetworkPlayerController.BP_NetworkPlayerController_C.ExecuteUbergraph_BP_NetworkPlayerController
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NetworkPlayerController_C::ExecuteUbergraph_BP_NetworkPlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NetworkPlayerController_C", "ExecuteUbergraph_BP_NetworkPlayerController");

	Params::BP_NetworkPlayerController_C_ExecuteUbergraph_BP_NetworkPlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

