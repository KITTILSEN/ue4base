#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LureTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_LureTarget.BP_LureTarget_C.Attach to Valid Surface
// 0x01D0 (0x01D0 - 0x0000)
struct BP_LureTarget_C_Attach_to_Valid_Surface final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D4[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D5[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0018(0x0020)()
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D6[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D7[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D8[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D9[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53DA[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53DB[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53DC[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x01A8(0x0020)()
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LureTarget_C_Attach_to_Valid_Surface) == 0x000008, "Wrong alignment on BP_LureTarget_C_Attach_to_Valid_Surface");
static_assert(sizeof(BP_LureTarget_C_Attach_to_Valid_Surface) == 0x0001D0, "Wrong size on BP_LureTarget_C_Attach_to_Valid_Surface");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, Temp_struct_Variable) == 0x000018, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_HasTag_ReturnValue) == 0x000048, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_LineTraceMulti_OutHits) == 0x000068, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_LineTraceMulti_ReturnValue) == 0x000078, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_bBlockingHit) == 0x000109, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010A, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_Location) == 0x000114, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_Normal) == 0x00012C, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_ImpactNormal) == 0x000138, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_HitActor) == 0x000150, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_HitComponent) == 0x000158, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_HitBoneName) == 0x000160, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_HitItem) == 0x000168, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_ElementIndex) == 0x00016C, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_FaceIndex) == 0x000170, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_TraceStart) == 0x000174, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BreakHitResult_TraceEnd) == 0x000180, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_BooleanAND_ReturnValue) == 0x00018C, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000190, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x0001A8, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_Attach_to_Valid_Surface, CallFunc_DoesImplementInterface_ReturnValue) == 0x0001C8, "Member 'BP_LureTarget_C_Attach_to_Valid_Surface::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.SetScaleDownLerp
// 0x0024 (0x0024 - 0x0000)
struct BP_LureTarget_C_SetScaleDownLerp final
{
public:
	float                                         Z;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LureTarget_C_SetScaleDownLerp) == 0x000004, "Wrong alignment on BP_LureTarget_C_SetScaleDownLerp");
static_assert(sizeof(BP_LureTarget_C_SetScaleDownLerp) == 0x000024, "Wrong size on BP_LureTarget_C_SetScaleDownLerp");
static_assert(offsetof(BP_LureTarget_C_SetScaleDownLerp, Z) == 0x000000, "Member 'BP_LureTarget_C_SetScaleDownLerp::Z' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleDownLerp, Y) == 0x000004, "Member 'BP_LureTarget_C_SetScaleDownLerp::Y' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleDownLerp, X) == 0x000008, "Member 'BP_LureTarget_C_SetScaleDownLerp::X' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleDownLerp, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'BP_LureTarget_C_SetScaleDownLerp::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleDownLerp, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'BP_LureTarget_C_SetScaleDownLerp::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleDownLerp, CallFunc_Lerp_ReturnValue_2) == 0x000014, "Member 'BP_LureTarget_C_SetScaleDownLerp::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleDownLerp, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_LureTarget_C_SetScaleDownLerp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.SetScaleUpLerp
// 0x0024 (0x0024 - 0x0000)
struct BP_LureTarget_C_SetScaleUpLerp final
{
public:
	float                                         Z;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LureTarget_C_SetScaleUpLerp) == 0x000004, "Wrong alignment on BP_LureTarget_C_SetScaleUpLerp");
static_assert(sizeof(BP_LureTarget_C_SetScaleUpLerp) == 0x000024, "Wrong size on BP_LureTarget_C_SetScaleUpLerp");
static_assert(offsetof(BP_LureTarget_C_SetScaleUpLerp, Z) == 0x000000, "Member 'BP_LureTarget_C_SetScaleUpLerp::Z' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleUpLerp, Y) == 0x000004, "Member 'BP_LureTarget_C_SetScaleUpLerp::Y' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleUpLerp, X) == 0x000008, "Member 'BP_LureTarget_C_SetScaleUpLerp::X' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleUpLerp, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'BP_LureTarget_C_SetScaleUpLerp::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleUpLerp, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'BP_LureTarget_C_SetScaleUpLerp::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleUpLerp, CallFunc_Lerp_ReturnValue_2) == 0x000014, "Member 'BP_LureTarget_C_SetScaleUpLerp::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleUpLerp, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_LureTarget_C_SetScaleUpLerp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.SetScaleLerpFromRandom
// 0x0024 (0x0024 - 0x0000)
struct BP_LureTarget_C_SetScaleLerpFromRandom final
{
public:
	float                                         ZRandomConnection;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YRandomConnection;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XRandomConnection;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LureTarget_C_SetScaleLerpFromRandom) == 0x000004, "Wrong alignment on BP_LureTarget_C_SetScaleLerpFromRandom");
static_assert(sizeof(BP_LureTarget_C_SetScaleLerpFromRandom) == 0x000024, "Wrong size on BP_LureTarget_C_SetScaleLerpFromRandom");
static_assert(offsetof(BP_LureTarget_C_SetScaleLerpFromRandom, ZRandomConnection) == 0x000000, "Member 'BP_LureTarget_C_SetScaleLerpFromRandom::ZRandomConnection' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleLerpFromRandom, YRandomConnection) == 0x000004, "Member 'BP_LureTarget_C_SetScaleLerpFromRandom::YRandomConnection' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleLerpFromRandom, XRandomConnection) == 0x000008, "Member 'BP_LureTarget_C_SetScaleLerpFromRandom::XRandomConnection' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleLerpFromRandom, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'BP_LureTarget_C_SetScaleLerpFromRandom::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleLerpFromRandom, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'BP_LureTarget_C_SetScaleLerpFromRandom::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleLerpFromRandom, CallFunc_Lerp_ReturnValue_2) == 0x000014, "Member 'BP_LureTarget_C_SetScaleLerpFromRandom::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_SetScaleLerpFromRandom, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_LureTarget_C_SetScaleLerpFromRandom::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BP_LureTarget_C_UserConstructionScript final
{
public:
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LureTarget_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_LureTarget_C_UserConstructionScript");
static_assert(sizeof(BP_LureTarget_C_UserConstructionScript) == 0x000030, "Wrong size on BP_LureTarget_C_UserConstructionScript");
static_assert(offsetof(BP_LureTarget_C_UserConstructionScript, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000000, "Member 'BP_LureTarget_C_UserConstructionScript::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_LureTarget_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_UserConstructionScript, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'BP_LureTarget_C_UserConstructionScript::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_UserConstructionScript, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00001C, "Member 'BP_LureTarget_C_UserConstructionScript::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000020, "Member 'BP_LureTarget_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_LureTarget_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature final
{
public:
	class UHealthComponentBase*                   HealthComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature) == 0x000008, "Wrong alignment on BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature");
static_assert(sizeof(BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature) == 0x000008, "Wrong size on BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature");
static_assert(offsetof(BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature, HealthComponent) == 0x000000, "Member 'BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature::HealthComponent' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature) == 0x000004, "Wrong alignment on BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature");
static_assert(sizeof(BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature) == 0x000004, "Wrong size on BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature");
static_assert(offsetof(BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature, Health) == 0x000000, "Member 'BP_LureTarget_C_BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature::Health' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.ShowDamageEffects
// 0x0020 (0x0020 - 0x0000)
struct BP_LureTarget_C_ShowDamageEffects final
{
public:
	class UParticleSystem*                        Particles;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Orientation;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LureTarget_C_ShowDamageEffects) == 0x000008, "Wrong alignment on BP_LureTarget_C_ShowDamageEffects");
static_assert(sizeof(BP_LureTarget_C_ShowDamageEffects) == 0x000020, "Wrong size on BP_LureTarget_C_ShowDamageEffects");
static_assert(offsetof(BP_LureTarget_C_ShowDamageEffects, Particles) == 0x000000, "Member 'BP_LureTarget_C_ShowDamageEffects::Particles' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ShowDamageEffects, Location) == 0x000008, "Member 'BP_LureTarget_C_ShowDamageEffects::Location' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ShowDamageEffects, Orientation) == 0x000014, "Member 'BP_LureTarget_C_ShowDamageEffects::Orientation' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_LureTarget_C_BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature final
{
public:
	bool                                          boolValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LureTarget_C_BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature) == 0x000001, "Wrong alignment on BP_LureTarget_C_BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature");
static_assert(sizeof(BP_LureTarget_C_BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature) == 0x000001, "Wrong size on BP_LureTarget_C_BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature");
static_assert(offsetof(BP_LureTarget_C_BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature, boolValue) == 0x000000, "Member 'BP_LureTarget_C_BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature::boolValue' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.ExecuteUbergraph_BP_LureTarget
// 0x00E8 (0x00E8 - 0x0000)
struct BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53DD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53DE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53DF[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E0[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_3;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E1[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHealthComponentBase*                   K2Node_ComponentBoundEvent_HealthComponent;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Health;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E2[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E3[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E4[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Event_particles;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location;                             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_orientation;                          // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_boolValue;              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget) == 0x000008, "Wrong alignment on BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget");
static_assert(sizeof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget) == 0x0000E8, "Wrong size on BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, EntryPoint) == 0x000000, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000020, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000028, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000034, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000044, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_RandomFloatInRange_ReturnValue) == 0x000050, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000054, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00005C, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000060, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000064, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_RandomIntegerInRange_ReturnValue_3) == 0x00006C, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_RandomIntegerInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000070, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000074, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, K2Node_ComponentBoundEvent_HealthComponent) == 0x000080, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::K2Node_ComponentBoundEvent_HealthComponent' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, K2Node_ComponentBoundEvent_Health) == 0x000088, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::K2Node_ComponentBoundEvent_Health' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_MapRangeClamped_ReturnValue) == 0x000094, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_FClamp_ReturnValue) == 0x00009C, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_VLerp_ReturnValue) == 0x0000A0, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000AC, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, K2Node_Event_particles) == 0x0000C0, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::K2Node_Event_particles' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, K2Node_Event_location) == 0x0000C8, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::K2Node_Event_location' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, K2Node_Event_orientation) == 0x0000D4, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::K2Node_Event_orientation' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, CallFunc_HasAuthority_ReturnValue) == 0x0000E0, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget, K2Node_ComponentBoundEvent_boolValue) == 0x0000E1, "Member 'BP_LureTarget_C_ExecuteUbergraph_BP_LureTarget::K2Node_ComponentBoundEvent_boolValue' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.GetIsTargetable
// 0x0001 (0x0001 - 0x0000)
struct BP_LureTarget_C_GetIsTargetable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LureTarget_C_GetIsTargetable) == 0x000001, "Wrong alignment on BP_LureTarget_C_GetIsTargetable");
static_assert(sizeof(BP_LureTarget_C_GetIsTargetable) == 0x000001, "Wrong size on BP_LureTarget_C_GetIsTargetable");
static_assert(offsetof(BP_LureTarget_C_GetIsTargetable, ReturnValue) == 0x000000, "Member 'BP_LureTarget_C_GetIsTargetable::ReturnValue' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.GetTargetCenterMass
// 0x0018 (0x0018 - 0x0000)
struct BP_LureTarget_C_GetTargetCenterMass final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LureTarget_C_GetTargetCenterMass) == 0x000004, "Wrong alignment on BP_LureTarget_C_GetTargetCenterMass");
static_assert(sizeof(BP_LureTarget_C_GetTargetCenterMass) == 0x000018, "Wrong size on BP_LureTarget_C_GetTargetCenterMass");
static_assert(offsetof(BP_LureTarget_C_GetTargetCenterMass, ReturnValue) == 0x000000, "Member 'BP_LureTarget_C_GetTargetCenterMass::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LureTarget_C_GetTargetCenterMass, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_LureTarget_C_GetTargetCenterMass::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_LureTarget.BP_LureTarget_C.GetTargetHealthComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_LureTarget_C_GetTargetHealthComponent final
{
public:
	class UHealthComponentBase*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LureTarget_C_GetTargetHealthComponent) == 0x000008, "Wrong alignment on BP_LureTarget_C_GetTargetHealthComponent");
static_assert(sizeof(BP_LureTarget_C_GetTargetHealthComponent) == 0x000008, "Wrong size on BP_LureTarget_C_GetTargetHealthComponent");
static_assert(offsetof(BP_LureTarget_C_GetTargetHealthComponent, ReturnValue) == 0x000000, "Member 'BP_LureTarget_C_GetTargetHealthComponent::ReturnValue' has a wrong offset!");

}

