#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lore_Container_Text_W_Image

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Lore_Container_Text_W_Image.Lore_Container_Text_W_Image_C.ExecuteUbergraph_Lore_Container_Text_W_Image
// 0x00D8 (0x00D8 - 0x0000)
struct Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BC5[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC6[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_CustomEvent_content;                        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_CustomEvent_InHorizontalAlignment;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            K2Node_CustomEvent_InVerticalAlignment;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC7[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_CustomEvent_InPadding;                      // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateSizeRule                                K2Node_CustomEvent_Size_Rule;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BC8[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0040(0x0008)(NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC9[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BCA[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BCB[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_headline;                         // 0x0078(0x0018)()
	class FText                                   CallFunc_GetText_richText;                         // 0x0090(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BCC[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00B0(0x0018)()
	class UTexture2D*                             CallFunc_GetBackgroundImage_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMinersManualData*                      K2Node_CustomEvent_Data;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image) == 0x000008, "Wrong alignment on Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image");
static_assert(sizeof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image) == 0x0000D8, "Wrong size on Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, EntryPoint) == 0x000000, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_byte_Variable) == 0x000004, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_byte_Variable_1) == 0x000005, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_bool_Variable) == 0x000006, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_byte_Variable_2) == 0x000007, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_byte_Variable_3) == 0x000008, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_Event_IsDesignTime) == 0x000009, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, CallFunc_MenuColors_OutputColor) == 0x00000C, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_CustomEvent_content) == 0x000020, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_CustomEvent_content' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_CustomEvent_InHorizontalAlignment) == 0x000028, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_CustomEvent_InHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_CustomEvent_InVerticalAlignment) == 0x000029, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_CustomEvent_InVerticalAlignment' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_CustomEvent_InPadding) == 0x00002C, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_CustomEvent_InPadding' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_CustomEvent_Size_Rule) == 0x00003C, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_CustomEvent_Size_Rule' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_bool_Variable_1) == 0x00003D, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_MakeStruct_SlateChildSize) == 0x000040, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_byte_Variable_4) == 0x000048, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000050, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_Select_Default) == 0x000058, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_MakeStruct_Margin) == 0x00005C, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_byte_Variable_5) == 0x00006C, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, Temp_bool_Variable_2) == 0x00006D, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_Select_Default_1) == 0x00006E, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, CallFunc_BreakVector2D_X) == 0x000070, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, CallFunc_BreakVector2D_Y) == 0x000074, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, CallFunc_GetText_headline) == 0x000078, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::CallFunc_GetText_headline' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, CallFunc_GetText_richText) == 0x000090, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::CallFunc_GetText_richText' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_Select_Default_2) == 0x0000A8, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, CallFunc_TextToUpper_ReturnValue) == 0x0000B0, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, CallFunc_GetBackgroundImage_ReturnValue) == 0x0000C8, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::CallFunc_GetBackgroundImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image, K2Node_CustomEvent_Data) == 0x0000D0, "Member 'Lore_Container_Text_W_Image_C_ExecuteUbergraph_Lore_Container_Text_W_Image::K2Node_CustomEvent_Data' has a wrong offset!");

// Function Lore_Container_Text_W_Image.Lore_Container_Text_W_Image_C.SetData
// 0x0008 (0x0008 - 0x0000)
struct Lore_Container_Text_W_Image_C_SetData final
{
public:
	class UMinersManualData*                      Param_Data;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_Container_Text_W_Image_C_SetData) == 0x000008, "Wrong alignment on Lore_Container_Text_W_Image_C_SetData");
static_assert(sizeof(Lore_Container_Text_W_Image_C_SetData) == 0x000008, "Wrong size on Lore_Container_Text_W_Image_C_SetData");
static_assert(offsetof(Lore_Container_Text_W_Image_C_SetData, Param_Data) == 0x000000, "Member 'Lore_Container_Text_W_Image_C_SetData::Param_Data' has a wrong offset!");

// Function Lore_Container_Text_W_Image.Lore_Container_Text_W_Image_C.AddItem
// 0x0020 (0x0020 - 0x0000)
struct Lore_Container_Text_W_Image_C_AddItem final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          InHorizontalAlignment;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            InVerticalAlignment;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BCD[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                InPadding;                                         // 0x000C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateSizeRule                                Size_Rule;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_Container_Text_W_Image_C_AddItem) == 0x000008, "Wrong alignment on Lore_Container_Text_W_Image_C_AddItem");
static_assert(sizeof(Lore_Container_Text_W_Image_C_AddItem) == 0x000020, "Wrong size on Lore_Container_Text_W_Image_C_AddItem");
static_assert(offsetof(Lore_Container_Text_W_Image_C_AddItem, Content) == 0x000000, "Member 'Lore_Container_Text_W_Image_C_AddItem::Content' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_AddItem, InHorizontalAlignment) == 0x000008, "Member 'Lore_Container_Text_W_Image_C_AddItem::InHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_AddItem, InVerticalAlignment) == 0x000009, "Member 'Lore_Container_Text_W_Image_C_AddItem::InVerticalAlignment' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_AddItem, InPadding) == 0x00000C, "Member 'Lore_Container_Text_W_Image_C_AddItem::InPadding' has a wrong offset!");
static_assert(offsetof(Lore_Container_Text_W_Image_C_AddItem, Size_Rule) == 0x00001C, "Member 'Lore_Container_Text_W_Image_C_AddItem::Size_Rule' has a wrong offset!");

// Function Lore_Container_Text_W_Image.Lore_Container_Text_W_Image_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Lore_Container_Text_W_Image_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_Container_Text_W_Image_C_PreConstruct) == 0x000001, "Wrong alignment on Lore_Container_Text_W_Image_C_PreConstruct");
static_assert(sizeof(Lore_Container_Text_W_Image_C_PreConstruct) == 0x000001, "Wrong size on Lore_Container_Text_W_Image_C_PreConstruct");
static_assert(offsetof(Lore_Container_Text_W_Image_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Lore_Container_Text_W_Image_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

