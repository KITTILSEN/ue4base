#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_Gamepad_Turn180Mode

#include "Basic.hpp"

#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function Options_Gamepad_Turn180Mode.Options_Gamepad_Turn180Mode_C.ExecuteUbergraph_Options_Gamepad_Turn180Mode
// 0x0068 (0x0068 - 0x0000)
struct Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C14[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETurn180Mode                                  Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C15[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETurn180Mode                                  CallFunc_GetTurn180Mode_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C16[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_2;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	ETurn180Mode                                  CallFunc_GetTurn180Mode_ReturnValue_1;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C17[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode) == 0x000008, "Wrong alignment on Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode");
static_assert(sizeof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode) == 0x000068, "Wrong size on Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, EntryPoint) == 0x000000, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::EntryPoint' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000008, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, Temp_byte_Variable) == 0x000010, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, Temp_int_Variable) == 0x000024, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, Temp_int_Variable_1) == 0x000028, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, Temp_int_Variable_2) == 0x00002C, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000030, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x000038, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, CallFunc_GetTurn180Mode_ReturnValue) == 0x000040, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::CallFunc_GetTurn180Mode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, K2Node_Event_IsDesignTime) == 0x000041, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, CallFunc_GetFSDGameUserSettings_ReturnValue_2) == 0x000048, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::CallFunc_GetFSDGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, K2Node_CreateDelegate_OutputDelegate_1) == 0x000050, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, CallFunc_GetTurn180Mode_ReturnValue_1) == 0x000060, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::CallFunc_GetTurn180Mode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode, K2Node_Select_Default) == 0x000064, "Member 'Options_Gamepad_Turn180Mode_C_ExecuteUbergraph_Options_Gamepad_Turn180Mode::K2Node_Select_Default' has a wrong offset!");

// Function Options_Gamepad_Turn180Mode.Options_Gamepad_Turn180Mode_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Options_Gamepad_Turn180Mode_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_Gamepad_Turn180Mode_C_PreConstruct) == 0x000001, "Wrong alignment on Options_Gamepad_Turn180Mode_C_PreConstruct");
static_assert(sizeof(Options_Gamepad_Turn180Mode_C_PreConstruct) == 0x000001, "Wrong size on Options_Gamepad_Turn180Mode_C_PreConstruct");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Options_Gamepad_Turn180Mode_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Options_Gamepad_Turn180Mode.Options_Gamepad_Turn180Mode_C.SetMode
// 0x00C0 (0x00C0 - 0x0000)
struct Options_Gamepad_Turn180Mode_C_SetMode final
{
public:
	ETurn180Mode                                  InMode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C18[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Microsoft;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Sony;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C19[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETurn180Mode                                  Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1B[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1C[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1D[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1E[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_4;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_FindActionIcon_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_Gamepad_Turn180Mode_C_SetMode) == 0x000008, "Wrong alignment on Options_Gamepad_Turn180Mode_C_SetMode");
static_assert(sizeof(Options_Gamepad_Turn180Mode_C_SetMode) == 0x0000C0, "Wrong size on Options_Gamepad_Turn180Mode_C_SetMode");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, InMode) == 0x000000, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::InMode' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Microsoft) == 0x000008, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Microsoft' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Sony) == 0x000010, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Sony' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_int_Variable) == 0x000018, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_int_Variable_1) == 0x00001C, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_bool_Variable) == 0x000020, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_object_Variable) == 0x000028, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_object_Variable_1) == 0x000030, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_bool_Variable_1) == 0x000038, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_object_Variable_2) == 0x000040, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_object_Variable_3) == 0x000048, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_bool_Variable_2) == 0x000050, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_byte_Variable) == 0x000051, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_name_Variable) == 0x000054, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_name_Variable_1) == 0x00005C, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_name_Variable_2) == 0x000064, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006C, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, Temp_bool_Variable_3) == 0x00006D, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_Not_PreBool_ReturnValue) == 0x00006E, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00006F, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000070, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, K2Node_Select_Default) == 0x000078, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, K2Node_Select_Default_1) == 0x000080, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x000088, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_FSDTargetPlatform_ReturnValue) == 0x000090, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_FSDTargetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000091, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, K2Node_Select_Default_2) == 0x000098, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000A0, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_BooleanOR_ReturnValue) == 0x0000A1, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, K2Node_Select_Default_3) == 0x0000A8, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, K2Node_Select_Default_4) == 0x0000B0, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_SetMode, CallFunc_FindActionIcon_ReturnValue) == 0x0000B8, "Member 'Options_Gamepad_Turn180Mode_C_SetMode::CallFunc_FindActionIcon_ReturnValue' has a wrong offset!");

// Function Options_Gamepad_Turn180Mode.Options_Gamepad_Turn180Mode_C.Next
// 0x0050 (0x0050 - 0x0000)
struct Options_Gamepad_Turn180Mode_C_Next final
{
public:
	bool                                          Forward;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C20[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_2;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETurn180Mode                                  CallFunc_GetTurn180Mode_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C21[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETurn180Mode                                  CallFunc_Array_Get_Item;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_Gamepad_Turn180Mode_C_Next) == 0x000008, "Wrong alignment on Options_Gamepad_Turn180Mode_C_Next");
static_assert(sizeof(Options_Gamepad_Turn180Mode_C_Next) == 0x000050, "Wrong size on Options_Gamepad_Turn180Mode_C_Next");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, Forward) == 0x000000, "Member 'Options_Gamepad_Turn180Mode_C_Next::Forward' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, Param_Index) == 0x000004, "Member 'Options_Gamepad_Turn180Mode_C_Next::Param_Index' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, Temp_bool_Variable) == 0x000008, "Member 'Options_Gamepad_Turn180Mode_C_Next::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, Temp_int_Variable) == 0x00000C, "Member 'Options_Gamepad_Turn180Mode_C_Next::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, Temp_int_Variable_1) == 0x000010, "Member 'Options_Gamepad_Turn180Mode_C_Next::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, K2Node_Select_Default) == 0x00001C, "Member 'Options_Gamepad_Turn180Mode_C_Next::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000020, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x000028, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_GetFSDGameUserSettings_ReturnValue_2) == 0x000030, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_GetFSDGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_GetTurn180Mode_ReturnValue) == 0x000038, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_GetTurn180Mode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_Array_Find_ReturnValue) == 0x00003C, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_Percent_IntInt_ReturnValue) == 0x000048, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_Turn180Mode_C_Next, CallFunc_Array_Get_Item) == 0x00004C, "Member 'Options_Gamepad_Turn180Mode_C_Next::CallFunc_Array_Get_Item' has a wrong offset!");

}

