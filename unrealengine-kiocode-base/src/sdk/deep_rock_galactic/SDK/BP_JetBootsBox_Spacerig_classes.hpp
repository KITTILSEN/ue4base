#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JetBootsBox_Spacerig

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_JetBootsBox_Spacerig.BP_JetBootsBox_Spacerig_C
// 0x0088 (0x02A8 - 0x0220)
class ABP_JetBootsBox_Spacerig_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight1;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FrontPlane;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BackPlane;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USingleUsableComponent*                 EquipUsable;                                       // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          UseBox;                                            // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ChestIdle_Cue;                                     // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        IdleSound;                                         // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 LightsOrder;                                       // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTimelineComponent*                     Sphere_Timeline;                                   // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerCharacter*>               HasEquipped;                                       // 0x0298(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, RepNotify)

public:
	void ExecuteUbergraph_BP_JetBootsBox_Spacerig(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveOnRepEquipped();
	void BndEvt__BP_JetBootsBox_EquipUsable_K2Node_ComponentBoundEvent_1_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
	void UserConstructionScript();
	void OnRep_HasEquipped();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_JetBootsBox_Spacerig_C">();
	}
	static class ABP_JetBootsBox_Spacerig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_JetBootsBox_Spacerig_C>();
	}
};
static_assert(alignof(ABP_JetBootsBox_Spacerig_C) == 0x000008, "Wrong alignment on ABP_JetBootsBox_Spacerig_C");
static_assert(sizeof(ABP_JetBootsBox_Spacerig_C) == 0x0002A8, "Wrong size on ABP_JetBootsBox_Spacerig_C");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, UberGraphFrame) == 0x000220, "Member 'ABP_JetBootsBox_Spacerig_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, PointLight1) == 0x000228, "Member 'ABP_JetBootsBox_Spacerig_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, FrontPlane) == 0x000230, "Member 'ABP_JetBootsBox_Spacerig_C::FrontPlane' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, BackPlane) == 0x000238, "Member 'ABP_JetBootsBox_Spacerig_C::BackPlane' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, StaticMesh) == 0x000240, "Member 'ABP_JetBootsBox_Spacerig_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, SkeletalMesh) == 0x000248, "Member 'ABP_JetBootsBox_Spacerig_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, PointLight) == 0x000250, "Member 'ABP_JetBootsBox_Spacerig_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, EquipUsable) == 0x000258, "Member 'ABP_JetBootsBox_Spacerig_C::EquipUsable' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, UseBox) == 0x000260, "Member 'ABP_JetBootsBox_Spacerig_C::UseBox' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, Box) == 0x000268, "Member 'ABP_JetBootsBox_Spacerig_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, ChestIdle_Cue) == 0x000270, "Member 'ABP_JetBootsBox_Spacerig_C::ChestIdle_Cue' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, IdleSound) == 0x000278, "Member 'ABP_JetBootsBox_Spacerig_C::IdleSound' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, LightsOrder) == 0x000280, "Member 'ABP_JetBootsBox_Spacerig_C::LightsOrder' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, Sphere_Timeline) == 0x000290, "Member 'ABP_JetBootsBox_Spacerig_C::Sphere_Timeline' has a wrong offset!");
static_assert(offsetof(ABP_JetBootsBox_Spacerig_C, HasEquipped) == 0x000298, "Member 'ABP_JetBootsBox_Spacerig_C::HasEquipped' has a wrong offset!");

}

