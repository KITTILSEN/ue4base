#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_InfoBox_Custom

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ITM_InfoBox_Custom.ITM_InfoBox_Custom_C.ExecuteUbergraph_ITM_InfoBox_Custom
// 0x0058 (0x0058 - 0x0000)
struct ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383D[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383E[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom) == 0x000008, "Wrong alignment on ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom");
static_assert(sizeof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom) == 0x000058, "Wrong size on ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, EntryPoint) == 0x000000, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, K2Node_Event_IsDesignTime) == 0x000014, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000028, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000030, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000040, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000048, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'ITM_InfoBox_Custom_C_ExecuteUbergraph_ITM_InfoBox_Custom::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ITM_InfoBox_Custom.ITM_InfoBox_Custom_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_InfoBox_Custom_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_InfoBox_Custom_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_InfoBox_Custom_C_PreConstruct");
static_assert(sizeof(ITM_InfoBox_Custom_C_PreConstruct) == 0x000001, "Wrong size on ITM_InfoBox_Custom_C_PreConstruct");
static_assert(offsetof(ITM_InfoBox_Custom_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_InfoBox_Custom_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_InfoBox_Custom.ITM_InfoBox_Custom_C.SetOpen
// 0x000A (0x000A - 0x0000)
struct ITM_InfoBox_Custom_C_SetOpen final
{
public:
	bool                                          InOpen;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible_2;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_2;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_2;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_InfoBox_Custom_C_SetOpen) == 0x000001, "Wrong alignment on ITM_InfoBox_Custom_C_SetOpen");
static_assert(sizeof(ITM_InfoBox_Custom_C_SetOpen) == 0x00000A, "Wrong size on ITM_InfoBox_Custom_C_SetOpen");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, InOpen) == 0x000000, "Member 'ITM_InfoBox_Custom_C_SetOpen::InOpen' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_IsVisible) == 0x000001, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_VisibilityChanged) == 0x000002, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_New_Visibility) == 0x000003, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_IsVisible_1) == 0x000004, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x000005, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_New_Visibility_1) == 0x000006, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_IsVisible_2) == 0x000007, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_IsVisible_2' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_VisibilityChanged_2) == 0x000008, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_VisibilityChanged_2' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetOpen, CallFunc_SelectVisibility_New_Visibility_2) == 0x000009, "Member 'ITM_InfoBox_Custom_C_SetOpen::CallFunc_SelectVisibility_New_Visibility_2' has a wrong offset!");

// Function ITM_InfoBox_Custom.ITM_InfoBox_Custom_C.UpdateIconHovered
// 0x0014 (0x0014 - 0x0000)
struct ITM_InfoBox_Custom_C_UpdateIconHovered final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3840[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_InfoBox_Custom_C_UpdateIconHovered) == 0x000004, "Wrong alignment on ITM_InfoBox_Custom_C_UpdateIconHovered");
static_assert(sizeof(ITM_InfoBox_Custom_C_UpdateIconHovered) == 0x000014, "Wrong size on ITM_InfoBox_Custom_C_UpdateIconHovered");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateIconHovered, Temp_bool_Variable) == 0x000000, "Member 'ITM_InfoBox_Custom_C_UpdateIconHovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateIconHovered, Temp_float_Variable) == 0x000004, "Member 'ITM_InfoBox_Custom_C_UpdateIconHovered::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateIconHovered, Temp_float_Variable_1) == 0x000008, "Member 'ITM_InfoBox_Custom_C_UpdateIconHovered::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateIconHovered, CallFunc_IsHovered_ReturnValue) == 0x00000C, "Member 'ITM_InfoBox_Custom_C_UpdateIconHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateIconHovered, K2Node_Select_Default) == 0x000010, "Member 'ITM_InfoBox_Custom_C_UpdateIconHovered::K2Node_Select_Default' has a wrong offset!");

// Function ITM_InfoBox_Custom.ITM_InfoBox_Custom_C.UpdateContentHovered
// 0x0005 (0x0005 - 0x0000)
struct ITM_InfoBox_Custom_C_UpdateContentHovered final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_InfoBox_Custom_C_UpdateContentHovered) == 0x000001, "Wrong alignment on ITM_InfoBox_Custom_C_UpdateContentHovered");
static_assert(sizeof(ITM_InfoBox_Custom_C_UpdateContentHovered) == 0x000005, "Wrong size on ITM_InfoBox_Custom_C_UpdateContentHovered");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateContentHovered, Temp_bool_Variable) == 0x000000, "Member 'ITM_InfoBox_Custom_C_UpdateContentHovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateContentHovered, Temp_byte_Variable) == 0x000001, "Member 'ITM_InfoBox_Custom_C_UpdateContentHovered::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateContentHovered, Temp_byte_Variable_1) == 0x000002, "Member 'ITM_InfoBox_Custom_C_UpdateContentHovered::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateContentHovered, CallFunc_IsHovered_ReturnValue) == 0x000003, "Member 'ITM_InfoBox_Custom_C_UpdateContentHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_UpdateContentHovered, K2Node_Select_Default) == 0x000004, "Member 'ITM_InfoBox_Custom_C_UpdateContentHovered::K2Node_Select_Default' has a wrong offset!");

// Function ITM_InfoBox_Custom.ITM_InfoBox_Custom_C.SetPlacement
// 0x0088 (0x0088 - 0x0000)
struct ITM_InfoBox_Custom_C_SetPlacement final
{
public:
	bool                                          InPlacementLeft;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InPlacementBottom;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3841[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Scale;                                             // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3842[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3843[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3844[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3845[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3846[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0060(0x0010)(NoDestructor)
	float                                         K2Node_Select_Default_2;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_InfoBox_Custom_C_SetPlacement) == 0x000008, "Wrong alignment on ITM_InfoBox_Custom_C_SetPlacement");
static_assert(sizeof(ITM_InfoBox_Custom_C_SetPlacement) == 0x000088, "Wrong size on ITM_InfoBox_Custom_C_SetPlacement");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, InPlacementLeft) == 0x000000, "Member 'ITM_InfoBox_Custom_C_SetPlacement::InPlacementLeft' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, InPlacementBottom) == 0x000001, "Member 'ITM_InfoBox_Custom_C_SetPlacement::InPlacementBottom' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Scale) == 0x000004, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Scale' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_bool_Variable) == 0x00000C, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_float_Variable) == 0x000010, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_float_Variable_1) == 0x000014, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_bool_Variable_1) == 0x000018, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_float_Variable_2) == 0x00001C, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_float_Variable_3) == 0x000020, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_bool_Variable_2) == 0x000024, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_float_Variable_4) == 0x000028, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_float_Variable_5) == 0x00002C, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_bool_Variable_3) == 0x000030, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_float_Variable_6) == 0x000034, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, Temp_float_Variable_7) == 0x000038, "Member 'ITM_InfoBox_Custom_C_SetPlacement::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'ITM_InfoBox_Custom_C_SetPlacement::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, K2Node_Select_Default) == 0x000048, "Member 'ITM_InfoBox_Custom_C_SetPlacement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, K2Node_Select_Default_1) == 0x00004C, "Member 'ITM_InfoBox_Custom_C_SetPlacement::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000050, "Member 'ITM_InfoBox_Custom_C_SetPlacement::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'ITM_InfoBox_Custom_C_SetPlacement::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, K2Node_MakeStruct_Anchors) == 0x000060, "Member 'ITM_InfoBox_Custom_C_SetPlacement::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, K2Node_Select_Default_2) == 0x000070, "Member 'ITM_InfoBox_Custom_C_SetPlacement::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, K2Node_Select_Default_3) == 0x000074, "Member 'ITM_InfoBox_Custom_C_SetPlacement::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, CallFunc_MakeVector2D_ReturnValue_1) == 0x000078, "Member 'ITM_InfoBox_Custom_C_SetPlacement::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_Custom_C_SetPlacement, CallFunc_MakeVector2D_ReturnValue_2) == 0x000080, "Member 'ITM_InfoBox_Custom_C_SetPlacement::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

}

