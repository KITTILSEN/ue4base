#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PRJ_ChargedBlasterShot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PRJ_ChargedBlasterShot.PRJ_ChargedBlasterShot_C
// 0x0090 (0x03D8 - 0x0348)
class APRJ_ChargedBlasterShot_C final : public AChargedProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDamageComponent*                       TCFDamage;                                         // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       AoEDamageSphere;                                   // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Charged_Shot_Warmup;                             // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Charged_Shot;                                    // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AnimNode;                                          // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USimpleHealthComponent*                 SimpleHealth;                                      // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosion;                               // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Grow_Time_Line_Scale_70B952944B635ADB4B7086A2A6BEB7D9; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Grow_Time_Line__Direction_70B952944B635ADB4B7086A2A6BEB7D9; // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BD[0x3];                                     // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Grow_Time_Line;                                    // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageRadiusAtOverCharge;                          // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Acceleration;                                      // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AoEParticle;                                       // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlyingNightmareEnabled;                            // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47BE[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        FN_Particles;                                      // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void Grow_Time_Line__FinishedFunc();
	void Grow_Time_Line__UpdateFunc();
	void OnImpacted(bool PredictedImpact, const struct FHitResult& HitResult);
	void BndEvt__SimpleHealth_K2Node_ComponentBoundEvent_0_DeathSig__DelegateSignature(class UHealthComponentBase* HealthComponent);
	void BndEvt__AoEDamageSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnAoEDamageEnabled();
	void UpdateFNRadius(float New_Radius);
	void OnInitialized();
	void SetAoEEnabled();
	void ExecuteUbergraph_PRJ_ChargedBlasterShot(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PRJ_ChargedBlasterShot_C">();
	}
	static class APRJ_ChargedBlasterShot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APRJ_ChargedBlasterShot_C>();
	}
};
static_assert(alignof(APRJ_ChargedBlasterShot_C) == 0x000008, "Wrong alignment on APRJ_ChargedBlasterShot_C");
static_assert(sizeof(APRJ_ChargedBlasterShot_C) == 0x0003D8, "Wrong size on APRJ_ChargedBlasterShot_C");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, UberGraphFrame) == 0x000348, "Member 'APRJ_ChargedBlasterShot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, TCFDamage) == 0x000350, "Member 'APRJ_ChargedBlasterShot_C::TCFDamage' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, Audio) == 0x000358, "Member 'APRJ_ChargedBlasterShot_C::Audio' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, AoEDamageSphere) == 0x000360, "Member 'APRJ_ChargedBlasterShot_C::AoEDamageSphere' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, P_Charged_Shot_Warmup) == 0x000368, "Member 'APRJ_ChargedBlasterShot_C::P_Charged_Shot_Warmup' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, P_Charged_Shot) == 0x000370, "Member 'APRJ_ChargedBlasterShot_C::P_Charged_Shot' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, PointLight) == 0x000378, "Member 'APRJ_ChargedBlasterShot_C::PointLight' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, StaticMesh) == 0x000380, "Member 'APRJ_ChargedBlasterShot_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, AnimNode) == 0x000388, "Member 'APRJ_ChargedBlasterShot_C::AnimNode' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, Damage) == 0x000390, "Member 'APRJ_ChargedBlasterShot_C::Damage' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, SimpleHealth) == 0x000398, "Member 'APRJ_ChargedBlasterShot_C::SimpleHealth' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, ProjectileExplosion) == 0x0003A0, "Member 'APRJ_ChargedBlasterShot_C::ProjectileExplosion' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, Grow_Time_Line_Scale_70B952944B635ADB4B7086A2A6BEB7D9) == 0x0003A8, "Member 'APRJ_ChargedBlasterShot_C::Grow_Time_Line_Scale_70B952944B635ADB4B7086A2A6BEB7D9' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, Grow_Time_Line__Direction_70B952944B635ADB4B7086A2A6BEB7D9) == 0x0003AC, "Member 'APRJ_ChargedBlasterShot_C::Grow_Time_Line__Direction_70B952944B635ADB4B7086A2A6BEB7D9' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, Grow_Time_Line) == 0x0003B0, "Member 'APRJ_ChargedBlasterShot_C::Grow_Time_Line' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, DamageRadiusAtOverCharge) == 0x0003B8, "Member 'APRJ_ChargedBlasterShot_C::DamageRadiusAtOverCharge' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, Acceleration) == 0x0003BC, "Member 'APRJ_ChargedBlasterShot_C::Acceleration' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, AoEParticle) == 0x0003C0, "Member 'APRJ_ChargedBlasterShot_C::AoEParticle' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, FlyingNightmareEnabled) == 0x0003C8, "Member 'APRJ_ChargedBlasterShot_C::FlyingNightmareEnabled' has a wrong offset!");
static_assert(offsetof(APRJ_ChargedBlasterShot_C, FN_Particles) == 0x0003D0, "Member 'APRJ_ChargedBlasterShot_C::FN_Particles' has a wrong offset!");

}

