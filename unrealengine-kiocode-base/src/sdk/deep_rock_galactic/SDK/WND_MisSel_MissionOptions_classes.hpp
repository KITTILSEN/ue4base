#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WND_MisSel_MissionOptions

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EMissionSelection_Mode_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C
// 0x0120 (0x0380 - 0x0260)
class UWND_MisSel_MissionOptions_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBlurBackground_C*                      BlurBackground;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_BigButton_C*                       BTN_ConfirmMission2;                               // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DataHazardBonus;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATAJoinModeDescription;                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATAJoinModeHeader;                                // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         DATALockMessage;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATASoloModeDescription;                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATASoloModeHeader;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATATeamModeDescription;                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATATeamModeHeader;                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_SoloMode;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_TeamMode;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_JoinMode;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_OnlineRestricted_C*                ITM_OnlineRestricted;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                JoinMode;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LockedBarHolder;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_PasswordField_C*                 ServerPassword;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SoloMode;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TeamMode;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXTWorkEnvironment;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_StartMission;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWND_MisSel_Mission_HazPlus_C*          WND_MisSel_Mission_HazPlus;                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_OptionSwitcher_C*                WorkEnvironmentSelector;                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnStartMission;                                    // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UGeneratedMission*                      Mission;                                           // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionSelection_Mode                        Mode;                                              // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DFE[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnJoinMission;                                     // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          FriendsOnly;                                       // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DFF[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDifficultyChanged;                               // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnStartSoloMission;                                // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShouldClose;                                       // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UpdateHazPlusVisibility();
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void HandleKeyUp(const struct FKeyEvent& KeyEvent, bool* OutHandled, struct FEventReply* OutReply);
	struct FGameDifficulty GetSelectedDifficulty();
	void UpdateConfirmButton();
	void SetMissionLocked(bool IsLocked, const class FText& Explanation);
	void HandleModeChange(EMissionSelection_Mode Selection);
	void GetPassword(class FText* Password, bool* HasPassword);
	bool IsFriendsOnly();
	void UpdateHazardBonus();
	void OnFailure_E07C54DA4555FCCB80821BA994BEDE78();
	void OnSuccess_E07C54DA4555FCCB80821BA994BEDE78();
	void OnFailure_E07C54DA4555FCCB80821BA9DC34619D();
	void OnSuccess_E07C54DA4555FCCB80821BA9DC34619D();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void ShowMode(EMissionSelection_Mode Param_Mode);
	void SetMission(class UGeneratedMission* Param_Mission);
	void BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature(const class FText& Text);
	void BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature(const class FText& Text, uint8 CommitMethod);
	void BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature(const class FText& Value, int32 Param_Index);
	void ResetSelectedDifficulty();
	void BndEvt__BTN_ConfirmMission2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void SetFocusDependentOnInputDevice();
	void BndEvt__WND_MisSel_MissionOptions_WND_MisSel_Mission_HazPlus_K2Node_ComponentBoundEvent_0_OnChanged__DelegateSignature();
	void ExecuteUbergraph_WND_MisSel_MissionOptions(int32 EntryPoint);
	void OnStartSoloMission__DelegateSignature();
	void OnDifficultyChanged__DelegateSignature(const struct FGameDifficulty& NewDifficulty, class UGeneratedMission* Param_Mission);
	void OnJoinMission__DelegateSignature();
	void OnStartMission__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WND_MisSel_MissionOptions_C">();
	}
	static class UWND_MisSel_MissionOptions_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWND_MisSel_MissionOptions_C>();
	}
};
static_assert(alignof(UWND_MisSel_MissionOptions_C) == 0x000008, "Wrong alignment on UWND_MisSel_MissionOptions_C");
static_assert(sizeof(UWND_MisSel_MissionOptions_C) == 0x000380, "Wrong size on UWND_MisSel_MissionOptions_C");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, UberGraphFrame) == 0x000260, "Member 'UWND_MisSel_MissionOptions_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, BlurBackground) == 0x000268, "Member 'UWND_MisSel_MissionOptions_C::BlurBackground' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, BTN_ConfirmMission2) == 0x000270, "Member 'UWND_MisSel_MissionOptions_C::BTN_ConfirmMission2' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, DataHazardBonus) == 0x000278, "Member 'UWND_MisSel_MissionOptions_C::DataHazardBonus' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, DATAJoinModeDescription) == 0x000280, "Member 'UWND_MisSel_MissionOptions_C::DATAJoinModeDescription' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, DATAJoinModeHeader) == 0x000288, "Member 'UWND_MisSel_MissionOptions_C::DATAJoinModeHeader' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, DATALockMessage) == 0x000290, "Member 'UWND_MisSel_MissionOptions_C::DATALockMessage' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, DATASoloModeDescription) == 0x000298, "Member 'UWND_MisSel_MissionOptions_C::DATASoloModeDescription' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, DATASoloModeHeader) == 0x0002A0, "Member 'UWND_MisSel_MissionOptions_C::DATASoloModeHeader' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, DATATeamModeDescription) == 0x0002A8, "Member 'UWND_MisSel_MissionOptions_C::DATATeamModeDescription' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, DATATeamModeHeader) == 0x0002B0, "Member 'UWND_MisSel_MissionOptions_C::DATATeamModeHeader' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, Icon_SoloMode) == 0x0002B8, "Member 'UWND_MisSel_MissionOptions_C::Icon_SoloMode' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, Icon_TeamMode) == 0x0002C0, "Member 'UWND_MisSel_MissionOptions_C::Icon_TeamMode' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, Image_JoinMode) == 0x0002C8, "Member 'UWND_MisSel_MissionOptions_C::Image_JoinMode' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, ITM_OnlineRestricted) == 0x0002D0, "Member 'UWND_MisSel_MissionOptions_C::ITM_OnlineRestricted' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, JoinMode) == 0x0002D8, "Member 'UWND_MisSel_MissionOptions_C::JoinMode' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, LockedBarHolder) == 0x0002E0, "Member 'UWND_MisSel_MissionOptions_C::LockedBarHolder' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, ServerPassword) == 0x0002E8, "Member 'UWND_MisSel_MissionOptions_C::ServerPassword' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, SoloMode) == 0x0002F0, "Member 'UWND_MisSel_MissionOptions_C::SoloMode' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, TeamMode) == 0x0002F8, "Member 'UWND_MisSel_MissionOptions_C::TeamMode' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, TXTWorkEnvironment) == 0x000300, "Member 'UWND_MisSel_MissionOptions_C::TXTWorkEnvironment' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, VerticalBox_StartMission) == 0x000308, "Member 'UWND_MisSel_MissionOptions_C::VerticalBox_StartMission' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, WND_MisSel_Mission_HazPlus) == 0x000310, "Member 'UWND_MisSel_MissionOptions_C::WND_MisSel_Mission_HazPlus' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, WorkEnvironmentSelector) == 0x000318, "Member 'UWND_MisSel_MissionOptions_C::WorkEnvironmentSelector' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, OnStartMission) == 0x000320, "Member 'UWND_MisSel_MissionOptions_C::OnStartMission' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, Mission) == 0x000330, "Member 'UWND_MisSel_MissionOptions_C::Mission' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, Mode) == 0x000338, "Member 'UWND_MisSel_MissionOptions_C::Mode' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, OnJoinMission) == 0x000340, "Member 'UWND_MisSel_MissionOptions_C::OnJoinMission' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, FriendsOnly) == 0x000350, "Member 'UWND_MisSel_MissionOptions_C::FriendsOnly' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, OnDifficultyChanged) == 0x000358, "Member 'UWND_MisSel_MissionOptions_C::OnDifficultyChanged' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, OnStartSoloMission) == 0x000368, "Member 'UWND_MisSel_MissionOptions_C::OnStartSoloMission' has a wrong offset!");
static_assert(offsetof(UWND_MisSel_MissionOptions_C, ShouldClose) == 0x000378, "Member 'UWND_MisSel_MissionOptions_C::ShouldClose' has a wrong offset!");

}

