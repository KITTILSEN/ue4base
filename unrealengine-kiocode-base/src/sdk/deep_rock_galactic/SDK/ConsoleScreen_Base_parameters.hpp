#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConsoleScreen_Base

#include "Basic.hpp"


namespace SDK::Params
{

// Function ConsoleScreen_Base.ConsoleScreen_Base_C.SetNotificationVisible
// 0x0001 (0x0001 - 0x0000)
struct ConsoleScreen_Base_C_SetNotificationVisible final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ConsoleScreen_Base_C_SetNotificationVisible) == 0x000001, "Wrong alignment on ConsoleScreen_Base_C_SetNotificationVisible");
static_assert(sizeof(ConsoleScreen_Base_C_SetNotificationVisible) == 0x000001, "Wrong size on ConsoleScreen_Base_C_SetNotificationVisible");
static_assert(offsetof(ConsoleScreen_Base_C_SetNotificationVisible, NewVisibility) == 0x000000, "Member 'ConsoleScreen_Base_C_SetNotificationVisible::NewVisibility' has a wrong offset!");

// Function ConsoleScreen_Base.ConsoleScreen_Base_C.SetNotification
// 0x0020 (0x0020 - 0x0000)
struct ConsoleScreen_Base_C_SetNotification final
{
public:
	class FText                                   Param_Text;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             IconTexture;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConsoleScreen_Base_C_SetNotification) == 0x000008, "Wrong alignment on ConsoleScreen_Base_C_SetNotification");
static_assert(sizeof(ConsoleScreen_Base_C_SetNotification) == 0x000020, "Wrong size on ConsoleScreen_Base_C_SetNotification");
static_assert(offsetof(ConsoleScreen_Base_C_SetNotification, Param_Text) == 0x000000, "Member 'ConsoleScreen_Base_C_SetNotification::Param_Text' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Base_C_SetNotification, IconTexture) == 0x000018, "Member 'ConsoleScreen_Base_C_SetNotification::IconTexture' has a wrong offset!");

// Function ConsoleScreen_Base.ConsoleScreen_Base_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct ConsoleScreen_Base_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(ConsoleScreen_Base_C_SetText) == 0x000008, "Wrong alignment on ConsoleScreen_Base_C_SetText");
static_assert(sizeof(ConsoleScreen_Base_C_SetText) == 0x000018, "Wrong size on ConsoleScreen_Base_C_SetText");
static_assert(offsetof(ConsoleScreen_Base_C_SetText, InText) == 0x000000, "Member 'ConsoleScreen_Base_C_SetText::InText' has a wrong offset!");

// Function ConsoleScreen_Base.ConsoleScreen_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ConsoleScreen_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ConsoleScreen_Base_C_PreConstruct) == 0x000001, "Wrong alignment on ConsoleScreen_Base_C_PreConstruct");
static_assert(sizeof(ConsoleScreen_Base_C_PreConstruct) == 0x000001, "Wrong size on ConsoleScreen_Base_C_PreConstruct");
static_assert(offsetof(ConsoleScreen_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ConsoleScreen_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ConsoleScreen_Base.ConsoleScreen_Base_C.ExecuteUbergraph_ConsoleScreen_Base
// 0x0008 (0x0008 - 0x0000)
struct ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base) == 0x000004, "Wrong alignment on ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base");
static_assert(sizeof(ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base) == 0x000008, "Wrong size on ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base");
static_assert(offsetof(ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base, EntryPoint) == 0x000000, "Member 'ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ConsoleScreen_Base_C_ExecuteUbergraph_ConsoleScreen_Base::K2Node_Event_IsDesignTime' has a wrong offset!");

}

