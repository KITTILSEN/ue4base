#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MAG_Flamethrower_BottleTP

#include "Basic.hpp"


namespace SDK::Params
{

// Function MAG_Flamethrower_BottleTP.MAG_Flamethrower_BottleTP_C.ExecuteUbergraph_MAG_Flamethrower_BottleTP
// 0x0010 (0x0010 - 0x0000)
struct MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E02[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinEffect*                            K2Node_Event_skin;                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP) == 0x000008, "Wrong alignment on MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP");
static_assert(sizeof(MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP) == 0x000010, "Wrong size on MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP");
static_assert(offsetof(MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP, EntryPoint) == 0x000000, "Member 'MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP::EntryPoint' has a wrong offset!");
static_assert(offsetof(MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP, K2Node_Event_skin) == 0x000008, "Member 'MAG_Flamethrower_BottleTP_C_ExecuteUbergraph_MAG_Flamethrower_BottleTP::K2Node_Event_skin' has a wrong offset!");

// Function MAG_Flamethrower_BottleTP.MAG_Flamethrower_BottleTP_C.OnItemSkinned
// 0x0008 (0x0008 - 0x0000)
struct MAG_Flamethrower_BottleTP_C_OnItemSkinned final
{
public:
	class USkinEffect*                            Skin;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MAG_Flamethrower_BottleTP_C_OnItemSkinned) == 0x000008, "Wrong alignment on MAG_Flamethrower_BottleTP_C_OnItemSkinned");
static_assert(sizeof(MAG_Flamethrower_BottleTP_C_OnItemSkinned) == 0x000008, "Wrong size on MAG_Flamethrower_BottleTP_C_OnItemSkinned");
static_assert(offsetof(MAG_Flamethrower_BottleTP_C_OnItemSkinned, Skin) == 0x000000, "Member 'MAG_Flamethrower_BottleTP_C_OnItemSkinned::Skin' has a wrong offset!");

// Function MAG_Flamethrower_BottleTP.MAG_Flamethrower_BottleTP_C.OnSpawnRelease_Released
// 0x0001 (0x0001 - 0x0000)
struct MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Released final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Released) == 0x000001, "Wrong alignment on MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Released");
static_assert(sizeof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Released) == 0x000001, "Wrong size on MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Released");
static_assert(offsetof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Released, ReturnValue) == 0x000000, "Member 'MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Released::ReturnValue' has a wrong offset!");

// Function MAG_Flamethrower_BottleTP.MAG_Flamethrower_BottleTP_C.OnSpawnRelease_Attached
// 0x0020 (0x0020 - 0x0000)
struct MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached final
{
public:
	class AActor*                                 Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E03[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAmmoDrivenWeapon*                      K2Node_DynamicCast_AsAmmo_Driven_Weapon;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached) == 0x000008, "Wrong alignment on MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached");
static_assert(sizeof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached) == 0x000020, "Wrong size on MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached");
static_assert(offsetof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached, Parent) == 0x000000, "Member 'MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached::Parent' has a wrong offset!");
static_assert(offsetof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached, ReturnValue) == 0x000008, "Member 'MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached::ReturnValue' has a wrong offset!");
static_assert(offsetof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached, K2Node_DynamicCast_AsAmmo_Driven_Weapon) == 0x000010, "Member 'MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached::K2Node_DynamicCast_AsAmmo_Driven_Weapon' has a wrong offset!");
static_assert(offsetof(MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MAG_Flamethrower_BottleTP_C_OnSpawnRelease_Attached::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

