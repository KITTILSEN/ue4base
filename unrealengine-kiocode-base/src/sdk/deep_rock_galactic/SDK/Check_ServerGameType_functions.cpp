#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Check_ServerGameType

#include "Basic.hpp"

#include "Check_ServerGameType_classes.hpp"
#include "Check_ServerGameType_parameters.hpp"


namespace SDK
{

// Function Check_ServerGameType.Check_ServerGameType_C.Verify
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EGameType>                       InSelectedGameTypes                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UCheck_ServerGameType_C::Verify(const TArray<EGameType>& InSelectedGameTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "Verify");

	Params::Check_ServerGameType_C_Verify Parms{};

	Parms.InSelectedGameTypes = std::move(InSelectedGameTypes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Check_ServerGameType.Check_ServerGameType_C.Reset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSandbox                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCheck_ServerGameType_C::Reset(bool InSandbox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "Reset");

	Params::Check_ServerGameType_C_Reset Parms{};

	Parms.InSandbox = InSandbox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Check_ServerGameType.Check_ServerGameType_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCheck_ServerGameType_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "PreConstruct");

	Params::Check_ServerGameType_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Check_ServerGameType.Check_ServerGameType_C.BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    IsChecked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCheck_ServerGameType_C::BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");

	Params::Check_ServerGameType_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature Parms{};

	Parms.IsChecked = IsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Check_ServerGameType.Check_ServerGameType_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCheck_ServerGameType_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Check_ServerGameType.Check_ServerGameType_C.ExecuteUbergraph_Check_ServerGameType
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCheck_ServerGameType_C::ExecuteUbergraph_Check_ServerGameType(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "ExecuteUbergraph_Check_ServerGameType");

	Params::Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Check_ServerGameType.Check_ServerGameType_C.OnCheckedChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsChecked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EGameType                               Param_Gametype                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCheck_ServerGameType_C::OnCheckedChanged__DelegateSignature(bool IsChecked, EGameType Param_Gametype)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "OnCheckedChanged__DelegateSignature");

	Params::Check_ServerGameType_C_OnCheckedChanged__DelegateSignature Parms{};

	Parms.IsChecked = IsChecked;
	Parms.Param_Gametype = Param_Gametype;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Check_ServerGameType.Check_ServerGameType_C.IsInteractable
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCheck_ServerGameType_C::IsInteractable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "IsInteractable");

	Params::Check_ServerGameType_C_IsInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Check_ServerGameType.Check_ServerGameType_C.GetIsChecked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Checked                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCheck_ServerGameType_C::GetIsChecked(bool* Checked) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Check_ServerGameType_C", "GetIsChecked");

	Params::Check_ServerGameType_C_GetIsChecked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Checked != nullptr)
		*Checked = Parms.Checked;
}

}

