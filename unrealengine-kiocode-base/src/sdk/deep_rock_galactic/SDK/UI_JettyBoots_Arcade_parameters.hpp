#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_JettyBoots_Arcade

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "UMG_structs.hpp"
#include "ENUM_JettyBoots_GameState_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.OnGameEnded__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature final
{
public:
	struct FJettyBootsScore                       InScore;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InOnHighScoreList;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4611[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InIHighScoreIndex;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       InPlayer;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature) == 0x000028, "Wrong size on UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature, InScore) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature::InScore' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature, InOnHighScoreList) == 0x000018, "Member 'UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature::InOnHighScoreList' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature, InIHighScoreIndex) == 0x00001C, "Member 'UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature::InIHighScoreIndex' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature, InPlayer) == 0x000020, "Member 'UI_JettyBoots_Arcade_C_OnGameEnded__DelegateSignature::InPlayer' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.OnReplayRecorded__DelegateSignature
// 0x001C (0x001C - 0x0000)
struct UI_JettyBoots_Arcade_C_OnReplayRecorded__DelegateSignature final
{
public:
	struct FJettyBootsReplay                      InReplay;                                          // 0x0000(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_OnReplayRecorded__DelegateSignature) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_OnReplayRecorded__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_OnReplayRecorded__DelegateSignature) == 0x00001C, "Wrong size on UI_JettyBoots_Arcade_C_OnReplayRecorded__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnReplayRecorded__DelegateSignature, InReplay) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_OnReplayRecorded__DelegateSignature::InReplay' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.OnGameOver__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature final
{
public:
	struct FJettyBootsScore                       InScore;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InOnHighScoreList;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4612[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InHighScoreIndex;                                  // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       InPlayer;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature) == 0x000028, "Wrong size on UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature, InScore) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature::InScore' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature, InOnHighScoreList) == 0x000018, "Member 'UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature::InOnHighScoreList' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature, InHighScoreIndex) == 0x00001C, "Member 'UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature::InHighScoreIndex' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature, InPlayer) == 0x000020, "Member 'UI_JettyBoots_Arcade_C_OnGameOver__DelegateSignature::InPlayer' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.OnRestartingLevel__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_JettyBoots_Arcade_C_OnRestartingLevel__DelegateSignature final
{
public:
	class APlayerCharacter*                       InPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_OnRestartingLevel__DelegateSignature) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_OnRestartingLevel__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_OnRestartingLevel__DelegateSignature) == 0x000008, "Wrong size on UI_JettyBoots_Arcade_C_OnRestartingLevel__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnRestartingLevel__DelegateSignature, InPlayer) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_OnRestartingLevel__DelegateSignature::InPlayer' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.OnLevelCompleted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_JettyBoots_Arcade_C_OnLevelCompleted__DelegateSignature final
{
public:
	class APlayerCharacter*                       InPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_OnLevelCompleted__DelegateSignature) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_OnLevelCompleted__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_OnLevelCompleted__DelegateSignature) == 0x000008, "Wrong size on UI_JettyBoots_Arcade_C_OnLevelCompleted__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_OnLevelCompleted__DelegateSignature, InPlayer) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_OnLevelCompleted__DelegateSignature::InPlayer' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.ExecuteUbergraph_UI_JettyBoots_Arcade
// 0x0140 (0x0140 - 0x0000)
struct UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsJumpPressed_OutPressed;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4613[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetUserName_OutName;                      // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FJettyBootsScore                       K2Node_MakeStruct_JettyBootsScore;                 // 0x0058(0x0018)()
	int32                                         K2Node_ComponentBoundEvent_InLevelSeed;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_InCharacterPosition;    // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     K2Node_ComponentBoundEvent_InGameState_1;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     K2Node_ComponentBoundEvent_InState;                // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     K2Node_ComponentBoundEvent_InPreviousState;        // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     K2Node_ComponentBoundEvent_InGameState;            // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     CallFunc_UpdateMusic_OutGameState;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4614[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Display_Lives_OutGameOver;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4615[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJettyBootsReplay                      K2Node_MakeStruct_JettyBootsReplay;                // 0x00A4(0x001C)(NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4616[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_OutPoints;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4617[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUserName_OutName_1;                    // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FJettyBootsScore                       K2Node_MakeStruct_JettyBootsScore_1;               // 0x00E0(0x0018)()
	bool                                          CallFunc_GetScoreStatus_OutOnList;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4618[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetScoreStatus_OutIndex;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetScoreStatus_OutOnList_1;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4619[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetScoreStatus_OutIndex_1;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461A[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                CallFunc_LoadWidgetClass_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461B[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade");
static_assert(sizeof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade) == 0x000140, "Wrong size on UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, EntryPoint) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_IsJumpPressed_OutPressed) == 0x000040, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_IsJumpPressed_OutPressed' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_GetUserName_OutName) == 0x000048, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_GetUserName_OutName' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_MakeStruct_JettyBootsScore) == 0x000058, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_MakeStruct_JettyBootsScore' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_ComponentBoundEvent_InLevelSeed) == 0x000070, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_ComponentBoundEvent_InLevelSeed' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_ComponentBoundEvent_InCharacterPosition) == 0x000074, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_ComponentBoundEvent_InCharacterPosition' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_ComponentBoundEvent_InGameState_1) == 0x00007C, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_ComponentBoundEvent_InGameState_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_ComponentBoundEvent_InState) == 0x00007D, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_ComponentBoundEvent_InState' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_ComponentBoundEvent_InPreviousState) == 0x00007E, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_ComponentBoundEvent_InPreviousState' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_ComponentBoundEvent_InGameState) == 0x00007F, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_ComponentBoundEvent_InGameState' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_UpdateMusic_OutGameState) == 0x000080, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_UpdateMusic_OutGameState' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_SwitchEnum_CmpSuccess) == 0x000081, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, Temp_int_Variable) == 0x000084, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00008C, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Display_Lives_OutGameOver) == 0x000094, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Display_Lives_OutGameOver' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000095, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, Temp_int_Variable_1) == 0x0000A0, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_MakeStruct_JettyBootsReplay) == 0x0000A4, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_MakeStruct_JettyBootsReplay' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C0, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_ComponentBoundEvent_OutPoints) == 0x0000C4, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_ComponentBoundEvent_OutPoints' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000C8, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_GetUserName_OutName_1) == 0x0000D0, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_GetUserName_OutName_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_MakeStruct_JettyBootsScore_1) == 0x0000E0, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_MakeStruct_JettyBootsScore_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_GetScoreStatus_OutOnList) == 0x0000F8, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_GetScoreStatus_OutOnList' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_GetScoreStatus_OutIndex) == 0x0000FC, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_GetScoreStatus_OutIndex' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_GetScoreStatus_OutOnList_1) == 0x000100, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_GetScoreStatus_OutOnList_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_GetScoreStatus_OutIndex_1) == 0x000104, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_GetScoreStatus_OutIndex_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, Temp_int_Variable_2) == 0x000108, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00010C, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, K2Node_Event_IsDesignTime) == 0x000118, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_LoadWidgetClass_ReturnValue) == 0x000120, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_LoadWidgetClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_IsValidClass_ReturnValue) == 0x000128, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_Create_ReturnValue) == 0x000130, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade, CallFunc_AddChildToOverlay_ReturnValue) == 0x000138, "Member 'UI_JettyBoots_Arcade_C_ExecuteUbergraph_UI_JettyBoots_Arcade::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_JettyBoots_Arcade_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_PreConstruct) == 0x000001, "Wrong alignment on UI_JettyBoots_Arcade_C_PreConstruct");
static_assert(sizeof(UI_JettyBoots_Arcade_C_PreConstruct) == 0x000001, "Wrong size on UI_JettyBoots_Arcade_C_PreConstruct");
static_assert(offsetof(UI_JettyBoots_Arcade_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.BndEvt__UI_JettyBoots_Arcade_Game_UI_K2Node_ComponentBoundEvent_2_OnPointsGathered__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_Game_UI_K2Node_ComponentBoundEvent_2_OnPointsGathered__DelegateSignature final
{
public:
	int32                                         OutPoints;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_Game_UI_K2Node_ComponentBoundEvent_2_OnPointsGathered__DelegateSignature) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_Game_UI_K2Node_ComponentBoundEvent_2_OnPointsGathered__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_Game_UI_K2Node_ComponentBoundEvent_2_OnPointsGathered__DelegateSignature) == 0x000004, "Wrong size on UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_Game_UI_K2Node_ComponentBoundEvent_2_OnPointsGathered__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_Game_UI_K2Node_ComponentBoundEvent_2_OnPointsGathered__DelegateSignature, OutPoints) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_Game_UI_K2Node_ComponentBoundEvent_2_OnPointsGathered__DelegateSignature::OutPoints' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_0_OnReplayStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_0_OnReplayStateChanged__DelegateSignature final
{
public:
	ENUM_JettyBoots_GameState                     InGameState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_0_OnReplayStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_0_OnReplayStateChanged__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_0_OnReplayStateChanged__DelegateSignature) == 0x000001, "Wrong size on UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_0_OnReplayStateChanged__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_0_OnReplayStateChanged__DelegateSignature, InGameState) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_0_OnReplayStateChanged__DelegateSignature::InGameState' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature final
{
public:
	ENUM_JettyBoots_GameState                     InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     InPreviousState;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature) == 0x000002, "Wrong size on UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature, InState) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature::InState' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature, InPreviousState) == 0x000001, "Member 'UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_3_OnGameStateChanged__DelegateSignature::InPreviousState' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature final
{
public:
	int32                                         InLevelSeed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InCharacterPosition;                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     InGameState;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature");
static_assert(sizeof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature) == 0x000010, "Wrong size on UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature");
static_assert(offsetof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature, InLevelSeed) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature::InLevelSeed' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature, InCharacterPosition) == 0x000004, "Member 'UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature::InCharacterPosition' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature, InGameState) == 0x00000C, "Member 'UI_JettyBoots_Arcade_C_BndEvt__UI_JettyBoots_Arcade_GameUI_K2Node_ComponentBoundEvent_4_OnGameTicked__DelegateSignature::InGameState' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_JettyBoots_Arcade_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_Tick) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_Tick");
static_assert(sizeof(UI_JettyBoots_Arcade_C_Tick) == 0x00003C, "Wrong size on UI_JettyBoots_Arcade_C_Tick");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Tick, MyGeometry) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_JettyBoots_Arcade_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.SetAudioSceneComponent
// 0x0008 (0x0008 - 0x0000)
struct UI_JettyBoots_Arcade_C_SetAudioSceneComponent final
{
public:
	class USceneComponent*                        Param_Audio_Scene_Component;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_SetAudioSceneComponent) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_SetAudioSceneComponent");
static_assert(sizeof(UI_JettyBoots_Arcade_C_SetAudioSceneComponent) == 0x000008, "Wrong size on UI_JettyBoots_Arcade_C_SetAudioSceneComponent");
static_assert(offsetof(UI_JettyBoots_Arcade_C_SetAudioSceneComponent, Param_Audio_Scene_Component) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_SetAudioSceneComponent::Param_Audio_Scene_Component' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.Display State
// 0x0010 (0x0010 - 0x0000)
struct UI_JettyBoots_Arcade_C_Display_State final
{
public:
	int32                                         InLevel;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InScore;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InLives;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Display_Lives_OutGameOver;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_Display_State) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_Display_State");
static_assert(sizeof(UI_JettyBoots_Arcade_C_Display_State) == 0x000010, "Wrong size on UI_JettyBoots_Arcade_C_Display_State");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_State, InLevel) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_Display_State::InLevel' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_State, InScore) == 0x000004, "Member 'UI_JettyBoots_Arcade_C_Display_State::InScore' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_State, InLives) == 0x000008, "Member 'UI_JettyBoots_Arcade_C_Display_State::InLives' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_State, CallFunc_Display_Lives_OutGameOver) == 0x00000C, "Member 'UI_JettyBoots_Arcade_C_Display_State::CallFunc_Display_Lives_OutGameOver' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.Display HighScore
// 0x0004 (0x0004 - 0x0000)
struct UI_JettyBoots_Arcade_C_Display_HighScore final
{
public:
	int32                                         InHighscore;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_Display_HighScore) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_Display_HighScore");
static_assert(sizeof(UI_JettyBoots_Arcade_C_Display_HighScore) == 0x000004, "Wrong size on UI_JettyBoots_Arcade_C_Display_HighScore");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_HighScore, InHighscore) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_Display_HighScore::InHighscore' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.Display Score
// 0x0004 (0x0004 - 0x0000)
struct UI_JettyBoots_Arcade_C_Display_Score final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_Display_Score) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_Display_Score");
static_assert(sizeof(UI_JettyBoots_Arcade_C_Display_Score) == 0x000004, "Wrong size on UI_JettyBoots_Arcade_C_Display_Score");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Score, InValue) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_Display_Score::InValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.Display Lives
// 0x0010 (0x0010 - 0x0000)
struct UI_JettyBoots_Arcade_C_Display_Lives final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutGameOver;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_Display_Lives) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_Display_Lives");
static_assert(sizeof(UI_JettyBoots_Arcade_C_Display_Lives) == 0x000010, "Wrong size on UI_JettyBoots_Arcade_C_Display_Lives");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Lives, InValue) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_Display_Lives::InValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Lives, OutGameOver) == 0x000004, "Member 'UI_JettyBoots_Arcade_C_Display_Lives::OutGameOver' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Lives, CallFunc_Clamp_ReturnValue) == 0x000008, "Member 'UI_JettyBoots_Arcade_C_Display_Lives::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Lives, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'UI_JettyBoots_Arcade_C_Display_Lives::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.Display Level
// 0x0028 (0x0028 - 0x0000)
struct UI_JettyBoots_Arcade_C_Display_Level final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(UI_JettyBoots_Arcade_C_Display_Level) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_Display_Level");
static_assert(sizeof(UI_JettyBoots_Arcade_C_Display_Level) == 0x000028, "Wrong size on UI_JettyBoots_Arcade_C_Display_Level");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Level, InValue) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_Display_Level::InValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Level, CallFunc_Max_ReturnValue) == 0x000004, "Member 'UI_JettyBoots_Arcade_C_Display_Level::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Level, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UI_JettyBoots_Arcade_C_Display_Level::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Display_Level, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'UI_JettyBoots_Arcade_C_Display_Level::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.SetHighScores
// 0x0018 (0x0018 - 0x0000)
struct UI_JettyBoots_Arcade_C_SetHighScores final
{
public:
	TArray<struct FJettyBootsScore>               InHighScores;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         InLastIndex;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetHighScores_OutCurrentBest;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_SetHighScores) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_SetHighScores");
static_assert(sizeof(UI_JettyBoots_Arcade_C_SetHighScores) == 0x000018, "Wrong size on UI_JettyBoots_Arcade_C_SetHighScores");
static_assert(offsetof(UI_JettyBoots_Arcade_C_SetHighScores, InHighScores) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_SetHighScores::InHighScores' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_SetHighScores, InLastIndex) == 0x000010, "Member 'UI_JettyBoots_Arcade_C_SetHighScores::InLastIndex' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_SetHighScores, CallFunc_SetHighScores_OutCurrentBest) == 0x000014, "Member 'UI_JettyBoots_Arcade_C_SetHighScores::CallFunc_SetHighScores_OutCurrentBest' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.StartGame
// 0x0048 (0x0048 - 0x0000)
struct UI_JettyBoots_Arcade_C_StartGame final
{
public:
	class APlayerCharacter*                       InUser;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJettyBootsArcadeActor*                 InArcade;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUserName_OutName;                      // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_StartGame) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_StartGame");
static_assert(sizeof(UI_JettyBoots_Arcade_C_StartGame) == 0x000048, "Wrong size on UI_JettyBoots_Arcade_C_StartGame");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartGame, InUser) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_StartGame::InUser' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartGame, InArcade) == 0x000008, "Member 'UI_JettyBoots_Arcade_C_StartGame::InArcade' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartGame, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'UI_JettyBoots_Arcade_C_StartGame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartGame, CallFunc_GetUserName_OutName) == 0x000018, "Member 'UI_JettyBoots_Arcade_C_StartGame::CallFunc_GetUserName_OutName' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartGame, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'UI_JettyBoots_Arcade_C_StartGame::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartGame, CallFunc_RandomInteger_ReturnValue) == 0x000040, "Member 'UI_JettyBoots_Arcade_C_StartGame::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartGame, CallFunc_IsLocallyControlled_ReturnValue) == 0x000044, "Member 'UI_JettyBoots_Arcade_C_StartGame::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.GetUserName
// 0x0038 (0x0038 - 0x0000)
struct UI_JettyBoots_Arcade_C_GetUserName final
{
public:
	class FString                                 OutName;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_GetUserName) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_GetUserName");
static_assert(sizeof(UI_JettyBoots_Arcade_C_GetUserName) == 0x000038, "Wrong size on UI_JettyBoots_Arcade_C_GetUserName");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetUserName, OutName) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_GetUserName::OutName' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetUserName, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UI_JettyBoots_Arcade_C_GetUserName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetUserName, CallFunc_GetPlayerName_ReturnValue) == 0x000018, "Member 'UI_JettyBoots_Arcade_C_GetUserName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetUserName, CallFunc_GetSubstring_ReturnValue) == 0x000028, "Member 'UI_JettyBoots_Arcade_C_GetUserName::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.ReplayGame
// 0x0040 (0x0040 - 0x0000)
struct UI_JettyBoots_Arcade_C_ReplayGame final
{
public:
	struct FJettyBootsReplay                      InReplay;                                          // 0x0000(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	ENUM_JettyBoots_GameState                     NewLocalVar_0;                                     // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     CallFunc_UpdateMusic_OutGameState;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4620[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJettyBootSetting                      CallFunc_GetLevelSetting_ReturnValue;              // 0x0020(0x0018)(NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_ReplayGame) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_ReplayGame");
static_assert(sizeof(UI_JettyBoots_Arcade_C_ReplayGame) == 0x000040, "Wrong size on UI_JettyBoots_Arcade_C_ReplayGame");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, InReplay) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::InReplay' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, NewLocalVar_0) == 0x00001C, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, CallFunc_GetValidValue_ReturnValue) == 0x00001D, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, CallFunc_UpdateMusic_OutGameState) == 0x00001E, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::CallFunc_UpdateMusic_OutGameState' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, CallFunc_GetLevelSetting_ReturnValue) == 0x000020, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::CallFunc_GetLevelSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, CallFunc_GetValidValue_ReturnValue_1) == 0x000039, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, CallFunc_GetValidValue_ReturnValue_2) == 0x00003B, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_ReplayGame, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00003D, "Member 'UI_JettyBoots_Arcade_C_ReplayGame::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.UpdateMusic
// 0x0028 (0x0028 - 0x0000)
struct UI_JettyBoots_Arcade_C_UpdateMusic final
{
public:
	ENUM_JettyBoots_GameState                     InGameState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     OutGameState;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_JettyBoots_GameState                     Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_JettyBoots_GameState                     Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4621[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_UpdateMusic) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_UpdateMusic");
static_assert(sizeof(UI_JettyBoots_Arcade_C_UpdateMusic) == 0x000028, "Wrong size on UI_JettyBoots_Arcade_C_UpdateMusic");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, InGameState) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::InGameState' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, OutGameState) == 0x000001, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::OutGameState' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable) == 0x000002, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_1) == 0x000003, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_2) == 0x000004, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_3) == 0x000005, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_4) == 0x000006, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_5) == 0x000007, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_6) == 0x000008, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_7) == 0x000009, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_byte_Variable) == 0x00000A, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_8) == 0x00000B, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_9) == 0x00000C, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_10) == 0x00000D, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_11) == 0x00000E, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_12) == 0x00000F, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_13) == 0x000010, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_14) == 0x000011, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_bool_Variable_15) == 0x000012, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, CallFunc_IsValid_ReturnValue) == 0x000013, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, CallFunc_IsValid_ReturnValue_1) == 0x000014, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, CallFunc_IsPlaying_ReturnValue) == 0x000015, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, CallFunc_IsValid_ReturnValue_2) == 0x000016, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, K2Node_Select_Default) == 0x000017, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, Temp_byte_Variable_1) == 0x000018, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, CallFunc_IsPlaying_ReturnValue_1) == 0x000019, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, K2Node_Select_Default_1) == 0x00001A, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_UpdateMusic, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000020, "Member 'UI_JettyBoots_Arcade_C_UpdateMusic::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.GetScoreStatus
// 0x0050 (0x0050 - 0x0000)
struct UI_JettyBoots_Arcade_C_GetScoreStatus final
{
public:
	int32                                         InNewScore;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutOnList;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4622[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutIndex;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4623[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4624[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJettyBootsScore                       CallFunc_Array_Get_Item;                           // 0x0030(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_GetScoreStatus) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_GetScoreStatus");
static_assert(sizeof(UI_JettyBoots_Arcade_C_GetScoreStatus) == 0x000050, "Wrong size on UI_JettyBoots_Arcade_C_GetScoreStatus");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, InNewScore) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::InNewScore' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, OutOnList) == 0x000004, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::OutOnList' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, OutIndex) == 0x000008, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::OutIndex' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, Temp_int_Array_Index_Variable) == 0x000010, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Array_Length_ReturnValue_2) == 0x00002C, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Array_Get_Item) == 0x000030, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_GetScoreStatus, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000049, "Member 'UI_JettyBoots_Arcade_C_GetScoreStatus::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.StartNextLevel
// 0x0020 (0x0020 - 0x0000)
struct UI_JettyBoots_Arcade_C_StartNextLevel final
{
public:
	struct FJettyBootSetting                      CallFunc_GetLevelSetting_ReturnValue;              // 0x0000(0x0018)(NoDestructor)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_StartNextLevel) == 0x000004, "Wrong alignment on UI_JettyBoots_Arcade_C_StartNextLevel");
static_assert(sizeof(UI_JettyBoots_Arcade_C_StartNextLevel) == 0x000020, "Wrong size on UI_JettyBoots_Arcade_C_StartNextLevel");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartNextLevel, CallFunc_GetLevelSetting_ReturnValue) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_StartNextLevel::CallFunc_GetLevelSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartNextLevel, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'UI_JettyBoots_Arcade_C_StartNextLevel::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_StartNextLevel, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UI_JettyBoots_Arcade_C_StartNextLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.Check FSDEvents
// 0x0108 (0x0108 - 0x0000)
struct UI_JettyBoots_Arcade_C_Check_FSDEvents final
{
public:
	struct FJettyBootEventSettings                Settings;                                          // 0x0000(0x0050)(Edit, BlueprintVisible)
	bool                                          HasSettings;                                       // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4625[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDEventManager*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetJettyBootSettings_OutHasSettings;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4626[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJettyBootEventSettings                CallFunc_TryGetJettyBootSettings_OutSettings;      // 0x0070(0x0050)()
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4627[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncManager*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_SyncLoadClass_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4628[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlayEx_OutSlot;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               CallFunc_AddChildToOverlayEx_OutOverlayPanel;      // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_AddChildToOverlayEx_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_Check_FSDEvents) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_Check_FSDEvents");
static_assert(sizeof(UI_JettyBoots_Arcade_C_Check_FSDEvents) == 0x000108, "Wrong size on UI_JettyBoots_Arcade_C_Check_FSDEvents");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, Settings) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::Settings' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, HasSettings) == 0x000050, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::HasSettings' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000060, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_TryGetJettyBootSettings_OutHasSettings) == 0x000068, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_TryGetJettyBootSettings_OutHasSettings' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_TryGetJettyBootSettings_OutSettings) == 0x000070, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_TryGetJettyBootSettings_OutSettings' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0000C0, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_BooleanAND_ReturnValue) == 0x0000C1, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_SelectVisibility_IsVisible) == 0x0000C2, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_SelectVisibility_VisibilityChanged) == 0x0000C3, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_SelectVisibility_New_Visibility) == 0x0000C4, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000C8, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_SyncLoadClass_ReturnValue) == 0x0000D0, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_SyncLoadClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, K2Node_ClassDynamicCast_AsUser_Widget) == 0x0000D8, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, K2Node_ClassDynamicCast_bSuccess) == 0x0000E0, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_Create_ReturnValue) == 0x0000E8, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_AddChildToOverlayEx_OutSlot) == 0x0000F0, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_AddChildToOverlayEx_OutSlot' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_AddChildToOverlayEx_OutOverlayPanel) == 0x0000F8, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_AddChildToOverlayEx_OutOverlayPanel' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_Check_FSDEvents, CallFunc_AddChildToOverlayEx_ReturnValue) == 0x000100, "Member 'UI_JettyBoots_Arcade_C_Check_FSDEvents::CallFunc_AddChildToOverlayEx_ReturnValue' has a wrong offset!");

// Function UI_JettyBoots_Arcade.UI_JettyBoots_Arcade_C.IsJumpPressed
// 0x0018 (0x0018 - 0x0000)
struct UI_JettyBoots_Arcade_C_IsJumpPressed final
{
public:
	bool                                          OutPressed;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4629[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerWithInDistance_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInputActionDown_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInputActionDown_ReturnValue_1;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_JettyBoots_Arcade_C_IsJumpPressed) == 0x000008, "Wrong alignment on UI_JettyBoots_Arcade_C_IsJumpPressed");
static_assert(sizeof(UI_JettyBoots_Arcade_C_IsJumpPressed) == 0x000018, "Wrong size on UI_JettyBoots_Arcade_C_IsJumpPressed");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, OutPressed) == 0x000000, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::OutPressed' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, CallFunc_IsPlayerWithInDistance_ReturnValue) == 0x000010, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::CallFunc_IsPlayerWithInDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, CallFunc_IsInputActionDown_ReturnValue) == 0x000011, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::CallFunc_IsInputActionDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, CallFunc_IsInputActionDown_ReturnValue_1) == 0x000012, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::CallFunc_IsInputActionDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_JettyBoots_Arcade_C_IsJumpPressed, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'UI_JettyBoots_Arcade_C_IsJumpPressed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

