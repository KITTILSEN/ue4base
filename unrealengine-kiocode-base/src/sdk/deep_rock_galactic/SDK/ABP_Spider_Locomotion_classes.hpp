#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Spider_Locomotion

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Spider_Locomotion.ABP_Spider_Locomotion_C
// 0x1870 (0x1D10 - 0x04A0)
class UABP_Spider_Locomotion_C : public USpiderAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x04A8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0618(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0640(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0668(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0690(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x06B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x06E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0708(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0730(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0758(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0780(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x07A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x07D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x07F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0820(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0848(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0870(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0898(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x08C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x08E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0910(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0938(0x0050)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0988(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x0A50(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0AD0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x0B00(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0B80(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0BB0(0x00E8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x0C98(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0D18(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0DB8(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0E38(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0F00(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0F80(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1000(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1080(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1100(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x1180(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1220(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1250(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1338(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1368(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1450(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1480(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1500(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1530(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x15B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1630(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x16B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1730(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x17B0(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1860(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1900(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1980(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1A00(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1AB0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1B30(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1BB0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1C30(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1C60(0x00B0)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_Spider_Locomotion(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Spider_Locomotion_C">();
	}
	static class UABP_Spider_Locomotion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Spider_Locomotion_C>();
	}
};
static_assert(alignof(UABP_Spider_Locomotion_C) == 0x000010, "Wrong alignment on UABP_Spider_Locomotion_C");
static_assert(sizeof(UABP_Spider_Locomotion_C) == 0x001D10, "Wrong size on UABP_Spider_Locomotion_C");
static_assert(offsetof(UABP_Spider_Locomotion_C, UberGraphFrame) == 0x0004A0, "Member 'UABP_Spider_Locomotion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_Root) == 0x0004A8, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_27) == 0x0004D8, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_26) == 0x000500, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_25) == 0x000528, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_24) == 0x000550, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_23) == 0x000578, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_22) == 0x0005A0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_21) == 0x0005C8, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_20) == 0x0005F0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_19) == 0x000618, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_18) == 0x000640, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_17) == 0x000668, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_16) == 0x000690, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_15) == 0x0006B8, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_14) == 0x0006E0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_13) == 0x000708, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_12) == 0x000730, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_11) == 0x000758, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_10) == 0x000780, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_9) == 0x0007A8, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_8) == 0x0007D0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_7) == 0x0007F8, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_6) == 0x000820, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_5) == 0x000848, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_4) == 0x000870, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_3) == 0x000898, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_2) == 0x0008C0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult_1) == 0x0008E8, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TransitionResult) == 0x000910, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequenceEvaluator) == 0x000938, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_TwoWayBlend) == 0x000988, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_19) == 0x000A50, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_StateResult_6) == 0x000AD0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_18) == 0x000B00, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_StateResult_5) == 0x000B80, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000BB0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_17) == 0x000C98, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_BlendListByBool_1) == 0x000D18, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_16) == 0x000DB8, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_ApplyAdditive) == 0x000E38, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_15) == 0x000F00, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_14) == 0x000F80, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_13) == 0x001000, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_12) == 0x001080, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_11) == 0x001100, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_BlendListByInt) == 0x001180, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_StateResult_4) == 0x001220, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001250, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_StateResult_3) == 0x001338, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_BlendSpacePlayer) == 0x001368, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_StateResult_2) == 0x001450, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_10) == 0x001480, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_StateResult_1) == 0x001500, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_9) == 0x001530, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_8) == 0x0015B0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_7) == 0x001630, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_6) == 0x0016B0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_5) == 0x001730, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_BlendListByEnum_1) == 0x0017B0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_BlendListByBool) == 0x001860, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_4) == 0x001900, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_3) == 0x001980, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_BlendListByEnum) == 0x001A00, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_2) == 0x001AB0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer_1) == 0x001B30, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_SequencePlayer) == 0x001BB0, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_StateResult) == 0x001C30, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Spider_Locomotion_C, AnimGraphNode_StateMachine) == 0x001C60, "Member 'UABP_Spider_Locomotion_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

