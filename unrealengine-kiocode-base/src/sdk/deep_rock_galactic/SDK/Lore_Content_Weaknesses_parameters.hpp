#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lore_Content_Weaknesses

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Lore_Content_Weaknesses.Lore_Content_Weaknesses_C.ExecuteUbergraph_Lore_Content_Weaknesses
// 0x00E8 (0x00E8 - 0x0000)
struct Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD1[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CD2[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD3[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
	struct FDamageTypeDescription                 K2Node_CustomEvent_Icon;                           // 0x0030(0x0078)()
	struct FVector2D                              Temp_struct_Variable;                              // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Forward;                        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CD4[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULore_DamageTypeIcon_C*                 CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CD5[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses) == 0x000008, "Wrong alignment on Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses");
static_assert(sizeof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses) == 0x0000E8, "Wrong size on Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, EntryPoint) == 0x000000, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, Temp_bool_Variable) == 0x000004, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, Temp_byte_Variable) == 0x00000C, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, Temp_byte_Variable_1) == 0x00000D, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, Temp_int_Variable) == 0x000010, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, Temp_byte_Variable_2) == 0x000014, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, Temp_byte_Variable_3) == 0x000015, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, K2Node_Event_IsDesignTime) == 0x000016, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, K2Node_CustomEvent_Icon) == 0x000030, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, Temp_struct_Variable) == 0x0000A8, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, K2Node_MakeStruct_Margin) == 0x0000B0, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, K2Node_CustomEvent_Forward) == 0x0000C0, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::K2Node_CustomEvent_Forward' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, Temp_bool_Variable_1) == 0x0000C1, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000C2, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, K2Node_Select_Default) == 0x0000C3, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, CallFunc_PlayAnimation_ReturnValue) == 0x0000D0, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000D8, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, K2Node_Select_Default_1) == 0x0000E0, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'Lore_Content_Weaknesses_C_ExecuteUbergraph_Lore_Content_Weaknesses::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Lore_Content_Weaknesses.Lore_Content_Weaknesses_C.PlayFade
// 0x0001 (0x0001 - 0x0000)
struct Lore_Content_Weaknesses_C_PlayFade final
{
public:
	bool                                          Forward;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_Content_Weaknesses_C_PlayFade) == 0x000001, "Wrong alignment on Lore_Content_Weaknesses_C_PlayFade");
static_assert(sizeof(Lore_Content_Weaknesses_C_PlayFade) == 0x000001, "Wrong size on Lore_Content_Weaknesses_C_PlayFade");
static_assert(offsetof(Lore_Content_Weaknesses_C_PlayFade, Forward) == 0x000000, "Member 'Lore_Content_Weaknesses_C_PlayFade::Forward' has a wrong offset!");

// Function Lore_Content_Weaknesses.Lore_Content_Weaknesses_C.AddIcon
// 0x0078 (0x0078 - 0x0000)
struct Lore_Content_Weaknesses_C_AddIcon final
{
public:
	struct FDamageTypeDescription                 Icon;                                              // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Lore_Content_Weaknesses_C_AddIcon) == 0x000008, "Wrong alignment on Lore_Content_Weaknesses_C_AddIcon");
static_assert(sizeof(Lore_Content_Weaknesses_C_AddIcon) == 0x000078, "Wrong size on Lore_Content_Weaknesses_C_AddIcon");
static_assert(offsetof(Lore_Content_Weaknesses_C_AddIcon, Icon) == 0x000000, "Member 'Lore_Content_Weaknesses_C_AddIcon::Icon' has a wrong offset!");

// Function Lore_Content_Weaknesses.Lore_Content_Weaknesses_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Lore_Content_Weaknesses_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_Content_Weaknesses_C_PreConstruct) == 0x000001, "Wrong alignment on Lore_Content_Weaknesses_C_PreConstruct");
static_assert(sizeof(Lore_Content_Weaknesses_C_PreConstruct) == 0x000001, "Wrong size on Lore_Content_Weaknesses_C_PreConstruct");
static_assert(offsetof(Lore_Content_Weaknesses_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Lore_Content_Weaknesses_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

