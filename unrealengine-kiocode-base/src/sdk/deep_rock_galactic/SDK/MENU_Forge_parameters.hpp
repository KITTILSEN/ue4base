#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MENU_Forge

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FSD_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MENU_Forge.MENU_Forge_C.SetCursorVisible
// 0x0004 (0x0004 - 0x0000)
struct MENU_Forge_C_SetCursorVisible final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_SetCursorVisible) == 0x000001, "Wrong alignment on MENU_Forge_C_SetCursorVisible");
static_assert(sizeof(MENU_Forge_C_SetCursorVisible) == 0x000004, "Wrong size on MENU_Forge_C_SetCursorVisible");
static_assert(offsetof(MENU_Forge_C_SetCursorVisible, Param_IsVisible) == 0x000000, "Member 'MENU_Forge_C_SetCursorVisible::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_SetCursorVisible, CallFunc_SelectVisibility_IsVisible) == 0x000001, "Member 'MENU_Forge_C_SetCursorVisible::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_SetCursorVisible, CallFunc_SelectVisibility_VisibilityChanged) == 0x000002, "Member 'MENU_Forge_C_SetCursorVisible::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_SetCursorVisible, CallFunc_SelectVisibility_New_Visibility) == 0x000003, "Member 'MENU_Forge_C_SetCursorVisible::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.OnMouseButtonUp
// 0x0398 (0x0398 - 0x0000)
struct MENU_Forge_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	class ABP_SR_PlayerControllerBase_C*          CallFunc_GetSRController_SRController;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBackMenuMouse_ReturnValue;              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCloseButtonVisible_Visible;             // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E8D[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0228(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x02E0(0x00B8)()
};
static_assert(alignof(MENU_Forge_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on MENU_Forge_C_OnMouseButtonUp");
static_assert(sizeof(MENU_Forge_C_OnMouseButtonUp) == 0x000398, "Wrong size on MENU_Forge_C_OnMouseButtonUp");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'MENU_Forge_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'MENU_Forge_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'MENU_Forge_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, CallFunc_GetSRController_SRController) == 0x000160, "Member 'MENU_Forge_C_OnMouseButtonUp::CallFunc_GetSRController_SRController' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'MENU_Forge_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, CallFunc_Not_PreBool_ReturnValue) == 0x000220, "Member 'MENU_Forge_C_OnMouseButtonUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, CallFunc_IsBackMenuMouse_ReturnValue) == 0x000221, "Member 'MENU_Forge_C_OnMouseButtonUp::CallFunc_IsBackMenuMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, CallFunc_IsCloseButtonVisible_Visible) == 0x000222, "Member 'MENU_Forge_C_OnMouseButtonUp::CallFunc_IsCloseButtonVisible_Visible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, CallFunc_BooleanAND_ReturnValue) == 0x000223, "Member 'MENU_Forge_C_OnMouseButtonUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue_1) == 0x000228, "Member 'MENU_Forge_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x0002E0, "Member 'MENU_Forge_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ToggleMasteryBar
// 0x0020 (0x0020 - 0x0000)
struct MENU_Forge_C_ToggleMasteryBar final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AllowClaimButton;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E8E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E8F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_Forge_C_ToggleMasteryBar) == 0x000008, "Wrong alignment on MENU_Forge_C_ToggleMasteryBar");
static_assert(sizeof(MENU_Forge_C_ToggleMasteryBar) == 0x000020, "Wrong size on MENU_Forge_C_ToggleMasteryBar");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, Visible) == 0x000000, "Member 'MENU_Forge_C_ToggleMasteryBar::Visible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, AllowClaimButton) == 0x000001, "Member 'MENU_Forge_C_ToggleMasteryBar::AllowClaimButton' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, Temp_bool_Variable) == 0x000002, "Member 'MENU_Forge_C_ToggleMasteryBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, Temp_byte_Variable) == 0x000003, "Member 'MENU_Forge_C_ToggleMasteryBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, Temp_byte_Variable_1) == 0x000004, "Member 'MENU_Forge_C_ToggleMasteryBar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000008, "Member 'MENU_Forge_C_ToggleMasteryBar::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, K2Node_Select_Default) == 0x00000C, "Member 'MENU_Forge_C_ToggleMasteryBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'MENU_Forge_C_ToggleMasteryBar::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleMasteryBar, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'MENU_Forge_C_ToggleMasteryBar::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.Forge Schematic
// 0x0040 (0x0040 - 0x0000)
struct MENU_Forge_C_Forge_Schematic final
{
public:
	class UUI_Forge_Schematic_C*                  InSchematic;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBuildSchematic_Success;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E90[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FForgingResult                         CallFunc_GiveForgingXP_ReturnValue;                // 0x0018(0x000C)(NoDestructor)
	uint8                                         Pad_2E91[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E92[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_Forge_Schematic) == 0x000008, "Wrong alignment on MENU_Forge_C_Forge_Schematic");
static_assert(sizeof(MENU_Forge_C_Forge_Schematic) == 0x000040, "Wrong size on MENU_Forge_C_Forge_Schematic");
static_assert(offsetof(MENU_Forge_C_Forge_Schematic, InSchematic) == 0x000000, "Member 'MENU_Forge_C_Forge_Schematic::InSchematic' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_Forge_Schematic, Success) == 0x000008, "Member 'MENU_Forge_C_Forge_Schematic::Success' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_Forge_Schematic, CallFunc_TryBuildSchematic_Success) == 0x000009, "Member 'MENU_Forge_C_Forge_Schematic::CallFunc_TryBuildSchematic_Success' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_Forge_Schematic, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000010, "Member 'MENU_Forge_C_Forge_Schematic::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_Forge_Schematic, CallFunc_GiveForgingXP_ReturnValue) == 0x000018, "Member 'MENU_Forge_C_Forge_Schematic::CallFunc_GiveForgingXP_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_Forge_Schematic, K2Node_DynamicCast_AsPlayer_Character) == 0x000028, "Member 'MENU_Forge_C_Forge_Schematic::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_Forge_Schematic, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'MENU_Forge_C_Forge_Schematic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_Forge_Schematic, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'MENU_Forge_C_Forge_Schematic::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ToggleSelectionList
// 0x0018 (0x0018 - 0x0000)
struct MENU_Forge_C_ToggleSelectionList final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E93[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_ToggleSelectionList) == 0x000008, "Wrong alignment on MENU_Forge_C_ToggleSelectionList");
static_assert(sizeof(MENU_Forge_C_ToggleSelectionList) == 0x000018, "Wrong size on MENU_Forge_C_ToggleSelectionList");
static_assert(offsetof(MENU_Forge_C_ToggleSelectionList, Visible) == 0x000000, "Member 'MENU_Forge_C_ToggleSelectionList::Visible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleSelectionList, Temp_bool_Variable) == 0x000001, "Member 'MENU_Forge_C_ToggleSelectionList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleSelectionList, Temp_byte_Variable) == 0x000002, "Member 'MENU_Forge_C_ToggleSelectionList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleSelectionList, Temp_byte_Variable_1) == 0x000003, "Member 'MENU_Forge_C_ToggleSelectionList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleSelectionList, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000004, "Member 'MENU_Forge_C_ToggleSelectionList::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleSelectionList, K2Node_Select_Default) == 0x000008, "Member 'MENU_Forge_C_ToggleSelectionList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleSelectionList, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000009, "Member 'MENU_Forge_C_ToggleSelectionList::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleSelectionList, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'MENU_Forge_C_ToggleSelectionList::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.IncreaseCraftingStat
// 0x0058 (0x0058 - 0x0000)
struct MENU_Forge_C_IncreaseCraftingStat final
{
public:
	class USchematicCategory*                     SkinVanityCategory;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESchematicType                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E94[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionStat*                           Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionStat*                           Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionStat*                           Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionStat*                           Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E95[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             CallFunc_GetSchematic_Schematic;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class APlayerCharacter>           CallFunc_GetCharacterClass_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMissionStat*                           K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_Forge_C_IncreaseCraftingStat) == 0x000008, "Wrong alignment on MENU_Forge_C_IncreaseCraftingStat");
static_assert(sizeof(MENU_Forge_C_IncreaseCraftingStat) == 0x000058, "Wrong size on MENU_Forge_C_IncreaseCraftingStat");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, SkinVanityCategory) == 0x000000, "Member 'MENU_Forge_C_IncreaseCraftingStat::SkinVanityCategory' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, Temp_byte_Variable) == 0x000008, "Member 'MENU_Forge_C_IncreaseCraftingStat::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, Temp_object_Variable) == 0x000010, "Member 'MENU_Forge_C_IncreaseCraftingStat::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, Temp_object_Variable_1) == 0x000018, "Member 'MENU_Forge_C_IncreaseCraftingStat::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, Temp_object_Variable_2) == 0x000020, "Member 'MENU_Forge_C_IncreaseCraftingStat::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, Temp_object_Variable_3) == 0x000028, "Member 'MENU_Forge_C_IncreaseCraftingStat::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'MENU_Forge_C_IncreaseCraftingStat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, CallFunc_GetSchematic_Schematic) == 0x000038, "Member 'MENU_Forge_C_IncreaseCraftingStat::CallFunc_GetSchematic_Schematic' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, CallFunc_GetCharacterClass_ReturnValue) == 0x000040, "Member 'MENU_Forge_C_IncreaseCraftingStat::CallFunc_GetCharacterClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, K2Node_Select_Default) == 0x000048, "Member 'MENU_Forge_C_IncreaseCraftingStat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_IncreaseCraftingStat, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'MENU_Forge_C_IncreaseCraftingStat::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.SetHeader
// 0x0030 (0x0030 - 0x0000)
struct MENU_Forge_C_SetHeader final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
};
static_assert(alignof(MENU_Forge_C_SetHeader) == 0x000008, "Wrong alignment on MENU_Forge_C_SetHeader");
static_assert(sizeof(MENU_Forge_C_SetHeader) == 0x000030, "Wrong size on MENU_Forge_C_SetHeader");
static_assert(offsetof(MENU_Forge_C_SetHeader, InText) == 0x000000, "Member 'MENU_Forge_C_SetHeader::InText' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_SetHeader, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'MENU_Forge_C_SetHeader::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ShowSkipButton
// 0x0005 (0x0005 - 0x0000)
struct MENU_Forge_C_ShowSkipButton final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_ShowSkipButton) == 0x000001, "Wrong alignment on MENU_Forge_C_ShowSkipButton");
static_assert(sizeof(MENU_Forge_C_ShowSkipButton) == 0x000005, "Wrong size on MENU_Forge_C_ShowSkipButton");
static_assert(offsetof(MENU_Forge_C_ShowSkipButton, InVisible) == 0x000000, "Member 'MENU_Forge_C_ShowSkipButton::InVisible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowSkipButton, Temp_bool_Variable) == 0x000001, "Member 'MENU_Forge_C_ShowSkipButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowSkipButton, Temp_byte_Variable) == 0x000002, "Member 'MENU_Forge_C_ShowSkipButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowSkipButton, Temp_byte_Variable_1) == 0x000003, "Member 'MENU_Forge_C_ShowSkipButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowSkipButton, K2Node_Select_Default) == 0x000004, "Member 'MENU_Forge_C_ShowSkipButton::K2Node_Select_Default' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.OnKeyUp
// 0x05C0 (0x05C0 - 0x0000)
struct MENU_Forge_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0128(0x00B8)()
	bool                                          CallFunc_IsMenuAction2_ReturnValue;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue_1;               // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E96[0x2];                                     // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x01E8(0x00B8)()
	bool                                          CallFunc_IsOkMenu_ReturnValue;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E97[0x6];                                     // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x02A8(0x00B8)()
	class ABP_SR_PlayerControllerBase_C*          CallFunc_GetSRController_SRController;             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCloseOrBackMenu_ReturnValue;            // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E98[0x6];                                     // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0370(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsCloseOrBackMenu_ReturnValue_1;          // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E99[0x6];                                     // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_3;                    // 0x0390(0x00B8)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue_2;               // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x044B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCloseButtonVisible_Visible;             // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x044E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9A[0x1];                                     // 0x044F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_4;                    // 0x0450(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0508(0x00B8)()
};
static_assert(alignof(MENU_Forge_C_OnKeyUp) == 0x000008, "Wrong alignment on MENU_Forge_C_OnKeyUp");
static_assert(sizeof(MENU_Forge_C_OnKeyUp) == 0x0005C0, "Wrong size on MENU_Forge_C_OnKeyUp");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'MENU_Forge_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'MENU_Forge_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'MENU_Forge_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000128, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_IsMenuAction2_ReturnValue) == 0x0001E0, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_IsMenuAction2_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_GetIsEnabled_ReturnValue) == 0x0001E1, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_IsVisible_ReturnValue) == 0x0001E2, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_BooleanAND_ReturnValue) == 0x0001E3, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_GetIsEnabled_ReturnValue_1) == 0x0001E4, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_GetIsEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E5, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_Handled_ReturnValue_1) == 0x0001E8, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_IsOkMenu_ReturnValue) == 0x0002A0, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_IsOkMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_BooleanAND_ReturnValue_2) == 0x0002A1, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_Handled_ReturnValue_2) == 0x0002A8, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_Handled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_GetSRController_SRController) == 0x000360, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_GetSRController_SRController' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_Not_PreBool_ReturnValue) == 0x000368, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_IsCloseOrBackMenu_ReturnValue) == 0x000369, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_IsCloseOrBackMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000370, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_IsCloseOrBackMenu_ReturnValue_1) == 0x000388, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_IsCloseOrBackMenu_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000389, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_Handled_ReturnValue_3) == 0x000390, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_Handled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_BooleanOR_ReturnValue) == 0x000448, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_GetIsEnabled_ReturnValue_2) == 0x000449, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_GetIsEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_IsVisible_ReturnValue_1) == 0x00044A, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_BooleanAND_ReturnValue_3) == 0x00044B, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_BooleanAND_ReturnValue_4) == 0x00044C, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_IsCloseButtonVisible_Visible) == 0x00044D, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_IsCloseButtonVisible_Visible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_BooleanAND_ReturnValue_5) == 0x00044E, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_Handled_ReturnValue_4) == 0x000450, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_Handled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000508, "Member 'MENU_Forge_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ShowList
// 0x0158 (0x0158 - 0x0000)
struct MENU_Forge_C_ShowList final
{
public:
	bool                                          History;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Force_Rebuild;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Forge_SchematicList_C*              ActiveList;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)(ConstParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9D[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0050(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_3;                              // 0x0068(0x0018)(ConstParm)
	bool                                          Temp_bool_Variable_2;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9E[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)(ConstParm)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x00F8(0x0018)(ConstParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0018)()
	TArray<class USchematic*>                     CallFunc_GetForgedSchematics_ReturnValue;          // 0x0138(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Forge_SchematicList_C*              K2Node_Select_Default_2;                           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_ShowList) == 0x000008, "Wrong alignment on MENU_Forge_C_ShowList");
static_assert(sizeof(MENU_Forge_C_ShowList) == 0x000158, "Wrong size on MENU_Forge_C_ShowList");
static_assert(offsetof(MENU_Forge_C_ShowList, History) == 0x000000, "Member 'MENU_Forge_C_ShowList::History' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, Force_Rebuild) == 0x000001, "Member 'MENU_Forge_C_ShowList::Force_Rebuild' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, ActiveList) == 0x000008, "Member 'MENU_Forge_C_ShowList::ActiveList' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, Temp_bool_Variable) == 0x000010, "Member 'MENU_Forge_C_ShowList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, Temp_text_Variable) == 0x000018, "Member 'MENU_Forge_C_ShowList::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, Temp_text_Variable_1) == 0x000030, "Member 'MENU_Forge_C_ShowList::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, Temp_bool_Variable_1) == 0x000048, "Member 'MENU_Forge_C_ShowList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, Temp_text_Variable_2) == 0x000050, "Member 'MENU_Forge_C_ShowList::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, Temp_text_Variable_3) == 0x000068, "Member 'MENU_Forge_C_ShowList::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, Temp_bool_Variable_2) == 0x000080, "Member 'MENU_Forge_C_ShowList::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, K2Node_Select_Default) == 0x000088, "Member 'MENU_Forge_C_ShowList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, CallFunc_TextToUpper_ReturnValue) == 0x0000A0, "Member 'MENU_Forge_C_ShowList::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'MENU_Forge_C_ShowList::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, K2Node_Select_Default_1) == 0x0000F8, "Member 'MENU_Forge_C_ShowList::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, K2Node_MakeArray_Array) == 0x000110, "Member 'MENU_Forge_C_ShowList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, CallFunc_Format_ReturnValue) == 0x000120, "Member 'MENU_Forge_C_ShowList::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, CallFunc_GetForgedSchematics_ReturnValue) == 0x000138, "Member 'MENU_Forge_C_ShowList::CallFunc_GetForgedSchematics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'MENU_Forge_C_ShowList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, CallFunc_Greater_IntInt_ReturnValue) == 0x00014C, "Member 'MENU_Forge_C_ShowList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, CallFunc_SelectVisibility_IsVisible) == 0x00014D, "Member 'MENU_Forge_C_ShowList::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, CallFunc_SelectVisibility_VisibilityChanged) == 0x00014E, "Member 'MENU_Forge_C_ShowList::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, CallFunc_SelectVisibility_New_Visibility) == 0x00014F, "Member 'MENU_Forge_C_ShowList::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowList, K2Node_Select_Default_2) == 0x000150, "Member 'MENU_Forge_C_ShowList::K2Node_Select_Default_2' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ShowItem
// 0x00F0 (0x00F0 - 0x0000)
struct MENU_Forge_C_ShowItem final
{
public:
	class UUI_Forge_Schematic_C*                  Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverclockShematicItem*                 OverclockItem;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UResourceData*                          Resource;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UResourceData*, int32>             Cost;                                              // 0x0018(0x0050)(Edit, BlueprintVisible)
	class USchematic*                             Schematic;                                         // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9F[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTitle_ReturnValue;                     // 0x0078(0x0018)()
	bool                                          CallFunc_CanAffordSchematic_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA0[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UResourceData*, int32>             CallFunc_GetResourceCost_ReturnValue;              // 0x0098(0x0050)()
	class USchematic*                             CallFunc_GetSchematic_Schematic;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_ShowItem) == 0x000008, "Wrong alignment on MENU_Forge_C_ShowItem");
static_assert(sizeof(MENU_Forge_C_ShowItem) == 0x0000F0, "Wrong size on MENU_Forge_C_ShowItem");
static_assert(offsetof(MENU_Forge_C_ShowItem, Item) == 0x000000, "Member 'MENU_Forge_C_ShowItem::Item' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, OverclockItem) == 0x000008, "Member 'MENU_Forge_C_ShowItem::OverclockItem' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, Resource) == 0x000010, "Member 'MENU_Forge_C_ShowItem::Resource' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, Cost) == 0x000018, "Member 'MENU_Forge_C_ShowItem::Cost' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, Schematic) == 0x000068, "Member 'MENU_Forge_C_ShowItem::Schematic' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'MENU_Forge_C_ShowItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, CallFunc_GetTitle_ReturnValue) == 0x000078, "Member 'MENU_Forge_C_ShowItem::CallFunc_GetTitle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, CallFunc_CanAffordSchematic_ReturnValue) == 0x000090, "Member 'MENU_Forge_C_ShowItem::CallFunc_CanAffordSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, CallFunc_GetResourceCost_ReturnValue) == 0x000098, "Member 'MENU_Forge_C_ShowItem::CallFunc_GetResourceCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShowItem, CallFunc_GetSchematic_Schematic) == 0x0000E8, "Member 'MENU_Forge_C_ShowItem::CallFunc_GetSchematic_Schematic' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.UpdateLevelProgress
// 0x0001 (0x0001 - 0x0000)
struct MENU_Forge_C_UpdateLevelProgress final
{
public:
	bool                                          Animate;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_Forge_C_UpdateLevelProgress) == 0x000001, "Wrong alignment on MENU_Forge_C_UpdateLevelProgress");
static_assert(sizeof(MENU_Forge_C_UpdateLevelProgress) == 0x000001, "Wrong size on MENU_Forge_C_UpdateLevelProgress");
static_assert(offsetof(MENU_Forge_C_UpdateLevelProgress, Animate) == 0x000000, "Member 'MENU_Forge_C_UpdateLevelProgress::Animate' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.BndEvt__TabOverclocks_K2Node_ComponentBoundEvent_2_OnItemClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MENU_Forge_C_BndEvt__TabOverclocks_K2Node_ComponentBoundEvent_2_OnItemClicked__DelegateSignature final
{
public:
	class UUI_Forge_Schematic_C*                  Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_BndEvt__TabOverclocks_K2Node_ComponentBoundEvent_2_OnItemClicked__DelegateSignature) == 0x000008, "Wrong alignment on MENU_Forge_C_BndEvt__TabOverclocks_K2Node_ComponentBoundEvent_2_OnItemClicked__DelegateSignature");
static_assert(sizeof(MENU_Forge_C_BndEvt__TabOverclocks_K2Node_ComponentBoundEvent_2_OnItemClicked__DelegateSignature) == 0x000008, "Wrong size on MENU_Forge_C_BndEvt__TabOverclocks_K2Node_ComponentBoundEvent_2_OnItemClicked__DelegateSignature");
static_assert(offsetof(MENU_Forge_C_BndEvt__TabOverclocks_K2Node_ComponentBoundEvent_2_OnItemClicked__DelegateSignature, Item) == 0x000000, "Member 'MENU_Forge_C_BndEvt__TabOverclocks_K2Node_ComponentBoundEvent_2_OnItemClicked__DelegateSignature::Item' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.OnForgingXPChanged_Event
// 0x0004 (0x0004 - 0x0000)
struct MENU_Forge_C_OnForgingXPChanged_Event final
{
public:
	float                                         XP;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_OnForgingXPChanged_Event) == 0x000004, "Wrong alignment on MENU_Forge_C_OnForgingXPChanged_Event");
static_assert(sizeof(MENU_Forge_C_OnForgingXPChanged_Event) == 0x000004, "Wrong size on MENU_Forge_C_OnForgingXPChanged_Event");
static_assert(offsetof(MENU_Forge_C_OnForgingXPChanged_Event, XP) == 0x000000, "Member 'MENU_Forge_C_OnForgingXPChanged_Event::XP' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.BndEvt__UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_4_OnCountingFinished__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MENU_Forge_C_BndEvt__UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_4_OnCountingFinished__DelegateSignature final
{
public:
	uint8                                         Reward;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_BndEvt__UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_4_OnCountingFinished__DelegateSignature) == 0x000001, "Wrong alignment on MENU_Forge_C_BndEvt__UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_4_OnCountingFinished__DelegateSignature");
static_assert(sizeof(MENU_Forge_C_BndEvt__UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_4_OnCountingFinished__DelegateSignature) == 0x000001, "Wrong size on MENU_Forge_C_BndEvt__UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_4_OnCountingFinished__DelegateSignature");
static_assert(offsetof(MENU_Forge_C_BndEvt__UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_4_OnCountingFinished__DelegateSignature, Reward) == 0x000000, "Member 'MENU_Forge_C_BndEvt__UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_4_OnCountingFinished__DelegateSignature::Reward' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MENU_Forge_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_Forge_C_PreConstruct) == 0x000001, "Wrong alignment on MENU_Forge_C_PreConstruct");
static_assert(sizeof(MENU_Forge_C_PreConstruct) == 0x000001, "Wrong size on MENU_Forge_C_PreConstruct");
static_assert(offsetof(MENU_Forge_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MENU_Forge_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ShoutLocally
// 0x0010 (0x0010 - 0x0000)
struct MENU_Forge_C_ShoutLocally final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDialogDataAsset*                       ShoutData;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_ShoutLocally) == 0x000008, "Wrong alignment on MENU_Forge_C_ShoutLocally");
static_assert(sizeof(MENU_Forge_C_ShoutLocally) == 0x000010, "Wrong size on MENU_Forge_C_ShoutLocally");
static_assert(offsetof(MENU_Forge_C_ShoutLocally, Delay) == 0x000000, "Member 'MENU_Forge_C_ShoutLocally::Delay' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShoutLocally, ShoutData) == 0x000008, "Member 'MENU_Forge_C_ShoutLocally::ShoutData' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ShoutLocallySoftPtr
// 0x0030 (0x0030 - 0x0000)
struct MENU_Forge_C_ShoutLocallySoftPtr final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDialogDataAsset>        ShoutData;                                         // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_ShoutLocallySoftPtr) == 0x000008, "Wrong alignment on MENU_Forge_C_ShoutLocallySoftPtr");
static_assert(sizeof(MENU_Forge_C_ShoutLocallySoftPtr) == 0x000030, "Wrong size on MENU_Forge_C_ShoutLocallySoftPtr");
static_assert(offsetof(MENU_Forge_C_ShoutLocallySoftPtr, Delay) == 0x000000, "Member 'MENU_Forge_C_ShoutLocallySoftPtr::Delay' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ShoutLocallySoftPtr, ShoutData) == 0x000008, "Member 'MENU_Forge_C_ShoutLocallySoftPtr::ShoutData' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.BndEvt__MENU_Forge_Forge_Rewards_Selector_K2Node_ComponentBoundEvent_5_OnRewardSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MENU_Forge_C_BndEvt__MENU_Forge_Forge_Rewards_Selector_K2Node_ComponentBoundEvent_5_OnRewardSelected__DelegateSignature final
{
public:
	class USchematic*                             InReward;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_BndEvt__MENU_Forge_Forge_Rewards_Selector_K2Node_ComponentBoundEvent_5_OnRewardSelected__DelegateSignature) == 0x000008, "Wrong alignment on MENU_Forge_C_BndEvt__MENU_Forge_Forge_Rewards_Selector_K2Node_ComponentBoundEvent_5_OnRewardSelected__DelegateSignature");
static_assert(sizeof(MENU_Forge_C_BndEvt__MENU_Forge_Forge_Rewards_Selector_K2Node_ComponentBoundEvent_5_OnRewardSelected__DelegateSignature) == 0x000008, "Wrong size on MENU_Forge_C_BndEvt__MENU_Forge_Forge_Rewards_Selector_K2Node_ComponentBoundEvent_5_OnRewardSelected__DelegateSignature");
static_assert(offsetof(MENU_Forge_C_BndEvt__MENU_Forge_Forge_Rewards_Selector_K2Node_ComponentBoundEvent_5_OnRewardSelected__DelegateSignature, InReward) == 0x000000, "Member 'MENU_Forge_C_BndEvt__MENU_Forge_Forge_Rewards_Selector_K2Node_ComponentBoundEvent_5_OnRewardSelected__DelegateSignature::InReward' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature final
{
public:
	int32                                         InLevel;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSeed;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature) == 0x000004, "Wrong alignment on MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature");
static_assert(sizeof(MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature) == 0x000008, "Wrong size on MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature");
static_assert(offsetof(MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature, InLevel) == 0x000000, "Member 'MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature::InLevel' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature, InSeed) == 0x000004, "Member 'MENU_Forge_C_BndEvt__MENU_Forge_UI_Forge_MasteryBar_K2Node_ComponentBoundEvent_10_OnClaimClicked__DelegateSignature::InSeed' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ExecuteUbergraph_MENU_Forge
// 0x0190 (0x0190 - 0x0000)
struct MENU_Forge_C_ExecuteUbergraph_MENU_Forge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FForgingResult                         K2Node_MakeStruct_ForgingResult;                   // 0x0010(0x000C)(NoDestructor)
	uint8                                         Pad_2EA4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Forge_Schematic_C*                  K2Node_ComponentBoundEvent_Item;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA5[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_XP;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SR_PlayerControllerBase_C*          CallFunc_GetSRController_SRController;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA6[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_2;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequireOnePromotedCharacter_Locked;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Forge_Schematic_Success;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA7[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             CallFunc_GetSchematic_Schematic;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_ComponentBoundEvent_Reward;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue_1;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA8[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA9[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay_1;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDialogDataAsset*                       K2Node_CustomEvent_ShoutData_1;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EAA[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EAB[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayPitched_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EAC[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDialogDataAsset>        K2Node_CustomEvent_ShoutData;                      // 0x00D8(0x0028)(HasGetValueTypeHash)
	class USchematicCategory*                     CallFunc_GetCategory_Category;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDialogDataAsset*                       K2Node_DynamicCast_AsDialog_Data_Asset;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EAD[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float XP)>                     K2Node_CreateDelegate_OutputDelegate_1;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2EAE[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             CallFunc_GetSchematic_Schematic_1;                 // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_3;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EAF[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             K2Node_ComponentBoundEvent_InReward;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB0[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_InLevel;                // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_InSeed;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FForgingResult                         K2Node_MakeStruct_ForgingResult_1;                 // 0x016C(0x000C)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge) == 0x000008, "Wrong alignment on MENU_Forge_C_ExecuteUbergraph_MENU_Forge");
static_assert(sizeof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge) == 0x000190, "Wrong size on MENU_Forge_C_ExecuteUbergraph_MENU_Forge");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, EntryPoint) == 0x000000, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::EntryPoint' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_MakeStruct_ForgingResult) == 0x000010, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_MakeStruct_ForgingResult' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_ComponentBoundEvent_Item) == 0x000020, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_MenuColors_OutputColor) == 0x000028, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_CustomEvent_XP) == 0x00003C, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_CustomEvent_XP' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetSRController_SRController) == 0x000040, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetSRController_SRController' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_IsPlayInEditor_ReturnValue) == 0x000048, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_IsPlayInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000050, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x000058, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetFSDGameInstance_ReturnValue_2) == 0x000060, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetFSDGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_RequireOnePromotedCharacter_Locked) == 0x000068, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_RequireOnePromotedCharacter_Locked' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_Forge_Schematic_Success) == 0x000069, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_Forge_Schematic_Success' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetSchematic_Schematic) == 0x000070, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetSchematic_Schematic' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetOwningPlayer_ReturnValue) == 0x000078, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_ComponentBoundEvent_Reward) == 0x000080, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_ComponentBoundEvent_Reward' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_IsPlayInEditor_ReturnValue_1) == 0x000081, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_IsPlayInEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_IsVisible_ReturnValue) == 0x000082, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetFSDSaveGame_ReturnValue) == 0x000088, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetActiveWidget_ReturnValue) == 0x000090, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000098, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_Event_IsDesignTime) == 0x000099, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_CustomEvent_Delay_1) == 0x00009C, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_CustomEvent_Delay_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_CustomEvent_ShoutData_1) == 0x0000A0, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_CustomEvent_ShoutData_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x0000A8, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_DynamicCast_AsPlayer_Character) == 0x0000B8, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_PlayPitched_ReturnValue) == 0x0000C8, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_PlayPitched_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_CustomEvent_Delay) == 0x0000D0, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_CustomEvent_ShoutData) == 0x0000D8, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_CustomEvent_ShoutData' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetCategory_Category) == 0x000100, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetCategory_Category' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000108, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_DynamicCast_AsDialog_Data_Asset) == 0x000110, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_DynamicCast_AsDialog_Data_Asset' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000119, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_CreateDelegate_OutputDelegate) == 0x00011C, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_CreateDelegate_OutputDelegate_1) == 0x00012C, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetSchematic_Schematic_1) == 0x000140, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetSchematic_Schematic_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_GetFSDGameInstance_ReturnValue_3) == 0x000148, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_GetFSDGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_Not_PreBool_ReturnValue) == 0x000150, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_ComponentBoundEvent_InReward) == 0x000158, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_ComponentBoundEvent_InReward' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_IsValid_ReturnValue_2) == 0x000160, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_ComponentBoundEvent_InLevel) == 0x000164, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_ComponentBoundEvent_InLevel' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_ComponentBoundEvent_InSeed) == 0x000168, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_ComponentBoundEvent_InSeed' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_MakeStruct_ForgingResult_1) == 0x00016C, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_MakeStruct_ForgingResult_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000178, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ExecuteUbergraph_MENU_Forge, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000188, "Member 'MENU_Forge_C_ExecuteUbergraph_MENU_Forge::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.ToggleItemPopUp
// 0x0006 (0x0006 - 0x0000)
struct MENU_Forge_C_ToggleItemPopUp final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_Forge_C_ToggleItemPopUp) == 0x000001, "Wrong alignment on MENU_Forge_C_ToggleItemPopUp");
static_assert(sizeof(MENU_Forge_C_ToggleItemPopUp) == 0x000006, "Wrong size on MENU_Forge_C_ToggleItemPopUp");
static_assert(offsetof(MENU_Forge_C_ToggleItemPopUp, Visible) == 0x000000, "Member 'MENU_Forge_C_ToggleItemPopUp::Visible' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleItemPopUp, Temp_bool_Variable) == 0x000001, "Member 'MENU_Forge_C_ToggleItemPopUp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleItemPopUp, Temp_byte_Variable) == 0x000002, "Member 'MENU_Forge_C_ToggleItemPopUp::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleItemPopUp, Temp_byte_Variable_1) == 0x000003, "Member 'MENU_Forge_C_ToggleItemPopUp::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleItemPopUp, K2Node_Select_Default) == 0x000004, "Member 'MENU_Forge_C_ToggleItemPopUp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MENU_Forge_C_ToggleItemPopUp, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000005, "Member 'MENU_Forge_C_ToggleItemPopUp::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function MENU_Forge.MENU_Forge_C.Refresh
// 0x0001 (0x0001 - 0x0000)
struct MENU_Forge_C_Refresh final
{
public:
	bool                                          CallFunc_IsPlayInEditor_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_Forge_C_Refresh) == 0x000001, "Wrong alignment on MENU_Forge_C_Refresh");
static_assert(sizeof(MENU_Forge_C_Refresh) == 0x000001, "Wrong size on MENU_Forge_C_Refresh");
static_assert(offsetof(MENU_Forge_C_Refresh, CallFunc_IsPlayInEditor_ReturnValue) == 0x000000, "Member 'MENU_Forge_C_Refresh::CallFunc_IsPlayInEditor_ReturnValue' has a wrong offset!");

}

