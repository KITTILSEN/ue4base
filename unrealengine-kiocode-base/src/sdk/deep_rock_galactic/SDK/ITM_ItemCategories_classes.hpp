#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_ItemCategories

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_ItemCategories.ITM_ItemCategories_C
// 0x00E0 (0x0340 - 0x0260)
class UITM_ItemCategories_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_Menu_ColorBar_C*                 Basic_Menu_ColorBar_C_4;                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBlurBackground_C*                      BlurBackground_C_1;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBTN_ItemCategory_C*                    BTN_Armor;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBTN_ItemCategory_C*                    BTN_Beard;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBTN_ItemCategory_C*                    BTN_Eyebrows;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBTN_ItemCategory_C*                    BTN_HairColor;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBTN_ItemCategory_C*                    BTN_Headwear;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBTN_ItemCategory_C*                    BTN_Moustache;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBTN_ItemCategory_C*                    BTN_Sideburns;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBTN_ItemCategory_C*                    BTN_SkinColor;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_CategoryName;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             BTN_ArmorClicked;                                  // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             BTN_BeardClicked;                                  // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             BTN_EyebrowsClicked;                               // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             BTN_SkinColorClicked;                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             BTN_HeadwearClicked;                               // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             BTN_SideburnsClicked;                              // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             BTN_MoustacheClicked;                              // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             BTN_HairColorClicked;                              // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void GetButton(EVanitySlot Param_Slot, class UBTN_ItemCategory_C** Button);
	void BndEvt__BTN_Armor_K2Node_ComponentBoundEvent_2_ButtonClicked__DelegateSignature();
	void BndEvt__BTN_Beard_K2Node_ComponentBoundEvent_4_ButtonClicked__DelegateSignature();
	void BndEvt__BTN_Eyebrows_K2Node_ComponentBoundEvent_5_ButtonClicked__DelegateSignature();
	void BndEvt__BTN_HairColor_K2Node_ComponentBoundEvent_6_ButtonClicked__DelegateSignature();
	void BndEvt__BTN_Headwear_K2Node_ComponentBoundEvent_7_ButtonClicked__DelegateSignature();
	void BndEvt__BTN_Moustache_K2Node_ComponentBoundEvent_8_ButtonClicked__DelegateSignature();
	void BndEvt__BTN_Sideburns_K2Node_ComponentBoundEvent_9_ButtonClicked__DelegateSignature();
	void SetData(class UPlayerCharacterID* CharacterID);
	void BndEvt__BTN_HairColor_K2Node_ComponentBoundEvent_0_ButtonClicked__DelegateSignature();
	void OnClosed();
	void ExecuteUbergraph_ITM_ItemCategories(int32 EntryPoint);
	void BTN_HairColorClicked__DelegateSignature();
	void BTN_MoustacheClicked__DelegateSignature();
	void BTN_SideburnsClicked__DelegateSignature();
	void BTN_HeadwearClicked__DelegateSignature();
	void BTN_SkinColorClicked__DelegateSignature();
	void BTN_EyebrowsClicked__DelegateSignature();
	void BTN_BeardClicked__DelegateSignature();
	void BTN_ArmorClicked__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_ItemCategories_C">();
	}
	static class UITM_ItemCategories_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_ItemCategories_C>();
	}
};
static_assert(alignof(UITM_ItemCategories_C) == 0x000008, "Wrong alignment on UITM_ItemCategories_C");
static_assert(sizeof(UITM_ItemCategories_C) == 0x000340, "Wrong size on UITM_ItemCategories_C");
static_assert(offsetof(UITM_ItemCategories_C, UberGraphFrame) == 0x000260, "Member 'UITM_ItemCategories_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, Basic_Menu_ColorBar_C_4) == 0x000268, "Member 'UITM_ItemCategories_C::Basic_Menu_ColorBar_C_4' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BlurBackground_C_1) == 0x000270, "Member 'UITM_ItemCategories_C::BlurBackground_C_1' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_Armor) == 0x000278, "Member 'UITM_ItemCategories_C::BTN_Armor' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_Beard) == 0x000280, "Member 'UITM_ItemCategories_C::BTN_Beard' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_Eyebrows) == 0x000288, "Member 'UITM_ItemCategories_C::BTN_Eyebrows' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_HairColor) == 0x000290, "Member 'UITM_ItemCategories_C::BTN_HairColor' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_Headwear) == 0x000298, "Member 'UITM_ItemCategories_C::BTN_Headwear' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_Moustache) == 0x0002A0, "Member 'UITM_ItemCategories_C::BTN_Moustache' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_Sideburns) == 0x0002A8, "Member 'UITM_ItemCategories_C::BTN_Sideburns' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_SkinColor) == 0x0002B0, "Member 'UITM_ItemCategories_C::BTN_SkinColor' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, DATA_CategoryName) == 0x0002B8, "Member 'UITM_ItemCategories_C::DATA_CategoryName' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_ArmorClicked) == 0x0002C0, "Member 'UITM_ItemCategories_C::BTN_ArmorClicked' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_BeardClicked) == 0x0002D0, "Member 'UITM_ItemCategories_C::BTN_BeardClicked' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_EyebrowsClicked) == 0x0002E0, "Member 'UITM_ItemCategories_C::BTN_EyebrowsClicked' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_SkinColorClicked) == 0x0002F0, "Member 'UITM_ItemCategories_C::BTN_SkinColorClicked' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_HeadwearClicked) == 0x000300, "Member 'UITM_ItemCategories_C::BTN_HeadwearClicked' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_SideburnsClicked) == 0x000310, "Member 'UITM_ItemCategories_C::BTN_SideburnsClicked' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_MoustacheClicked) == 0x000320, "Member 'UITM_ItemCategories_C::BTN_MoustacheClicked' has a wrong offset!");
static_assert(offsetof(UITM_ItemCategories_C, BTN_HairColorClicked) == 0x000330, "Member 'UITM_ItemCategories_C::BTN_HairColorClicked' has a wrong offset!");

}

