#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_NewsTicker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ITM_NewsTicker.ITM_NewsTicker_C.GenerateFluffStock
// 0x0148 (0x0148 - 0x0000)
struct ITM_NewsTicker_C_GenerateFluffStock final
{
public:
	struct FRandomStream                          RandomStream;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 FDJ;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         NumberOfCompanyLetters;                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C50[0x4];                                      // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Company;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Letters;                                           // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C51[0x4];                                      // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C52[0x2];                                      // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C53[0x4];                                      // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00D8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolFromStream_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C54[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_NewsTicker_C_GenerateFluffStock) == 0x000008, "Wrong alignment on ITM_NewsTicker_C_GenerateFluffStock");
static_assert(sizeof(ITM_NewsTicker_C_GenerateFluffStock) == 0x000148, "Wrong size on ITM_NewsTicker_C_GenerateFluffStock");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, RandomStream) == 0x000000, "Member 'ITM_NewsTicker_C_GenerateFluffStock::RandomStream' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, ReturnValue) == 0x000008, "Member 'ITM_NewsTicker_C_GenerateFluffStock::ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, FDJ) == 0x000018, "Member 'ITM_NewsTicker_C_GenerateFluffStock::FDJ' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, NumberOfCompanyLetters) == 0x000028, "Member 'ITM_NewsTicker_C_GenerateFluffStock::NumberOfCompanyLetters' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, Company) == 0x000030, "Member 'ITM_NewsTicker_C_GenerateFluffStock::Company' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, Letters) == 0x000040, "Member 'ITM_NewsTicker_C_GenerateFluffStock::Letters' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000050, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, K2Node_MakeArray_Array) == 0x000058, "Member 'ITM_NewsTicker_C_GenerateFluffStock::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, Temp_int_Variable) == 0x000068, "Member 'ITM_NewsTicker_C_GenerateFluffStock::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000070, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Less_FloatFloat_ReturnValue) == 0x000074, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000075, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_SelectString_ReturnValue) == 0x000078, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Array_LastIndex_ReturnValue) == 0x0000A8, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x0000AC, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x0000D0, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000D8, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_RandomBoolFromStream_ReturnValue) == 0x000100, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_RandomBoolFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_SelectString_ReturnValue_1) == 0x000108, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000118, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000128, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateFluffStock, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000138, "Member 'ITM_NewsTicker_C_GenerateFluffStock::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function ITM_NewsTicker.ITM_NewsTicker_C.GenerateTickerText
// 0x0318 (0x0318 - 0x0000)
struct ITM_NewsTicker_C_GenerateTickerText final
{
public:
	int32                                         SelectedIdx;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C55[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           TextPool;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	int64                                         MinutesBetweenNewHeadlines;                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar_0;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C56[0x7];                                      // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           G_MissionNames;                                    // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         NumberOfTextToGenerate;                            // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C57[0x4];                                      // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Letters;                                           // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         NewSeed;                                           // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C58[0x4];                                      // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           SelectedTexts;                                     // 0x0058(0x0010)(Edit, BlueprintVisible)
	TArray<class FText>                           Texts;                                             // 0x0068(0x0010)(Edit, BlueprintVisible)
	class FText                                   Result;                                            // 0x0078(0x0018)(Edit, BlueprintVisible)
	TArray<class UResourceData*>                  Resources;                                         // 0x0090(0x0010)(Edit, BlueprintVisible)
	struct FRandomStream                          Stream;                                            // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C59[0x3];                                      // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5A[0x7];                                      // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x00D8(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5B[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_FormatNewsTexts_ReturnValue;              // 0x0110(0x0010)(ReferenceParm)
	int64                                         CallFunc_GetUnixTimeStamp_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Divide_Int64Int64_ReturnValue;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0130(0x0018)()
	int64                                         CallFunc_Divide_Int64Int64_ReturnValue_1;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GenerateFluffStock_ReturnValue;           // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0178(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0190(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5C[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x01D4(0x0008)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C5D[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x01E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01F8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0238(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5E[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0280(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5F[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0298(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0300(0x0018)()
};
static_assert(alignof(ITM_NewsTicker_C_GenerateTickerText) == 0x000008, "Wrong alignment on ITM_NewsTicker_C_GenerateTickerText");
static_assert(sizeof(ITM_NewsTicker_C_GenerateTickerText) == 0x000318, "Wrong size on ITM_NewsTicker_C_GenerateTickerText");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, SelectedIdx) == 0x000000, "Member 'ITM_NewsTicker_C_GenerateTickerText::SelectedIdx' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, TextPool) == 0x000008, "Member 'ITM_NewsTicker_C_GenerateTickerText::TextPool' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, MinutesBetweenNewHeadlines) == 0x000018, "Member 'ITM_NewsTicker_C_GenerateTickerText::MinutesBetweenNewHeadlines' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, NewLocalVar_0) == 0x000020, "Member 'ITM_NewsTicker_C_GenerateTickerText::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, G_MissionNames) == 0x000028, "Member 'ITM_NewsTicker_C_GenerateTickerText::G_MissionNames' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, NumberOfTextToGenerate) == 0x000038, "Member 'ITM_NewsTicker_C_GenerateTickerText::NumberOfTextToGenerate' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, Letters) == 0x000040, "Member 'ITM_NewsTicker_C_GenerateTickerText::Letters' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, NewSeed) == 0x000050, "Member 'ITM_NewsTicker_C_GenerateTickerText::NewSeed' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, SelectedTexts) == 0x000058, "Member 'ITM_NewsTicker_C_GenerateTickerText::SelectedTexts' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, Texts) == 0x000068, "Member 'ITM_NewsTicker_C_GenerateTickerText::Texts' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, Result) == 0x000078, "Member 'ITM_NewsTicker_C_GenerateTickerText::Result' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, Resources) == 0x000090, "Member 'ITM_NewsTicker_C_GenerateTickerText::Resources' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, Stream) == 0x0000A0, "Member 'ITM_NewsTicker_C_GenerateTickerText::Stream' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, K2Node_MakeArray_Array) == 0x0000A8, "Member 'ITM_NewsTicker_C_GenerateTickerText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'ITM_NewsTicker_C_GenerateTickerText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'ITM_NewsTicker_C_GenerateTickerText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000C4, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F4, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x0000F8, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, Temp_int_Variable) == 0x0000FC, "Member 'ITM_NewsTicker_C_GenerateTickerText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Add_IntInt_ReturnValue_1) == 0x000104, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000108, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00010C, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_FormatNewsTexts_ReturnValue) == 0x000110, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_FormatNewsTexts_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_GetUnixTimeStamp_ReturnValue) == 0x000120, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_GetUnixTimeStamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Divide_Int64Int64_ReturnValue) == 0x000128, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Divide_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Divide_Int64Int64_ReturnValue_1) == 0x000148, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Divide_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Conv_TextToString_ReturnValue) == 0x000150, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000160, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_SelectInt_ReturnValue) == 0x000164, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_GenerateFluffStock_ReturnValue) == 0x000168, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_GenerateFluffStock_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Conv_StringToText_ReturnValue) == 0x000178, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, K2Node_MakeStruct_FormatArgumentData) == 0x000190, "Member 'ITM_NewsTicker_C_GenerateTickerText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001D0, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_MakeRandomStream_ReturnValue) == 0x0001D4, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Array_Get_Item_2) == 0x0001E0, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001F8, "Member 'ITM_NewsTicker_C_GenerateTickerText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000238, "Member 'ITM_NewsTicker_C_GenerateTickerText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Array_Length_ReturnValue_2) == 0x000278, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, K2Node_MakeArray_Array_1) == 0x000280, "Member 'ITM_NewsTicker_C_GenerateTickerText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Less_IntInt_ReturnValue) == 0x000290, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Format_ReturnValue) == 0x000298, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002B0, "Member 'ITM_NewsTicker_C_GenerateTickerText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, K2Node_MakeArray_Array_2) == 0x0002F0, "Member 'ITM_NewsTicker_C_GenerateTickerText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_GenerateTickerText, CallFunc_Format_ReturnValue_1) == 0x000300, "Member 'ITM_NewsTicker_C_GenerateTickerText::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function ITM_NewsTicker.ITM_NewsTicker_C.ExecuteUbergraph_ITM_NewsTicker
// 0x0020 (0x0020 - 0x0000)
struct ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C60[0x4];                                      // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker) == 0x000008, "Wrong alignment on ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker");
static_assert(sizeof(ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker) == 0x000020, "Wrong size on ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker");
static_assert(offsetof(ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker, EntryPoint) == 0x000000, "Member 'ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'ITM_NewsTicker_C_ExecuteUbergraph_ITM_NewsTicker::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}

