#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_FPS

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_FPS.UI_FPS_C.ExecuteUbergraph_UI_FPS
// 0x00E8 (0x00E8 - 0x0000)
struct UI_FPS_C_ExecuteUbergraph_UI_FPS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFrameRateInHz_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F2[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_FSDGameUserSettings_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetShowFPS_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F3[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0080(0x0028)()
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
};
static_assert(alignof(UI_FPS_C_ExecuteUbergraph_UI_FPS) == 0x000008, "Wrong alignment on UI_FPS_C_ExecuteUbergraph_UI_FPS");
static_assert(sizeof(UI_FPS_C_ExecuteUbergraph_UI_FPS) == 0x0000E8, "Wrong size on UI_FPS_C_ExecuteUbergraph_UI_FPS");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, EntryPoint) == 0x000000, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_GetFrameRateInHz_ReturnValue) == 0x000004, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_GetFrameRateInHz_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, Temp_bool_Variable) == 0x000008, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, Temp_byte_Variable) == 0x00001C, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, Temp_byte_Variable_1) == 0x00001D, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, K2Node_Event_IsDesignTime) == 0x00001E, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, K2Node_Event_MyGeometry) == 0x000020, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, K2Node_Event_InDeltaTime) == 0x000058, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_Lerp_ReturnValue) == 0x00005C, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_FSDGameUserSettings_ReturnValue) == 0x000060, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_FSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, K2Node_CustomEvent_NewValue) == 0x000068, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_GetShowFPS_ReturnValue) == 0x000069, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_GetShowFPS_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, K2Node_Select_Default) == 0x00006A, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_MenuColors_OutputColor) == 0x00006C, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00007C, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, K2Node_MakeStruct_SlateColor) == 0x000080, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_FTrunc_ReturnValue) == 0x0000AC, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_Conv_IntToString_ReturnValue) == 0x0000B0, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_ExecuteUbergraph_UI_FPS, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'UI_FPS_C_ExecuteUbergraph_UI_FPS::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_FPS.UI_FPS_C.OnShowFPSChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_FPS_C_OnShowFPSChanged final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_FPS_C_OnShowFPSChanged) == 0x000001, "Wrong alignment on UI_FPS_C_OnShowFPSChanged");
static_assert(sizeof(UI_FPS_C_OnShowFPSChanged) == 0x000001, "Wrong size on UI_FPS_C_OnShowFPSChanged");
static_assert(offsetof(UI_FPS_C_OnShowFPSChanged, NewValue) == 0x000000, "Member 'UI_FPS_C_OnShowFPSChanged::NewValue' has a wrong offset!");

// Function UI_FPS.UI_FPS_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_FPS_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_FPS_C_Tick) == 0x000004, "Wrong alignment on UI_FPS_C_Tick");
static_assert(sizeof(UI_FPS_C_Tick) == 0x00003C, "Wrong size on UI_FPS_C_Tick");
static_assert(offsetof(UI_FPS_C_Tick, MyGeometry) == 0x000000, "Member 'UI_FPS_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_FPS_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_FPS_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_FPS.UI_FPS_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_FPS_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_FPS_C_PreConstruct) == 0x000001, "Wrong alignment on UI_FPS_C_PreConstruct");
static_assert(sizeof(UI_FPS_C_PreConstruct) == 0x000001, "Wrong size on UI_FPS_C_PreConstruct");
static_assert(offsetof(UI_FPS_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_FPS_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

