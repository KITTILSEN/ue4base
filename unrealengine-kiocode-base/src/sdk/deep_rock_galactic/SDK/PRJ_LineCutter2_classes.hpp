#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PRJ_LineCutter2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PRJ_LineCutter2.PRJ_LineCutter2_C
// 0x00E0 (0x0610 - 0x0530)
class APRJ_LineCutter2_C final : public ALineCutterProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Plasma_Projectile3;                              // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Linecutter_Projectile_A_Right3;                 // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereRight3;                                      // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Linecutter_Projectile_A_Left3;                  // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereLeft3;                                       // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereRight;                                       // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereLeft;                                        // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereRight2;                                      // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereLeft2;                                       // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Plasma_Projectile2;                              // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Plasma_Projectile;                               // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Linecutter_Projectile_A_Right2;                 // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Linecutter_Projectile_A_Left2;                  // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       DamageExplosion;                                   // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosion;                               // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Linecutter_Projectile_A_Left;                   // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Linecutter_Projectile_A_Right;                  // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSlowdown_Velocity_3314D5764A0652510BE0E38ABA90D3FC; // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ProjectileSlowdown__Direction_3314D5764A0652510BE0E38ABA90D3FC; // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A7A[0x3];                                     // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ProjectileSlowdown;                                // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ExpandLineTimerHandle;                             // 0x05D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         TimerHandleExecutions;                             // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VisualMaxSize;                                     // 0x05E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FireTimerHandle;                                   // 0x05E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DestructionByTerrainTimerHandle;                   // 0x05F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TerrainCallTime;                                   // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerrainIndex;                                      // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ReduceLineTimerHandle;                             // 0x0600(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PersistantExplosion;                               // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AdjustLineSize();
	void UserConstructionScript();
	void ProjectileSlowdown__FinishedFunc();
	void ProjectileSlowdown__UpdateFunc();
	void DisableProjectile();
	void ExpandLine();
	void DoDamage();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void StartLineExpansion();
	void CheckTerrainCall();
	void K2_OnReset();
	void LinelifespanDestroy();
	void Explode();
	void LineReducing();
	void ThereCanBeOnlyOne();
	void OnLineDestroyed(const struct FHitResult& Result);
	void SetExtraBeamVisibility(bool IsVisible);
	void LeaveTrail();
	void StartSpawningTrail();
	void OnInitialized();
	void OnPenetrated(bool PredictedPenetration, const struct FHitResult& HitResult);
	void ExecuteUbergraph_PRJ_LineCutter2(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PRJ_LineCutter2_C">();
	}
	static class APRJ_LineCutter2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APRJ_LineCutter2_C>();
	}
};
static_assert(alignof(APRJ_LineCutter2_C) == 0x000008, "Wrong alignment on APRJ_LineCutter2_C");
static_assert(sizeof(APRJ_LineCutter2_C) == 0x000610, "Wrong size on APRJ_LineCutter2_C");
static_assert(offsetof(APRJ_LineCutter2_C, UberGraphFrame) == 0x000530, "Member 'APRJ_LineCutter2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, P_Plasma_Projectile3) == 0x000538, "Member 'APRJ_LineCutter2_C::P_Plasma_Projectile3' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SM_Linecutter_Projectile_A_Right3) == 0x000540, "Member 'APRJ_LineCutter2_C::SM_Linecutter_Projectile_A_Right3' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SphereRight3) == 0x000548, "Member 'APRJ_LineCutter2_C::SphereRight3' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SM_Linecutter_Projectile_A_Left3) == 0x000550, "Member 'APRJ_LineCutter2_C::SM_Linecutter_Projectile_A_Left3' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SphereLeft3) == 0x000558, "Member 'APRJ_LineCutter2_C::SphereLeft3' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SphereRight) == 0x000560, "Member 'APRJ_LineCutter2_C::SphereRight' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SphereLeft) == 0x000568, "Member 'APRJ_LineCutter2_C::SphereLeft' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SphereRight2) == 0x000570, "Member 'APRJ_LineCutter2_C::SphereRight2' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SphereLeft2) == 0x000578, "Member 'APRJ_LineCutter2_C::SphereLeft2' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, P_Plasma_Projectile2) == 0x000580, "Member 'APRJ_LineCutter2_C::P_Plasma_Projectile2' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, P_Plasma_Projectile) == 0x000588, "Member 'APRJ_LineCutter2_C::P_Plasma_Projectile' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, PointLight) == 0x000590, "Member 'APRJ_LineCutter2_C::PointLight' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SM_Linecutter_Projectile_A_Right2) == 0x000598, "Member 'APRJ_LineCutter2_C::SM_Linecutter_Projectile_A_Right2' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SM_Linecutter_Projectile_A_Left2) == 0x0005A0, "Member 'APRJ_LineCutter2_C::SM_Linecutter_Projectile_A_Left2' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, DamageExplosion) == 0x0005A8, "Member 'APRJ_LineCutter2_C::DamageExplosion' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, ProjectileExplosion) == 0x0005B0, "Member 'APRJ_LineCutter2_C::ProjectileExplosion' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SM_Linecutter_Projectile_A_Left) == 0x0005B8, "Member 'APRJ_LineCutter2_C::SM_Linecutter_Projectile_A_Left' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, SM_Linecutter_Projectile_A_Right) == 0x0005C0, "Member 'APRJ_LineCutter2_C::SM_Linecutter_Projectile_A_Right' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, ProjectileSlowdown_Velocity_3314D5764A0652510BE0E38ABA90D3FC) == 0x0005C8, "Member 'APRJ_LineCutter2_C::ProjectileSlowdown_Velocity_3314D5764A0652510BE0E38ABA90D3FC' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, ProjectileSlowdown__Direction_3314D5764A0652510BE0E38ABA90D3FC) == 0x0005CC, "Member 'APRJ_LineCutter2_C::ProjectileSlowdown__Direction_3314D5764A0652510BE0E38ABA90D3FC' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, ProjectileSlowdown) == 0x0005D0, "Member 'APRJ_LineCutter2_C::ProjectileSlowdown' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, ExpandLineTimerHandle) == 0x0005D8, "Member 'APRJ_LineCutter2_C::ExpandLineTimerHandle' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, TimerHandleExecutions) == 0x0005E0, "Member 'APRJ_LineCutter2_C::TimerHandleExecutions' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, VisualMaxSize) == 0x0005E4, "Member 'APRJ_LineCutter2_C::VisualMaxSize' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, FireTimerHandle) == 0x0005E8, "Member 'APRJ_LineCutter2_C::FireTimerHandle' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, DestructionByTerrainTimerHandle) == 0x0005F0, "Member 'APRJ_LineCutter2_C::DestructionByTerrainTimerHandle' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, TerrainCallTime) == 0x0005F8, "Member 'APRJ_LineCutter2_C::TerrainCallTime' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, TerrainIndex) == 0x0005FC, "Member 'APRJ_LineCutter2_C::TerrainIndex' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, ReduceLineTimerHandle) == 0x000600, "Member 'APRJ_LineCutter2_C::ReduceLineTimerHandle' has a wrong offset!");
static_assert(offsetof(APRJ_LineCutter2_C, PersistantExplosion) == 0x000608, "Member 'APRJ_LineCutter2_C::PersistantExplosion' has a wrong offset!");

}

