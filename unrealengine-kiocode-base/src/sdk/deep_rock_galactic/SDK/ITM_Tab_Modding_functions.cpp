#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Tab_Modding

#include "Basic.hpp"

#include "ITM_Tab_Modding_classes.hpp"
#include "ITM_Tab_Modding_parameters.hpp"


namespace SDK
{

// Function ITM_Tab_Modding.ITM_Tab_Modding_C.ExecuteUbergraph_ITM_Tab_Modding
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::ExecuteUbergraph_ITM_Tab_Modding(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "ExecuteUbergraph_ITM_Tab_Modding");

	Params::ITM_Tab_Modding_C_ExecuteUbergraph_ITM_Tab_Modding Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnShouldRemoveDependencyProgress
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::OnShouldRemoveDependencyProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnShouldRemoveDependencyProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnModioRequestHandled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EModioRequestType                       RequestType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::OnModioRequestHandled(EModioRequestType RequestType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnModioRequestHandled");

	Params::ITM_Tab_Modding_C_OnModioRequestHandled Parms{};

	Parms.RequestType = RequestType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__ITM_Tab_Modding_ITM_Modding_LoadoutSelection_K2Node_ComponentBoundEvent_8_OnSlotLoaded__DelegateSignature
// (BlueprintEvent)

void UITM_Tab_Modding_C::BndEvt__ITM_Tab_Modding_ITM_Modding_LoadoutSelection_K2Node_ComponentBoundEvent_8_OnSlotLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__ITM_Tab_Modding_ITM_Modding_LoadoutSelection_K2Node_ComponentBoundEvent_8_OnSlotLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnModActivationChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITM_Mod_C*                       ManipulatedModItem                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::OnModActivationChanged(class UITM_Mod_C* ManipulatedModItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnModActivationChanged");

	Params::ITM_Tab_Modding_C_OnModActivationChanged Parms{};

	Parms.ManipulatedModItem = ManipulatedModItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.UpdateButtonsAndCounter
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::UpdateButtonsAndCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "UpdateButtonsAndCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__CancelButton_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature
// (BlueprintEvent)

void UITM_Tab_Modding_C::BndEvt__CancelButton_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__CancelButton_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__SortByBox_K2Node_ComponentBoundEvent_6_OnEnableDisableAll__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    InEnableAll                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::BndEvt__SortByBox_K2Node_ComponentBoundEvent_6_OnEnableDisableAll__DelegateSignature(bool InEnableAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__SortByBox_K2Node_ComponentBoundEvent_6_OnEnableDisableAll__DelegateSignature");

	Params::ITM_Tab_Modding_C_BndEvt__SortByBox_K2Node_ComponentBoundEvent_6_OnEnableDisableAll__DelegateSignature Parms{};

	Parms.InEnableAll = InEnableAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__SortByBox_K2Node_ComponentBoundEvent_4_OnSortByChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EPackageSortField                       InField                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InAscending                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::BndEvt__SortByBox_K2Node_ComponentBoundEvent_4_OnSortByChanged__DelegateSignature(EPackageSortField InField, bool InAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__SortByBox_K2Node_ComponentBoundEvent_4_OnSortByChanged__DelegateSignature");

	Params::ITM_Tab_Modding_C_BndEvt__SortByBox_K2Node_ComponentBoundEvent_4_OnSortByChanged__DelegateSignature Parms{};

	Parms.InField = InField;
	Parms.InAscending = InAscending;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__UserSetting_CompactView_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    IsChecked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::BndEvt__UserSetting_CompactView_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__UserSetting_CompactView_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature");

	Params::ITM_Tab_Modding_C_BndEvt__UserSetting_CompactView_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature Parms{};

	Parms.IsChecked = IsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.RefreshModUI
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::RefreshModUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "RefreshModUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.RefreshInstallModsButton
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::RefreshInstallModsButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "RefreshInstallModsButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnModDownloadFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ModName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ModId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::OnModDownloadFinished(const class FString& ModName, const class FString& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnModDownloadFinished");

	Params::ITM_Tab_Modding_C_OnModDownloadFinished Parms{};

	Parms.ModName = std::move(ModName);
	Parms.ModId = std::move(ModId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnModManagementChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::OnModManagementChanged(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnModManagementChanged");

	Params::ITM_Tab_Modding_C_OnModManagementChanged Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__InstallNewModsButtonCenter_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UITM_Tab_Modding_C::BndEvt__InstallNewModsButtonCenter_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__InstallNewModsButtonCenter_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.ConstructModUI
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::ConstructModUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "ConstructModUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__ButtonTermsAndConditions_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UITM_Tab_Modding_C::BndEvt__ButtonTermsAndConditions_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__ButtonTermsAndConditions_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__InstallNewModsButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// (BlueprintEvent)

void UITM_Tab_Modding_C::BndEvt__InstallNewModsButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__InstallNewModsButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.BndEvt__ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UITM_Tab_Modding_C::BndEvt__ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "BndEvt__ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UITM_Tab_Modding_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UITM_Tab_Modding_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnSuccess_DA32360A4EE3DEB5BB1F39BA00736B96
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::OnSuccess_DA32360A4EE3DEB5BB1F39BA00736B96()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnSuccess_DA32360A4EE3DEB5BB1F39BA00736B96");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnFailure_DA32360A4EE3DEB5BB1F39BA00736B96
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::OnFailure_DA32360A4EE3DEB5BB1F39BA00736B96()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnFailure_DA32360A4EE3DEB5BB1F39BA00736B96");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.Yes_EC976CB74898DAEE8DC237B1445BDAB0
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::Yes_EC976CB74898DAEE8DC237B1445BDAB0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "Yes_EC976CB74898DAEE8DC237B1445BDAB0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.No_EC976CB74898DAEE8DC237B1445BDAB0
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::No_EC976CB74898DAEE8DC237B1445BDAB0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "No_EC976CB74898DAEE8DC237B1445BDAB0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.Yes_EC976CB74898DAEE8DC237B1C9A04A9B
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::Yes_EC976CB74898DAEE8DC237B1C9A04A9B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "Yes_EC976CB74898DAEE8DC237B1C9A04A9B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.No_EC976CB74898DAEE8DC237B1C9A04A9B
// (BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::No_EC976CB74898DAEE8DC237B1C9A04A9B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "No_EC976CB74898DAEE8DC237B1C9A04A9B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.CheckTermsAndConditions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Accepted                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::CheckTermsAndConditions(bool* Accepted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "CheckTermsAndConditions");

	Params::ITM_Tab_Modding_C_CheckTermsAndConditions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Accepted != nullptr)
		*Accepted = Parms.Accepted;
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnTermsAndConditionAnswered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Agree                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::OnTermsAndConditionAnswered(bool Agree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnTermsAndConditionAnswered");

	Params::ITM_Tab_Modding_C_OnTermsAndConditionAnswered Parms{};

	Parms.Agree = Agree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.On Fetched Terms and Conditions
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UModioTermsWrapper*               Terms                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::On_Fetched_Terms_and_Conditions(class UModioTermsWrapper* Terms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "On Fetched Terms and Conditions");

	Params::ITM_Tab_Modding_C_On_Fetched_Terms_and_Conditions Parms{};

	Parms.Terms = Terms;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.GetPendingModStatus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ModStatus                                              (Parm, OutParm)

void UITM_Tab_Modding_C::GetPendingModStatus(class FText* ModStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "GetPendingModStatus");

	Params::ITM_Tab_Modding_C_GetPendingModStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ModStatus != nullptr)
		*ModStatus = std::move(Parms.ModStatus);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.JoinWithTitle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InTitle                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class FString>                   Install                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           OutResult                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::JoinWithTitle(const class FText& InTitle, TArray<class FString>& Install, class FString* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "JoinWithTitle");

	Params::ITM_Tab_Modding_C_JoinWithTitle Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.Install = std::move(Install);

	UObject::ProcessEvent(Func, &Parms);

	Install = std::move(Parms.Install);

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnDownloadExtractMods
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>                   ModsPendingDownload                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Downloading                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Total                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::OnDownloadExtractMods(const class FString& Param_Name, const TArray<class FString>& ModsPendingDownload, bool Downloading, int32 Progress, int32 Total)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnDownloadExtractMods");

	Params::ITM_Tab_Modding_C_OnDownloadExtractMods Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.ModsPendingDownload = std::move(ModsPendingDownload);
	Parms.Downloading = Downloading;
	Parms.Progress = Progress;
	Parms.Total = Total;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.GetOrCreatePendingInstallWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InModName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_ModPendingStatus                   InPendingStatus                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UITM_PendingMod_C*                OutWidget                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::GetOrCreatePendingInstallWidget(const class FString& InModName, ENUM_ModPendingStatus InPendingStatus, class UITM_PendingMod_C** OutWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "GetOrCreatePendingInstallWidget");

	Params::ITM_Tab_Modding_C_GetOrCreatePendingInstallWidget Parms{};

	Parms.InModName = std::move(InModName);
	Parms.InPendingStatus = InPendingStatus;

	UObject::ProcessEvent(Func, &Parms);

	if (OutWidget != nullptr)
		*OutWidget = Parms.OutWidget;
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.SetInteractability
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::SetInteractability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "SetInteractability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.SetCompactMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_CompactView                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::SetCompactMode(bool Param_CompactView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "SetCompactMode");

	Params::ITM_Tab_Modding_C_SetCompactMode Parms{};

	Parms.Param_CompactView = Param_CompactView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.UpdateModCounter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::UpdateModCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "UpdateModCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.OnModOverlayClosed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LastURL                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UITM_Tab_Modding_C::OnModOverlayClosed(const class FString& LastURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "OnModOverlayClosed");

	Params::ITM_Tab_Modding_C_OnModOverlayClosed Parms{};

	Parms.LastURL = std::move(LastURL);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.ReorderInstalledMods
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPackageSortField                       InField                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InAscending                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::ReorderInstalledMods(EPackageSortField InField, bool InAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "ReorderInstalledMods");

	Params::ITM_Tab_Modding_C_ReorderInstalledMods Parms{};

	Parms.InField = InField;
	Parms.InAscending = InAscending;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.RemovePendingRequests
// (Public, BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::RemovePendingRequests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "RemovePendingRequests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.RefreshApplyCancelButtons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::RefreshApplyCancelButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "RefreshApplyCancelButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.IsUGCSubsystemAndRegistryValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::IsUGCSubsystemAndRegistryValid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "IsUGCSubsystemAndRegistryValid");

	Params::ITM_Tab_Modding_C_IsUGCSubsystemAndRegistryValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.GatherChangedMods
// (Public, BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::GatherChangedMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "GatherChangedMods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.ApplyChangedMods
// (Public, BlueprintCallable, BlueprintEvent)

void UITM_Tab_Modding_C::ApplyChangedMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "ApplyChangedMods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.GetModSlotStatusText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ModSlotStatus                                          (Parm, OutParm)

void UITM_Tab_Modding_C::GetModSlotStatusText(class FText* ModSlotStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "GetModSlotStatusText");

	Params::ITM_Tab_Modding_C_GetModSlotStatusText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ModSlotStatus != nullptr)
		*ModSlotStatus = std::move(Parms.ModSlotStatus);
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.GetTermsOfUseAcesssText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm)

const class FText UITM_Tab_Modding_C::GetTermsOfUseAcesssText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "GetTermsOfUseAcesssText");

	Params::ITM_Tab_Modding_C_GetTermsOfUseAcesssText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ITM_Tab_Modding.ITM_Tab_Modding_C.Should Modding Menu be Enabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Tab_Modding_C::Should_Modding_Menu_be_Enabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Tab_Modding_C", "Should Modding Menu be Enabled");

	Params::ITM_Tab_Modding_C_Should_Modding_Menu_be_Enabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

