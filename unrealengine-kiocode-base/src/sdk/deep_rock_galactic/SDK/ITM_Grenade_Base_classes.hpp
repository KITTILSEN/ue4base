#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Grenade_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ITM_Grenade_Base.ITM_Grenade_Base_C
// 0x0078 (0x0360 - 0x02E8)
class AITM_Grenade_Base_C : public AGrenade
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_GrenadeTrail;                                    // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUpgradableGearComponent*               UpgradableGear;                                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       Character;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDialogDataAsset*                       Grenade_warning;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeLifetimeAfterExplosion;                     // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugRadius;                                       // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        DelayedDestructionParticles;                       // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InViewTime;                                        // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialAngularVelocityScale;                       // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              ExplosionMixModifier;                              // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionDuckingTime;                              // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionDuckMinDistance;                          // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionDuckMaxDistance;                          // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE9[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDialogDataAsset*                       OutOfGrenadesShout;                                // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	float GetCooldownTime();
	void ReceiveBeginPlay();
	void OnExploded();
	void OnBeginPlay();
	void ExecuteUbergraph_ITM_Grenade_Base(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;
	void AddGearStateEntries(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_Grenade_Base_C">();
	}
	static class AITM_Grenade_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AITM_Grenade_Base_C>();
	}
};
static_assert(alignof(AITM_Grenade_Base_C) == 0x000008, "Wrong alignment on AITM_Grenade_Base_C");
static_assert(sizeof(AITM_Grenade_Base_C) == 0x000360, "Wrong size on AITM_Grenade_Base_C");
static_assert(offsetof(AITM_Grenade_Base_C, UberGraphFrame) == 0x0002E8, "Member 'AITM_Grenade_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, P_GrenadeTrail) == 0x0002F0, "Member 'AITM_Grenade_Base_C::P_GrenadeTrail' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, UpgradableGear) == 0x0002F8, "Member 'AITM_Grenade_Base_C::UpgradableGear' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, Widget) == 0x000300, "Member 'AITM_Grenade_Base_C::Widget' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, StaticMesh) == 0x000308, "Member 'AITM_Grenade_Base_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, Box) == 0x000310, "Member 'AITM_Grenade_Base_C::Box' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, Character) == 0x000318, "Member 'AITM_Grenade_Base_C::Character' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, Grenade_warning) == 0x000320, "Member 'AITM_Grenade_Base_C::Grenade_warning' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, GrenadeLifetimeAfterExplosion) == 0x000328, "Member 'AITM_Grenade_Base_C::GrenadeLifetimeAfterExplosion' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, DebugRadius) == 0x00032C, "Member 'AITM_Grenade_Base_C::DebugRadius' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, DelayedDestructionParticles) == 0x000330, "Member 'AITM_Grenade_Base_C::DelayedDestructionParticles' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, InViewTime) == 0x000338, "Member 'AITM_Grenade_Base_C::InViewTime' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, InitialAngularVelocityScale) == 0x00033C, "Member 'AITM_Grenade_Base_C::InitialAngularVelocityScale' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, ExplosionMixModifier) == 0x000340, "Member 'AITM_Grenade_Base_C::ExplosionMixModifier' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, ExplosionDuckingTime) == 0x000348, "Member 'AITM_Grenade_Base_C::ExplosionDuckingTime' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, ExplosionDuckMinDistance) == 0x00034C, "Member 'AITM_Grenade_Base_C::ExplosionDuckMinDistance' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, ExplosionDuckMaxDistance) == 0x000350, "Member 'AITM_Grenade_Base_C::ExplosionDuckMaxDistance' has a wrong offset!");
static_assert(offsetof(AITM_Grenade_Base_C, OutOfGrenadesShout) == 0x000358, "Member 'AITM_Grenade_Base_C::OutOfGrenadesShout' has a wrong offset!");

}

