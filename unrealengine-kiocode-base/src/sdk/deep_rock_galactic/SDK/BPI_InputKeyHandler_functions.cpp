#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_InputKeyHandler

#include "Basic.hpp"

#include "BPI_InputKeyHandler_classes.hpp"
#include "BPI_InputKeyHandler_parameters.hpp"


namespace SDK
{

// Function BPI_InputKeyHandler.BPI_InputKeyHandler_C.HandleKeyInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    InPressed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FEventReply                      OutReply                                               (Parm, OutParm)

void IBPI_InputKeyHandler_C::HandleKeyInput(const struct FKeyEvent& InKeyEvent, bool InPressed, struct FEventReply* OutReply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_InputKeyHandler_C", "HandleKeyInput");

	Params::BPI_InputKeyHandler_C_HandleKeyInput Parms{};

	Parms.InKeyEvent = std::move(InKeyEvent);
	Parms.InPressed = InPressed;

	UObject::ProcessEvent(Func, &Parms);

	if (OutReply != nullptr)
		*OutReply = std::move(Parms.OutReply);
}

}

