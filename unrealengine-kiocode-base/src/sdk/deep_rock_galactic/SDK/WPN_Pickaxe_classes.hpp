#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_Pickaxe

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_Pickaxe.WPN_Pickaxe_C
// 0x0018 (0x06F8 - 0x06E0)
class AWPN_Pickaxe_C : public APickaxeItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         NextHitTime;                                       // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SpecialTargetDamageEffects(const struct FVector& ImpactPoint, const struct FVector& ImpactNormal);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_WPN_Pickaxe(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_Pickaxe_C">();
	}
	static class AWPN_Pickaxe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_Pickaxe_C>();
	}
};
static_assert(alignof(AWPN_Pickaxe_C) == 0x000008, "Wrong alignment on AWPN_Pickaxe_C");
static_assert(sizeof(AWPN_Pickaxe_C) == 0x0006F8, "Wrong size on AWPN_Pickaxe_C");
static_assert(offsetof(AWPN_Pickaxe_C, UberGraphFrame) == 0x0006E0, "Member 'AWPN_Pickaxe_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_Pickaxe_C, CrosshairAggregator) == 0x0006E8, "Member 'AWPN_Pickaxe_C::CrosshairAggregator' has a wrong offset!");
static_assert(offsetof(AWPN_Pickaxe_C, NextHitTime) == 0x0006F0, "Member 'AWPN_Pickaxe_C::NextHitTime' has a wrong offset!");

}

