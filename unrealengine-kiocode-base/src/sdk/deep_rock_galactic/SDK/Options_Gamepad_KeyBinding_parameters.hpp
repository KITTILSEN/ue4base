#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_Gamepad_KeyBinding

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function Options_Gamepad_KeyBinding.Options_Gamepad_KeyBinding_C.ExecuteUbergraph_Options_Gamepad_KeyBinding
// 0x001C (0x001C - 0x0000)
struct Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_InCapturing;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding) == 0x000004, "Wrong alignment on Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding");
static_assert(sizeof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding) == 0x00001C, "Wrong size on Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding, EntryPoint) == 0x000000, "Member 'Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding::EntryPoint' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding, CallFunc_MenuColors_OutputColor) == 0x000004, "Member 'Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding, K2Node_Event_IsDesignTime) == 0x000014, "Member 'Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding, K2Node_ComponentBoundEvent_InCapturing) == 0x000015, "Member 'Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding::K2Node_ComponentBoundEvent_InCapturing' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding, CallFunc_SelectVisibility_IsVisible) == 0x000016, "Member 'Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding, CallFunc_SelectVisibility_VisibilityChanged) == 0x000017, "Member 'Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding, CallFunc_SelectVisibility_New_Visibility) == 0x000018, "Member 'Options_Gamepad_KeyBinding_C_ExecuteUbergraph_Options_Gamepad_KeyBinding::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function Options_Gamepad_KeyBinding.Options_Gamepad_KeyBinding_C.BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Options_Gamepad_KeyBinding_C_BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature final
{
public:
	bool                                          InCapturing;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_Gamepad_KeyBinding_C_BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature) == 0x000001, "Wrong alignment on Options_Gamepad_KeyBinding_C_BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature");
static_assert(sizeof(Options_Gamepad_KeyBinding_C_BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature) == 0x000001, "Wrong size on Options_Gamepad_KeyBinding_C_BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature, InCapturing) == 0x000000, "Member 'Options_Gamepad_KeyBinding_C_BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature::InCapturing' has a wrong offset!");

// Function Options_Gamepad_KeyBinding.Options_Gamepad_KeyBinding_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Options_Gamepad_KeyBinding_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_Gamepad_KeyBinding_C_PreConstruct) == 0x000001, "Wrong alignment on Options_Gamepad_KeyBinding_C_PreConstruct");
static_assert(sizeof(Options_Gamepad_KeyBinding_C_PreConstruct) == 0x000001, "Wrong size on Options_Gamepad_KeyBinding_C_PreConstruct");
static_assert(offsetof(Options_Gamepad_KeyBinding_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Options_Gamepad_KeyBinding_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

