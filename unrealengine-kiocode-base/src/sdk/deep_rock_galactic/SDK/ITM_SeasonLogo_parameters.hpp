#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_SeasonLogo

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ITM_SeasonLogo.ITM_SeasonLogo_C.ExecuteUbergraph_ITM_SeasonLogo
// 0x0020 (0x0020 - 0x0000)
struct ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonsSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USeason*                                CallFunc_GetCurrentSeason_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo) == 0x000008, "Wrong alignment on ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo");
static_assert(sizeof(ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo) == 0x000020, "Wrong size on ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo");
static_assert(offsetof(ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo, EntryPoint) == 0x000000, "Member 'ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo, CallFunc_GetCurrentSeason_ReturnValue) == 0x000010, "Member 'ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo::CallFunc_GetCurrentSeason_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo, K2Node_Event_IsDesignTime) == 0x000018, "Member 'ITM_SeasonLogo_C_ExecuteUbergraph_ITM_SeasonLogo::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ITM_SeasonLogo.ITM_SeasonLogo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_SeasonLogo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_SeasonLogo_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_SeasonLogo_C_PreConstruct");
static_assert(sizeof(ITM_SeasonLogo_C_PreConstruct) == 0x000001, "Wrong size on ITM_SeasonLogo_C_PreConstruct");
static_assert(offsetof(ITM_SeasonLogo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_SeasonLogo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_SeasonLogo.ITM_SeasonLogo_C.SetCounterHidden
// 0x0004 (0x0004 - 0x0000)
struct ITM_SeasonLogo_C_SetCounterHidden final
{
public:
	bool                                          InCounterHidden;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SeasonLogo_C_SetCounterHidden) == 0x000001, "Wrong alignment on ITM_SeasonLogo_C_SetCounterHidden");
static_assert(sizeof(ITM_SeasonLogo_C_SetCounterHidden) == 0x000004, "Wrong size on ITM_SeasonLogo_C_SetCounterHidden");
static_assert(offsetof(ITM_SeasonLogo_C_SetCounterHidden, InCounterHidden) == 0x000000, "Member 'ITM_SeasonLogo_C_SetCounterHidden::InCounterHidden' has a wrong offset!");
static_assert(offsetof(ITM_SeasonLogo_C_SetCounterHidden, CallFunc_SelectVisibility_IsVisible) == 0x000001, "Member 'ITM_SeasonLogo_C_SetCounterHidden::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_SeasonLogo_C_SetCounterHidden, CallFunc_SelectVisibility_VisibilityChanged) == 0x000002, "Member 'ITM_SeasonLogo_C_SetCounterHidden::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_SeasonLogo_C_SetCounterHidden, CallFunc_SelectVisibility_New_Visibility) == 0x000003, "Member 'ITM_SeasonLogo_C_SetCounterHidden::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

}

