#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState_SpaceRig

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GameState_classes.hpp"
#include "OnlineSubsystemUtils_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameState_SpaceRig.BP_GameState_SpaceRig_C
// 0x00B8 (0x0800 - 0x0748)
class ABP_GameState_SpaceRig_C final : public ABP_GameState_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GameState_SpaceRig_C;            // 0x0748(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             OnMisionSelected;                                  // 0x0750(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         MissionCountdown;                                  // 0x0760(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          MissionCountdownActive;                            // 0x0764(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_3774[0x3];                                     // 0x0765(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMissionCountdownChanged;                         // 0x0768(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HostReady;                                         // 0x0778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HostCountdownActive;                               // 0x0779(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_3775[0x2];                                     // 0x077A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HostCountdown;                                     // 0x077C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHostCountdownChanged;                            // 0x0780(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCountdownCompleted;                              // 0x0790(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHostTimerChanged;                                // 0x07A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnMissionTimerChanged;                             // 0x07B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AllReady;                                          // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3776[0x7];                                     // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        ServerList;                                        // 0x07C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnServerListChanged;                               // 0x07D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          SearchingInProgress;                               // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ForceQuickJoinSearch;                              // 0x07E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3777[0x6];                                     // 0x07EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCountdownChanged;                                // 0x07F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnMisionSelected__DelegateSignature(class UGeneratedMission* Mission);
	void OnMissionCountdownChanged__DelegateSignature(bool IsActive);
	void OnHostCountdownChanged__DelegateSignature(bool IsActive);
	void OnCountdownCompleted__DelegateSignature();
	void OnHostTimerChanged__DelegateSignature(float NewTime);
	void OnMissionTimerChanged__DelegateSignature(float NewTime);
	void OnServerListChanged__DelegateSignature();
	void OnCountdownChanged__DelegateSignature(bool Active);
	void ExecuteUbergraph_BP_GameState_SpaceRig(int32 EntryPoint);
	void Shout_Cooldown_Started();
	void ManualRefreshServerList();
	void ReceiveGeneratedMissionReplicated();
	void Search();
	void ReceiveBeginPlay();
	void CountDownCompleted();
	void StopHostTimer();
	void StartHostTimer();
	void StopMissionTimer();
	void StartMissionTimer();
	void ReceiveTick(float DeltaSeconds);
	void OnSuccess_3EF307534AC5AC56C0D60384C554CF10(const TArray<struct FBlueprintSessionResult>& Results);
	void OnFailure_3EF307534AC5AC56C0D60384C554CF10(const TArray<struct FBlueprintSessionResult>& Results);
	void OnRefresh_3EF307534AC5AC56C0D60384C554CF10(const TArray<struct FBlueprintSessionResult>& Results);
	void OnRep_MissionCountdown();
	void OnRep_MissionTimerActive();
	void OnRep_HostCountdownActive();
	void OnRep_HostCountdown();
	void HandleActiveCountdown();
	bool AreDeepDiveRequirementsMet();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameState_SpaceRig_C">();
	}
	static class ABP_GameState_SpaceRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GameState_SpaceRig_C>();
	}
};
static_assert(alignof(ABP_GameState_SpaceRig_C) == 0x000008, "Wrong alignment on ABP_GameState_SpaceRig_C");
static_assert(sizeof(ABP_GameState_SpaceRig_C) == 0x000800, "Wrong size on ABP_GameState_SpaceRig_C");
static_assert(offsetof(ABP_GameState_SpaceRig_C, UberGraphFrame_BP_GameState_SpaceRig_C) == 0x000748, "Member 'ABP_GameState_SpaceRig_C::UberGraphFrame_BP_GameState_SpaceRig_C' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, OnMisionSelected) == 0x000750, "Member 'ABP_GameState_SpaceRig_C::OnMisionSelected' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, MissionCountdown) == 0x000760, "Member 'ABP_GameState_SpaceRig_C::MissionCountdown' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, MissionCountdownActive) == 0x000764, "Member 'ABP_GameState_SpaceRig_C::MissionCountdownActive' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, OnMissionCountdownChanged) == 0x000768, "Member 'ABP_GameState_SpaceRig_C::OnMissionCountdownChanged' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, HostReady) == 0x000778, "Member 'ABP_GameState_SpaceRig_C::HostReady' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, HostCountdownActive) == 0x000779, "Member 'ABP_GameState_SpaceRig_C::HostCountdownActive' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, HostCountdown) == 0x00077C, "Member 'ABP_GameState_SpaceRig_C::HostCountdown' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, OnHostCountdownChanged) == 0x000780, "Member 'ABP_GameState_SpaceRig_C::OnHostCountdownChanged' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, OnCountdownCompleted) == 0x000790, "Member 'ABP_GameState_SpaceRig_C::OnCountdownCompleted' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, OnHostTimerChanged) == 0x0007A0, "Member 'ABP_GameState_SpaceRig_C::OnHostTimerChanged' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, OnMissionTimerChanged) == 0x0007B0, "Member 'ABP_GameState_SpaceRig_C::OnMissionTimerChanged' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, AllReady) == 0x0007C0, "Member 'ABP_GameState_SpaceRig_C::AllReady' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, ServerList) == 0x0007C8, "Member 'ABP_GameState_SpaceRig_C::ServerList' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, OnServerListChanged) == 0x0007D8, "Member 'ABP_GameState_SpaceRig_C::OnServerListChanged' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, SearchingInProgress) == 0x0007E8, "Member 'ABP_GameState_SpaceRig_C::SearchingInProgress' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, ForceQuickJoinSearch) == 0x0007E9, "Member 'ABP_GameState_SpaceRig_C::ForceQuickJoinSearch' has a wrong offset!");
static_assert(offsetof(ABP_GameState_SpaceRig_C, OnCountdownChanged) == 0x0007F0, "Member 'ABP_GameState_SpaceRig_C::OnCountdownChanged' has a wrong offset!");

}

