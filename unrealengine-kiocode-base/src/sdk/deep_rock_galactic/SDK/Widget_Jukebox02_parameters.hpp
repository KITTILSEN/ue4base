#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_Jukebox02

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Widget_Jukebox02.Widget_Jukebox02_C.ExecuteUbergraph_Widget_Jukebox02
// 0x0010 (0x0010 - 0x0000)
struct Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BF0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02) == 0x000008, "Wrong alignment on Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02");
static_assert(sizeof(Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02) == 0x000010, "Wrong size on Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02");
static_assert(offsetof(Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02, EntryPoint) == 0x000000, "Member 'Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'Widget_Jukebox02_C_ExecuteUbergraph_Widget_Jukebox02::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function Widget_Jukebox02.Widget_Jukebox02_C.SetIsPlaying
// 0x00D0 (0x00D0 - 0x0000)
struct Widget_Jukebox02_C_SetIsPlaying final
{
public:
	bool                                          Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Tint_Red;                                          // 0x0008(0x0028)(Edit, BlueprintVisible)
	struct FSlateColor                            TintGreen;                                         // 0x0030(0x0028)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF2[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0078(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0090(0x0018)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x00A8(0x0028)()
};
static_assert(alignof(Widget_Jukebox02_C_SetIsPlaying) == 0x000008, "Wrong alignment on Widget_Jukebox02_C_SetIsPlaying");
static_assert(sizeof(Widget_Jukebox02_C_SetIsPlaying) == 0x0000D0, "Wrong size on Widget_Jukebox02_C_SetIsPlaying");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, Param_Index) == 0x000000, "Member 'Widget_Jukebox02_C_SetIsPlaying::Param_Index' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, Tint_Red) == 0x000008, "Member 'Widget_Jukebox02_C_SetIsPlaying::Tint_Red' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, TintGreen) == 0x000030, "Member 'Widget_Jukebox02_C_SetIsPlaying::TintGreen' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, Temp_bool_Variable) == 0x000058, "Member 'Widget_Jukebox02_C_SetIsPlaying::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, Temp_bool_Variable_1) == 0x000059, "Member 'Widget_Jukebox02_C_SetIsPlaying::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, Temp_text_Variable) == 0x000060, "Member 'Widget_Jukebox02_C_SetIsPlaying::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, Temp_text_Variable_1) == 0x000078, "Member 'Widget_Jukebox02_C_SetIsPlaying::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, K2Node_Select_Default) == 0x000090, "Member 'Widget_Jukebox02_C_SetIsPlaying::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Widget_Jukebox02_C_SetIsPlaying, K2Node_Select_Default_1) == 0x0000A8, "Member 'Widget_Jukebox02_C_SetIsPlaying::K2Node_Select_Default_1' has a wrong offset!");

}

