#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_InfoBox

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "ENU_TextCase_structs.hpp"


namespace SDK::Params
{

// Function ITM_InfoBox.ITM_InfoBox_C.SetOpen
// 0x0007 (0x0007 - 0x0000)
struct ITM_InfoBox_C_SetOpen final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_InfoBox_C_SetOpen) == 0x000001, "Wrong alignment on ITM_InfoBox_C_SetOpen");
static_assert(sizeof(ITM_InfoBox_C_SetOpen) == 0x000007, "Wrong size on ITM_InfoBox_C_SetOpen");
static_assert(offsetof(ITM_InfoBox_C_SetOpen, IsOpen) == 0x000000, "Member 'ITM_InfoBox_C_SetOpen::IsOpen' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_SetOpen, CallFunc_SelectVisibility_IsVisible) == 0x000001, "Member 'ITM_InfoBox_C_SetOpen::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_SetOpen, CallFunc_SelectVisibility_VisibilityChanged) == 0x000002, "Member 'ITM_InfoBox_C_SetOpen::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_SetOpen, CallFunc_SelectVisibility_New_Visibility) == 0x000003, "Member 'ITM_InfoBox_C_SetOpen::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_SetOpen, CallFunc_SelectVisibility_IsVisible_1) == 0x000004, "Member 'ITM_InfoBox_C_SetOpen::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_SetOpen, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x000005, "Member 'ITM_InfoBox_C_SetOpen::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_SetOpen, CallFunc_SelectVisibility_New_Visibility_1) == 0x000006, "Member 'ITM_InfoBox_C_SetOpen::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");

// Function ITM_InfoBox.ITM_InfoBox_C.SetText
// 0x0020 (0x0020 - 0x0000)
struct ITM_InfoBox_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ENU_TextCase                                  InText_Case;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_InfoBox_C_SetText) == 0x000008, "Wrong alignment on ITM_InfoBox_C_SetText");
static_assert(sizeof(ITM_InfoBox_C_SetText) == 0x000020, "Wrong size on ITM_InfoBox_C_SetText");
static_assert(offsetof(ITM_InfoBox_C_SetText, InText) == 0x000000, "Member 'ITM_InfoBox_C_SetText::InText' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_SetText, InText_Case) == 0x000018, "Member 'ITM_InfoBox_C_SetText::InText_Case' has a wrong offset!");

// Function ITM_InfoBox.ITM_InfoBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_InfoBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_InfoBox_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_InfoBox_C_PreConstruct");
static_assert(sizeof(ITM_InfoBox_C_PreConstruct) == 0x000001, "Wrong size on ITM_InfoBox_C_PreConstruct");
static_assert(offsetof(ITM_InfoBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_InfoBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_InfoBox.ITM_InfoBox_C.ExecuteUbergraph_ITM_InfoBox
// 0x0038 (0x0038 - 0x0000)
struct ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_555B[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_2;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_555C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox) == 0x000008, "Wrong alignment on ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox");
static_assert(sizeof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox) == 0x000038, "Wrong size on ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, EntryPoint) == 0x000000, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, Temp_bool_Variable) == 0x000004, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, Temp_byte_Variable) == 0x000005, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, Temp_byte_Variable_1) == 0x000006, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, K2Node_Event_IsDesignTime) == 0x000007, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000008, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x00000C, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, CallFunc_GetAnimationCurrentTime_ReturnValue_2) == 0x000024, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::CallFunc_GetAnimationCurrentTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, K2Node_Select_Default) == 0x000028, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox, CallFunc_PlayAnimation_ReturnValue_2) == 0x000030, "Member 'ITM_InfoBox_C_ExecuteUbergraph_ITM_InfoBox::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

}

