#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SentryGun_Redeployable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SentryGun_Redeployable.BP_SentryGun_Redeployable_C
// 0x00F0 (0x05D8 - 0x04E8)
class ABP_SentryGun_Redeployable_C final : public ARedeployableSentryGun
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   ArcIndicator;                                      // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   EMPIndicator;                                      // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SpecialAttackCollider;                             // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               SpecialAttackParticleSystem;                       // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       AmmoCountWidget;                                   // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BarrelsMesh;                                       // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpotLightBase;                                     // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCone;                                         // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileLauncherComponent*           ProjectileLauncher;                                // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USimpleHealthComponent*                 SimpleHealth;                                      // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       DamageComponent;                                   // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UReloadSentryUsableComponent*           ReloadSentryUsable;                                // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USimpleObjectInfoComponent*             SimpleObjectInfo;                                  // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USingleUsableComponent*                 DeployUsable;                                      // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       BuildWidget;                                       // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SpotLight2;                                        // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       UsableCollision;                                   // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitscanComponent*                      HitScan;                                           // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Translate_BarrelOverchargeShot_4853B22243389D0916A3E09304615D5D; // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_4853B22243389D0916A3E09304615D5D; // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A67[0x3];                                     // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DismantleDuration;                                 // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Building;                                          // 0x05AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A68[0x3];                                     // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OldShotCooldown;                                   // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpecialAttackAmmoCost;                             // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BuildProgress;                                     // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MuzzleIndex;                                       // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           MuzzleNames;                                       // 0x05C0(0x0010)(Edit, BlueprintVisible)
	class UMaterialInstanceDynamic*               IndicatorMaterial;                                 // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateIndicatorLight(bool FiredShot);
	void ConditionallyEnableShadows();
	void ToggleBuildMode(bool InBuilding);
	void UserConstructionScript();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void ReceiveOnDeploy();
	void ReceiveOnDismantle();
	void ReceiveOnDismantled();
	void ReceiveOnDeployed();
	void BndEvt__SingleUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
	void BndEvt__SingleUsable_K2Node_ComponentBoundEvent_1_ProgressSignature__DelegateSignature(float Progress);
	void ReceiveBeginPlay();
	void ReceiveOnSentryGunOwnerChanged();
	void ActivateSpecialAttack();
	void Multicast_Special_Attack_GFX();
	void Reset_Special_Attack();
	void UpdateShadows();
	void BndEvt__Hitscan_K2Node_ComponentBoundEvent_2_WeaponFiredDelegate__DelegateSignature(const struct FVector& Location);
	void ReceiveAmmoChanged(int32 Delta, int32 CurrentAmount);
	void SetArcIndicatorActive(bool Active);
	void ExecuteUbergraph_BP_SentryGun_Redeployable(int32 EntryPoint);

	float GetDeployProgress() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SentryGun_Redeployable_C">();
	}
	static class ABP_SentryGun_Redeployable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SentryGun_Redeployable_C>();
	}
};
static_assert(alignof(ABP_SentryGun_Redeployable_C) == 0x000008, "Wrong alignment on ABP_SentryGun_Redeployable_C");
static_assert(sizeof(ABP_SentryGun_Redeployable_C) == 0x0005D8, "Wrong size on ABP_SentryGun_Redeployable_C");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, UberGraphFrame) == 0x0004E8, "Member 'ABP_SentryGun_Redeployable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, ArcIndicator) == 0x0004F0, "Member 'ABP_SentryGun_Redeployable_C::ArcIndicator' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, EMPIndicator) == 0x0004F8, "Member 'ABP_SentryGun_Redeployable_C::EMPIndicator' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, SpecialAttackCollider) == 0x000500, "Member 'ABP_SentryGun_Redeployable_C::SpecialAttackCollider' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, SpecialAttackParticleSystem) == 0x000508, "Member 'ABP_SentryGun_Redeployable_C::SpecialAttackParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, AmmoCountWidget) == 0x000510, "Member 'ABP_SentryGun_Redeployable_C::AmmoCountWidget' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, BarrelsMesh) == 0x000518, "Member 'ABP_SentryGun_Redeployable_C::BarrelsMesh' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, SpotLightBase) == 0x000520, "Member 'ABP_SentryGun_Redeployable_C::SpotLightBase' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, LightCone) == 0x000528, "Member 'ABP_SentryGun_Redeployable_C::LightCone' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, PointLight) == 0x000530, "Member 'ABP_SentryGun_Redeployable_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, SpotLight) == 0x000538, "Member 'ABP_SentryGun_Redeployable_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, ProjectileLauncher) == 0x000540, "Member 'ABP_SentryGun_Redeployable_C::ProjectileLauncher' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, SimpleHealth) == 0x000548, "Member 'ABP_SentryGun_Redeployable_C::SimpleHealth' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, DamageComponent) == 0x000550, "Member 'ABP_SentryGun_Redeployable_C::DamageComponent' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, PointLight1) == 0x000558, "Member 'ABP_SentryGun_Redeployable_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, ReloadSentryUsable) == 0x000560, "Member 'ABP_SentryGun_Redeployable_C::ReloadSentryUsable' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, SimpleObjectInfo) == 0x000568, "Member 'ABP_SentryGun_Redeployable_C::SimpleObjectInfo' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, DeployUsable) == 0x000570, "Member 'ABP_SentryGun_Redeployable_C::DeployUsable' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, BuildWidget) == 0x000578, "Member 'ABP_SentryGun_Redeployable_C::BuildWidget' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, SpotLight2) == 0x000580, "Member 'ABP_SentryGun_Redeployable_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, UsableCollision) == 0x000588, "Member 'ABP_SentryGun_Redeployable_C::UsableCollision' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, HitScan) == 0x000590, "Member 'ABP_SentryGun_Redeployable_C::HitScan' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, Timeline_0_Translate_BarrelOverchargeShot_4853B22243389D0916A3E09304615D5D) == 0x000598, "Member 'ABP_SentryGun_Redeployable_C::Timeline_0_Translate_BarrelOverchargeShot_4853B22243389D0916A3E09304615D5D' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, Timeline_0__Direction_4853B22243389D0916A3E09304615D5D) == 0x00059C, "Member 'ABP_SentryGun_Redeployable_C::Timeline_0__Direction_4853B22243389D0916A3E09304615D5D' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, Timeline_0) == 0x0005A0, "Member 'ABP_SentryGun_Redeployable_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, DismantleDuration) == 0x0005A8, "Member 'ABP_SentryGun_Redeployable_C::DismantleDuration' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, Building) == 0x0005AC, "Member 'ABP_SentryGun_Redeployable_C::Building' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, OldShotCooldown) == 0x0005B0, "Member 'ABP_SentryGun_Redeployable_C::OldShotCooldown' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, SpecialAttackAmmoCost) == 0x0005B4, "Member 'ABP_SentryGun_Redeployable_C::SpecialAttackAmmoCost' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, BuildProgress) == 0x0005B8, "Member 'ABP_SentryGun_Redeployable_C::BuildProgress' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, MuzzleIndex) == 0x0005BC, "Member 'ABP_SentryGun_Redeployable_C::MuzzleIndex' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, MuzzleNames) == 0x0005C0, "Member 'ABP_SentryGun_Redeployable_C::MuzzleNames' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_Redeployable_C, IndicatorMaterial) == 0x0005D0, "Member 'ABP_SentryGun_Redeployable_C::IndicatorMaterial' has a wrong offset!");

}

