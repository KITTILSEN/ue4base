#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lore_Container_CreatureInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Lore_Container_CreatureInfo.Lore_Container_CreatureInfo_C
// 0x0108 (0x0368 - 0x0260)
class ULore_Container_CreatureInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_BG_CutCorner_C*                  Basic_BG_CutCorner_C;                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_BG_CutCorner_C*                  Basic_BG_CutCorner_C_0;                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_BG_CutCorner_C*                  Basic_BG_Window_C_0;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Window_CutCorner_C*              Basic_Window;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Armor;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Attack;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Attack_Enemy2;                                // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Family;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Special;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Type;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Weakpoint;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULore_InfoBox_C*                        InfoBox_Armor;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULore_InfoBox_C*                        InfoBox_Family;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULore_InfoBox_C*                        InfoBox_Type;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULore_InfoBox_C*                        InfoBox_Weakpoints;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_3;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Attack;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Attack_enemy2;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_0;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_2;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_4;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Header;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               WrapBox_Attacks;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               WrapBox_Attacks_Enemy2;                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               WrapBox_SpecialAttacks;                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TempText;                                          // 0x0338(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMinersManual*                          MinersManual;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyID*                               TwinID;                                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoxPadding;                                        // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Lore_Container_CreatureInfo(int32 EntryPoint);
	void FillInAttacks(class UWrapBox* Container, const TArray<struct FEnemyAttackDescription>& Attacks);
	void SetData(class UEnemyMinersManualData* Creature, class UMinersManual* Param_MinersManual);
	void GetTypeText(EEnemyType InType, class FText* DisplayText, class UTexture2D** Icon);
	void TwinsCustomAttack(class UEnemyMinersManualData* Enemy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Lore_Container_CreatureInfo_C">();
	}
	static class ULore_Container_CreatureInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULore_Container_CreatureInfo_C>();
	}
};
static_assert(alignof(ULore_Container_CreatureInfo_C) == 0x000008, "Wrong alignment on ULore_Container_CreatureInfo_C");
static_assert(sizeof(ULore_Container_CreatureInfo_C) == 0x000368, "Wrong size on ULore_Container_CreatureInfo_C");
static_assert(offsetof(ULore_Container_CreatureInfo_C, UberGraphFrame) == 0x000260, "Member 'ULore_Container_CreatureInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, Basic_BG_CutCorner_C) == 0x000268, "Member 'ULore_Container_CreatureInfo_C::Basic_BG_CutCorner_C' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, Basic_BG_CutCorner_C_0) == 0x000270, "Member 'ULore_Container_CreatureInfo_C::Basic_BG_CutCorner_C_0' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, Basic_BG_Window_C_0) == 0x000278, "Member 'ULore_Container_CreatureInfo_C::Basic_BG_Window_C_0' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, Basic_Window) == 0x000280, "Member 'ULore_Container_CreatureInfo_C::Basic_Window' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, HBox_Armor) == 0x000288, "Member 'ULore_Container_CreatureInfo_C::HBox_Armor' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, HBox_Attack) == 0x000290, "Member 'ULore_Container_CreatureInfo_C::HBox_Attack' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, HBox_Attack_Enemy2) == 0x000298, "Member 'ULore_Container_CreatureInfo_C::HBox_Attack_Enemy2' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, HBox_Family) == 0x0002A0, "Member 'ULore_Container_CreatureInfo_C::HBox_Family' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, HBox_Special) == 0x0002A8, "Member 'ULore_Container_CreatureInfo_C::HBox_Special' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, HBox_Type) == 0x0002B0, "Member 'ULore_Container_CreatureInfo_C::HBox_Type' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, HBox_Weakpoint) == 0x0002B8, "Member 'ULore_Container_CreatureInfo_C::HBox_Weakpoint' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, InfoBox_Armor) == 0x0002C0, "Member 'ULore_Container_CreatureInfo_C::InfoBox_Armor' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, InfoBox_Family) == 0x0002C8, "Member 'ULore_Container_CreatureInfo_C::InfoBox_Family' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, InfoBox_Type) == 0x0002D0, "Member 'ULore_Container_CreatureInfo_C::InfoBox_Type' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, InfoBox_Weakpoints) == 0x0002D8, "Member 'ULore_Container_CreatureInfo_C::InfoBox_Weakpoints' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, SizeBox_3) == 0x0002E0, "Member 'ULore_Container_CreatureInfo_C::SizeBox_3' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, Text_Attack) == 0x0002E8, "Member 'ULore_Container_CreatureInfo_C::Text_Attack' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, Text_Attack_enemy2) == 0x0002F0, "Member 'ULore_Container_CreatureInfo_C::Text_Attack_enemy2' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, TextBlock_0) == 0x0002F8, "Member 'ULore_Container_CreatureInfo_C::TextBlock_0' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, TextBlock_2) == 0x000300, "Member 'ULore_Container_CreatureInfo_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, TextBlock_3) == 0x000308, "Member 'ULore_Container_CreatureInfo_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, TextBlock_4) == 0x000310, "Member 'ULore_Container_CreatureInfo_C::TextBlock_4' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, TextBlock_Header) == 0x000318, "Member 'ULore_Container_CreatureInfo_C::TextBlock_Header' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, WrapBox_Attacks) == 0x000320, "Member 'ULore_Container_CreatureInfo_C::WrapBox_Attacks' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, WrapBox_Attacks_Enemy2) == 0x000328, "Member 'ULore_Container_CreatureInfo_C::WrapBox_Attacks_Enemy2' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, WrapBox_SpecialAttacks) == 0x000330, "Member 'ULore_Container_CreatureInfo_C::WrapBox_SpecialAttacks' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, TempText) == 0x000338, "Member 'ULore_Container_CreatureInfo_C::TempText' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, MinersManual) == 0x000350, "Member 'ULore_Container_CreatureInfo_C::MinersManual' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, TwinID) == 0x000358, "Member 'ULore_Container_CreatureInfo_C::TwinID' has a wrong offset!");
static_assert(offsetof(ULore_Container_CreatureInfo_C, BoxPadding) == 0x000360, "Member 'ULore_Container_CreatureInfo_C::BoxPadding' has a wrong offset!");

}

