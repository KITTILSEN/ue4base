#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PRJ_PlasmaCarbineShot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PRJ_PlasmaCarbineShot.PRJ_PlasmaCarbineShot_C
// 0x0068 (0x03A8 - 0x0340)
class APRJ_PlasmaCarbineShot_C final : public AProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_ElectricPlasma;                                  // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_Shield;                                    // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_HOT;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_ShieldPlasma;                                    // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosionHot;                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosionElectric;                       // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosionSplash;                         // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosion;                               // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxBounces;                                        // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsElectric;                                        // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBouncy;                                          // 0x03A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHot;                                             // 0x03A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	class UDamageComponent* GetDamageComponent();
	bool ShouldBreakArmorBeforeDamage(class AActor* Target);
	void HandleImpact(struct FHitResult& HitResult);
	void BounceFeedback();
	void OnImpacted(bool PredictedImpact, const struct FHitResult& HitResult);
	void MakeBouncy();
	void BndEvt__MovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void DoEffects(const struct FVector& Location, const struct FVector& Normal);
	void DoOnSpawn();
	void OnInitialized();
	void OnUpgradeElementAdded(class UProjectileUpgradeElement* Element);
	void CustomEvent(const class UItemUpgrade* Event);
	void BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_PRJ_PlasmaCarbineShot(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PRJ_PlasmaCarbineShot_C">();
	}
	static class APRJ_PlasmaCarbineShot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APRJ_PlasmaCarbineShot_C>();
	}
};
static_assert(alignof(APRJ_PlasmaCarbineShot_C) == 0x000008, "Wrong alignment on APRJ_PlasmaCarbineShot_C");
static_assert(sizeof(APRJ_PlasmaCarbineShot_C) == 0x0003A8, "Wrong size on APRJ_PlasmaCarbineShot_C");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, UberGraphFrame) == 0x000340, "Member 'APRJ_PlasmaCarbineShot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, P_ElectricPlasma) == 0x000348, "Member 'APRJ_PlasmaCarbineShot_C::P_ElectricPlasma' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, Niagara_Shield) == 0x000350, "Member 'APRJ_PlasmaCarbineShot_C::Niagara_Shield' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, Niagara_HOT) == 0x000358, "Member 'APRJ_PlasmaCarbineShot_C::Niagara_HOT' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, Niagara) == 0x000360, "Member 'APRJ_PlasmaCarbineShot_C::Niagara' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, P_ShieldPlasma) == 0x000368, "Member 'APRJ_PlasmaCarbineShot_C::P_ShieldPlasma' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, ProjectileExplosionHot) == 0x000370, "Member 'APRJ_PlasmaCarbineShot_C::ProjectileExplosionHot' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, ProjectileExplosionElectric) == 0x000378, "Member 'APRJ_PlasmaCarbineShot_C::ProjectileExplosionElectric' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, ProjectileExplosionSplash) == 0x000380, "Member 'APRJ_PlasmaCarbineShot_C::ProjectileExplosionSplash' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, ProjectileExplosion) == 0x000388, "Member 'APRJ_PlasmaCarbineShot_C::ProjectileExplosion' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, Damage) == 0x000390, "Member 'APRJ_PlasmaCarbineShot_C::Damage' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, StaticMesh) == 0x000398, "Member 'APRJ_PlasmaCarbineShot_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, MaxBounces) == 0x0003A0, "Member 'APRJ_PlasmaCarbineShot_C::MaxBounces' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, IsElectric) == 0x0003A4, "Member 'APRJ_PlasmaCarbineShot_C::IsElectric' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, IsBouncy) == 0x0003A5, "Member 'APRJ_PlasmaCarbineShot_C::IsBouncy' has a wrong offset!");
static_assert(offsetof(APRJ_PlasmaCarbineShot_C, IsHot) == 0x0003A6, "Member 'APRJ_PlasmaCarbineShot_C::IsHot' has a wrong offset!");

}

