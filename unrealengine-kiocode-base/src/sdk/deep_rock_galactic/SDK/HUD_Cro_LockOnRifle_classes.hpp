#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Cro_LockOnRifle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUD_Cro_LockOnRifle.HUD_Cro_LockOnRifle_C
// 0x0138 (0x0398 - 0x0260)
class UHUD_Cro_LockOnRifle_C final : public UCrosshairWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DotFade;                                           // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Bracket_Left;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bracket_Right;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CH_Bottom;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CH_Left;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CH_Right;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CH_Top;                                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dot;                                               // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Focus_Botom;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Focus_Left;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Focus_Right;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Focus_Top;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Focussed_Regular;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Focussed_Small;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GK2MinusmarkerL;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GK2MinusmarkerR;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hair_Bottom;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hair_Left;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hair_Right;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hair_Top;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_72;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_LockOn_Counter_C*                   LockOnCounter_Normal;                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_LockOn_Counter_C*                   LockOnCounter_Small;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Label_C*                         LockWarningLabel;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Normal;                                            // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_LockOn_Scanning_C*                  Scanning_Normal;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_LockOn_Scanning_C*                  Scanning_Small;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Regular;                                   // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Small;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Type;                               // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Opacity_High;                                      // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D0[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       Character;                                         // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Opacity_Low;                                       // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          JustHit;                                           // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42D1[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpreadPositionMultiplier;                          // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FocusSpreadPositionMultiplier;                     // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALockOnWeapon*                          Weapon;                                            // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnSpreadChange(float HorizontalSpread, float VerticalSpread, bool IsAtRest);
	void Construct();
	void SetData(class AItem* Item);
	void PreConstruct(bool IsDesignTime);
	void OnDamagedEnemy_Event(const TScriptInterface<class IHealth>& EnemyHealth, float Damage, float DamageModifier, float HealthRemaining, bool IsWeakPoint, bool IsRadial);
	void LockingStarted_Event();
	void NoLongerFocussed();
	void OnUpgraded(class AItem* Item);
	void OnLockingStopped();
	void OnLockingAboutToExpire();
	void ExecuteUbergraph_HUD_Cro_LockOnRifle(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_Cro_LockOnRifle_C">();
	}
	static class UHUD_Cro_LockOnRifle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_Cro_LockOnRifle_C>();
	}
};
static_assert(alignof(UHUD_Cro_LockOnRifle_C) == 0x000008, "Wrong alignment on UHUD_Cro_LockOnRifle_C");
static_assert(sizeof(UHUD_Cro_LockOnRifle_C) == 0x000398, "Wrong size on UHUD_Cro_LockOnRifle_C");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, UberGraphFrame) == 0x000260, "Member 'UHUD_Cro_LockOnRifle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, DotFade) == 0x000268, "Member 'UHUD_Cro_LockOnRifle_C::DotFade' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Bracket_Left) == 0x000270, "Member 'UHUD_Cro_LockOnRifle_C::Bracket_Left' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Bracket_Right) == 0x000278, "Member 'UHUD_Cro_LockOnRifle_C::Bracket_Right' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, CH_Bottom) == 0x000280, "Member 'UHUD_Cro_LockOnRifle_C::CH_Bottom' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, CH_Left) == 0x000288, "Member 'UHUD_Cro_LockOnRifle_C::CH_Left' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, CH_Right) == 0x000290, "Member 'UHUD_Cro_LockOnRifle_C::CH_Right' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, CH_Top) == 0x000298, "Member 'UHUD_Cro_LockOnRifle_C::CH_Top' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Dot) == 0x0002A0, "Member 'UHUD_Cro_LockOnRifle_C::Dot' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Focus_Botom) == 0x0002A8, "Member 'UHUD_Cro_LockOnRifle_C::Focus_Botom' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Focus_Left) == 0x0002B0, "Member 'UHUD_Cro_LockOnRifle_C::Focus_Left' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Focus_Right) == 0x0002B8, "Member 'UHUD_Cro_LockOnRifle_C::Focus_Right' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Focus_Top) == 0x0002C0, "Member 'UHUD_Cro_LockOnRifle_C::Focus_Top' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Focussed_Regular) == 0x0002C8, "Member 'UHUD_Cro_LockOnRifle_C::Focussed_Regular' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Focussed_Small) == 0x0002D0, "Member 'UHUD_Cro_LockOnRifle_C::Focussed_Small' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, GK2MinusmarkerL) == 0x0002D8, "Member 'UHUD_Cro_LockOnRifle_C::GK2MinusmarkerL' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, GK2MinusmarkerR) == 0x0002E0, "Member 'UHUD_Cro_LockOnRifle_C::GK2MinusmarkerR' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Hair_Bottom) == 0x0002E8, "Member 'UHUD_Cro_LockOnRifle_C::Hair_Bottom' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Hair_Left) == 0x0002F0, "Member 'UHUD_Cro_LockOnRifle_C::Hair_Left' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Hair_Right) == 0x0002F8, "Member 'UHUD_Cro_LockOnRifle_C::Hair_Right' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Hair_Top) == 0x000300, "Member 'UHUD_Cro_LockOnRifle_C::Hair_Top' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Image) == 0x000308, "Member 'UHUD_Cro_LockOnRifle_C::Image' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Image_1) == 0x000310, "Member 'UHUD_Cro_LockOnRifle_C::Image_1' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Image_4) == 0x000318, "Member 'UHUD_Cro_LockOnRifle_C::Image_4' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Image_72) == 0x000320, "Member 'UHUD_Cro_LockOnRifle_C::Image_72' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, LockOnCounter_Normal) == 0x000328, "Member 'UHUD_Cro_LockOnRifle_C::LockOnCounter_Normal' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, LockOnCounter_Small) == 0x000330, "Member 'UHUD_Cro_LockOnRifle_C::LockOnCounter_Small' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, LockWarningLabel) == 0x000338, "Member 'UHUD_Cro_LockOnRifle_C::LockWarningLabel' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Normal) == 0x000340, "Member 'UHUD_Cro_LockOnRifle_C::Normal' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Scanning_Normal) == 0x000348, "Member 'UHUD_Cro_LockOnRifle_C::Scanning_Normal' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Scanning_Small) == 0x000350, "Member 'UHUD_Cro_LockOnRifle_C::Scanning_Small' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, SizeBox_Regular) == 0x000358, "Member 'UHUD_Cro_LockOnRifle_C::SizeBox_Regular' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, SizeBox_Small) == 0x000360, "Member 'UHUD_Cro_LockOnRifle_C::SizeBox_Small' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, WidgetSwitcher_Type) == 0x000368, "Member 'UHUD_Cro_LockOnRifle_C::WidgetSwitcher_Type' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Opacity_High) == 0x000370, "Member 'UHUD_Cro_LockOnRifle_C::Opacity_High' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Character) == 0x000378, "Member 'UHUD_Cro_LockOnRifle_C::Character' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Opacity_Low) == 0x000380, "Member 'UHUD_Cro_LockOnRifle_C::Opacity_Low' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, JustHit) == 0x000384, "Member 'UHUD_Cro_LockOnRifle_C::JustHit' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, SpreadPositionMultiplier) == 0x000388, "Member 'UHUD_Cro_LockOnRifle_C::SpreadPositionMultiplier' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, FocusSpreadPositionMultiplier) == 0x00038C, "Member 'UHUD_Cro_LockOnRifle_C::FocusSpreadPositionMultiplier' has a wrong offset!");
static_assert(offsetof(UHUD_Cro_LockOnRifle_C, Weapon) == 0x000390, "Member 'UHUD_Cro_LockOnRifle_C::Weapon' has a wrong offset!");

}

