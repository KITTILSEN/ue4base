#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Spacerig_Spaceball_Goal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Spacerig_Spaceball_Goal.BP_Spacerig_Spaceball_Goal_C
// 0x00A0 (0x0320 - 0x0280)
class ABP_Spacerig_Spaceball_Goal_C final : public AGem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget1;                                           // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          GoalBox;                                           // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       UseSphere;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem2;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem1;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Goal;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_GoalEmitter_01;                                 // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCarriableComponent*                    Carriable;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ThrowForce;                                        // 0x02E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GoalsScored;                                       // 0x02EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         StartYaw;                                          // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A6[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             GoalScoredSound;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ThrowSound;                                        // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartedDeploying;                                  // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasReachedPeak;                                    // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A7[0x3];                                     // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SmoothCoff;                                        // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BeginActive;                                       // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasBounced;                                        // 0x0315(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A8[0x2];                                     // 0x0316(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GoalClosedTimer;                                   // 0x0318(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Spacerig_Spaceball_Goal(int32 EntryPoint);
	void Countdown_Completed();
	void BndEvt__GoalBox_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Throw(const struct FVector& Force);
	void SetGoalVisible();
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void BndEvt__Carriable_K2Node_ComponentBoundEvent_2_CarriableEvent__DelegateSignature();
	void BndEvt__Carriable_K2Node_ComponentBoundEvent_1_CarriableEvent__DelegateSignature();
	void BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableChangedSignature__DelegateSignature(bool CanUse);
	void BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
	void OnRep_GoalsScored();
	void HandlePopUp(float DeltaTime);
	void OnRep_GoalClosedTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Spacerig_Spaceball_Goal_C">();
	}
	static class ABP_Spacerig_Spaceball_Goal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Spacerig_Spaceball_Goal_C>();
	}
};
static_assert(alignof(ABP_Spacerig_Spaceball_Goal_C) == 0x000008, "Wrong alignment on ABP_Spacerig_Spaceball_Goal_C");
static_assert(sizeof(ABP_Spacerig_Spaceball_Goal_C) == 0x000320, "Wrong size on ABP_Spacerig_Spaceball_Goal_C");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, UberGraphFrame) == 0x000280, "Member 'ABP_Spacerig_Spaceball_Goal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, Widget1) == 0x000288, "Member 'ABP_Spacerig_Spaceball_Goal_C::Widget1' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, Widget) == 0x000290, "Member 'ABP_Spacerig_Spaceball_Goal_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, GoalBox) == 0x000298, "Member 'ABP_Spacerig_Spaceball_Goal_C::GoalBox' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, UseSphere) == 0x0002A0, "Member 'ABP_Spacerig_Spaceball_Goal_C::UseSphere' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, ParticleSystem2) == 0x0002A8, "Member 'ABP_Spacerig_Spaceball_Goal_C::ParticleSystem2' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, ParticleSystem1) == 0x0002B0, "Member 'ABP_Spacerig_Spaceball_Goal_C::ParticleSystem1' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, ParticleSystem) == 0x0002B8, "Member 'ABP_Spacerig_Spaceball_Goal_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, Goal) == 0x0002C0, "Member 'ABP_Spacerig_Spaceball_Goal_C::Goal' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, SM_GoalEmitter_01) == 0x0002C8, "Member 'ABP_Spacerig_Spaceball_Goal_C::SM_GoalEmitter_01' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, Box) == 0x0002D0, "Member 'ABP_Spacerig_Spaceball_Goal_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, Carriable) == 0x0002D8, "Member 'ABP_Spacerig_Spaceball_Goal_C::Carriable' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, ThrowForce) == 0x0002E0, "Member 'ABP_Spacerig_Spaceball_Goal_C::ThrowForce' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, GoalsScored) == 0x0002EC, "Member 'ABP_Spacerig_Spaceball_Goal_C::GoalsScored' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, StartYaw) == 0x0002F0, "Member 'ABP_Spacerig_Spaceball_Goal_C::StartYaw' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, GoalScoredSound) == 0x0002F8, "Member 'ABP_Spacerig_Spaceball_Goal_C::GoalScoredSound' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, ThrowSound) == 0x000300, "Member 'ABP_Spacerig_Spaceball_Goal_C::ThrowSound' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, StartedDeploying) == 0x000308, "Member 'ABP_Spacerig_Spaceball_Goal_C::StartedDeploying' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, HasReachedPeak) == 0x00030C, "Member 'ABP_Spacerig_Spaceball_Goal_C::HasReachedPeak' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, SmoothCoff) == 0x000310, "Member 'ABP_Spacerig_Spaceball_Goal_C::SmoothCoff' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, BeginActive) == 0x000314, "Member 'ABP_Spacerig_Spaceball_Goal_C::BeginActive' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, HasBounced) == 0x000315, "Member 'ABP_Spacerig_Spaceball_Goal_C::HasBounced' has a wrong offset!");
static_assert(offsetof(ABP_Spacerig_Spaceball_Goal_C, GoalClosedTimer) == 0x000318, "Member 'ABP_Spacerig_Spaceball_Goal_C::GoalClosedTimer' has a wrong offset!");

}

