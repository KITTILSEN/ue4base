#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Filter_ServerWorkEnvironment

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Filter_ServerWorkEnvironment.Filter_ServerWorkEnvironment_C
// 0x0038 (0x0298 - 0x0260)
class UFilter_ServerWorkEnvironment_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           EntryBox;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ExpandableMenu_C*                MenuWorkEnvironment;                               // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UCheck_ServerWorkEnvironment_C*> Entries;                                           // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             OnSelectionChanged;                                // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OpenMenu(bool Open);
	void GetSelectedDifficulties(TArray<class UDifficultySetting*>* Difficulties);
	void IsDifficultySelected(class UDifficultySetting* InDifficulty, bool* Selected);
	void UpdateSubheader();
	void Add_Work_Environment(class UDifficultySetting* Difficulty, class UCheck_ServerWorkEnvironment_C** OutWidget, bool* OutIsChecked);
	void PreConstruct(bool IsDesignTime);
	void OnCheckedChanged(class UCheck_ServerWorkEnvironment_C* CheckBox, class UDifficultySetting* Difficulty, bool IsChecked);
	void Reset();
	void ExecuteUbergraph_Filter_ServerWorkEnvironment(int32 EntryPoint);
	void OnSelectionChanged__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Filter_ServerWorkEnvironment_C">();
	}
	static class UFilter_ServerWorkEnvironment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFilter_ServerWorkEnvironment_C>();
	}
};
static_assert(alignof(UFilter_ServerWorkEnvironment_C) == 0x000008, "Wrong alignment on UFilter_ServerWorkEnvironment_C");
static_assert(sizeof(UFilter_ServerWorkEnvironment_C) == 0x000298, "Wrong size on UFilter_ServerWorkEnvironment_C");
static_assert(offsetof(UFilter_ServerWorkEnvironment_C, UberGraphFrame) == 0x000260, "Member 'UFilter_ServerWorkEnvironment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFilter_ServerWorkEnvironment_C, EntryBox) == 0x000268, "Member 'UFilter_ServerWorkEnvironment_C::EntryBox' has a wrong offset!");
static_assert(offsetof(UFilter_ServerWorkEnvironment_C, MenuWorkEnvironment) == 0x000270, "Member 'UFilter_ServerWorkEnvironment_C::MenuWorkEnvironment' has a wrong offset!");
static_assert(offsetof(UFilter_ServerWorkEnvironment_C, Entries) == 0x000278, "Member 'UFilter_ServerWorkEnvironment_C::Entries' has a wrong offset!");
static_assert(offsetof(UFilter_ServerWorkEnvironment_C, OnSelectionChanged) == 0x000288, "Member 'UFilter_ServerWorkEnvironment_C::OnSelectionChanged' has a wrong offset!");

}

