#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_ChargeBlaster

#include "Basic.hpp"

#include "WPN_ChargeBlaster_classes.hpp"
#include "WPN_ChargeBlaster_parameters.hpp"


namespace SDK
{

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.Fade Out if Valid
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  AC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_ChargeBlaster_C::Fade_Out_if_Valid(class UAudioComponent*& AC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "Fade Out if Valid");

	Params::WPN_ChargeBlaster_C_Fade_Out_if_Valid Parms{};

	Parms.AC = AC;

	UObject::ProcessEvent(Func, &Parms);

	AC = Parms.AC;
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.HandleHeatAudio
// (Public, BlueprintCallable, BlueprintEvent)

void AWPN_ChargeBlaster_C::HandleHeatAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "HandleHeatAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.HandleChargeAudio
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Charge                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_ChargeBlaster_C::HandleChargeAudio(float Charge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "HandleChargeAudio");

	Params::WPN_ChargeBlaster_C_HandleChargeAudio Parms{};

	Parms.Charge = Charge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AWPN_ChargeBlaster_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.OnHeatChanged_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Charge                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_ChargeBlaster_C::OnHeatChanged_Event_0(float Charge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "OnHeatChanged_Event_0");

	Params::WPN_ChargeBlaster_C_OnHeatChanged_Event_0 Parms{};

	Parms.Charge = Charge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.ChargeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Charge                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_ChargeBlaster_C::ChargeChanged(float Charge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "ChargeChanged");

	Params::WPN_ChargeBlaster_C_ChargeChanged Parms{};

	Parms.Charge = Charge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.RecieveUnequipped
// (Event, Protected, BlueprintEvent)

void AWPN_ChargeBlaster_C::RecieveUnequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "RecieveUnequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.ReceiveOverheatedChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsOverheated                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWPN_ChargeBlaster_C::ReceiveOverheatedChanged(bool IsOverheated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "ReceiveOverheatedChanged");

	Params::WPN_ChargeBlaster_C_ReceiveOverheatedChanged Parms{};

	Parms.IsOverheated = IsOverheated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.OnSkinChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class USkinEffect*                      Skin                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_ChargeBlaster_C::OnSkinChanged(class USkinEffect* Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "OnSkinChanged");

	Params::WPN_ChargeBlaster_C_OnSkinChanged Parms{};

	Parms.Skin = Skin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.AddedToInventory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerCharacter*                 ItemOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_ChargeBlaster_C::AddedToInventory(class APlayerCharacter* ItemOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "AddedToInventory");

	Params::WPN_ChargeBlaster_C_AddedToInventory Parms{};

	Parms.ItemOwner = ItemOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.RecieveFiredWeapon
// (Event, Protected, BlueprintEvent)

void AWPN_ChargeBlaster_C::RecieveFiredWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "RecieveFiredWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.ExecuteUbergraph_WPN_ChargeBlaster
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_ChargeBlaster_C::ExecuteUbergraph_WPN_ChargeBlaster(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "ExecuteUbergraph_WPN_ChargeBlaster");

	Params::WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.GetGearStatEntry
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState*                  PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGearStatEntry>           Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AWPN_ChargeBlaster_C::GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_ChargeBlaster_C", "GetGearStatEntry");

	Params::WPN_ChargeBlaster_C_GetGearStatEntry Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Stats = std::move(Stats);

	UObject::ProcessEvent(Func, &Parms);

	Stats = std::move(Parms.Stats);
}

}

