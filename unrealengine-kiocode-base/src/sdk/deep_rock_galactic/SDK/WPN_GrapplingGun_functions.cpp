#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_GrapplingGun

#include "Basic.hpp"

#include "WPN_GrapplingGun_classes.hpp"
#include "WPN_GrapplingGun_parameters.hpp"


namespace SDK
{

// Function WPN_GrapplingGun.WPN_GrapplingGun_C.GetCableTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)

struct FTransform AWPN_GrapplingGun_C::GetCableTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "GetCableTransform");

	Params::WPN_GrapplingGun_C_GetCableTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.SetCableEndPoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_GrapplingGun_C::SetCableEndPoint(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "SetCableEndPoint");

	Params::WPN_GrapplingGun_C_SetCableEndPoint Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.GetCableParent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  Muzzle                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_GrapplingGun_C::GetCableParent(class USceneComponent** Muzzle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "GetCableParent");

	Params::WPN_GrapplingGun_C_GetCableParent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Muzzle != nullptr)
		*Muzzle = Parms.Muzzle;
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.ToggleCable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWPN_GrapplingGun_C::ToggleCable(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "ToggleCable");

	Params::WPN_GrapplingGun_C_ToggleCable Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.GetAimView
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Forward                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_GrapplingGun_C::GetAimView(struct FVector* Location, struct FVector* Forward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "GetAimView");

	Params::WPN_GrapplingGun_C_GetAimView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Forward != nullptr)
		*Forward = std::move(Parms.Forward);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AWPN_GrapplingGun_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.ProjectileMovement__FinishedFunc
// (BlueprintEvent)

void AWPN_GrapplingGun_C::ProjectileMovement__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "ProjectileMovement__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.ProjectileMovement__UpdateFunc
// (BlueprintEvent)

void AWPN_GrapplingGun_C::ProjectileMovement__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "ProjectileMovement__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.AddedToInventory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerCharacter*                 ItemOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_GrapplingGun_C::AddedToInventory(class APlayerCharacter* ItemOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "AddedToInventory");

	Params::WPN_GrapplingGun_C_AddedToInventory Parms{};

	Parms.ItemOwner = ItemOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWPN_GrapplingGun_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.RecieveCycledItem
// (Event, Protected, BlueprintEvent)

void AWPN_GrapplingGun_C::RecieveCycledItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "RecieveCycledItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.Gunsling
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AWPN_GrapplingGun_C::Gunsling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "Gunsling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.OnGrappleUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_GrapplingGun_C::OnGrappleUpdate(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "OnGrappleUpdate");

	Params::WPN_GrapplingGun_C_OnGrappleUpdate Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.OnGrappleStart
// (Event, Protected, BlueprintEvent)

void AWPN_GrapplingGun_C::OnGrappleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "OnGrappleStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.OnGrappleEnd
// (Event, Protected, BlueprintEvent)

void AWPN_GrapplingGun_C::OnGrappleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "OnGrappleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.OnGrappleFailed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    TooFar                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWPN_GrapplingGun_C::OnGrappleFailed(bool TooFar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "OnGrappleFailed");

	Params::WPN_GrapplingGun_C_OnGrappleFailed Parms{};

	Parms.TooFar = TooFar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.ExecuteUbergraph_WPN_GrapplingGun
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_GrapplingGun_C::ExecuteUbergraph_WPN_GrapplingGun(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "ExecuteUbergraph_WPN_GrapplingGun");

	Params::WPN_GrapplingGun_C_ExecuteUbergraph_WPN_GrapplingGun Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_GrapplingGun.WPN_GrapplingGun_C.GetGearStatEntry
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState*                  PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGearStatEntry>           Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AWPN_GrapplingGun_C::GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_GrapplingGun_C", "GetGearStatEntry");

	Params::WPN_GrapplingGun_C_GetGearStatEntry Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Stats = std::move(Stats);

	UObject::ProcessEvent(Func, &Parms);

	Stats = std::move(Parms.Stats);
}

}

