#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ENE_Spider_Boss_Base

#include "Basic.hpp"

#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function ENE_Spider_Boss_Base.ENE_Spider_Boss_Base_C.Check Without A Paddle Achievement
// 0x0050 (0x0050 - 0x0000)
struct ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement final
{
public:
	class APlayerCharacter*                       OnlyPlayerAlive;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlivePlayers;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4353[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4354[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4355[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4356[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4357[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement");
static_assert(sizeof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement) == 0x000050, "Wrong size on ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, OnlyPlayerAlive) == 0x000000, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::OnlyPlayerAlive' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, AlivePlayers) == 0x000008, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::AlivePlayers' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, Temp_int_Variable) == 0x00001C, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00002C, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_GetFSDGameState_ReturnValue) == 0x000030, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_Array_Get_Item) == 0x000040, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement, CallFunc_IsAlive_ReturnValue) == 0x00004A, "Member 'ENE_Spider_Boss_Base_C_Check_Without_A_Paddle_Achievement::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Boss_Base.ENE_Spider_Boss_Base_C.DifficultyAsInt
// 0x0050 (0x0050 - 0x0000)
struct ENE_Spider_Boss_Base_C_DifficultyAsInt final
{
public:
	int32                                         Difficulty;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4358[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameDifficulty                        CallFunc_GetCurrentGameDifficulty_ReturnValue;     // 0x0010(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Base_C_DifficultyAsInt) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Base_C_DifficultyAsInt");
static_assert(sizeof(ENE_Spider_Boss_Base_C_DifficultyAsInt) == 0x000050, "Wrong size on ENE_Spider_Boss_Base_C_DifficultyAsInt");
static_assert(offsetof(ENE_Spider_Boss_Base_C_DifficultyAsInt, Difficulty) == 0x000000, "Member 'ENE_Spider_Boss_Base_C_DifficultyAsInt::Difficulty' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_DifficultyAsInt, CallFunc_GetFSDGameState_ReturnValue) == 0x000008, "Member 'ENE_Spider_Boss_Base_C_DifficultyAsInt::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_DifficultyAsInt, CallFunc_GetCurrentGameDifficulty_ReturnValue) == 0x000010, "Member 'ENE_Spider_Boss_Base_C_DifficultyAsInt::CallFunc_GetCurrentGameDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_DifficultyAsInt, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'ENE_Spider_Boss_Base_C_DifficultyAsInt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_DifficultyAsInt, CallFunc_Right_ReturnValue) == 0x000038, "Member 'ENE_Spider_Boss_Base_C_DifficultyAsInt::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_DifficultyAsInt, CallFunc_Conv_StringToInt_ReturnValue) == 0x000048, "Member 'ENE_Spider_Boss_Base_C_DifficultyAsInt::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Boss_Base.ENE_Spider_Boss_Base_C.OnBossFightCompleted
// 0x0068 (0x0068 - 0x0000)
struct ENE_Spider_Boss_Base_C_OnBossFightCompleted final
{
public:
	class APlayerCharacter*                       CallFunc_FindMostDamagedPlayer_Designated_Decoy;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGoogleAnalyticsWrapper*                CallFunc_GetGoogleAnalyticsWrapper_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4359[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435A[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DifficultyAsInt_Difficulty;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Base_C_OnBossFightCompleted) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Base_C_OnBossFightCompleted");
static_assert(sizeof(ENE_Spider_Boss_Base_C_OnBossFightCompleted) == 0x000068, "Wrong size on ENE_Spider_Boss_Base_C_OnBossFightCompleted");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_FindMostDamagedPlayer_Designated_Decoy) == 0x000000, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_FindMostDamagedPlayer_Designated_Decoy' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GetFSDGameState_ReturnValue) == 0x000010, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GetGoogleAnalyticsWrapper_ReturnValue) == 0x000018, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GetGoogleAnalyticsWrapper_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GetTimeSeconds_ReturnValue) == 0x000020, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000028, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000048, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_HasAuthority_ReturnValue) == 0x00004C, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x000050, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_DifficultyAsInt_Difficulty) == 0x000058, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_DifficultyAsInt_Difficulty' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000060, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000061, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000062, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnBossFightCompleted, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000063, "Member 'ENE_Spider_Boss_Base_C_OnBossFightCompleted::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Boss_Base.ENE_Spider_Boss_Base_C.FindMostDamagedPlayer
// 0x0050 (0x0050 - 0x0000)
struct ENE_Spider_Boss_Base_C_FindMostDamagedPlayer final
{
public:
	class APlayerCharacter*                       Designated_Decoy;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDamageTakenByPlayer;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CurrentTopDamagedPlayer;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerCharacter*>               CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	class APlayerCharacter*                       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435D[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Base_C_FindMostDamagedPlayer");
static_assert(sizeof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer) == 0x000050, "Wrong size on ENE_Spider_Boss_Base_C_FindMostDamagedPlayer");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, Designated_Decoy) == 0x000000, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::Designated_Decoy' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, MaxDamageTakenByPlayer) == 0x000008, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::MaxDamageTakenByPlayer' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CurrentTopDamagedPlayer) == 0x000010, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CurrentTopDamagedPlayer' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CallFunc_Array_Get_Item) == 0x000038, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CallFunc_Map_Find_Value) == 0x000048, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CallFunc_Map_Find_ReturnValue) == 0x00004C, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_FindMostDamagedPlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004D, "Member 'ENE_Spider_Boss_Base_C_FindMostDamagedPlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Boss_Base.ENE_Spider_Boss_Base_C.OnDamagedPlayer
// 0x0010 (0x0010 - 0x0000)
struct ENE_Spider_Boss_Base_C_OnDamagedPlayer final
{
public:
	class APlayerCharacter*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Base_C_OnDamagedPlayer) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Base_C_OnDamagedPlayer");
static_assert(sizeof(ENE_Spider_Boss_Base_C_OnDamagedPlayer) == 0x000010, "Wrong size on ENE_Spider_Boss_Base_C_OnDamagedPlayer");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnDamagedPlayer, Player) == 0x000000, "Member 'ENE_Spider_Boss_Base_C_OnDamagedPlayer::Player' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_OnDamagedPlayer, Amount) == 0x000008, "Member 'ENE_Spider_Boss_Base_C_OnDamagedPlayer::Amount' has a wrong offset!");

// Function ENE_Spider_Boss_Base.ENE_Spider_Boss_Base_C.ExecuteUbergraph_ENE_Spider_Boss_Base
// 0x0068 (0x0068 - 0x0000)
struct ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerCharacter*                       K2Node_Event_player;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_amount;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435E[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGoogleAnalyticsWrapper*                CallFunc_GetGoogleAnalyticsWrapper_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4360[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddModifier_ReturnValue;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base");
static_assert(sizeof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base) == 0x000068, "Wrong size on ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, EntryPoint) == 0x000000, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, Temp_int_Variable) == 0x000004, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, K2Node_Event_player) == 0x000018, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, K2Node_Event_amount) == 0x000020, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::K2Node_Event_amount' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_Map_Find_Value) == 0x000024, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_IsDead_ReturnValue) == 0x000029, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_GetFSDGameState_ReturnValue) == 0x000038, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_GetGoogleAnalyticsWrapper_ReturnValue) == 0x000040, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_GetGoogleAnalyticsWrapper_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_IsAlive_ReturnValue) == 0x000048, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base, CallFunc_AddModifier_ReturnValue) == 0x000060, "Member 'ENE_Spider_Boss_Base_C_ExecuteUbergraph_ENE_Spider_Boss_Base::CallFunc_AddModifier_ReturnValue' has a wrong offset!");

}

