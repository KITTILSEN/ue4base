#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_IconWithOutline

#include "Basic.hpp"

#include "M_IconShapes_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Basic_IconWithOutline.Basic_IconWithOutline_C.ExecuteUbergraph_Basic_IconWithOutline
// 0x0038 (0x0038 - 0x0000)
struct Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401A[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color_1;                        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_Texture;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline) == 0x000008, "Wrong alignment on Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline");
static_assert(sizeof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline) == 0x000038, "Wrong size on Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline");
static_assert(offsetof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline, EntryPoint) == 0x000000, "Member 'Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline, K2Node_Event_IsDesignTime) == 0x000005, "Member 'Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline, CallFunc_IsValid_ReturnValue_1) == 0x000006, "Member 'Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline, K2Node_CustomEvent_Color_1) == 0x000008, "Member 'Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline::K2Node_CustomEvent_Color_1' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline, K2Node_CustomEvent_Color) == 0x000018, "Member 'Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline, K2Node_CustomEvent_Texture) == 0x000030, "Member 'Basic_IconWithOutline_C_ExecuteUbergraph_Basic_IconWithOutline::K2Node_CustomEvent_Texture' has a wrong offset!");

// Function Basic_IconWithOutline.Basic_IconWithOutline_C.SetIcon
// 0x0008 (0x0008 - 0x0000)
struct Basic_IconWithOutline_C_SetIcon final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_IconWithOutline_C_SetIcon) == 0x000008, "Wrong alignment on Basic_IconWithOutline_C_SetIcon");
static_assert(sizeof(Basic_IconWithOutline_C_SetIcon) == 0x000008, "Wrong size on Basic_IconWithOutline_C_SetIcon");
static_assert(offsetof(Basic_IconWithOutline_C_SetIcon, Texture) == 0x000000, "Member 'Basic_IconWithOutline_C_SetIcon::Texture' has a wrong offset!");

// Function Basic_IconWithOutline.Basic_IconWithOutline_C.SetTintColor
// 0x0010 (0x0010 - 0x0000)
struct Basic_IconWithOutline_C_SetTintColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_IconWithOutline_C_SetTintColor) == 0x000004, "Wrong alignment on Basic_IconWithOutline_C_SetTintColor");
static_assert(sizeof(Basic_IconWithOutline_C_SetTintColor) == 0x000010, "Wrong size on Basic_IconWithOutline_C_SetTintColor");
static_assert(offsetof(Basic_IconWithOutline_C_SetTintColor, Color) == 0x000000, "Member 'Basic_IconWithOutline_C_SetTintColor::Color' has a wrong offset!");

// Function Basic_IconWithOutline.Basic_IconWithOutline_C.SetOutlineColor
// 0x0010 (0x0010 - 0x0000)
struct Basic_IconWithOutline_C_SetOutlineColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_IconWithOutline_C_SetOutlineColor) == 0x000004, "Wrong alignment on Basic_IconWithOutline_C_SetOutlineColor");
static_assert(sizeof(Basic_IconWithOutline_C_SetOutlineColor) == 0x000010, "Wrong size on Basic_IconWithOutline_C_SetOutlineColor");
static_assert(offsetof(Basic_IconWithOutline_C_SetOutlineColor, Color) == 0x000000, "Member 'Basic_IconWithOutline_C_SetOutlineColor::Color' has a wrong offset!");

// Function Basic_IconWithOutline.Basic_IconWithOutline_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_IconWithOutline_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_IconWithOutline_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_IconWithOutline_C_PreConstruct");
static_assert(sizeof(Basic_IconWithOutline_C_PreConstruct) == 0x000001, "Wrong size on Basic_IconWithOutline_C_PreConstruct");
static_assert(offsetof(Basic_IconWithOutline_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_IconWithOutline_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Basic_IconWithOutline.Basic_IconWithOutline_C.SetData
// 0x00A8 (0x00A8 - 0x0000)
struct Basic_IconWithOutline_C_SetData final
{
public:
	class UTexture2D*                             Param_Icon;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_OutlineColor;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_IconColor;                                   // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_UseOutline;                                  // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutlineThicknes;                                   // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401C[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_IconScale;                                   // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM_IconShapes                                 IconShape;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401D[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM_IconShapes                                 Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401E[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401F[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_2;                           // 0x0058(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4020[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_IconWithOutline_C_SetData) == 0x000008, "Wrong alignment on Basic_IconWithOutline_C_SetData");
static_assert(sizeof(Basic_IconWithOutline_C_SetData) == 0x0000A8, "Wrong size on Basic_IconWithOutline_C_SetData");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Param_Icon) == 0x000000, "Member 'Basic_IconWithOutline_C_SetData::Param_Icon' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Param_OutlineColor) == 0x000008, "Member 'Basic_IconWithOutline_C_SetData::Param_OutlineColor' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Param_IconColor) == 0x000018, "Member 'Basic_IconWithOutline_C_SetData::Param_IconColor' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Param_UseOutline) == 0x000028, "Member 'Basic_IconWithOutline_C_SetData::Param_UseOutline' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, OutlineThicknes) == 0x000029, "Member 'Basic_IconWithOutline_C_SetData::OutlineThicknes' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Param_IconScale) == 0x00002C, "Member 'Basic_IconWithOutline_C_SetData::Param_IconScale' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, IconShape) == 0x000030, "Member 'Basic_IconWithOutline_C_SetData::IconShape' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Temp_bool_Variable) == 0x000031, "Member 'Basic_IconWithOutline_C_SetData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Temp_float_Variable) == 0x000034, "Member 'Basic_IconWithOutline_C_SetData::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Temp_byte_Variable) == 0x000038, "Member 'Basic_IconWithOutline_C_SetData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Temp_bool_Variable_1) == 0x000039, "Member 'Basic_IconWithOutline_C_SetData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Temp_float_Variable_1) == 0x00003C, "Member 'Basic_IconWithOutline_C_SetData::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, Temp_float_Variable_2) == 0x000040, "Member 'Basic_IconWithOutline_C_SetData::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, K2Node_Select_Default) == 0x000044, "Member 'Basic_IconWithOutline_C_SetData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'Basic_IconWithOutline_C_SetData::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, K2Node_Select_Default_1) == 0x000050, "Member 'Basic_IconWithOutline_C_SetData::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, K2Node_Select_Default_2) == 0x000058, "Member 'Basic_IconWithOutline_C_SetData::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000080, "Member 'Basic_IconWithOutline_C_SetData::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, K2Node_DynamicCast_AsTexture_2D) == 0x000088, "Member 'Basic_IconWithOutline_C_SetData::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'Basic_IconWithOutline_C_SetData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Basic_IconWithOutline_C_SetData, CallFunc_MenuColors_OutputColor) == 0x000094, "Member 'Basic_IconWithOutline_C_SetData::CallFunc_MenuColors_OutputColor' has a wrong offset!");

}

