#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Itm_HeaderCategory

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Itm_HeaderCategory.Itm_HeaderCategory_C.ExecuteUbergraph_Itm_HeaderCategory
// 0x03F0 (0x03F0 - 0x0000)
struct Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsSelected;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BC1[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0008(0x0018)()
	struct FSlateColor                            K2Node_CustomEvent_Filled;                         // 0x0020(0x0028)()
	struct FSlateColor                            K2Node_CustomEvent_Outline;                        // 0x0048(0x0028)()
	struct FSlateColor                            K2Node_CustomEvent_Text_1;                         // 0x0070(0x0028)()
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A8(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00D0(0x0028)()
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0108(0x0028)()
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0150(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x0178(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_5;                    // 0x01A0(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_6;                    // 0x01C8(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_7;                    // 0x01F0(0x0028)()
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_8;                    // 0x0228(0x0028)()
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_3;                 // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_9;                    // 0x0260(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_10;                   // 0x0288(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_11;                   // 0x02B0(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_12;                   // 0x02D8(0x0028)()
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_4;                 // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BC2[0x3];                                     // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_2;                  // 0x0324(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC3[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_13;                   // 0x0338(0x0028)()
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_3;                  // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_14;                   // 0x0398(0x0028)()
	class FText                                   K2Node_CustomEvent_Text;                           // 0x03C0(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x03D8(0x0018)()
};
static_assert(alignof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory) == 0x000008, "Wrong alignment on Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory");
static_assert(sizeof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory) == 0x0003F0, "Wrong size on Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, EntryPoint) == 0x000000, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::EntryPoint' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_CustomEvent_IsSelected) == 0x000005, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_CustomEvent_IsSelected' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_TextToUpper_ReturnValue) == 0x000008, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_CustomEvent_Filled) == 0x000020, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_CustomEvent_Filled' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_CustomEvent_Outline) == 0x000048, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_CustomEvent_Outline' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_CustomEvent_Text_1) == 0x000070, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_CustomEvent_Text_1' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MenuColors_OutputColor) == 0x000098, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor) == 0x0000A8, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_1) == 0x0000D0, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MakeColor_ReturnValue) == 0x0000F8, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_2) == 0x000108, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MenuColors_OutputColor_1) == 0x000130, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MakeColor_ReturnValue_1) == 0x000140, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_3) == 0x000150, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_4) == 0x000178, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_5) == 0x0001A0, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_5' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_6) == 0x0001C8, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_6' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_7) == 0x0001F0, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_7' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MenuColors_OutputColor_2) == 0x000218, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_8) == 0x000228, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_8' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MenuColors_OutputColor_3) == 0x000250, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MenuColors_OutputColor_3' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_9) == 0x000260, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_9' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_10) == 0x000288, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_10' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_11) == 0x0002B0, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_11' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_12) == 0x0002D8, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_12' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MenuColors_OutputColor_4) == 0x000300, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MenuColors_OutputColor_4' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_Not_PreBool_ReturnValue) == 0x000310, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_BreakColor_R) == 0x000314, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_BreakColor_G) == 0x000318, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_BreakColor_B) == 0x00031C, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_BreakColor_A) == 0x000320, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MakeColor_ReturnValue_2) == 0x000324, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MakeColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_13) == 0x000338, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_13' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000360, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_Margin) == 0x000368, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_Margin_1) == 0x000378, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_MakeColor_ReturnValue_3) == 0x000388, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_MakeColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_MakeStruct_SlateColor_14) == 0x000398, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_MakeStruct_SlateColor_14' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, K2Node_CustomEvent_Text) == 0x0003C0, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory, CallFunc_TextToUpper_ReturnValue_1) == 0x0003D8, "Member 'Itm_HeaderCategory_C_ExecuteUbergraph_Itm_HeaderCategory::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");

// Function Itm_HeaderCategory.Itm_HeaderCategory_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct Itm_HeaderCategory_C_SetText final
{
public:
	class FText                                   Param_Text;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Itm_HeaderCategory_C_SetText) == 0x000008, "Wrong alignment on Itm_HeaderCategory_C_SetText");
static_assert(sizeof(Itm_HeaderCategory_C_SetText) == 0x000018, "Wrong size on Itm_HeaderCategory_C_SetText");
static_assert(offsetof(Itm_HeaderCategory_C_SetText, Param_Text) == 0x000000, "Member 'Itm_HeaderCategory_C_SetText::Param_Text' has a wrong offset!");

// Function Itm_HeaderCategory.Itm_HeaderCategory_C.SetColor
// 0x0078 (0x0078 - 0x0000)
struct Itm_HeaderCategory_C_SetColor final
{
public:
	struct FSlateColor                            Filled;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            Outline;                                           // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            Param_Text;                                        // 0x0050(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Itm_HeaderCategory_C_SetColor) == 0x000008, "Wrong alignment on Itm_HeaderCategory_C_SetColor");
static_assert(sizeof(Itm_HeaderCategory_C_SetColor) == 0x000078, "Wrong size on Itm_HeaderCategory_C_SetColor");
static_assert(offsetof(Itm_HeaderCategory_C_SetColor, Filled) == 0x000000, "Member 'Itm_HeaderCategory_C_SetColor::Filled' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_SetColor, Outline) == 0x000028, "Member 'Itm_HeaderCategory_C_SetColor::Outline' has a wrong offset!");
static_assert(offsetof(Itm_HeaderCategory_C_SetColor, Param_Text) == 0x000050, "Member 'Itm_HeaderCategory_C_SetColor::Param_Text' has a wrong offset!");

// Function Itm_HeaderCategory.Itm_HeaderCategory_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct Itm_HeaderCategory_C_SetSelected final
{
public:
	bool                                          Param_IsSelected;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Itm_HeaderCategory_C_SetSelected) == 0x000001, "Wrong alignment on Itm_HeaderCategory_C_SetSelected");
static_assert(sizeof(Itm_HeaderCategory_C_SetSelected) == 0x000001, "Wrong size on Itm_HeaderCategory_C_SetSelected");
static_assert(offsetof(Itm_HeaderCategory_C_SetSelected, Param_IsSelected) == 0x000000, "Member 'Itm_HeaderCategory_C_SetSelected::Param_IsSelected' has a wrong offset!");

// Function Itm_HeaderCategory.Itm_HeaderCategory_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Itm_HeaderCategory_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Itm_HeaderCategory_C_PreConstruct) == 0x000001, "Wrong alignment on Itm_HeaderCategory_C_PreConstruct");
static_assert(sizeof(Itm_HeaderCategory_C_PreConstruct) == 0x000001, "Wrong size on Itm_HeaderCategory_C_PreConstruct");
static_assert(offsetof(Itm_HeaderCategory_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Itm_HeaderCategory_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

