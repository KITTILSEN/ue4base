#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_LineCutter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WPN_LineCutter.WPN_LineCutter_C.Get Homing Target Location
// 0x00B4 (0x00B4 - 0x0000)
struct WPN_LineCutter_C_Get_Homing_Target_Location final
{
public:
	struct FVector                                OutLocation;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Delta;                                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation_1;      // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation_1;      // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_Get_Homing_Target_Location) == 0x000004, "Wrong alignment on WPN_LineCutter_C_Get_Homing_Target_Location");
static_assert(sizeof(WPN_LineCutter_C_Get_Homing_Target_Location) == 0x0000B4, "Wrong size on WPN_LineCutter_C_Get_Homing_Target_Location");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, OutLocation) == 0x000000, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::OutLocation' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, Delta) == 0x00000C, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::Delta' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_GetActorEyesViewPoint_OutLocation) == 0x000024, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_GetActorEyesViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_GetActorEyesViewPoint_OutRotation) == 0x000030, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_GetActorEyesViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_GetForwardVector_ReturnValue) == 0x00003C, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_GetActorEyesViewPoint_OutLocation_1) == 0x000048, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_GetActorEyesViewPoint_OutLocation_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_GetActorEyesViewPoint_OutRotation_1) == 0x000054, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_GetActorEyesViewPoint_OutRotation_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_GetForwardVector_ReturnValue_1) == 0x000060, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_GetActorForwardVector_ReturnValue) == 0x000078, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x000084, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00009C, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_Get_Homing_Target_Location, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000A8, "Member 'WPN_LineCutter_C_Get_Homing_Target_Location::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.GetHomingIgnoreList
// 0x0050 (0x0050 - 0x0000)
struct WPN_LineCutter_C_GetHomingIgnoreList final
{
public:
	TArray<class AActor*>                         OutTargets;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         Targets;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B6[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B7[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_GetHomingIgnoreList) == 0x000008, "Wrong alignment on WPN_LineCutter_C_GetHomingIgnoreList");
static_assert(sizeof(WPN_LineCutter_C_GetHomingIgnoreList) == 0x000050, "Wrong size on WPN_LineCutter_C_GetHomingIgnoreList");
static_assert(offsetof(WPN_LineCutter_C_GetHomingIgnoreList, OutTargets) == 0x000000, "Member 'WPN_LineCutter_C_GetHomingIgnoreList::OutTargets' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetHomingIgnoreList, Targets) == 0x000010, "Member 'WPN_LineCutter_C_GetHomingIgnoreList::Targets' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetHomingIgnoreList, CallFunc_GetInstigator_ReturnValue) == 0x000020, "Member 'WPN_LineCutter_C_GetHomingIgnoreList::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetHomingIgnoreList, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WPN_LineCutter_C_GetHomingIgnoreList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetHomingIgnoreList, K2Node_MakeArray_Array) == 0x000030, "Member 'WPN_LineCutter_C_GetHomingIgnoreList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetHomingIgnoreList, CallFunc_Array_AddUnique_ReturnValue) == 0x000040, "Member 'WPN_LineCutter_C_GetHomingIgnoreList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetHomingIgnoreList, CallFunc_GetFSDGameState_ReturnValue) == 0x000048, "Member 'WPN_LineCutter_C_GetHomingIgnoreList::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.OnFireWhileLastProjectileAlive
// 0x0008 (0x0008 - 0x0000)
struct WPN_LineCutter_C_OnFireWhileLastProjectileAlive final
{
public:
	class ALineCutterProjectile*                  Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_OnFireWhileLastProjectileAlive) == 0x000008, "Wrong alignment on WPN_LineCutter_C_OnFireWhileLastProjectileAlive");
static_assert(sizeof(WPN_LineCutter_C_OnFireWhileLastProjectileAlive) == 0x000008, "Wrong size on WPN_LineCutter_C_OnFireWhileLastProjectileAlive");
static_assert(offsetof(WPN_LineCutter_C_OnFireWhileLastProjectileAlive, Projectile) == 0x000000, "Member 'WPN_LineCutter_C_OnFireWhileLastProjectileAlive::Projectile' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WPN_LineCutter_C_BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature final
{
public:
	class AProjectileBase*                        Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature) == 0x000008, "Wrong alignment on WPN_LineCutter_C_BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature");
static_assert(sizeof(WPN_LineCutter_C_BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature) == 0x000008, "Wrong size on WPN_LineCutter_C_BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature");
static_assert(offsetof(WPN_LineCutter_C_BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature, Projectile) == 0x000000, "Member 'WPN_LineCutter_C_BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature::Projectile' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.Server_SetHomingLocation
// 0x000C (0x000C - 0x0000)
struct WPN_LineCutter_C_Server_SetHomingLocation final
{
public:
	struct FVector_NetQuantize                    HomingLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_Server_SetHomingLocation) == 0x000004, "Wrong alignment on WPN_LineCutter_C_Server_SetHomingLocation");
static_assert(sizeof(WPN_LineCutter_C_Server_SetHomingLocation) == 0x00000C, "Wrong size on WPN_LineCutter_C_Server_SetHomingLocation");
static_assert(offsetof(WPN_LineCutter_C_Server_SetHomingLocation, HomingLocation) == 0x000000, "Member 'WPN_LineCutter_C_Server_SetHomingLocation::HomingLocation' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.OnHomingHit
// 0x0088 (0x0088 - 0x0000)
struct WPN_LineCutter_C_OnHomingHit final
{
public:
	struct FHitResult                             Result;                                            // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WPN_LineCutter_C_OnHomingHit) == 0x000004, "Wrong alignment on WPN_LineCutter_C_OnHomingHit");
static_assert(sizeof(WPN_LineCutter_C_OnHomingHit) == 0x000088, "Wrong size on WPN_LineCutter_C_OnHomingHit");
static_assert(offsetof(WPN_LineCutter_C_OnHomingHit, Result) == 0x000000, "Member 'WPN_LineCutter_C_OnHomingHit::Result' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.Server_StopHoming
// 0x0008 (0x0008 - 0x0000)
struct WPN_LineCutter_C_Server_StopHoming final
{
public:
	class AProjectile*                            InProjectile;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_Server_StopHoming) == 0x000008, "Wrong alignment on WPN_LineCutter_C_Server_StopHoming");
static_assert(sizeof(WPN_LineCutter_C_Server_StopHoming) == 0x000008, "Wrong size on WPN_LineCutter_C_Server_StopHoming");
static_assert(offsetof(WPN_LineCutter_C_Server_StopHoming, InProjectile) == 0x000000, "Member 'WPN_LineCutter_C_Server_StopHoming::InProjectile' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.All_SetHomingLocation
// 0x000C (0x000C - 0x0000)
struct WPN_LineCutter_C_All_SetHomingLocation final
{
public:
	struct FVector_NetQuantize                    InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_All_SetHomingLocation) == 0x000004, "Wrong alignment on WPN_LineCutter_C_All_SetHomingLocation");
static_assert(sizeof(WPN_LineCutter_C_All_SetHomingLocation) == 0x00000C, "Wrong size on WPN_LineCutter_C_All_SetHomingLocation");
static_assert(offsetof(WPN_LineCutter_C_All_SetHomingLocation, InLocation) == 0x000000, "Member 'WPN_LineCutter_C_All_SetHomingLocation::InLocation' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.All_StopHoming
// 0x0008 (0x0008 - 0x0000)
struct WPN_LineCutter_C_All_StopHoming final
{
public:
	class AProjectile*                            InProjectile;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_All_StopHoming) == 0x000008, "Wrong alignment on WPN_LineCutter_C_All_StopHoming");
static_assert(sizeof(WPN_LineCutter_C_All_StopHoming) == 0x000008, "Wrong size on WPN_LineCutter_C_All_StopHoming");
static_assert(offsetof(WPN_LineCutter_C_All_StopHoming, InProjectile) == 0x000000, "Member 'WPN_LineCutter_C_All_StopHoming::InProjectile' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.ExecuteUbergraph_WPN_LineCutter
// 0x0370 (0x0370 - 0x0000)
struct WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation;        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B8[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Result)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B9[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_Base_AmmoCount_C*        K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BA[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALineCutterProjectile*                  K2Node_Event_projectile;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_Base_AmmoCount_C*        K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count_1; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BB[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APRJ_LineCutter2_C*                     K2Node_DynamicCast_AsPRJ_Line_Cutter_2;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BC[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectileBase*                        K2Node_ComponentBoundEvent_Projectile;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APRJ_LineCutter2_C*                     K2Node_DynamicCast_AsPRJ_Line_Cutter_2_1;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BD[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    K2Node_CustomEvent_HomingLocation;                 // 0x0094(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BE[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_result;                         // 0x00A4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BF[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C0[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPawn*                               K2Node_DynamicCast_AsFSDPawn;                      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C1[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_50C2[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C3[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectile*                            K2Node_CustomEvent_InProjectile_1;                 // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C4[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    K2Node_CustomEvent_inLocation;                     // 0x01EC(0x000C)(NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0200(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C5[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectile*                            K2Node_CustomEvent_InProjectile;                   // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C6[0x6];                                     // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C7[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Result)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x02AC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C8[0x2];                                     // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C9[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Homing_Target_Location_OutLocation;   // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50CA[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    CallFunc_VectorToNetQuantize_ReturnValue;          // 0x02D8(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x02E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter) == 0x000008, "Wrong alignment on WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter");
static_assert(sizeof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter) == 0x000370, "Wrong size on WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, EntryPoint) == 0x000000, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::EntryPoint' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_GetActorEyesViewPoint_OutLocation) == 0x000004, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_GetActorEyesViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_GetActorEyesViewPoint_OutRotation) == 0x000010, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_GetActorEyesViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000038, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count) == 0x000040, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000050, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_Event_projectile) == 0x000058, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_Event_projectile' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count_1) == 0x000060, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_AsPRJ_Line_Cutter_2) == 0x000070, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_AsPRJ_Line_Cutter_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_ComponentBoundEvent_Projectile) == 0x000080, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_ComponentBoundEvent_Projectile' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_AsPRJ_Line_Cutter_2_1) == 0x000088, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_AsPRJ_Line_Cutter_2_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_CustomEvent_HomingLocation) == 0x000094, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_CustomEvent_HomingLocation' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000A0, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_CustomEvent_result) == 0x0000A4, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_CustomEvent_result' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_bBlockingHit) == 0x00012C, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_bInitialOverlap) == 0x00012D, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_Time) == 0x000130, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_Distance) == 0x000134, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_Location) == 0x000138, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_ImpactPoint) == 0x000144, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_ImpactNormal) == 0x00015C, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_TraceStart) == 0x000194, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BreakHitResult_TraceEnd) == 0x0001A0, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_AsFSDPawn) == 0x0001B0, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_AsFSDPawn' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_DynamicCast_bSuccess_4) == 0x0001B8, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001BC, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001D0, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001D8, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_CustomEvent_InProjectile_1) == 0x0001E0, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_CustomEvent_InProjectile_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E8, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_CustomEvent_inLocation) == 0x0001EC, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_CustomEvent_inLocation' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_GetInstigator_ReturnValue) == 0x0001F8, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000200, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000288, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_CustomEvent_InProjectile) == 0x000290, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_CustomEvent_InProjectile' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000298, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_IsValid_ReturnValue_3) == 0x000299, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_GetInstigator_ReturnValue_1) == 0x0002A0, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x0002A8, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002AC, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002BC, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BooleanAND_ReturnValue_2) == 0x0002BD, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002C0, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BooleanAND_ReturnValue_3) == 0x0002C4, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_Get_Homing_Target_Location_OutLocation) == 0x0002C8, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_Get_Homing_Target_Location_OutLocation' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_BooleanAND_ReturnValue_4) == 0x0002D4, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_VectorToNetQuantize_ReturnValue) == 0x0002D8, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_VectorToNetQuantize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0002E4, "Member 'WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");

// Function WPN_LineCutter.WPN_LineCutter_C.GetGearStatEntry
// 0x0958 (0x0958 - 0x0000)
struct WPN_LineCutter_C_GetGearStatEntry final
{
public:
	class AFSDPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGearStatEntry>                 Stats;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x0018(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_1;             // 0x0030(0x0018)()
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry;            // 0x0050(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50CB[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry_1;          // 0x00C0(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue_1;       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50CC[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50CD[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_2;             // 0x0138(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_3;             // 0x0150(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_4;             // 0x0168(0x0018)()
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry_2;          // 0x0188(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue_2;       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50CE[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry_3;          // 0x01F8(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue_3;       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50CF[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D0[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry_4;          // 0x0270(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue_4;       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D1[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry; // 0x02E0(0x0068)()
	bool                                          CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue; // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D2[0x3];                                     // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_1; // 0x0350(0x0068)()
	bool                                          CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_1; // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D3[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_2; // 0x03C0(0x0068)()
	bool                                          CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_2; // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D4[0x7];                                     // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_3; // 0x0430(0x0068)()
	bool                                          CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_3; // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D5[0x7];                                     // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_4; // 0x04A0(0x0068)()
	bool                                          CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_4; // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D6[0x3];                                     // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry;         // 0x0528(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades;        // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D7[0x7];                                     // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1;       // 0x0598(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1;      // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D8[0x7];                                     // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2;       // 0x0608(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2;      // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D9[0x7];                                     // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3;       // 0x0678(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3;      // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50DA[0x3];                                     // 0x06E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_13;                 // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50DB[0x4];                                     // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_3;             // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectileLauncherComponent*           CallFunc_GetComponentFromClass_ReturnValue;        // 0x0700(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry;             // 0x0708(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue;          // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50DC[0x7];                                     // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsLine_Cutter_Projectile;  // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50DD[0x3];                                     // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_14;                 // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_DPS_GearStatEntry;                // 0x0788(0x0068)()
	bool                                          CallFunc_UPGDESC_DPS_HasUpgradedValue;             // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50DE[0x7];                                     // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Projectile_GearStatEntry;         // 0x07F8(0x0068)()
	bool                                          CallFunc_UPGDESC_Projectile_HasUpgradedValue;      // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50DF[0x3];                                     // 0x0861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_15;                 // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_16;                 // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50E0[0x4];                                     // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_1;           // 0x0870(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_1;        // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E1[0x7];                                     // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_2;           // 0x08E0(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_2;        // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E2[0x3];                                     // 0x0949(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_17;                 // 0x094C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_18;                 // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_LineCutter_C_GetGearStatEntry) == 0x000008, "Wrong alignment on WPN_LineCutter_C_GetGearStatEntry");
static_assert(sizeof(WPN_LineCutter_C_GetGearStatEntry) == 0x000958, "Wrong size on WPN_LineCutter_C_GetGearStatEntry");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, PlayerState) == 0x000000, "Member 'WPN_LineCutter_C_GetGearStatEntry::PlayerState' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, Stats) == 0x000008, "Member 'WPN_LineCutter_C_GetGearStatEntry::Stats' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetUpgradeName_ReturnValue) == 0x000018, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetUpgradeName_ReturnValue_1) == 0x000030, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetUpgradeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue) == 0x000048, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry) == 0x000050, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue) == 0x0000B8, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry_1) == 0x0000C0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue_1) == 0x000128, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue) == 0x00012C, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_1) == 0x000130, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetUpgradeName_ReturnValue_2) == 0x000138, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetUpgradeName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetUpgradeName_ReturnValue_3) == 0x000150, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetUpgradeName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetUpgradeName_ReturnValue_4) == 0x000168, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetUpgradeName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_1) == 0x000180, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry_2) == 0x000188, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue_2) == 0x0001F0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry_3) == 0x0001F8, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue_3) == 0x000260, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_2) == 0x000264, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_3) == 0x000268, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry_4) == 0x000270, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry_4' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue_4) == 0x0002D8, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue_4' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry) == 0x0002E0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue) == 0x000348, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_4) == 0x00034C, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_1) == 0x000350, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_1) == 0x0003B8, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_2) == 0x0003C0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_2) == 0x000428, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_3) == 0x000430, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_3) == 0x000498, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_4) == 0x0004A0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_GearStatEntry_4' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_4) == 0x000508, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_LineCutterProjectile_HasUpgradedValue_4' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_5) == 0x00050C, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_6) == 0x000510, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_7) == 0x000514, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_8) == 0x000518, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_9) == 0x00051C, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_2) == 0x000520, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry) == 0x000528, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades) == 0x000590, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1) == 0x000598, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1) == 0x000600, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2) == 0x000608, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2) == 0x000670, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3) == 0x000678, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3) == 0x0006E0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_10) == 0x0006E4, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_11) == 0x0006E8, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_12) == 0x0006EC, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_13) == 0x0006F0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_3) == 0x0006F8, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_GetComponentFromClass_ReturnValue) == 0x000700, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_GetComponentFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry) == 0x000708, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue) == 0x000770, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, K2Node_ClassDynamicCast_AsLine_Cutter_Projectile) == 0x000778, "Member 'WPN_LineCutter_C_GetGearStatEntry::K2Node_ClassDynamicCast_AsLine_Cutter_Projectile' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, K2Node_ClassDynamicCast_bSuccess) == 0x000780, "Member 'WPN_LineCutter_C_GetGearStatEntry::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_14) == 0x000784, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_DPS_GearStatEntry) == 0x000788, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_DPS_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_DPS_HasUpgradedValue) == 0x0007F0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_DPS_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_GearStatEntry) == 0x0007F8, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_HasUpgradedValue) == 0x000860, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_15) == 0x000864, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_16) == 0x000868, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_1) == 0x000870, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_1) == 0x0008D8, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_2) == 0x0008E0, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_2) == 0x000948, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_17) == 0x00094C, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WPN_LineCutter_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_18) == 0x000950, "Member 'WPN_LineCutter_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_18' has a wrong offset!");

}

