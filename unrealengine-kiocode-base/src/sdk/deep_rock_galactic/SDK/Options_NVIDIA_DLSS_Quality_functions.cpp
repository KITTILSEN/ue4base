#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_NVIDIA_DLSS_Quality

#include "Basic.hpp"

#include "Options_NVIDIA_DLSS_Quality_classes.hpp"
#include "Options_NVIDIA_DLSS_Quality_parameters.hpp"


namespace SDK
{

// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.ExecuteUbergraph_Options_NVIDIA_DLSS_Quality
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptions_NVIDIA_DLSS_Quality_C::ExecuteUbergraph_Options_NVIDIA_DLSS_Quality(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "ExecuteUbergraph_Options_NVIDIA_DLSS_Quality");

	Params::Options_NVIDIA_DLSS_Quality_C_ExecuteUbergraph_Options_NVIDIA_DLSS_Quality Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FText                             Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptions_NVIDIA_DLSS_Quality_C::BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature(const class FText& Value, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");

	Params::Options_NVIDIA_DLSS_Quality_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature Parms{};

	Parms.Value = std::move(Value);
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.ShowOptions
// (BlueprintCallable, BlueprintEvent)

void UOptions_NVIDIA_DLSS_Quality_C::ShowOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "ShowOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.UINeedsUpdate
// (BlueprintCallable, BlueprintEvent)

void UOptions_NVIDIA_DLSS_Quality_C::UINeedsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "UINeedsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UOptions_NVIDIA_DLSS_Quality_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.GetDLSSModeName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EUDLSSMode                              Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (Parm, OutParm)

void UOptions_NVIDIA_DLSS_Quality_C::GetDLSSModeName(EUDLSSMode Mode, class FText* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "GetDLSSModeName");

	Params::Options_NVIDIA_DLSS_Quality_C_GetDLSSModeName Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.IndexToMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUDLSSMode                              Mode                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptions_NVIDIA_DLSS_Quality_C::IndexToMode(int32 Param_Index, EUDLSSMode* Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "IndexToMode");

	Params::Options_NVIDIA_DLSS_Quality_C_IndexToMode Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Mode != nullptr)
		*Mode = Parms.Mode;
}


// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.ModeToIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EUDLSSMode                              Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptions_NVIDIA_DLSS_Quality_C::ModeToIndex(EUDLSSMode Mode, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "ModeToIndex");

	Params::Options_NVIDIA_DLSS_Quality_C_ModeToIndex Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function Options_NVIDIA_DLSS_Quality.Options_NVIDIA_DLSS_Quality_C.Add Index
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUDLSSMode                              Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptions_NVIDIA_DLSS_Quality_C::Add_Index(EUDLSSMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Options_NVIDIA_DLSS_Quality_C", "Add Index");

	Params::Options_NVIDIA_DLSS_Quality_C_Add_Index Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}

}

