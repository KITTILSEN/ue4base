#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GatlingGun_Overheat

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GatlingGun_Overheat.GatlingGun_Overheat_C.SetPercent
// 0x0078 (0x0078 - 0x0000)
struct GatlingGun_Overheat_C_SetPercent final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53AC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Material;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53AD[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53AE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53AF[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B0[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GatlingGun_Overheat_C_SetPercent) == 0x000008, "Wrong alignment on GatlingGun_Overheat_C_SetPercent");
static_assert(sizeof(GatlingGun_Overheat_C_SetPercent) == 0x000078, "Wrong size on GatlingGun_Overheat_C_SetPercent");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, InPercent) == 0x000000, "Member 'GatlingGun_Overheat_C_SetPercent::InPercent' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, Material) == 0x000008, "Member 'GatlingGun_Overheat_C_SetPercent::Material' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, Temp_bool_Variable) == 0x000010, "Member 'GatlingGun_Overheat_C_SetPercent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, Temp_struct_Variable) == 0x000014, "Member 'GatlingGun_Overheat_C_SetPercent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, Temp_bool_Variable_1) == 0x000024, "Member 'GatlingGun_Overheat_C_SetPercent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, Temp_struct_Variable_1) == 0x000028, "Member 'GatlingGun_Overheat_C_SetPercent::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, Temp_struct_Variable_2) == 0x000038, "Member 'GatlingGun_Overheat_C_SetPercent::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'GatlingGun_Overheat_C_SetPercent::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000049, "Member 'GatlingGun_Overheat_C_SetPercent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, K2Node_Select_Default) == 0x00004C, "Member 'GatlingGun_Overheat_C_SetPercent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000060, "Member 'GatlingGun_Overheat_C_SetPercent::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetPercent, K2Node_Select_Default_1) == 0x000068, "Member 'GatlingGun_Overheat_C_SetPercent::K2Node_Select_Default_1' has a wrong offset!");

// Function GatlingGun_Overheat.GatlingGun_Overheat_C.SetHeatValue
// 0x0008 (0x0008 - 0x0000)
struct GatlingGun_Overheat_C_SetHeatValue final
{
public:
	float                                         HeatPercentage;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overheated;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GatlingGun_Overheat_C_SetHeatValue) == 0x000004, "Wrong alignment on GatlingGun_Overheat_C_SetHeatValue");
static_assert(sizeof(GatlingGun_Overheat_C_SetHeatValue) == 0x000008, "Wrong size on GatlingGun_Overheat_C_SetHeatValue");
static_assert(offsetof(GatlingGun_Overheat_C_SetHeatValue, HeatPercentage) == 0x000000, "Member 'GatlingGun_Overheat_C_SetHeatValue::HeatPercentage' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_SetHeatValue, Overheated) == 0x000004, "Member 'GatlingGun_Overheat_C_SetHeatValue::Overheated' has a wrong offset!");

// Function GatlingGun_Overheat.GatlingGun_Overheat_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct GatlingGun_Overheat_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GatlingGun_Overheat_C_PreConstruct) == 0x000001, "Wrong alignment on GatlingGun_Overheat_C_PreConstruct");
static_assert(sizeof(GatlingGun_Overheat_C_PreConstruct) == 0x000001, "Wrong size on GatlingGun_Overheat_C_PreConstruct");
static_assert(offsetof(GatlingGun_Overheat_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'GatlingGun_Overheat_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function GatlingGun_Overheat.GatlingGun_Overheat_C.Init
// 0x0008 (0x0008 - 0x0000)
struct GatlingGun_Overheat_C_Init final
{
public:
	class AItem*                                  Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GatlingGun_Overheat_C_Init) == 0x000008, "Wrong alignment on GatlingGun_Overheat_C_Init");
static_assert(sizeof(GatlingGun_Overheat_C_Init) == 0x000008, "Wrong size on GatlingGun_Overheat_C_Init");
static_assert(offsetof(GatlingGun_Overheat_C_Init, Param_Item) == 0x000000, "Member 'GatlingGun_Overheat_C_Init::Param_Item' has a wrong offset!");

// Function GatlingGun_Overheat.GatlingGun_Overheat_C.ExecuteUbergraph_GatlingGun_Overheat
// 0x0040 (0x0040 - 0x0000)
struct GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_HeatPercentage;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_overHeated;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B1[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  K2Node_CustomEvent_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat) == 0x000008, "Wrong alignment on GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat");
static_assert(sizeof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat) == 0x000040, "Wrong size on GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat");
static_assert(offsetof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat, EntryPoint) == 0x000000, "Member 'GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat::EntryPoint' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat, K2Node_CustomEvent_HeatPercentage) == 0x000024, "Member 'GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat::K2Node_CustomEvent_HeatPercentage' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat, K2Node_CustomEvent_overHeated) == 0x000028, "Member 'GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat::K2Node_CustomEvent_overHeated' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat, K2Node_Event_IsDesignTime) == 0x000030, "Member 'GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat, K2Node_CustomEvent_Item) == 0x000038, "Member 'GatlingGun_Overheat_C_ExecuteUbergraph_GatlingGun_Overheat::K2Node_CustomEvent_Item' has a wrong offset!");

}

