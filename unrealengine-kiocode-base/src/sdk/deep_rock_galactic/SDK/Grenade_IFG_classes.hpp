#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grenade_IFG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ITM_AOE_Grenade_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Grenade_IFG.Grenade_IFG_C
// 0x0020 (0x03A0 - 0x0380)
class AGrenade_IFG_C final : public AITM_AOE_Grenade_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Grenade_IFG_C;                      // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Stick;                                             // 0x0398(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void AttachToValidSurface();
	void OnRep_Stick();
	void EnableWeakeningEffect();
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_Grenade_IFG(int32 EntryPoint);

	void AddGearStateEntries(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Grenade_IFG_C">();
	}
	static class AGrenade_IFG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenade_IFG_C>();
	}
};
static_assert(alignof(AGrenade_IFG_C) == 0x000008, "Wrong alignment on AGrenade_IFG_C");
static_assert(sizeof(AGrenade_IFG_C) == 0x0003A0, "Wrong size on AGrenade_IFG_C");
static_assert(offsetof(AGrenade_IFG_C, UberGraphFrame_Grenade_IFG_C) == 0x000380, "Member 'AGrenade_IFG_C::UberGraphFrame_Grenade_IFG_C' has a wrong offset!");
static_assert(offsetof(AGrenade_IFG_C, PointLight) == 0x000388, "Member 'AGrenade_IFG_C::PointLight' has a wrong offset!");
static_assert(offsetof(AGrenade_IFG_C, ParticleSystem) == 0x000390, "Member 'AGrenade_IFG_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AGrenade_IFG_C, Stick) == 0x000398, "Member 'AGrenade_IFG_C::Stick' has a wrong offset!");

}

