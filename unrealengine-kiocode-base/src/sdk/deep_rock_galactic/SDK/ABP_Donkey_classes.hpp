#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Donkey

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Donkey.ABP_Donkey_C
// 0x06A0 (0x0A20 - 0x0380)
class UABP_Donkey_C final : public USimpleMovingEnemyAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0458(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x04D0(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x04F8(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0548(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0578(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x05F8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0628(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x06A8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x06D8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0758(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0788(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0808(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0838(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x08B8(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x08E8(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0938(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0968(0x00B0)()
	bool                                          IsDown;                                            // 0x0A18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTrayOpen;                                        // 0x0A19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_Donkey(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Donkey_C">();
	}
	static class UABP_Donkey_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Donkey_C>();
	}
};
static_assert(alignof(UABP_Donkey_C) == 0x000010, "Wrong alignment on UABP_Donkey_C");
static_assert(sizeof(UABP_Donkey_C) == 0x000A20, "Wrong size on UABP_Donkey_C");
static_assert(offsetof(UABP_Donkey_C, UberGraphFrame) == 0x000380, "Member 'UABP_Donkey_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_Donkey_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_7) == 0x0003B8, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_6) == 0x0003E0, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_5) == 0x000408, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_4) == 0x000430, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_3) == 0x000458, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_2) == 0x000480, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_1) == 0x0004A8, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult) == 0x0004D0, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequenceEvaluator_1) == 0x0004F8, "Member 'UABP_Donkey_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_6) == 0x000548, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer_4) == 0x000578, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_5) == 0x0005F8, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer_3) == 0x000628, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_4) == 0x0006A8, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer_2) == 0x0006D8, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_3) == 0x000758, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer_1) == 0x000788, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_2) == 0x000808, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer) == 0x000838, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_1) == 0x0008B8, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequenceEvaluator) == 0x0008E8, "Member 'UABP_Donkey_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult) == 0x000938, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateMachine) == 0x000968, "Member 'UABP_Donkey_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, IsDown) == 0x000A18, "Member 'UABP_Donkey_C::IsDown' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, IsTrayOpen) == 0x000A19, "Member 'UABP_Donkey_C::IsTrayOpen' has a wrong offset!");

}

