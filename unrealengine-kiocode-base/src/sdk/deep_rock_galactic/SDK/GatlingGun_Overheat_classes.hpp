#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GatlingGun_Overheat

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GatlingGun_Overheat.GatlingGun_Overheat_C
// 0x0020 (0x0280 - 0x0260)
class UGatlingGun_Overheat_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 CircularProgressBar;                               // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53AB[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  Item;                                              // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetPercent(float InPercent);
	void SetHeatValue(float HeatPercentage, bool Overheated);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Init(class AItem* Param_Item);
	void OnEquipped();
	void OnUnEquipped();
	void ExecuteUbergraph_GatlingGun_Overheat(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GatlingGun_Overheat_C">();
	}
	static class UGatlingGun_Overheat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGatlingGun_Overheat_C>();
	}
};
static_assert(alignof(UGatlingGun_Overheat_C) == 0x000008, "Wrong alignment on UGatlingGun_Overheat_C");
static_assert(sizeof(UGatlingGun_Overheat_C) == 0x000280, "Wrong size on UGatlingGun_Overheat_C");
static_assert(offsetof(UGatlingGun_Overheat_C, UberGraphFrame) == 0x000260, "Member 'UGatlingGun_Overheat_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGatlingGun_Overheat_C, CircularProgressBar) == 0x000268, "Member 'UGatlingGun_Overheat_C::CircularProgressBar' has a wrong offset!");
static_assert(offsetof(UGatlingGun_Overheat_C, Percent) == 0x000270, "Member 'UGatlingGun_Overheat_C::Percent' has a wrong offset!");
static_assert(offsetof(UGatlingGun_Overheat_C, Item) == 0x000278, "Member 'UGatlingGun_Overheat_C::Item' has a wrong offset!");

}

