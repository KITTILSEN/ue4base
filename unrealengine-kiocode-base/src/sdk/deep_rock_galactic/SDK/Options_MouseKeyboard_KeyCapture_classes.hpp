#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_MouseKeyboard_KeyCapture

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "FSD_classes.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C
// 0x00E0 (0x0380 - 0x02A0)
class UOptions_MouseKeyboard_KeyCapture_C final : public UInputCaptureWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                ClearButton;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocusedImage;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeyLabel;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnKeyCaptureFinished;                              // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnKeyCaptureError;                                 // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnKeyCaptureChanged;                               // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnKeyCaptureCancelled;                             // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FKey                                   CapturedKey;                                       // 0x0300(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FCustomKeySetting                      ConflictingAction;                                 // 0x0318(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKey                                   NoneKey;                                           // 0x0350(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   CurrentKey;                                        // 0x0368(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnKeyCaptureFinished__DelegateSignature();
	void OnKeyCaptureError__DelegateSignature();
	void OnKeyCaptureChanged__DelegateSignature();
	void OnKeyCaptureCancelled__DelegateSignature();
	void ExecuteUbergraph_Options_MouseKeyboard_KeyCapture(int32 EntryPoint);
	void ReceiveCapturingChanged(bool InCapturing);
	void ReceiveKeyCaptured(const struct FKey& InKey);
	void ReceiveKeyChanged(const struct FKey& InKey);
	void Construct();
	void OnCustomKeyBindingsChanged();
	void PreConstruct(bool IsDesignTime);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BndEvt__ClearButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Yes_8623E71E42D4951E6FF011979EF3C667();
	void No_8623E71E42D4951E6FF011979EF3C667();
	void UpdateKeyInfo(const struct FKey& Key);
	void UpdateClearButton();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Options_MouseKeyboard_KeyCapture_C">();
	}
	static class UOptions_MouseKeyboard_KeyCapture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptions_MouseKeyboard_KeyCapture_C>();
	}
};
static_assert(alignof(UOptions_MouseKeyboard_KeyCapture_C) == 0x000008, "Wrong alignment on UOptions_MouseKeyboard_KeyCapture_C");
static_assert(sizeof(UOptions_MouseKeyboard_KeyCapture_C) == 0x000380, "Wrong size on UOptions_MouseKeyboard_KeyCapture_C");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, UberGraphFrame) == 0x0002A0, "Member 'UOptions_MouseKeyboard_KeyCapture_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, ClearButton) == 0x0002A8, "Member 'UOptions_MouseKeyboard_KeyCapture_C::ClearButton' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, FocusedImage) == 0x0002B0, "Member 'UOptions_MouseKeyboard_KeyCapture_C::FocusedImage' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, KeyLabel) == 0x0002B8, "Member 'UOptions_MouseKeyboard_KeyCapture_C::KeyLabel' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, OnKeyCaptureFinished) == 0x0002C0, "Member 'UOptions_MouseKeyboard_KeyCapture_C::OnKeyCaptureFinished' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, OnKeyCaptureError) == 0x0002D0, "Member 'UOptions_MouseKeyboard_KeyCapture_C::OnKeyCaptureError' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, OnKeyCaptureChanged) == 0x0002E0, "Member 'UOptions_MouseKeyboard_KeyCapture_C::OnKeyCaptureChanged' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, OnKeyCaptureCancelled) == 0x0002F0, "Member 'UOptions_MouseKeyboard_KeyCapture_C::OnKeyCaptureCancelled' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, CapturedKey) == 0x000300, "Member 'UOptions_MouseKeyboard_KeyCapture_C::CapturedKey' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, ConflictingAction) == 0x000318, "Member 'UOptions_MouseKeyboard_KeyCapture_C::ConflictingAction' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, NoneKey) == 0x000350, "Member 'UOptions_MouseKeyboard_KeyCapture_C::NoneKey' has a wrong offset!");
static_assert(offsetof(UOptions_MouseKeyboard_KeyCapture_C, CurrentKey) == 0x000368, "Member 'UOptions_MouseKeyboard_KeyCapture_C::CurrentKey' has a wrong offset!");

}

