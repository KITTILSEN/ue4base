#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExplosiveBoil

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ExplosiveBoil.BP_ExplosiveBoil_C
// 0x0058 (0x0290 - 0x0238)
class ABP_ExplosiveBoil_C final : public ABoil
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UEnemyHealthComponent*                  EnemyHealth;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Effect;                                         // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       WeakpointDamageBonus;                              // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Boil;                                         // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scale;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Grow_Grow_4C7E7BAA4AB0276D4B443784735EAE30;        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Grow__Direction_4C7E7BAA4AB0276D4B443784735EAE30;  // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_546C[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Grow;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeakpointMulitplier;                               // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_0;                                          // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CopyGlobalWeakpointModSettings(class UObject* Object);
	void Grow__FinishedFunc();
	void Grow__UpdateFunc();
	void ReceiveBeginPlay();
	void OnDestroyed_Event(class AActor* DestroyedActor);
	void OnDeath_Event(class UHealthComponentBase* HealthComponent);
	void BndEvt__BP_ExplosiveBoil_EnemyHealth_K2Node_ComponentBoundEvent_4_DeathSig__DelegateSignature(class UHealthComponentBase* HealthComponent);
	void BndEvt__BP_ExplosiveBoil_EnemyHealth_K2Node_ComponentBoundEvent_0_HitSig__DelegateSignature(float Param_Damage, const struct FDamageData& DamageData, bool AnyHealthLost);
	void ExecuteUbergraph_BP_ExplosiveBoil(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ExplosiveBoil_C">();
	}
	static class ABP_ExplosiveBoil_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ExplosiveBoil_C>();
	}
};
static_assert(alignof(ABP_ExplosiveBoil_C) == 0x000008, "Wrong alignment on ABP_ExplosiveBoil_C");
static_assert(sizeof(ABP_ExplosiveBoil_C) == 0x000290, "Wrong size on ABP_ExplosiveBoil_C");
static_assert(offsetof(ABP_ExplosiveBoil_C, UberGraphFrame) == 0x000238, "Member 'ABP_ExplosiveBoil_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, EnemyHealth) == 0x000240, "Member 'ABP_ExplosiveBoil_C::EnemyHealth' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, NS_Effect) == 0x000248, "Member 'ABP_ExplosiveBoil_C::NS_Effect' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, WeakpointDamageBonus) == 0x000250, "Member 'ABP_ExplosiveBoil_C::WeakpointDamageBonus' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, Mesh_Boil) == 0x000258, "Member 'ABP_ExplosiveBoil_C::Mesh_Boil' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, Scale) == 0x000260, "Member 'ABP_ExplosiveBoil_C::Scale' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, Damage) == 0x000268, "Member 'ABP_ExplosiveBoil_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, DefaultSceneRoot) == 0x000270, "Member 'ABP_ExplosiveBoil_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, Grow_Grow_4C7E7BAA4AB0276D4B443784735EAE30) == 0x000278, "Member 'ABP_ExplosiveBoil_C::Grow_Grow_4C7E7BAA4AB0276D4B443784735EAE30' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, Grow__Direction_4C7E7BAA4AB0276D4B443784735EAE30) == 0x00027C, "Member 'ABP_ExplosiveBoil_C::Grow__Direction_4C7E7BAA4AB0276D4B443784735EAE30' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, Grow) == 0x000280, "Member 'ABP_ExplosiveBoil_C::Grow' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, WeakpointMulitplier) == 0x000288, "Member 'ABP_ExplosiveBoil_C::WeakpointMulitplier' has a wrong offset!");
static_assert(offsetof(ABP_ExplosiveBoil_C, Damage_0) == 0x00028C, "Member 'ABP_ExplosiveBoil_C::Damage_0' has a wrong offset!");

}

