#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LaserPointer_Marker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LaserPointer_Marker.BP_LaserPointer_Marker_C
// 0x0050 (0x02E8 - 0x0298)
class ABP_LaserPointer_Marker_C : public ALaserPointerMarker
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh3;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorTrackingComponent*                ActorTracking;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOutlineComponent*                      Outline;                                           // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHealthComponentBase*                   HealthComponent;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateMaterial();
	void ReceiveBeginPlay();
	void OnDestroyed_Target(class AActor* DestroyedActor);
	void OnDestroyed_Self(class AActor* DestroyedActor);
	void OnDeath_Event(class UHealthComponentBase* Param_HealthComponent);
	void ExecuteUbergraph_BP_LaserPointer_Marker(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LaserPointer_Marker_C">();
	}
	static class ABP_LaserPointer_Marker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LaserPointer_Marker_C>();
	}
};
static_assert(alignof(ABP_LaserPointer_Marker_C) == 0x000008, "Wrong alignment on ABP_LaserPointer_Marker_C");
static_assert(sizeof(ABP_LaserPointer_Marker_C) == 0x0002E8, "Wrong size on ABP_LaserPointer_Marker_C");
static_assert(offsetof(ABP_LaserPointer_Marker_C, UberGraphFrame) == 0x000298, "Member 'ABP_LaserPointer_Marker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, StaticMesh3) == 0x0002A0, "Member 'ABP_LaserPointer_Marker_C::StaticMesh3' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, StaticMesh2) == 0x0002A8, "Member 'ABP_LaserPointer_Marker_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, StaticMesh1) == 0x0002B0, "Member 'ABP_LaserPointer_Marker_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, StaticMesh) == 0x0002B8, "Member 'ABP_LaserPointer_Marker_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, ActorTracking) == 0x0002C0, "Member 'ABP_LaserPointer_Marker_C::ActorTracking' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, Sphere) == 0x0002C8, "Member 'ABP_LaserPointer_Marker_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_LaserPointer_Marker_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, Outline) == 0x0002D8, "Member 'ABP_LaserPointer_Marker_C::Outline' has a wrong offset!");
static_assert(offsetof(ABP_LaserPointer_Marker_C, HealthComponent) == 0x0002E0, "Member 'ABP_LaserPointer_Marker_C::HealthComponent' has a wrong offset!");

}

