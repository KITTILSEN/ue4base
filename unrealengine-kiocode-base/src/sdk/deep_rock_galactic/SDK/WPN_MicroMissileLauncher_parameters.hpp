#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_MicroMissileLauncher

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.SetUpgradeModifiers
// 0x0020 (0x0020 - 0x0000)
struct WPN_MicroMissileLauncher_C_SetUpgradeModifiers final
{
public:
	class UItemUpgrade*                           ItemUpgrade;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3191[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers) == 0x000008, "Wrong alignment on WPN_MicroMissileLauncher_C_SetUpgradeModifiers");
static_assert(sizeof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers) == 0x000020, "Wrong size on WPN_MicroMissileLauncher_C_SetUpgradeModifiers");
static_assert(offsetof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers, ItemUpgrade) == 0x000000, "Member 'WPN_MicroMissileLauncher_C_SetUpgradeModifiers::ItemUpgrade' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'WPN_MicroMissileLauncher_C_SetUpgradeModifiers::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000009, "Member 'WPN_MicroMissileLauncher_C_SetUpgradeModifiers::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'WPN_MicroMissileLauncher_C_SetUpgradeModifiers::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'WPN_MicroMissileLauncher_C_SetUpgradeModifiers::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'WPN_MicroMissileLauncher_C_SetUpgradeModifiers::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_SetUpgradeModifiers, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'WPN_MicroMissileLauncher_C_SetUpgradeModifiers::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.CustomEvent1
// 0x0008 (0x0008 - 0x0000)
struct WPN_MicroMissileLauncher_C_CustomEvent1 final
{
public:
	const class UItemUpgrade*                     Event;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_MicroMissileLauncher_C_CustomEvent1) == 0x000008, "Wrong alignment on WPN_MicroMissileLauncher_C_CustomEvent1");
static_assert(sizeof(WPN_MicroMissileLauncher_C_CustomEvent1) == 0x000008, "Wrong size on WPN_MicroMissileLauncher_C_CustomEvent1");
static_assert(offsetof(WPN_MicroMissileLauncher_C_CustomEvent1, Event) == 0x000000, "Member 'WPN_MicroMissileLauncher_C_CustomEvent1::Event' has a wrong offset!");

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct WPN_MicroMissileLauncher_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_MicroMissileLauncher_C_ReceiveTick) == 0x000004, "Wrong alignment on WPN_MicroMissileLauncher_C_ReceiveTick");
static_assert(sizeof(WPN_MicroMissileLauncher_C_ReceiveTick) == 0x000004, "Wrong size on WPN_MicroMissileLauncher_C_ReceiveTick");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'WPN_MicroMissileLauncher_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.Server_SetHomingLocation
// 0x000C (0x000C - 0x0000)
struct WPN_MicroMissileLauncher_C_Server_SetHomingLocation final
{
public:
	struct FVector_NetQuantize                    HomingLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_MicroMissileLauncher_C_Server_SetHomingLocation) == 0x000004, "Wrong alignment on WPN_MicroMissileLauncher_C_Server_SetHomingLocation");
static_assert(sizeof(WPN_MicroMissileLauncher_C_Server_SetHomingLocation) == 0x00000C, "Wrong size on WPN_MicroMissileLauncher_C_Server_SetHomingLocation");
static_assert(offsetof(WPN_MicroMissileLauncher_C_Server_SetHomingLocation, HomingLocation) == 0x000000, "Member 'WPN_MicroMissileLauncher_C_Server_SetHomingLocation::HomingLocation' has a wrong offset!");

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.All_SetHomingLocation
// 0x000C (0x000C - 0x0000)
struct WPN_MicroMissileLauncher_C_All_SetHomingLocation final
{
public:
	struct FVector_NetQuantize                    HomingLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_MicroMissileLauncher_C_All_SetHomingLocation) == 0x000004, "Wrong alignment on WPN_MicroMissileLauncher_C_All_SetHomingLocation");
static_assert(sizeof(WPN_MicroMissileLauncher_C_All_SetHomingLocation) == 0x00000C, "Wrong size on WPN_MicroMissileLauncher_C_All_SetHomingLocation");
static_assert(offsetof(WPN_MicroMissileLauncher_C_All_SetHomingLocation, HomingLocation) == 0x000000, "Member 'WPN_MicroMissileLauncher_C_All_SetHomingLocation::HomingLocation' has a wrong offset!");

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.OnProjectileSpawned_Event
// 0x0008 (0x0008 - 0x0000)
struct WPN_MicroMissileLauncher_C_OnProjectileSpawned_Event final
{
public:
	class AProjectileBase*                        Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_MicroMissileLauncher_C_OnProjectileSpawned_Event) == 0x000008, "Wrong alignment on WPN_MicroMissileLauncher_C_OnProjectileSpawned_Event");
static_assert(sizeof(WPN_MicroMissileLauncher_C_OnProjectileSpawned_Event) == 0x000008, "Wrong size on WPN_MicroMissileLauncher_C_OnProjectileSpawned_Event");
static_assert(offsetof(WPN_MicroMissileLauncher_C_OnProjectileSpawned_Event, Projectile) == 0x000000, "Member 'WPN_MicroMissileLauncher_C_OnProjectileSpawned_Event::Projectile' has a wrong offset!");

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.ExecuteUbergraph_WPN_MicroMissileLauncher
// 0x04C0 (0x04C0 - 0x0000)
struct WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3192[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AProjectileBase* Projectile)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UItemUpgrade*                     K2Node_Event_Event;                                // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_Base_AmmoCount_C*        K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3193[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3194[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    K2Node_CustomEvent_HomingLocation_1;               // 0x0044(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_HomingLocation;                 // 0x0074(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3195[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3196[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3197[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3198[0x2];                                     // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADamageEnhancer*                        K2Node_DynamicCast_AsDamage_Enhancer;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3199[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_VectorToNetQuantize_ReturnValue;          // 0x0240(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x024C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319A[0x2];                                     // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x02D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319B[0x4];                                     // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_VectorToNetQuantize_ReturnValue_1;        // 0x03E4(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_2;     // 0x03F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AProjectileBase*                        K2Node_CustomEvent_Projectile;                     // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectile*                            K2Node_DynamicCast_AsProjectile;                   // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319C[0x7];                                     // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AProjectile*>                    CallFunc_GetActiveProjectiles_ActiveProjectiles;   // 0x0490(0x0010)(ReferenceParm)
	class AProjectile*                            CallFunc_Array_Get_Item;                           // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319D[0x4];                                     // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APRJ_MicroMissile_Cluster_C*            K2Node_DynamicCast_AsPRJ_Micro_Missile_Cluster;    // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher) == 0x000008, "Wrong alignment on WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher");
static_assert(sizeof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher) == 0x0004C0, "Wrong size on WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, EntryPoint) == 0x000000, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::EntryPoint' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000020, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_Event_Event) == 0x000028, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_Event_Event' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count) == 0x000030, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_IsLocallyControlled_ReturnValue) == 0x000040, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_CustomEvent_HomingLocation_1) == 0x000044, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_CustomEvent_HomingLocation_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_GetForwardVector_ReturnValue) == 0x000050, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00005C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000068, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_CustomEvent_HomingLocation) == 0x000074, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_CustomEvent_HomingLocation' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x00008C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000090, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000118, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_LineTraceSingle_OutHit) == 0x00011C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A4, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_Array_AddUnique_ReturnValue) == 0x0001A8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_bBlockingHit) == 0x0001AC, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001AD, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_Time) == 0x0001B0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_Distance) == 0x0001B4, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_Location) == 0x0001B8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C4, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_Normal) == 0x0001D0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_ImpactNormal) == 0x0001DC, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_PhysMat) == 0x0001E8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_HitActor) == 0x0001F0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_HitComponent) == 0x0001F8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_HitBoneName) == 0x000200, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_HitItem) == 0x000208, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_ElementIndex) == 0x00020C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_FaceIndex) == 0x000210, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_TraceStart) == 0x000214, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, Temp_int_Loop_Counter_Variable) == 0x00022C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_DynamicCast_AsDamage_Enhancer) == 0x000230, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_DynamicCast_AsDamage_Enhancer' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_DynamicCast_bSuccess_1) == 0x000238, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_Add_IntInt_ReturnValue) == 0x00023C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_VectorToNetQuantize_ReturnValue) == 0x000240, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_VectorToNetQuantize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x00024C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BooleanAND_ReturnValue) == 0x0002D4, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BooleanAND_ReturnValue_1) == 0x0002D5, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_LineTraceSingle_OutHit_1) == 0x0002D8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000360, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x000361, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000362, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000363, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_Time_1) == 0x000364, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_Distance_1) == 0x000368, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_Location_1) == 0x00036C, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000378, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_Normal_1) == 0x000384, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000390, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_PhysMat_1) == 0x0003A0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_HitActor_1) == 0x0003A8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_HitComponent_1) == 0x0003B0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_HitBoneName_1) == 0x0003B8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_HitItem_1) == 0x0003C0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_ElementIndex_1) == 0x0003C4, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_FaceIndex_1) == 0x0003C8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_TraceStart_1) == 0x0003CC, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_BreakHitResult_TraceEnd_1) == 0x0003D8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_VectorToNetQuantize_ReturnValue_1) == 0x0003E4, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_VectorToNetQuantize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_K2_SetWorldLocation_SweepHitResult_2) == 0x0003F0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_K2_SetWorldLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_CustomEvent_Projectile) == 0x000478, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_CustomEvent_Projectile' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_DynamicCast_AsProjectile) == 0x000480, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_DynamicCast_AsProjectile' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_DynamicCast_bSuccess_2) == 0x000488, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_GetActiveProjectiles_ActiveProjectiles) == 0x000490, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_GetActiveProjectiles_ActiveProjectiles' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_Array_Get_Item) == 0x0004A0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_Array_Length_ReturnValue) == 0x0004A8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_DynamicCast_AsPRJ_Micro_Missile_Cluster) == 0x0004B0, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_DynamicCast_AsPRJ_Micro_Missile_Cluster' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, K2Node_DynamicCast_bSuccess_3) == 0x0004B8, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher, CallFunc_Less_IntInt_ReturnValue) == 0x0004B9, "Member 'WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.GetGearStatEntry
// 0x09A8 (0x09A8 - 0x0000)
struct WPN_MicroMissileLauncher_C_GetGearStatEntry final
{
public:
	class AFSDPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGearStatEntry>                 Stats;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry;            // 0x0020(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319E[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         K2Node_MakeStruct_GearStatEntry;                   // 0x0090(0x0068)()
	struct FGearStatEntry                         K2Node_MakeStruct_GearStatEntry_1;                 // 0x00F8(0x0068)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319F[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A0[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry_1;          // 0x0180(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue_1;       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A1[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry;         // 0x01F0(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades;        // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A2[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1;       // 0x0260(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1;      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A3[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2;       // 0x02D0(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2;      // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A4[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3;       // 0x0340(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3;      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A5[0x3];                                     // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         K2Node_MakeStruct_GearStatEntry_2;                 // 0x03B0(0x0068)()
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A6[0x4];                                     // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_3;             // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChargedProjectileLauncherComponent*    CallFunc_GetComponentFromClass_ReturnValue;        // 0x0430(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry;             // 0x0438(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue;          // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A7[0x7];                                     // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Projectile_GearStatEntry;         // 0x04A8(0x0068)()
	bool                                          CallFunc_UPGDESC_Projectile_HasUpgradedValue;      // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A8[0x3];                                     // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A9[0x4];                                     // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Projectile_GearStatEntry_1;       // 0x0520(0x0068)()
	bool                                          CallFunc_UPGDESC_Projectile_HasUpgradedValue_1;    // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AA[0x7];                                     // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_1;           // 0x0590(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_1;        // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AB[0x3];                                     // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31AC[0x4];                                     // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Projectile_GearStatEntry_2;       // 0x0608(0x0068)()
	bool                                          CallFunc_UPGDESC_Projectile_HasUpgradedValue_2;    // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AD[0x7];                                     // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_DamageBonus_DamageConversion_GearStatEntry; // 0x0678(0x0068)()
	bool                                          CallFunc_UPGDESC_DamageBonus_DamageConversion_HasUpgradedValue; // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AE[0x3];                                     // 0x06E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31AF[0x4];                                     // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_2;           // 0x06F0(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_2;        // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B0[0x7];                                     // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_3;           // 0x0760(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_3;        // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B1[0x3];                                     // 0x07C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_13;                 // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_14;                 // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B2[0x4];                                     // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_4;           // 0x07D8(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_4;        // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B3[0x7];                                     // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_5;           // 0x0848(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_5;        // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B4[0x3];                                     // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_15;                 // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_16;                 // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B5[0x4];                                     // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_6;           // 0x08C0(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_6;        // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B6[0x7];                                     // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_7;           // 0x0930(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_7;        // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B7[0x3];                                     // 0x0999(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_17;                 // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_18;                 // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_MicroMissileLauncher_C_GetGearStatEntry) == 0x000008, "Wrong alignment on WPN_MicroMissileLauncher_C_GetGearStatEntry");
static_assert(sizeof(WPN_MicroMissileLauncher_C_GetGearStatEntry) == 0x0009A8, "Wrong size on WPN_MicroMissileLauncher_C_GetGearStatEntry");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, PlayerState) == 0x000000, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::PlayerState' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, Stats) == 0x000008, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::Stats' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry) == 0x000020, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue) == 0x000088, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, K2Node_MakeStruct_GearStatEntry) == 0x000090, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::K2Node_MakeStruct_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, K2Node_MakeStruct_GearStatEntry_1) == 0x0000F8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::K2Node_MakeStruct_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue) == 0x000160, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, K2Node_SwitchEnum_CmpSuccess) == 0x000164, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_1) == 0x000168, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_1) == 0x000170, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_2) == 0x000178, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry_1) == 0x000180, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue_1) == 0x0001E8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry) == 0x0001F0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades) == 0x000258, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_2) == 0x00025C, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1) == 0x000260, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1) == 0x0002C8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2) == 0x0002D0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2) == 0x000338, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3) == 0x000340, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3) == 0x0003A8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_3) == 0x0003AC, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, K2Node_MakeStruct_GearStatEntry_2) == 0x0003B0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::K2Node_MakeStruct_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_4) == 0x000418, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_5) == 0x00041C, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_6) == 0x000420, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_3) == 0x000428, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_GetComponentFromClass_ReturnValue) == 0x000430, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_GetComponentFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry) == 0x000438, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue) == 0x0004A0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_GearStatEntry) == 0x0004A8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_HasUpgradedValue) == 0x000510, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_7) == 0x000514, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_8) == 0x000518, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_GearStatEntry_1) == 0x000520, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_HasUpgradedValue_1) == 0x000588, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_1) == 0x000590, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_1) == 0x0005F8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_9) == 0x0005FC, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_10) == 0x000600, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_GearStatEntry_2) == 0x000608, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_HasUpgradedValue_2) == 0x000670, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_DamageBonus_DamageConversion_GearStatEntry) == 0x000678, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_DamageBonus_DamageConversion_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_DamageBonus_DamageConversion_HasUpgradedValue) == 0x0006E0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_DamageBonus_DamageConversion_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_11) == 0x0006E4, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_12) == 0x0006E8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_2) == 0x0006F0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_2) == 0x000758, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_3) == 0x000760, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_3) == 0x0007C8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_3' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_13) == 0x0007CC, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_14) == 0x0007D0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_4) == 0x0007D8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_4' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_4) == 0x000840, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_4' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_5) == 0x000848, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_5' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_5) == 0x0008B0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_5' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_15) == 0x0008B4, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_16) == 0x0008B8, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_6) == 0x0008C0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_6' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_6) == 0x000928, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_6' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_7) == 0x000930, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_7' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_7) == 0x000998, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_7' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_17) == 0x00099C, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WPN_MicroMissileLauncher_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_18) == 0x0009A0, "Member 'WPN_MicroMissileLauncher_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_18' has a wrong offset!");

}

