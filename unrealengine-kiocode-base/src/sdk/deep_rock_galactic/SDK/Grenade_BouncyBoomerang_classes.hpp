#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grenade_BouncyBoomerang

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Grenade_BouncyBoomerang.Grenade_BouncyBoomerang_C
// 0x0068 (0x0558 - 0x04F0)
class AGrenade_BouncyBoomerang_C final : public ABouncyBoomerang
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_Boomerang_Trail;                                // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUpgradableGearComponent*               UpgradableGear;                                    // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Particle_Trail;                                    // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LocalPivot;                                        // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BoomerangPivot;                                    // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        BoomerangFlightSound;                              // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDialogDataAsset*                       Grenade_warning;                                   // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              ExplosionMixModifier;                              // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       Character;                                         // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void OnExploded();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_Grenade_BouncyBoomerang(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Grenade_BouncyBoomerang_C">();
	}
	static class AGrenade_BouncyBoomerang_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenade_BouncyBoomerang_C>();
	}
};
static_assert(alignof(AGrenade_BouncyBoomerang_C) == 0x000008, "Wrong alignment on AGrenade_BouncyBoomerang_C");
static_assert(sizeof(AGrenade_BouncyBoomerang_C) == 0x000558, "Wrong size on AGrenade_BouncyBoomerang_C");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, UberGraphFrame) == 0x0004F0, "Member 'AGrenade_BouncyBoomerang_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, NS_Boomerang_Trail) == 0x0004F8, "Member 'AGrenade_BouncyBoomerang_C::NS_Boomerang_Trail' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, UpgradableGear) == 0x000500, "Member 'AGrenade_BouncyBoomerang_C::UpgradableGear' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, Particle_Trail) == 0x000508, "Member 'AGrenade_BouncyBoomerang_C::Particle_Trail' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, LocalPivot) == 0x000510, "Member 'AGrenade_BouncyBoomerang_C::LocalPivot' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, MeshComponent) == 0x000518, "Member 'AGrenade_BouncyBoomerang_C::MeshComponent' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, BoomerangPivot) == 0x000520, "Member 'AGrenade_BouncyBoomerang_C::BoomerangPivot' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, BoomerangFlightSound) == 0x000528, "Member 'AGrenade_BouncyBoomerang_C::BoomerangFlightSound' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, PointLight) == 0x000530, "Member 'AGrenade_BouncyBoomerang_C::PointLight' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, Damage) == 0x000538, "Member 'AGrenade_BouncyBoomerang_C::Damage' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, Grenade_warning) == 0x000540, "Member 'AGrenade_BouncyBoomerang_C::Grenade_warning' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, ExplosionMixModifier) == 0x000548, "Member 'AGrenade_BouncyBoomerang_C::ExplosionMixModifier' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyBoomerang_C, Character) == 0x000550, "Member 'AGrenade_BouncyBoomerang_C::Character' has a wrong offset!");

}

