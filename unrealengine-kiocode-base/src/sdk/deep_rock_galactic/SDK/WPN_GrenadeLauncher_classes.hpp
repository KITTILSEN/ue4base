#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_GrenadeLauncher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_GrenadeLauncher.WPN_GrenadeLauncher_C
// 0x0020 (0x07A0 - 0x0780)
class AWPN_GrenadeLauncher_C final : public AAmmoDrivenWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0780(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFirstPersonWidgetComponent*            FirstPersonWidget;                                 // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileLauncherComponent*           ProjectileLauncher;                                // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void CustomEvent1(const class UItemUpgrade* Event);
	void ExecuteUbergraph_WPN_GrenadeLauncher(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_GrenadeLauncher_C">();
	}
	static class AWPN_GrenadeLauncher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_GrenadeLauncher_C>();
	}
};
static_assert(alignof(AWPN_GrenadeLauncher_C) == 0x000008, "Wrong alignment on AWPN_GrenadeLauncher_C");
static_assert(sizeof(AWPN_GrenadeLauncher_C) == 0x0007A0, "Wrong size on AWPN_GrenadeLauncher_C");
static_assert(offsetof(AWPN_GrenadeLauncher_C, UberGraphFrame) == 0x000780, "Member 'AWPN_GrenadeLauncher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_GrenadeLauncher_C, FirstPersonWidget) == 0x000788, "Member 'AWPN_GrenadeLauncher_C::FirstPersonWidget' has a wrong offset!");
static_assert(offsetof(AWPN_GrenadeLauncher_C, CrosshairAggregator) == 0x000790, "Member 'AWPN_GrenadeLauncher_C::CrosshairAggregator' has a wrong offset!");
static_assert(offsetof(AWPN_GrenadeLauncher_C, ProjectileLauncher) == 0x000798, "Member 'AWPN_GrenadeLauncher_C::ProjectileLauncher' has a wrong offset!");

}

