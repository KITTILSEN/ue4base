#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Filter_ServerGameType

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Filter_ServerGameType.Filter_ServerGameType_C
// 0x0058 (0x02B8 - 0x0260)
class UFilter_ServerGameType_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCheck_ServerGameType_C*                Check_Approved;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheck_ServerGameType_C*                Check_Sandbox;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ExpandableMenu_C*                MenuGameType;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_BoolUserSetting_C*               Option_OnlyModdedServers;                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootCanvas;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UCheck_ServerGameType_C*>        Entries;                                           // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             OnSelectionChanged;                                // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Sandbox;                                           // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void VerifyOnlyModded(EGameType LastClicked);
	void VerifyRules();
	void IsSandBoxMode(bool* SandboxMode);
	void CreateEntries();
	void Reset();
	void GetSelectedGameTypes(TArray<EGameType>* GameTypes);
	void OpenMenu(bool Open);
	void UpdateSubheader();
	void PreConstruct(bool IsDesignTime);
	void OnGameTypeChanged(bool IsChecked, EGameType Gametype);
	void Construct();
	void BndEvt__Basic_BoolUserSetting_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature(bool IsChecked);
	void ExecuteUbergraph_Filter_ServerGameType(int32 EntryPoint);
	void OnSelectionChanged__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Filter_ServerGameType_C">();
	}
	static class UFilter_ServerGameType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFilter_ServerGameType_C>();
	}
};
static_assert(alignof(UFilter_ServerGameType_C) == 0x000008, "Wrong alignment on UFilter_ServerGameType_C");
static_assert(sizeof(UFilter_ServerGameType_C) == 0x0002B8, "Wrong size on UFilter_ServerGameType_C");
static_assert(offsetof(UFilter_ServerGameType_C, UberGraphFrame) == 0x000260, "Member 'UFilter_ServerGameType_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFilter_ServerGameType_C, Check_Approved) == 0x000268, "Member 'UFilter_ServerGameType_C::Check_Approved' has a wrong offset!");
static_assert(offsetof(UFilter_ServerGameType_C, Check_Sandbox) == 0x000270, "Member 'UFilter_ServerGameType_C::Check_Sandbox' has a wrong offset!");
static_assert(offsetof(UFilter_ServerGameType_C, MenuGameType) == 0x000278, "Member 'UFilter_ServerGameType_C::MenuGameType' has a wrong offset!");
static_assert(offsetof(UFilter_ServerGameType_C, Option_OnlyModdedServers) == 0x000280, "Member 'UFilter_ServerGameType_C::Option_OnlyModdedServers' has a wrong offset!");
static_assert(offsetof(UFilter_ServerGameType_C, RootCanvas) == 0x000288, "Member 'UFilter_ServerGameType_C::RootCanvas' has a wrong offset!");
static_assert(offsetof(UFilter_ServerGameType_C, Entries) == 0x000290, "Member 'UFilter_ServerGameType_C::Entries' has a wrong offset!");
static_assert(offsetof(UFilter_ServerGameType_C, OnSelectionChanged) == 0x0002A0, "Member 'UFilter_ServerGameType_C::OnSelectionChanged' has a wrong offset!");
static_assert(offsetof(UFilter_ServerGameType_C, Sandbox) == 0x0002B0, "Member 'UFilter_ServerGameType_C::Sandbox' has a wrong offset!");

}

