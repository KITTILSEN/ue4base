#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Forge_Details

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Forge_Details.UI_Forge_Details_C
// 0x00C8 (0x0328 - 0x0260)
class UUI_Forge_Details_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimCount;                                         // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimOpenMatrix;                                    // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                CounterBorder;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CounterOverlay;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Label_C*                         CountLabel;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DescriptionSubTitle;                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DescriptionTitle;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ForgeItemCategory;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ForgeItemDesc;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ForgeItemName;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemDescriptionOverlay;                            // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_CharacterIcon_C*                   ITM_CharacterIcon;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_MatrixCore_C*                      ITM_MatrixCore;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_Overclock_Details_C*               ITM_Overclock_Details;                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_Overclock_Icon_C*                  ITM_Overclock_Icon;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LowerBarBorder;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Forge_Schematic_OwnerIcon_C*        UI_SchematicOwnerIcon;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                UpperBarBorder;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpperBarCorner;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               WeaponIcon;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnMatrixCoreOpened;                                // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowMatrixCore;                                    // 0x0318(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_4386[0x3];                                     // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CountingTo;                                        // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CountProgress;                                     // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void SequenceEvent__ENTRYPOINTUI_Forge_Details_0();
	void StartCounting();
	void SetCountProgress(float InValue);
	void OpenMatrixCore();
	void SetItemDescription(const class FText& Title, const class FText& Subtitle);
	void ShowSchematic(class USchematic* InSchematic);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void AnimOpenMatrixFinished();
	void Stop_Counting();
	void ExecuteUbergraph_UI_Forge_Details(int32 EntryPoint);
	void OnMatrixCoreOpened__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Forge_Details_C">();
	}
	static class UUI_Forge_Details_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Forge_Details_C>();
	}
};
static_assert(alignof(UUI_Forge_Details_C) == 0x000008, "Wrong alignment on UUI_Forge_Details_C");
static_assert(sizeof(UUI_Forge_Details_C) == 0x000328, "Wrong size on UUI_Forge_Details_C");
static_assert(offsetof(UUI_Forge_Details_C, UberGraphFrame) == 0x000260, "Member 'UUI_Forge_Details_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, AnimCount) == 0x000268, "Member 'UUI_Forge_Details_C::AnimCount' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, AnimOpenMatrix) == 0x000270, "Member 'UUI_Forge_Details_C::AnimOpenMatrix' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, CounterBorder) == 0x000278, "Member 'UUI_Forge_Details_C::CounterBorder' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, CounterOverlay) == 0x000280, "Member 'UUI_Forge_Details_C::CounterOverlay' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, CountLabel) == 0x000288, "Member 'UUI_Forge_Details_C::CountLabel' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, DescriptionSubTitle) == 0x000290, "Member 'UUI_Forge_Details_C::DescriptionSubTitle' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, DescriptionTitle) == 0x000298, "Member 'UUI_Forge_Details_C::DescriptionTitle' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ForgeItemCategory) == 0x0002A0, "Member 'UUI_Forge_Details_C::ForgeItemCategory' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ForgeItemDesc) == 0x0002A8, "Member 'UUI_Forge_Details_C::ForgeItemDesc' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ForgeItemName) == 0x0002B0, "Member 'UUI_Forge_Details_C::ForgeItemName' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ItemDescriptionOverlay) == 0x0002B8, "Member 'UUI_Forge_Details_C::ItemDescriptionOverlay' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ITM_CharacterIcon) == 0x0002C0, "Member 'UUI_Forge_Details_C::ITM_CharacterIcon' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ITM_MatrixCore) == 0x0002C8, "Member 'UUI_Forge_Details_C::ITM_MatrixCore' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ITM_Overclock_Details) == 0x0002D0, "Member 'UUI_Forge_Details_C::ITM_Overclock_Details' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ITM_Overclock_Icon) == 0x0002D8, "Member 'UUI_Forge_Details_C::ITM_Overclock_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, LowerBarBorder) == 0x0002E0, "Member 'UUI_Forge_Details_C::LowerBarBorder' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, UI_SchematicOwnerIcon) == 0x0002E8, "Member 'UUI_Forge_Details_C::UI_SchematicOwnerIcon' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, UpperBarBorder) == 0x0002F0, "Member 'UUI_Forge_Details_C::UpperBarBorder' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, UpperBarCorner) == 0x0002F8, "Member 'UUI_Forge_Details_C::UpperBarCorner' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, WeaponIcon) == 0x000300, "Member 'UUI_Forge_Details_C::WeaponIcon' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, OnMatrixCoreOpened) == 0x000308, "Member 'UUI_Forge_Details_C::OnMatrixCoreOpened' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, ShowMatrixCore) == 0x000318, "Member 'UUI_Forge_Details_C::ShowMatrixCore' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, CountingTo) == 0x00031C, "Member 'UUI_Forge_Details_C::CountingTo' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Details_C, CountProgress) == 0x000320, "Member 'UUI_Forge_Details_C::CountProgress' has a wrong offset!");

}

