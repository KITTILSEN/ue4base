#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WallSaw

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WallSaw.BP_WallSaw_C
// 0x00B0 (0x0400 - 0x0350)
class ABP_WallSaw_C final : public AWallSaw
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFSDAudioComponent*                     WallSawDestroyed;                                  // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFSDAudioComponent*                     WallSawActivated;                                  // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Grenade_WallSaw_Trail;                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_WallSaw_GroundSpark;                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_WallSaw_FallAppartParticles;                    // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_WallSaw_DeployParticles;                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      GrazeCapsule;                                      // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_HandGrenade_R_FoldOut;                          // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SawPivot;                                          // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       GlanceDamage;                                      // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnWobble_NewTrack_0_8C6FC6E8454070F73FE4D1B7EC977E67; // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SpawnWobble__Direction_8C6FC6E8454070F73FE4D1B7EC977E67; // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4241[0x3];                                     // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SpawnWobble;                                       // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPotentialLifetimeDamage;                        // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DurationBeforeExpiration;                          // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationSpeed;                                     // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4242[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        FallingAppartDeathParticles;                       // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        SawDeployedParticles;                              // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        SlicingOnImpactParticles;                          // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartRotation;                                     // 0x03F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SpawnWobble__FinishedFunc();
	void SpawnWobble__UpdateFunc();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void DestroySelf();
	void GrazeOverlapCallback(class AActor* Actor, class UPrimitiveComponent* Prim);
	void ExecuteUbergraph_BP_WallSaw(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WallSaw_C">();
	}
	static class ABP_WallSaw_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WallSaw_C>();
	}
};
static_assert(alignof(ABP_WallSaw_C) == 0x000010, "Wrong alignment on ABP_WallSaw_C");
static_assert(sizeof(ABP_WallSaw_C) == 0x000400, "Wrong size on ABP_WallSaw_C");
static_assert(offsetof(ABP_WallSaw_C, UberGraphFrame) == 0x000350, "Member 'ABP_WallSaw_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, WallSawDestroyed) == 0x000358, "Member 'ABP_WallSaw_C::WallSawDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, WallSawActivated) == 0x000360, "Member 'ABP_WallSaw_C::WallSawActivated' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, NS_Grenade_WallSaw_Trail) == 0x000368, "Member 'ABP_WallSaw_C::NS_Grenade_WallSaw_Trail' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, NS_WallSaw_GroundSpark) == 0x000370, "Member 'ABP_WallSaw_C::NS_WallSaw_GroundSpark' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, NS_WallSaw_FallAppartParticles) == 0x000378, "Member 'ABP_WallSaw_C::NS_WallSaw_FallAppartParticles' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, NS_WallSaw_DeployParticles) == 0x000380, "Member 'ABP_WallSaw_C::NS_WallSaw_DeployParticles' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, GrazeCapsule) == 0x000388, "Member 'ABP_WallSaw_C::GrazeCapsule' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, SK_HandGrenade_R_FoldOut) == 0x000390, "Member 'ABP_WallSaw_C::SK_HandGrenade_R_FoldOut' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, PointLight) == 0x000398, "Member 'ABP_WallSaw_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, SawPivot) == 0x0003A0, "Member 'ABP_WallSaw_C::SawPivot' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, GlanceDamage) == 0x0003A8, "Member 'ABP_WallSaw_C::GlanceDamage' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, DefaultSceneRoot) == 0x0003B0, "Member 'ABP_WallSaw_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, SpawnWobble_NewTrack_0_8C6FC6E8454070F73FE4D1B7EC977E67) == 0x0003B8, "Member 'ABP_WallSaw_C::SpawnWobble_NewTrack_0_8C6FC6E8454070F73FE4D1B7EC977E67' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, SpawnWobble__Direction_8C6FC6E8454070F73FE4D1B7EC977E67) == 0x0003BC, "Member 'ABP_WallSaw_C::SpawnWobble__Direction_8C6FC6E8454070F73FE4D1B7EC977E67' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, SpawnWobble) == 0x0003C0, "Member 'ABP_WallSaw_C::SpawnWobble' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, MaxPotentialLifetimeDamage) == 0x0003C8, "Member 'ABP_WallSaw_C::MaxPotentialLifetimeDamage' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, DurationBeforeExpiration) == 0x0003CC, "Member 'ABP_WallSaw_C::DurationBeforeExpiration' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, RotationSpeed) == 0x0003D0, "Member 'ABP_WallSaw_C::RotationSpeed' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, FallingAppartDeathParticles) == 0x0003D8, "Member 'ABP_WallSaw_C::FallingAppartDeathParticles' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, SawDeployedParticles) == 0x0003E0, "Member 'ABP_WallSaw_C::SawDeployedParticles' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, SlicingOnImpactParticles) == 0x0003E8, "Member 'ABP_WallSaw_C::SlicingOnImpactParticles' has a wrong offset!");
static_assert(offsetof(ABP_WallSaw_C, StartRotation) == 0x0003F0, "Member 'ABP_WallSaw_C::StartRotation' has a wrong offset!");

}

