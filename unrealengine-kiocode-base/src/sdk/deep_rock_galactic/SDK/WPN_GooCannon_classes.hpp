#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_GooCannon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_GooCannon.WPN_GooCannon_C
// 0x0060 (0x0890 - 0x0830)
class AWPN_GooCannon_C final : public AGooGun
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0830(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        GooCannon_FullyCharged_Cue;                        // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonWidgetComponent*            Widget_Ammo;                                       // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        GooCannonCharge_Cue;                               // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargedProjectileLauncherComponent*    ChargedProjectileLauncher;                         // 0x0850(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   MuzzlePointLight;                                  // 0x0858(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x0860(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_ChargeBlaster_AmmoCounter_C* AmmoUI;                                            // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_ChargeLevel_0;                                  // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_ChargeSpinUp;                                   // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               OverheatEmitterInstance;                           // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BurstFireActive;                                   // 0x0888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasChargeUpgrade;                                  // 0x0889(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasVacuum;                                         // 0x088A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AFB[0x1];                                     // 0x088B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PuddleAmmoPool;                                    // 0x088C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyUpgradeModifiers(class UItemUpgrade* ItemUpgrade);
	void GetNearbyPuddles();
	void FadeOutIfValid(class UAudioComponent*& AC);
	void Handle_Charge_Audio(float Charge);
	void UserConstructionScript();
	void RecieveUnequipped();
	void AddedToInventory(class APlayerCharacter* ItemOwner);
	void OnChargeChanged_Event_0(float Charge);
	void CustomEvent1(const class UItemUpgrade* Event);
	void ReloadEvent();
	void SuckInPuddle(class ABP_GooCannon_GooPuddle_C* Puddle);
	void ServerSuckInPuddle(class ABP_GooCannon_GooPuddle_C* Puddle);
	void ReceiveBeginPlay();
	void OnPuddleSuckedIn();
	void ExecuteUbergraph_WPN_GooCannon(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_GooCannon_C">();
	}
	static class AWPN_GooCannon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_GooCannon_C>();
	}
};
static_assert(alignof(AWPN_GooCannon_C) == 0x000008, "Wrong alignment on AWPN_GooCannon_C");
static_assert(sizeof(AWPN_GooCannon_C) == 0x000890, "Wrong size on AWPN_GooCannon_C");
static_assert(offsetof(AWPN_GooCannon_C, UberGraphFrame) == 0x000830, "Member 'AWPN_GooCannon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, GooCannon_FullyCharged_Cue) == 0x000838, "Member 'AWPN_GooCannon_C::GooCannon_FullyCharged_Cue' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, Widget_Ammo) == 0x000840, "Member 'AWPN_GooCannon_C::Widget_Ammo' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, GooCannonCharge_Cue) == 0x000848, "Member 'AWPN_GooCannon_C::GooCannonCharge_Cue' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, ChargedProjectileLauncher) == 0x000850, "Member 'AWPN_GooCannon_C::ChargedProjectileLauncher' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, MuzzlePointLight) == 0x000858, "Member 'AWPN_GooCannon_C::MuzzlePointLight' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, CrosshairAggregator) == 0x000860, "Member 'AWPN_GooCannon_C::CrosshairAggregator' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, AmmoUI) == 0x000868, "Member 'AWPN_GooCannon_C::AmmoUI' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, AC_ChargeLevel_0) == 0x000870, "Member 'AWPN_GooCannon_C::AC_ChargeLevel_0' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, AC_ChargeSpinUp) == 0x000878, "Member 'AWPN_GooCannon_C::AC_ChargeSpinUp' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, OverheatEmitterInstance) == 0x000880, "Member 'AWPN_GooCannon_C::OverheatEmitterInstance' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, BurstFireActive) == 0x000888, "Member 'AWPN_GooCannon_C::BurstFireActive' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, HasChargeUpgrade) == 0x000889, "Member 'AWPN_GooCannon_C::HasChargeUpgrade' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, HasVacuum) == 0x00088A, "Member 'AWPN_GooCannon_C::HasVacuum' has a wrong offset!");
static_assert(offsetof(AWPN_GooCannon_C, PuddleAmmoPool) == 0x00088C, "Member 'AWPN_GooCannon_C::PuddleAmmoPool' has a wrong offset!");

}

