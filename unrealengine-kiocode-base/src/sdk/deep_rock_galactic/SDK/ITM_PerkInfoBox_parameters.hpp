#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_PerkInfoBox

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.ExecuteUbergraph_ITM_PerkInfoBox
// 0x0030 (0x0030 - 0x0000)
struct ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_DynamicCast_AsFSDPlayer_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C85[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox) == 0x000008, "Wrong alignment on ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox");
static_assert(sizeof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox) == 0x000030, "Wrong size on ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, EntryPoint) == 0x000000, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, Temp_bool_Variable) == 0x000004, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, Temp_byte_Variable) == 0x000005, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, Temp_byte_Variable_1) == 0x000006, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, K2Node_Event_IsDesignTime) == 0x000007, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, K2Node_DynamicCast_AsFSDPlayer_State) == 0x000010, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::K2Node_DynamicCast_AsFSDPlayer_State' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, CallFunc_GetSelectedCharacterID_ReturnValue) == 0x000020, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::CallFunc_GetSelectedCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox, K2Node_Select_Default) == 0x00002D, "Member 'ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox::K2Node_Select_Default' has a wrong offset!");

// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_PerkInfoBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_PerkInfoBox_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_PerkInfoBox_C_PreConstruct");
static_assert(sizeof(ITM_PerkInfoBox_C_PreConstruct) == 0x000001, "Wrong size on ITM_PerkInfoBox_C_PreConstruct");
static_assert(offsetof(ITM_PerkInfoBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_PerkInfoBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.GetEquippedPerksByType
// 0x0068 (0x0068 - 0x0000)
struct ITM_PerkInfoBox_C_GetEquippedPerksByType final
{
public:
	class UPlayerCharacterID*                     InCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkUsageType                                InType;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C86[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPerkAsset*>                     Perks;                                             // 0x0010(0x0010)(Parm, OutParm)
	TArray<class UPerkAsset*>                     Result;                                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class UPerkAsset*>                     CallFunc_GetCharacterEquippedPerks_ReturnValue;    // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPerkAsset*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C87[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsageType_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_PerkInfoBox_C_GetEquippedPerksByType) == 0x000008, "Wrong alignment on ITM_PerkInfoBox_C_GetEquippedPerksByType");
static_assert(sizeof(ITM_PerkInfoBox_C_GetEquippedPerksByType) == 0x000068, "Wrong size on ITM_PerkInfoBox_C_GetEquippedPerksByType");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, InCharacter) == 0x000000, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::InCharacter' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, InType) == 0x000008, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::InType' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, Perks) == 0x000010, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::Perks' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, Result) == 0x000020, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::Result' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, CallFunc_GetCharacterEquippedPerks_ReturnValue) == 0x000030, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::CallFunc_GetCharacterEquippedPerks_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, Temp_int_Array_Index_Variable) == 0x000040, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, CallFunc_Array_Get_Item) == 0x000048, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerksByType, CallFunc_IsUsageType_ReturnValue) == 0x000060, "Member 'ITM_PerkInfoBox_C_GetEquippedPerksByType::CallFunc_IsUsageType_ReturnValue' has a wrong offset!");

// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.CreateSlots
// 0x00B8 (0x00B8 - 0x0000)
struct ITM_PerkInfoBox_C_CreateSlots final
{
public:
	class UPanelWidget*                           InSlotsBox;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkUsageType                                InType;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C88[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkAsset*                             Perk;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPerkAsset*>                     Perks;                                             // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<EPerkSlotType>                         Layout;                                            // 0x0028(0x0010)(Edit, BlueprintVisible)
	EPerkSlotType                                 SlotType;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C89[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkSlotType                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8A[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C8B[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_StatusScreen_PerkItem_C*           CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class APlayerCharacter>           CallFunc_GetCharacterClass_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C8C[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPerkAsset*>                     CallFunc_GetEquippedPerksByType_Perks;             // 0x0088(0x0010)(ReferenceParm)
	TArray<EPerkSlotType>                         CallFunc_GetPerkEquipSlotLayout_ReturnValue;       // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C8D[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkAsset*                             CallFunc_GetEquippedPerkAt_Perk;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_PerkInfoBox_C_CreateSlots) == 0x000008, "Wrong alignment on ITM_PerkInfoBox_C_CreateSlots");
static_assert(sizeof(ITM_PerkInfoBox_C_CreateSlots) == 0x0000B8, "Wrong size on ITM_PerkInfoBox_C_CreateSlots");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, InSlotsBox) == 0x000000, "Member 'ITM_PerkInfoBox_C_CreateSlots::InSlotsBox' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, InType) == 0x000008, "Member 'ITM_PerkInfoBox_C_CreateSlots::InType' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, Perk) == 0x000010, "Member 'ITM_PerkInfoBox_C_CreateSlots::Perk' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, Perks) == 0x000018, "Member 'ITM_PerkInfoBox_C_CreateSlots::Perks' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, Layout) == 0x000028, "Member 'ITM_PerkInfoBox_C_CreateSlots::Layout' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, SlotType) == 0x000038, "Member 'ITM_PerkInfoBox_C_CreateSlots::SlotType' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'ITM_PerkInfoBox_C_CreateSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, Temp_int_Array_Index_Variable) == 0x000044, "Member 'ITM_PerkInfoBox_C_CreateSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_Array_Get_Item) == 0x000048, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_Create_ReturnValue) == 0x000060, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_GetCharacterClass_ReturnValue) == 0x000070, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_GetCharacterClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_AddChild_ReturnValue) == 0x000080, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_GetEquippedPerksByType_Perks) == 0x000088, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_GetEquippedPerksByType_Perks' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_GetPerkEquipSlotLayout_ReturnValue) == 0x000098, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_GetPerkEquipSlotLayout_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_CreateSlots, CallFunc_GetEquippedPerkAt_Perk) == 0x0000B0, "Member 'ITM_PerkInfoBox_C_CreateSlots::CallFunc_GetEquippedPerkAt_Perk' has a wrong offset!");

// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.GetEquippedPerkAt
// 0x0030 (0x0030 - 0x0000)
struct ITM_PerkInfoBox_C_GetEquippedPerkAt final
{
public:
	int32                                         Idx;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPerkAsset*>                     Perks;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UPerkAsset*                             Perk;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C8F[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkAsset*                             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_PerkInfoBox_C_GetEquippedPerkAt) == 0x000008, "Wrong alignment on ITM_PerkInfoBox_C_GetEquippedPerkAt");
static_assert(sizeof(ITM_PerkInfoBox_C_GetEquippedPerkAt) == 0x000030, "Wrong size on ITM_PerkInfoBox_C_GetEquippedPerkAt");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerkAt, Idx) == 0x000000, "Member 'ITM_PerkInfoBox_C_GetEquippedPerkAt::Idx' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerkAt, Perks) == 0x000008, "Member 'ITM_PerkInfoBox_C_GetEquippedPerkAt::Perks' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerkAt, Perk) == 0x000018, "Member 'ITM_PerkInfoBox_C_GetEquippedPerkAt::Perk' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerkAt, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ITM_PerkInfoBox_C_GetEquippedPerkAt::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerkAt, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'ITM_PerkInfoBox_C_GetEquippedPerkAt::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_PerkInfoBox_C_GetEquippedPerkAt, CallFunc_Array_Get_Item) == 0x000028, "Member 'ITM_PerkInfoBox_C_GetEquippedPerkAt::CallFunc_Array_Get_Item' has a wrong offset!");

}

