#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_HazPlusItem

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.OnApplicationsChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ITM_HazPlusItem_C_OnApplicationsChanged__DelegateSignature final
{
public:
	struct FDifficultyMutatorItem                 Param_Mutator;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(ITM_HazPlusItem_C_OnApplicationsChanged__DelegateSignature) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_OnApplicationsChanged__DelegateSignature");
static_assert(sizeof(ITM_HazPlusItem_C_OnApplicationsChanged__DelegateSignature) == 0x000010, "Wrong size on ITM_HazPlusItem_C_OnApplicationsChanged__DelegateSignature");
static_assert(offsetof(ITM_HazPlusItem_C_OnApplicationsChanged__DelegateSignature, Param_Mutator) == 0x000000, "Member 'ITM_HazPlusItem_C_OnApplicationsChanged__DelegateSignature::Param_Mutator' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.ExecuteUbergraph_ITM_HazPlusItem
// 0x0028 (0x0028 - 0x0000)
struct ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49C8[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem");
static_assert(sizeof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem) == 0x000028, "Wrong size on ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, EntryPoint) == 0x000000, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, Temp_bool_Variable) == 0x000004, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, Temp_byte_Variable) == 0x000005, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, Temp_byte_Variable_1) == 0x000006, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, CallFunc_IsHovered_ReturnValue) == 0x000007, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, K2Node_Select_Default) == 0x000010, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, CallFunc_IsHovered_ReturnValue_1) == 0x000011, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000018, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem, K2Node_Event_IsDesignTime) == 0x000020, "Member 'ITM_HazPlusItem_C_ExecuteUbergraph_ITM_HazPlusItem::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_HazPlusItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HazPlusItem_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_HazPlusItem_C_PreConstruct");
static_assert(sizeof(ITM_HazPlusItem_C_PreConstruct) == 0x000001, "Wrong size on ITM_HazPlusItem_C_PreConstruct");
static_assert(offsetof(ITM_HazPlusItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_HazPlusItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.ButtonHoveredChanged
// 0x0028 (0x0028 - 0x0000)
struct ITM_HazPlusItem_C_ButtonHoveredChanged final
{
public:
	class UButton*                                InButton;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBasic_Image_C*                         InArrow;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49C9[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               CallFunc_SelectTint_SelectedTint;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_HazPlusItem_C_ButtonHoveredChanged) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_ButtonHoveredChanged");
static_assert(sizeof(ITM_HazPlusItem_C_ButtonHoveredChanged) == 0x000028, "Wrong size on ITM_HazPlusItem_C_ButtonHoveredChanged");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, InButton) == 0x000000, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::InButton' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, InArrow) == 0x000008, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::InArrow' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, Temp_bool_Variable) == 0x000010, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, CallFunc_IsHovered_ReturnValue) == 0x000012, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, K2Node_Select_Default) == 0x000018, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, CallFunc_SelectVisibility_IsVisible) == 0x000020, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, CallFunc_SelectVisibility_VisibilityChanged) == 0x000021, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, CallFunc_SelectVisibility_New_Visibility) == 0x000022, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, CallFunc_IsHovered_ReturnValue_1) == 0x000023, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ButtonHoveredChanged, CallFunc_SelectTint_SelectedTint) == 0x000024, "Member 'ITM_HazPlusItem_C_ButtonHoveredChanged::CallFunc_SelectTint_SelectedTint' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.ClickButton
// 0x0020 (0x0020 - 0x0000)
struct ITM_HazPlusItem_C_ClickButton final
{
public:
	class UButton*                                InButton;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBasic_Image_C*                         InArrow;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIncrement;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetAmount_OutAmount;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_HazPlusItem_C_ClickButton) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_ClickButton");
static_assert(sizeof(ITM_HazPlusItem_C_ClickButton) == 0x000020, "Wrong size on ITM_HazPlusItem_C_ClickButton");
static_assert(offsetof(ITM_HazPlusItem_C_ClickButton, InButton) == 0x000000, "Member 'ITM_HazPlusItem_C_ClickButton::InButton' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ClickButton, InArrow) == 0x000008, "Member 'ITM_HazPlusItem_C_ClickButton::InArrow' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ClickButton, InIncrement) == 0x000010, "Member 'ITM_HazPlusItem_C_ClickButton::InIncrement' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ClickButton, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ITM_HazPlusItem_C_ClickButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_ClickButton, CallFunc_SetAmount_OutAmount) == 0x000018, "Member 'ITM_HazPlusItem_C_ClickButton::CallFunc_SetAmount_OutAmount' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.Refresh
// 0x0008 (0x0008 - 0x0000)
struct ITM_HazPlusItem_C_Refresh final
{
public:
	int32                                         CallFunc_SetAmount_OutAmount;                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_HazPlusItem_C_Refresh) == 0x000004, "Wrong alignment on ITM_HazPlusItem_C_Refresh");
static_assert(sizeof(ITM_HazPlusItem_C_Refresh) == 0x000008, "Wrong size on ITM_HazPlusItem_C_Refresh");
static_assert(offsetof(ITM_HazPlusItem_C_Refresh, CallFunc_SetAmount_OutAmount) == 0x000000, "Member 'ITM_HazPlusItem_C_Refresh::CallFunc_SetAmount_OutAmount' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'ITM_HazPlusItem_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_Refresh, CallFunc_SelectVisibility_IsVisible) == 0x000005, "Member 'ITM_HazPlusItem_C_Refresh::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_Refresh, CallFunc_SelectVisibility_VisibilityChanged) == 0x000006, "Member 'ITM_HazPlusItem_C_Refresh::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_Refresh, CallFunc_SelectVisibility_New_Visibility) == 0x000007, "Member 'ITM_HazPlusItem_C_Refresh::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.SetAmount
// 0x00A0 (0x00A0 - 0x0000)
struct ITM_HazPlusItem_C_SetAmount final
{
public:
	int32                                         InAmount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutAmount;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49CA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_Image_C*                         Img;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49CB[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDifficultyMutatorItem                 K2Node_MakeStruct_DifficultyMutatorItem;           // 0x0040(0x0010)(NoDestructor)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49CC[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDifficultyMutatorItem                 K2Node_MakeStruct_DifficultyMutatorItem_1;         // 0x0058(0x0010)(NoDestructor)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               CallFunc_SelectTint_SelectedTint;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49CD[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBasic_Image_C*>                 CallFunc_CreateOrReuseChildren_ReturnValue;        // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49CE[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_Image_C*                         CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HazPlusItem_C_SetAmount) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_SetAmount");
static_assert(sizeof(ITM_HazPlusItem_C_SetAmount) == 0x0000A0, "Wrong size on ITM_HazPlusItem_C_SetAmount");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, InAmount) == 0x000000, "Member 'ITM_HazPlusItem_C_SetAmount::InAmount' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, OutAmount) == 0x000004, "Member 'ITM_HazPlusItem_C_SetAmount::OutAmount' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, Param_Index) == 0x000008, "Member 'ITM_HazPlusItem_C_SetAmount::Param_Index' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, Img) == 0x000010, "Member 'ITM_HazPlusItem_C_SetAmount::Img' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, Max) == 0x000018, "Member 'ITM_HazPlusItem_C_SetAmount::Max' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, K2Node_MakeStruct_Margin) == 0x000024, "Member 'ITM_HazPlusItem_C_SetAmount::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, Temp_int_Array_Index_Variable) == 0x000034, "Member 'ITM_HazPlusItem_C_SetAmount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'ITM_HazPlusItem_C_SetAmount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, K2Node_MakeStruct_DifficultyMutatorItem) == 0x000040, "Member 'ITM_HazPlusItem_C_SetAmount::K2Node_MakeStruct_DifficultyMutatorItem' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000050, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, K2Node_MakeStruct_DifficultyMutatorItem_1) == 0x000058, "Member 'ITM_HazPlusItem_C_SetAmount::K2Node_MakeStruct_DifficultyMutatorItem_1' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_Clamp_ReturnValue) == 0x000068, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_SelectTint_SelectedTint) == 0x00006D, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_SelectTint_SelectedTint' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000070, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_CreateOrReuseChildren_ReturnValue) == 0x000078, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_CreateOrReuseChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_Array_Get_Item) == 0x000090, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetAmount, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'ITM_HazPlusItem_C_SetAmount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.RefreshFromManager
// 0x0008 (0x0008 - 0x0000)
struct ITM_HazPlusItem_C_RefreshFromManager final
{
public:
	bool                                          CallFunc_IsCampaignComplete_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49CF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmountFromManager_OutAmount;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_HazPlusItem_C_RefreshFromManager) == 0x000004, "Wrong alignment on ITM_HazPlusItem_C_RefreshFromManager");
static_assert(sizeof(ITM_HazPlusItem_C_RefreshFromManager) == 0x000008, "Wrong size on ITM_HazPlusItem_C_RefreshFromManager");
static_assert(offsetof(ITM_HazPlusItem_C_RefreshFromManager, CallFunc_IsCampaignComplete_ReturnValue) == 0x000000, "Member 'ITM_HazPlusItem_C_RefreshFromManager::CallFunc_IsCampaignComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_RefreshFromManager, CallFunc_GetAmountFromManager_OutAmount) == 0x000004, "Member 'ITM_HazPlusItem_C_RefreshFromManager::CallFunc_GetAmountFromManager_OutAmount' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.SetIsUnlocked
// 0x0010 (0x0010 - 0x0000)
struct ITM_HazPlusItem_C_SetIsUnlocked final
{
public:
	bool                                          InIsUnlocked;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49D0[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_HazPlusItem_C_SetIsUnlocked) == 0x000004, "Wrong alignment on ITM_HazPlusItem_C_SetIsUnlocked");
static_assert(sizeof(ITM_HazPlusItem_C_SetIsUnlocked) == 0x000010, "Wrong size on ITM_HazPlusItem_C_SetIsUnlocked");
static_assert(offsetof(ITM_HazPlusItem_C_SetIsUnlocked, InIsUnlocked) == 0x000000, "Member 'ITM_HazPlusItem_C_SetIsUnlocked::InIsUnlocked' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetIsUnlocked, Temp_bool_Variable) == 0x000001, "Member 'ITM_HazPlusItem_C_SetIsUnlocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetIsUnlocked, Temp_int_Variable) == 0x000004, "Member 'ITM_HazPlusItem_C_SetIsUnlocked::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetIsUnlocked, Temp_int_Variable_1) == 0x000008, "Member 'ITM_HazPlusItem_C_SetIsUnlocked::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetIsUnlocked, K2Node_Select_Default) == 0x00000C, "Member 'ITM_HazPlusItem_C_SetIsUnlocked::K2Node_Select_Default' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.GetInfo
// 0x00B8 (0x00B8 - 0x0000)
struct ITM_HazPlusItem_C_GetInfo final
{
public:
	struct FDifficultyMutatorInfo                 Info;                                              // 0x0000(0x0058)(Parm, OutParm)
	struct FDifficultyMutatorInfo                 K2Node_MakeStruct_DifficultyMutatorInfo;           // 0x0058(0x0058)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HazPlusItem_C_GetInfo) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_GetInfo");
static_assert(sizeof(ITM_HazPlusItem_C_GetInfo) == 0x0000B8, "Wrong size on ITM_HazPlusItem_C_GetInfo");
static_assert(offsetof(ITM_HazPlusItem_C_GetInfo, Info) == 0x000000, "Member 'ITM_HazPlusItem_C_GetInfo::Info' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetInfo, K2Node_MakeStruct_DifficultyMutatorInfo) == 0x000058, "Member 'ITM_HazPlusItem_C_GetInfo::K2Node_MakeStruct_DifficultyMutatorInfo' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetInfo, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'ITM_HazPlusItem_C_GetInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.IsItemHovered
// 0x0018 (0x0018 - 0x0000)
struct ITM_HazPlusItem_C_IsItemHovered final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49D1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HazPlusItem_C_IsItemHovered) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_IsItemHovered");
static_assert(sizeof(ITM_HazPlusItem_C_IsItemHovered) == 0x000018, "Wrong size on ITM_HazPlusItem_C_IsItemHovered");
static_assert(offsetof(ITM_HazPlusItem_C_IsItemHovered, ReturnValue) == 0x000000, "Member 'ITM_HazPlusItem_C_IsItemHovered::ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_IsItemHovered, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'ITM_HazPlusItem_C_IsItemHovered::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_IsItemHovered, CallFunc_IsHovered_ReturnValue) == 0x000010, "Member 'ITM_HazPlusItem_C_IsItemHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_IsItemHovered, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ITM_HazPlusItem_C_IsItemHovered::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.SetData
// 0x0018 (0x0018 - 0x0000)
struct ITM_HazPlusItem_C_SetData final
{
public:
	struct FDifficultyMutatorItem                 InMutator;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          InIs_Unlocked;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HazPlusItem_C_SetData) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_SetData");
static_assert(sizeof(ITM_HazPlusItem_C_SetData) == 0x000018, "Wrong size on ITM_HazPlusItem_C_SetData");
static_assert(offsetof(ITM_HazPlusItem_C_SetData, InMutator) == 0x000000, "Member 'ITM_HazPlusItem_C_SetData::InMutator' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_SetData, InIs_Unlocked) == 0x000010, "Member 'ITM_HazPlusItem_C_SetData::InIs_Unlocked' has a wrong offset!");

// Function ITM_HazPlusItem.ITM_HazPlusItem_C.GetAmountFromManager
// 0x0058 (0x0058 - 0x0000)
struct ITM_HazPlusItem_C_GetAmountFromManager final
{
public:
	int32                                         OutAmount;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDifficultyManager*                     CallFunc_GetDifficultyManager_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameDifficulty                        CallFunc_GetCurrentGameDifficulty_ReturnValue;     // 0x0020(0x0018)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDifficultyMutatorItem                 CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HazPlusItem_C_GetAmountFromManager) == 0x000008, "Wrong alignment on ITM_HazPlusItem_C_GetAmountFromManager");
static_assert(sizeof(ITM_HazPlusItem_C_GetAmountFromManager) == 0x000058, "Wrong size on ITM_HazPlusItem_C_GetAmountFromManager");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, OutAmount) == 0x000000, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::OutAmount' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, CallFunc_GetFSDGameState_ReturnValue) == 0x000010, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, CallFunc_GetDifficultyManager_ReturnValue) == 0x000018, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::CallFunc_GetDifficultyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, CallFunc_GetCurrentGameDifficulty_ReturnValue) == 0x000020, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::CallFunc_GetCurrentGameDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, CallFunc_Array_Get_Item) == 0x000040, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_HazPlusItem_C_GetAmountFromManager, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000051, "Member 'ITM_HazPlusItem_C_GetAmountFromManager::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

