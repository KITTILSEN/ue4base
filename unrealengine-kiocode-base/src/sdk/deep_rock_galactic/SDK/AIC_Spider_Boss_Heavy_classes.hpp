#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_Spider_Boss_Heavy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIC_Spider_classes.hpp"
#include "Spider_Boss_Heavy_State_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AIC_Spider_Boss_Heavy.AIC_Spider_Boss_Heavy_C
// 0x0070 (0x03E8 - 0x0378)
class AAIC_Spider_Boss_Heavy_C final : public AAIC_Spider_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AIC_Spider_Boss_Heavy_C;            // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Enraged;                                           // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4487[0x7];                                     // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class AFSDPawn*>                         SpawnedEnemies;                                    // 0x0388(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           HandleSafetyTimer;                                 // 0x03D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SentinelSafetyTime;                                // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool CanSpawnSentinels();
	void SpawnSentinelsBySafetyTimer();
	void StartSafetyTimer();
	void UpdateHasSpawned();
	void SetEnemyState(ESpider_Boss_Heavy_State State);
	void GetTankBoss(class AENE_Spider_Boss_Heavy_C** AsENE_Tank_Boss_Heavy);
	void ReceiveBeginPlay();
	void OnMessageBehaviorTreeEvent_Event_0(class FName Message);
	void SpawnEnemies();
	void OnEnemySpawned(class APawn* Enemy);
	void OnDeathEvent(class UHealthComponentBase* HealthComponent);
	void ReceivePossess(class APawn* PossessedPawn);
	void OnStateChanged_Event_0(ESpider_Boss_Heavy_State State);
	void ExecuteUbergraph_AIC_Spider_Boss_Heavy(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AIC_Spider_Boss_Heavy_C">();
	}
	static class AAIC_Spider_Boss_Heavy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAIC_Spider_Boss_Heavy_C>();
	}
};
static_assert(alignof(AAIC_Spider_Boss_Heavy_C) == 0x000008, "Wrong alignment on AAIC_Spider_Boss_Heavy_C");
static_assert(sizeof(AAIC_Spider_Boss_Heavy_C) == 0x0003E8, "Wrong size on AAIC_Spider_Boss_Heavy_C");
static_assert(offsetof(AAIC_Spider_Boss_Heavy_C, UberGraphFrame_AIC_Spider_Boss_Heavy_C) == 0x000378, "Member 'AAIC_Spider_Boss_Heavy_C::UberGraphFrame_AIC_Spider_Boss_Heavy_C' has a wrong offset!");
static_assert(offsetof(AAIC_Spider_Boss_Heavy_C, Enraged) == 0x000380, "Member 'AAIC_Spider_Boss_Heavy_C::Enraged' has a wrong offset!");
static_assert(offsetof(AAIC_Spider_Boss_Heavy_C, SpawnedEnemies) == 0x000388, "Member 'AAIC_Spider_Boss_Heavy_C::SpawnedEnemies' has a wrong offset!");
static_assert(offsetof(AAIC_Spider_Boss_Heavy_C, HandleSafetyTimer) == 0x0003D8, "Member 'AAIC_Spider_Boss_Heavy_C::HandleSafetyTimer' has a wrong offset!");
static_assert(offsetof(AAIC_Spider_Boss_Heavy_C, SentinelSafetyTime) == 0x0003E0, "Member 'AAIC_Spider_Boss_Heavy_C::SentinelSafetyTime' has a wrong offset!");

}

