#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_MouseKeyboard_KeyCapture

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.ExecuteUbergraph_Options_MouseKeyboard_KeyCapture
// 0x0310 (0x0310 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3218[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetCurrentBinding_ReturnValue;            // 0x0018(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0018)()
	struct FYesNoPromptSettings                   K2Node_MakeStruct_YesNoPromptSettings;             // 0x0120(0x0040)()
	class UYesNoPromptAction*                     CallFunc_PromptYesNo_ReturnValue;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomKeySetting                      CallFunc_FindCurrentSettingsForKey_OutSettings;    // 0x0168(0x0038)()
	bool                                          CallFunc_FindCurrentSettingsForKey_ReturnValue;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3219[0x1];                                     // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01A4(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_321A[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x01E0(0x0070)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321B[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0258(0x0070)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321C[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_InKey_1;                              // 0x02D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_InKey;                                // 0x02F0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_InCapturing;                          // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x030B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture) == 0x000008, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture) == 0x000310, "Wrong size on Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, EntryPoint) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::EntryPoint' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_GetCurrentBinding_ReturnValue) == 0x000018, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_GetCurrentBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_MakeArray_Array) == 0x000090, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_MakeStruct_YesNoPromptSettings) == 0x000120, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_MakeStruct_YesNoPromptSettings' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_PromptYesNo_ReturnValue) == 0x000160, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_PromptYesNo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_FindCurrentSettingsForKey_OutSettings) == 0x000168, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_FindCurrentSettingsForKey_OutSettings' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_FindCurrentSettingsForKey_ReturnValue) == 0x0001A0, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_FindCurrentSettingsForKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_IsValid_ReturnValue) == 0x0001A1, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001A2, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_Event_MyGeometry) == 0x0001A4, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_Event_MouseEvent_1) == 0x0001E0, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_Not_PreBool_ReturnValue) == 0x000250, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_Event_MouseEvent) == 0x000258, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_Event_IsDesignTime) == 0x0002C8, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x0002D0, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_Event_InKey_1) == 0x0002D8, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_Event_InKey_1' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_Event_InKey) == 0x0002F0, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_Event_InKey' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, K2Node_Event_InCapturing) == 0x000308, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::K2Node_Event_InCapturing' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_SelectVisibility_IsVisible) == 0x000309, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_SelectVisibility_VisibilityChanged) == 0x00030A, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture, CallFunc_SelectVisibility_New_Visibility) == 0x00030B, "Member 'Options_MouseKeyboard_KeyCapture_C_ExecuteUbergraph_Options_MouseKeyboard_KeyCapture::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.ReceiveCapturingChanged
// 0x0001 (0x0001 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_ReceiveCapturingChanged final
{
public:
	bool                                          InCapturing;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_ReceiveCapturingChanged) == 0x000001, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_ReceiveCapturingChanged");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_ReceiveCapturingChanged) == 0x000001, "Wrong size on Options_MouseKeyboard_KeyCapture_C_ReceiveCapturingChanged");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ReceiveCapturingChanged, InCapturing) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_ReceiveCapturingChanged::InCapturing' has a wrong offset!");

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.ReceiveKeyCaptured
// 0x0018 (0x0018 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_ReceiveKeyCaptured final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_ReceiveKeyCaptured) == 0x000008, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_ReceiveKeyCaptured");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_ReceiveKeyCaptured) == 0x000018, "Wrong size on Options_MouseKeyboard_KeyCapture_C_ReceiveKeyCaptured");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ReceiveKeyCaptured, InKey) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_ReceiveKeyCaptured::InKey' has a wrong offset!");

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.ReceiveKeyChanged
// 0x0018 (0x0018 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_ReceiveKeyChanged final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_ReceiveKeyChanged) == 0x000008, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_ReceiveKeyChanged");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_ReceiveKeyChanged) == 0x000018, "Wrong size on Options_MouseKeyboard_KeyCapture_C_ReceiveKeyChanged");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_ReceiveKeyChanged, InKey) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_ReceiveKeyChanged::InKey' has a wrong offset!");

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_PreConstruct) == 0x000001, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_PreConstruct");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_PreConstruct) == 0x000001, "Wrong size on Options_MouseKeyboard_KeyCapture_C_PreConstruct");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_OnMouseLeave) == 0x000008, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_OnMouseLeave");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_OnMouseLeave) == 0x000070, "Wrong size on Options_MouseKeyboard_KeyCapture_C_OnMouseLeave");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_OnMouseEnter) == 0x000008, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_OnMouseEnter");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_OnMouseEnter) == 0x0000A8, "Wrong size on Options_MouseKeyboard_KeyCapture_C_OnMouseEnter");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'Options_MouseKeyboard_KeyCapture_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.UpdateKeyInfo
// 0x0030 (0x0030 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0018(0x0018)()
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo) == 0x000008, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo) == 0x000030, "Wrong size on Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo, Key) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo::Key' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000018, "Member 'Options_MouseKeyboard_KeyCapture_C_UpdateKeyInfo::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");

// Function Options_MouseKeyboard_KeyCapture.Options_MouseKeyboard_KeyCapture_C.UpdateClearButton
// 0x0006 (0x0006 - 0x0000)
struct Options_MouseKeyboard_KeyCapture_C_UpdateClearButton final
{
public:
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_MouseKeyboard_KeyCapture_C_UpdateClearButton) == 0x000001, "Wrong alignment on Options_MouseKeyboard_KeyCapture_C_UpdateClearButton");
static_assert(sizeof(Options_MouseKeyboard_KeyCapture_C_UpdateClearButton) == 0x000006, "Wrong size on Options_MouseKeyboard_KeyCapture_C_UpdateClearButton");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_UpdateClearButton, CallFunc_IsHovered_ReturnValue) == 0x000000, "Member 'Options_MouseKeyboard_KeyCapture_C_UpdateClearButton::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_UpdateClearButton, CallFunc_Key_IsValid_ReturnValue) == 0x000001, "Member 'Options_MouseKeyboard_KeyCapture_C_UpdateClearButton::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_UpdateClearButton, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Options_MouseKeyboard_KeyCapture_C_UpdateClearButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_UpdateClearButton, CallFunc_SelectVisibility_IsVisible) == 0x000003, "Member 'Options_MouseKeyboard_KeyCapture_C_UpdateClearButton::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_UpdateClearButton, CallFunc_SelectVisibility_VisibilityChanged) == 0x000004, "Member 'Options_MouseKeyboard_KeyCapture_C_UpdateClearButton::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(Options_MouseKeyboard_KeyCapture_C_UpdateClearButton, CallFunc_SelectVisibility_New_Visibility) == 0x000005, "Member 'Options_MouseKeyboard_KeyCapture_C_UpdateClearButton::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

}

