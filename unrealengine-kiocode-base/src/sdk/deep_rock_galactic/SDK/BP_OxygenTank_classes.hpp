#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OxygenTank

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OxygenTank.BP_OxygenTank_C
// 0x0030 (0x0250 - 0x0220)
class ABP_OxygenTank_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   FrontPlane;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Screen_005;                                     // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GasCanister_air_Mule1;                           // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_GasCanister;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void OnOxygenActivationChanged_Event_0(bool IsActive);
	void ExecuteUbergraph_BP_OxygenTank(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OxygenTank_C">();
	}
	static class ABP_OxygenTank_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OxygenTank_C>();
	}
};
static_assert(alignof(ABP_OxygenTank_C) == 0x000008, "Wrong alignment on ABP_OxygenTank_C");
static_assert(sizeof(ABP_OxygenTank_C) == 0x000250, "Wrong size on ABP_OxygenTank_C");
static_assert(offsetof(ABP_OxygenTank_C, UberGraphFrame) == 0x000220, "Member 'ABP_OxygenTank_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_OxygenTank_C, FrontPlane) == 0x000228, "Member 'ABP_OxygenTank_C::FrontPlane' has a wrong offset!");
static_assert(offsetof(ABP_OxygenTank_C, SM_Screen_005) == 0x000230, "Member 'ABP_OxygenTank_C::SM_Screen_005' has a wrong offset!");
static_assert(offsetof(ABP_OxygenTank_C, P_GasCanister_air_Mule1) == 0x000238, "Member 'ABP_OxygenTank_C::P_GasCanister_air_Mule1' has a wrong offset!");
static_assert(offsetof(ABP_OxygenTank_C, SM_GasCanister) == 0x000240, "Member 'ABP_OxygenTank_C::SM_GasCanister' has a wrong offset!");
static_assert(offsetof(ABP_OxygenTank_C, DefaultSceneRoot) == 0x000248, "Member 'ABP_OxygenTank_C::DefaultSceneRoot' has a wrong offset!");

}

