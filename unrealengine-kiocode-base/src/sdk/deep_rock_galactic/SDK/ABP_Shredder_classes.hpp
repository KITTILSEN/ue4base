#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Shredder

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Shredder.ABP_Shredder_C
// 0x0810 (0x0B70 - 0x0360)
class UABP_Shredder_C final : public UShredderAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0398(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0458(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0480(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0500(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0530(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x05B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05E0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0660(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0690(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0710(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0740(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x07F0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x08B8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0958(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x09D8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0AA0(0x0080)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0B20(0x0050)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_Shredder(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Shredder_C">();
	}
	static class UABP_Shredder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Shredder_C>();
	}
};
static_assert(alignof(UABP_Shredder_C) == 0x000010, "Wrong alignment on UABP_Shredder_C");
static_assert(sizeof(UABP_Shredder_C) == 0x000B70, "Wrong size on UABP_Shredder_C");
static_assert(offsetof(UABP_Shredder_C, UberGraphFrame) == 0x000360, "Member 'UABP_Shredder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_Root) == 0x000368, "Member 'UABP_Shredder_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_Slot) == 0x000398, "Member 'UABP_Shredder_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_TransitionResult_3) == 0x0003E0, "Member 'UABP_Shredder_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_TransitionResult_2) == 0x000408, "Member 'UABP_Shredder_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_TransitionResult_1) == 0x000430, "Member 'UABP_Shredder_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_TransitionResult) == 0x000458, "Member 'UABP_Shredder_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_SequencePlayer_5) == 0x000480, "Member 'UABP_Shredder_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_StateResult_3) == 0x000500, "Member 'UABP_Shredder_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_SequencePlayer_4) == 0x000530, "Member 'UABP_Shredder_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_StateResult_2) == 0x0005B0, "Member 'UABP_Shredder_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_SequencePlayer_3) == 0x0005E0, "Member 'UABP_Shredder_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_StateResult_1) == 0x000660, "Member 'UABP_Shredder_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_SequencePlayer_2) == 0x000690, "Member 'UABP_Shredder_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_StateResult) == 0x000710, "Member 'UABP_Shredder_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_StateMachine) == 0x000740, "Member 'UABP_Shredder_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_ApplyAdditive_1) == 0x0007F0, "Member 'UABP_Shredder_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_BlendListByBool) == 0x0008B8, "Member 'UABP_Shredder_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_SequencePlayer_1) == 0x000958, "Member 'UABP_Shredder_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_ApplyAdditive) == 0x0009D8, "Member 'UABP_Shredder_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_SequencePlayer) == 0x000AA0, "Member 'UABP_Shredder_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Shredder_C, AnimGraphNode_SequenceEvaluator) == 0x000B20, "Member 'UABP_Shredder_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");

}

