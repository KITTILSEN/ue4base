#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MemorialScreenSpeedButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MemorialScreenSpeedButton.BP_MemorialScreenSpeedButton_C
// 0x0058 (0x0278 - 0x0220)
class ABP_MemorialScreenSpeedButton_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       UseSphere;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USingleUsableComponent*                 SingleUsable;                                      // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SearchRange;                                       // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B4[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MemorialWall_C*>             MyMemorialWalls;                                   // 0x0260(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          IsFast;                                            // 0x0270(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_BP_MemorialScreenSpeedButton(int32 EntryPoint);
	void BndEvt__SingleUsable_K2Node_ComponentBoundEvent_2_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
	void OnMatchStarted_Event_0();
	void ReceiveBeginPlay();
	void OnRep_IsFast();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MemorialScreenSpeedButton_C">();
	}
	static class ABP_MemorialScreenSpeedButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MemorialScreenSpeedButton_C>();
	}
};
static_assert(alignof(ABP_MemorialScreenSpeedButton_C) == 0x000008, "Wrong alignment on ABP_MemorialScreenSpeedButton_C");
static_assert(sizeof(ABP_MemorialScreenSpeedButton_C) == 0x000278, "Wrong size on ABP_MemorialScreenSpeedButton_C");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, UberGraphFrame) == 0x000220, "Member 'ABP_MemorialScreenSpeedButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, StaticMesh2) == 0x000228, "Member 'ABP_MemorialScreenSpeedButton_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, PointLight) == 0x000230, "Member 'ABP_MemorialScreenSpeedButton_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, UseSphere) == 0x000238, "Member 'ABP_MemorialScreenSpeedButton_C::UseSphere' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, SingleUsable) == 0x000240, "Member 'ABP_MemorialScreenSpeedButton_C::SingleUsable' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, StaticMesh1) == 0x000248, "Member 'ABP_MemorialScreenSpeedButton_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, DefaultSceneRoot) == 0x000250, "Member 'ABP_MemorialScreenSpeedButton_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, SearchRange) == 0x000258, "Member 'ABP_MemorialScreenSpeedButton_C::SearchRange' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, MyMemorialWalls) == 0x000260, "Member 'ABP_MemorialScreenSpeedButton_C::MyMemorialWalls' has a wrong offset!");
static_assert(offsetof(ABP_MemorialScreenSpeedButton_C, IsFast) == 0x000270, "Member 'ABP_MemorialScreenSpeedButton_C::IsFast' has a wrong offset!");

}

