#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_MutatorIcon

#include "Basic.hpp"

#include "ENUM_MenuColors_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_MutatorIcon.ITM_MutatorIcon_C
// 0x0050 (0x02B0 - 0x0260)
class UITM_MutatorIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 IconWarning;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               WarningSizer;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             MutatorIcon;                                       // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ENUM_MenuColors                               Color;                                             // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_49D3[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Size;                                              // 0x0284(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_49D4[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ToolTip;                                           // 0x0290(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UBasic_ToolTip_C*                       WarningToolTip;                                    // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ITM_MutatorIcon(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_MutatorIcon_C">();
	}
	static class UITM_MutatorIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_MutatorIcon_C>();
	}
};
static_assert(alignof(UITM_MutatorIcon_C) == 0x000008, "Wrong alignment on UITM_MutatorIcon_C");
static_assert(sizeof(UITM_MutatorIcon_C) == 0x0002B0, "Wrong size on UITM_MutatorIcon_C");
static_assert(offsetof(UITM_MutatorIcon_C, UberGraphFrame) == 0x000260, "Member 'UITM_MutatorIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_MutatorIcon_C, IconWarning) == 0x000268, "Member 'UITM_MutatorIcon_C::IconWarning' has a wrong offset!");
static_assert(offsetof(UITM_MutatorIcon_C, WarningSizer) == 0x000270, "Member 'UITM_MutatorIcon_C::WarningSizer' has a wrong offset!");
static_assert(offsetof(UITM_MutatorIcon_C, MutatorIcon) == 0x000278, "Member 'UITM_MutatorIcon_C::MutatorIcon' has a wrong offset!");
static_assert(offsetof(UITM_MutatorIcon_C, Color) == 0x000280, "Member 'UITM_MutatorIcon_C::Color' has a wrong offset!");
static_assert(offsetof(UITM_MutatorIcon_C, Size) == 0x000284, "Member 'UITM_MutatorIcon_C::Size' has a wrong offset!");
static_assert(offsetof(UITM_MutatorIcon_C, ToolTip) == 0x000290, "Member 'UITM_MutatorIcon_C::ToolTip' has a wrong offset!");
static_assert(offsetof(UITM_MutatorIcon_C, WarningToolTip) == 0x0002A8, "Member 'UITM_MutatorIcon_C::WarningToolTip' has a wrong offset!");

}

