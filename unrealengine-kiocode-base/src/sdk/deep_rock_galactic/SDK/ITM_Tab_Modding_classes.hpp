#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Tab_Modding

#include "Basic.hpp"

#include "SimpleUGC_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "ENUM_ModPendingStatus_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_Tab_Modding.ITM_Tab_Modding_C
// 0x0190 (0x03F0 - 0x0260)
class UITM_Tab_Modding_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_ButtonScalable2_C*               ApplyButton;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ApplyCancelBox;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Menu_ColorBar_C*                 Basic_Menu_ColorBar;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBlurBackground_C*                      BlurBackground;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ButtonTermsAndConditions;                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ButtonScalable2_C*               CancelButton;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           DependenciesLoading;                               // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ModdingProgressBar_C*               DependenciesProgressBar;                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DisclaimerLabel;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           InstalledBox;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ButtonScalable2_C*               InstallNewModsButton;                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ButtonScalable2_C*               InstallNewModsButtonCenter;                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_Modding_LoadoutSelection_C*        ITM_Modding_LoadoutSelection;                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Label_C*                         LBL_ModCount;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LockBorder;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MainOverlay;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           NoModsBox;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NoModsInstalledLabel;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PendingBox;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBar;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USetting_Modding_CheckVersion_C*        Setting_CheckVersion;                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_BoolUserSetting_C*               Setting_CompactView;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USetting_ShowSandboxLabel_C*            Setting_ShowSandboxNotification;                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Settings_Box;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Modding_SortBy_C*                   SortByBox;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      TermsOfServiceThrobber;                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         TextTermsAndConditionsBlocked;                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           WaitBox;                                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUGCPackage*>                    ModsPendingInstall;                                // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUGCPackage*>                    ModsPendingUninstall;                              // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class UITM_PendingMod_C*> WidgetsPendingInstall;                             // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FTimerHandle                           RefreshWaitHandle;                                 // 0x03B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CompactView;                                       // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EPackageSortField                             SortField;                                         // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SortAscending;                                     // 0x03C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42DE[0x5];                                     // 0x03C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UITM_Mod_C*>                     ModWidgetsDueForUpdate;                            // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UITM_Mod_C*                             ModWidgetDueForUpdate;                             // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOutstandingDependencyRequests;                  // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DependencyRequestsProgress;                        // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DependencyProgressTimer;                           // 0x03E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ITM_Tab_Modding(int32 EntryPoint);
	void OnShouldRemoveDependencyProgress();
	void OnModioRequestHandled(EModioRequestType RequestType);
	void BndEvt__ITM_Tab_Modding_ITM_Modding_LoadoutSelection_K2Node_ComponentBoundEvent_8_OnSlotLoaded__DelegateSignature();
	void OnModActivationChanged(class UITM_Mod_C* ManipulatedModItem);
	void UpdateButtonsAndCounter();
	void BndEvt__CancelButton_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature();
	void BndEvt__SortByBox_K2Node_ComponentBoundEvent_6_OnEnableDisableAll__DelegateSignature(bool InEnableAll);
	void BndEvt__SortByBox_K2Node_ComponentBoundEvent_4_OnSortByChanged__DelegateSignature(EPackageSortField InField, bool InAscending);
	void BndEvt__UserSetting_CompactView_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature(bool IsChecked);
	void RefreshModUI();
	void RefreshInstallModsButton();
	void OnModDownloadFinished(const class FString& ModName, const class FString& ModId);
	void OnModManagementChanged(bool Enabled);
	void BndEvt__InstallNewModsButtonCenter_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void ConstructModUI();
	void BndEvt__ButtonTermsAndConditions_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__InstallNewModsButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void BndEvt__ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void Destruct();
	void Construct();
	void OnSuccess_DA32360A4EE3DEB5BB1F39BA00736B96();
	void OnFailure_DA32360A4EE3DEB5BB1F39BA00736B96();
	void Yes_EC976CB74898DAEE8DC237B1445BDAB0();
	void No_EC976CB74898DAEE8DC237B1445BDAB0();
	void Yes_EC976CB74898DAEE8DC237B1C9A04A9B();
	void No_EC976CB74898DAEE8DC237B1C9A04A9B();
	void CheckTermsAndConditions(bool* Accepted);
	void OnTermsAndConditionAnswered(bool Agree);
	void On_Fetched_Terms_and_Conditions(class UModioTermsWrapper* Terms);
	void GetPendingModStatus(class FText* ModStatus);
	void JoinWithTitle(const class FText& InTitle, TArray<class FString>& Install, class FString* OutResult);
	void OnDownloadExtractMods(const class FString& Param_Name, const TArray<class FString>& ModsPendingDownload, bool Downloading, int32 Progress, int32 Total);
	void GetOrCreatePendingInstallWidget(const class FString& InModName, ENUM_ModPendingStatus InPendingStatus, class UITM_PendingMod_C** OutWidget);
	void SetInteractability();
	void SetCompactMode(bool Param_CompactView);
	void UpdateModCounter();
	void OnModOverlayClosed(const class FString& LastURL);
	void ReorderInstalledMods(EPackageSortField InField, bool InAscending);
	void RemovePendingRequests();
	void RefreshApplyCancelButtons();
	void IsUGCSubsystemAndRegistryValid(bool* IsValid);
	void GatherChangedMods();
	void ApplyChangedMods();
	void GetModSlotStatusText(class FText* ModSlotStatus);
	const class FText GetTermsOfUseAcesssText();
	void Should_Modding_Menu_be_Enabled(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_Tab_Modding_C">();
	}
	static class UITM_Tab_Modding_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_Tab_Modding_C>();
	}
};
static_assert(alignof(UITM_Tab_Modding_C) == 0x000008, "Wrong alignment on UITM_Tab_Modding_C");
static_assert(sizeof(UITM_Tab_Modding_C) == 0x0003F0, "Wrong size on UITM_Tab_Modding_C");
static_assert(offsetof(UITM_Tab_Modding_C, UberGraphFrame) == 0x000260, "Member 'UITM_Tab_Modding_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ApplyButton) == 0x000268, "Member 'UITM_Tab_Modding_C::ApplyButton' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ApplyCancelBox) == 0x000270, "Member 'UITM_Tab_Modding_C::ApplyCancelBox' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, Basic_Menu_ColorBar) == 0x000278, "Member 'UITM_Tab_Modding_C::Basic_Menu_ColorBar' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, BlurBackground) == 0x000280, "Member 'UITM_Tab_Modding_C::BlurBackground' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ButtonTermsAndConditions) == 0x000288, "Member 'UITM_Tab_Modding_C::ButtonTermsAndConditions' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, CancelButton) == 0x000290, "Member 'UITM_Tab_Modding_C::CancelButton' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, DependenciesLoading) == 0x000298, "Member 'UITM_Tab_Modding_C::DependenciesLoading' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, DependenciesProgressBar) == 0x0002A0, "Member 'UITM_Tab_Modding_C::DependenciesProgressBar' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, DisclaimerLabel) == 0x0002A8, "Member 'UITM_Tab_Modding_C::DisclaimerLabel' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, InstalledBox) == 0x0002B0, "Member 'UITM_Tab_Modding_C::InstalledBox' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, InstallNewModsButton) == 0x0002B8, "Member 'UITM_Tab_Modding_C::InstallNewModsButton' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, InstallNewModsButtonCenter) == 0x0002C0, "Member 'UITM_Tab_Modding_C::InstallNewModsButtonCenter' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ITM_Modding_LoadoutSelection) == 0x0002C8, "Member 'UITM_Tab_Modding_C::ITM_Modding_LoadoutSelection' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, LBL_ModCount) == 0x0002D0, "Member 'UITM_Tab_Modding_C::LBL_ModCount' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, LockBorder) == 0x0002D8, "Member 'UITM_Tab_Modding_C::LockBorder' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, MainOverlay) == 0x0002E0, "Member 'UITM_Tab_Modding_C::MainOverlay' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, NoModsBox) == 0x0002E8, "Member 'UITM_Tab_Modding_C::NoModsBox' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, NoModsInstalledLabel) == 0x0002F0, "Member 'UITM_Tab_Modding_C::NoModsInstalledLabel' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, PendingBox) == 0x0002F8, "Member 'UITM_Tab_Modding_C::PendingBox' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ScrollBar) == 0x000300, "Member 'UITM_Tab_Modding_C::ScrollBar' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, Setting_CheckVersion) == 0x000308, "Member 'UITM_Tab_Modding_C::Setting_CheckVersion' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, Setting_CompactView) == 0x000310, "Member 'UITM_Tab_Modding_C::Setting_CompactView' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, Setting_ShowSandboxNotification) == 0x000318, "Member 'UITM_Tab_Modding_C::Setting_ShowSandboxNotification' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, Settings_Box) == 0x000320, "Member 'UITM_Tab_Modding_C::Settings_Box' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, SortByBox) == 0x000328, "Member 'UITM_Tab_Modding_C::SortByBox' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, TermsOfServiceThrobber) == 0x000330, "Member 'UITM_Tab_Modding_C::TermsOfServiceThrobber' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, TextTermsAndConditionsBlocked) == 0x000338, "Member 'UITM_Tab_Modding_C::TextTermsAndConditionsBlocked' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, WaitBox) == 0x000340, "Member 'UITM_Tab_Modding_C::WaitBox' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ModsPendingInstall) == 0x000348, "Member 'UITM_Tab_Modding_C::ModsPendingInstall' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ModsPendingUninstall) == 0x000358, "Member 'UITM_Tab_Modding_C::ModsPendingUninstall' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, WidgetsPendingInstall) == 0x000368, "Member 'UITM_Tab_Modding_C::WidgetsPendingInstall' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, RefreshWaitHandle) == 0x0003B8, "Member 'UITM_Tab_Modding_C::RefreshWaitHandle' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, CompactView) == 0x0003C0, "Member 'UITM_Tab_Modding_C::CompactView' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, SortField) == 0x0003C1, "Member 'UITM_Tab_Modding_C::SortField' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, SortAscending) == 0x0003C2, "Member 'UITM_Tab_Modding_C::SortAscending' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ModWidgetsDueForUpdate) == 0x0003C8, "Member 'UITM_Tab_Modding_C::ModWidgetsDueForUpdate' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, ModWidgetDueForUpdate) == 0x0003D8, "Member 'UITM_Tab_Modding_C::ModWidgetDueForUpdate' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, NumOutstandingDependencyRequests) == 0x0003E0, "Member 'UITM_Tab_Modding_C::NumOutstandingDependencyRequests' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, DependencyRequestsProgress) == 0x0003E4, "Member 'UITM_Tab_Modding_C::DependencyRequestsProgress' has a wrong offset!");
static_assert(offsetof(UITM_Tab_Modding_C, DependencyProgressTimer) == 0x0003E8, "Member 'UITM_Tab_Modding_C::DependencyProgressTimer' has a wrong offset!");

}

