#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sign_MemorialUnlock

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Sign_MemorialUnlock.Sign_MemorialUnlock_C.ExecuteUbergraph_Sign_MemorialUnlock
// 0x0020 (0x0020 - 0x0000)
struct Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextField_SeeThrough_C*                K2Node_DynamicCast_AsText_Field_See_Through;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock) == 0x000008, "Wrong alignment on Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock");
static_assert(sizeof(Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock) == 0x000020, "Wrong size on Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock");
static_assert(offsetof(Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock, EntryPoint) == 0x000000, "Member 'Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000008, "Member 'Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock, K2Node_DynamicCast_AsText_Field_See_Through) == 0x000010, "Member 'Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock::K2Node_DynamicCast_AsText_Field_See_Through' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Sign_MemorialUnlock_C_ExecuteUbergraph_Sign_MemorialUnlock::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Sign_MemorialUnlock.Sign_MemorialUnlock_C.UserConstructionScript
// 0x0130 (0x0130 - 0x0000)
struct Sign_MemorialUnlock_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CB9[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CBA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0080(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0118(0x0018)()
};
static_assert(alignof(Sign_MemorialUnlock_C_UserConstructionScript) == 0x000008, "Wrong alignment on Sign_MemorialUnlock_C_UserConstructionScript");
static_assert(sizeof(Sign_MemorialUnlock_C_UserConstructionScript) == 0x000130, "Wrong size on Sign_MemorialUnlock_C_UserConstructionScript");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, Temp_bool_Variable_1) == 0x000001, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, CallFunc_TextToUpper_ReturnValue) == 0x000008, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, Temp_bool_Variable_2) == 0x000020, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, K2Node_Select_Default) == 0x000028, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, CallFunc_TextToUpper_ReturnValue_1) == 0x000080, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000098, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x0000F0, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, CallFunc_Format_ReturnValue) == 0x000100, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sign_MemorialUnlock_C_UserConstructionScript, K2Node_Select_Default_2) == 0x000118, "Member 'Sign_MemorialUnlock_C_UserConstructionScript::K2Node_Select_Default_2' has a wrong offset!");

}

