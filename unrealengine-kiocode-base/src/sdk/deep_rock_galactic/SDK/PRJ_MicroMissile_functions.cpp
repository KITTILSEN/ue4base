#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PRJ_MicroMissile

#include "Basic.hpp"

#include "PRJ_MicroMissile_classes.hpp"
#include "PRJ_MicroMissile_parameters.hpp"


namespace SDK
{

// Function PRJ_MicroMissile.PRJ_MicroMissile_C.StopMissile
// (Public, BlueprintCallable, BlueprintEvent)

void APRJ_MicroMissile_C::StopMissile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "StopMissile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.IncreaseDamage
// (Public, BlueprintCallable, BlueprintEvent)

void APRJ_MicroMissile_C::IncreaseDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "IncreaseDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void APRJ_MicroMissile_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void APRJ_MicroMissile_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.UnstableFuelMixUpdate
// (BlueprintCallable, BlueprintEvent)

void APRJ_MicroMissile_C::UnstableFuelMixUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "UnstableFuelMixUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.StartLightIntensityIncrease
// (BlueprintCallable, BlueprintEvent)

void APRJ_MicroMissile_C::StartLightIntensityIncrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "StartLightIntensityIncrease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.StartBlink
// (BlueprintCallable, BlueprintEvent)

void APRJ_MicroMissile_C::StartBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "StartBlink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.OnUpgradeElementAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UProjectileUpgradeElement*        Element                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APRJ_MicroMissile_C::OnUpgradeElementAdded(class UProjectileUpgradeElement* Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "OnUpgradeElementAdded");

	Params::PRJ_MicroMissile_C_OnUpgradeElementAdded Parms{};

	Parms.Element = Element;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.TurnUpLightIndicator
// (BlueprintCallable, BlueprintEvent)

void APRJ_MicroMissile_C::TurnUpLightIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "TurnUpLightIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.OnInitialized
// (Event, Public, BlueprintEvent)

void APRJ_MicroMissile_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.CountSeconds
// (BlueprintCallable, BlueprintEvent)

void APRJ_MicroMissile_C::CountSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "CountSeconds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.Explode
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APRJ_MicroMissile_C::Explode(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "Explode");

	Params::PRJ_MicroMissile_C_Explode Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.Impact
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APRJ_MicroMissile_C::Impact(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "Impact");

	Params::PRJ_MicroMissile_C_Impact Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.OnImpacted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    PredictedImpact                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APRJ_MicroMissile_C::OnImpacted(bool PredictedImpact, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "OnImpacted");

	Params::PRJ_MicroMissile_C_OnImpacted Parms{};

	Parms.PredictedImpact = PredictedImpact;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.KillMissile
// (BlueprintCallable, BlueprintEvent)

void APRJ_MicroMissile_C::KillMissile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "KillMissile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PRJ_MicroMissile.PRJ_MicroMissile_C.ExecuteUbergraph_PRJ_MicroMissile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APRJ_MicroMissile_C::ExecuteUbergraph_PRJ_MicroMissile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PRJ_MicroMissile_C", "ExecuteUbergraph_PRJ_MicroMissile");

	Params::PRJ_MicroMissile_C_ExecuteUbergraph_PRJ_MicroMissile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

