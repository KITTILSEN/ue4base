#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ForgeConsole

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ForgeConsole.BP_ForgeConsole_C.OnWindowCreated
// 0x0008 (0x0008 - 0x0000)
struct BP_ForgeConsole_C_OnWindowCreated final
{
public:
	class UWindowWidget*                          WindowWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ForgeConsole_C_OnWindowCreated) == 0x000008, "Wrong alignment on BP_ForgeConsole_C_OnWindowCreated");
static_assert(sizeof(BP_ForgeConsole_C_OnWindowCreated) == 0x000008, "Wrong size on BP_ForgeConsole_C_OnWindowCreated");
static_assert(offsetof(BP_ForgeConsole_C_OnWindowCreated, WindowWidget) == 0x000000, "Member 'BP_ForgeConsole_C_OnWindowCreated::WindowWidget' has a wrong offset!");

// Function BP_ForgeConsole.BP_ForgeConsole_C.ExecuteUbergraph_BP_ForgeConsole
// 0x0060 (0x0060 - 0x0000)
struct BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWindowWidget*                          K2Node_Event_WindowWidget;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UMENU_Forge_C*                          K2Node_DynamicCast_AsMENU_Forge;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D8B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameData*                              CallFunc_GetFSDGameData_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInItemUINotificationSet_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D8C[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UConsoleScreen_Base_C*                  K2Node_DynamicCast_AsConsole_Screen_Base;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole) == 0x000008, "Wrong alignment on BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole");
static_assert(sizeof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole) == 0x000060, "Wrong size on BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, EntryPoint) == 0x000000, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, K2Node_Event_WindowWidget) == 0x000008, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::K2Node_Event_WindowWidget' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, K2Node_DynamicCast_AsMENU_Forge) == 0x000020, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::K2Node_DynamicCast_AsMENU_Forge' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, CallFunc_GetFSDGameData_ReturnValue) == 0x000030, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::CallFunc_GetFSDGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, CallFunc_GetFSDSaveGame_ReturnValue) == 0x000038, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, CallFunc_IsInItemUINotificationSet_ReturnValue) == 0x000040, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::CallFunc_IsInItemUINotificationSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000048, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, K2Node_DynamicCast_AsConsole_Screen_Base) == 0x000050, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::K2Node_DynamicCast_AsConsole_Screen_Base' has a wrong offset!");
static_assert(offsetof(BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_ForgeConsole_C_ExecuteUbergraph_BP_ForgeConsole::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

