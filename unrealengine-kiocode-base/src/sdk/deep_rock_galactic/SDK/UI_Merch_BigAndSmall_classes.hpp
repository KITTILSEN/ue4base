#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Merch_BigAndSmall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UI_MerchEntry_Base_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Merch_BigAndSmall.UI_Merch_BigAndSmall_C
// 0x00B0 (0x0340 - 0x0290)
class UUI_Merch_BigAndSmall_C final : public UUI_MerchEntry_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimClick;                                         // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimHover;                                         // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBasic_Label_C*                         Description_Label;                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                EntryButton;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Image_C*                         Image_Big;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Image_C*                         Image_Hovered;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_MediaPlayer_C*                      Image_MediaPlayer;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Image_C*                         IMG_Shadow;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Big;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Small_Box;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x02E8(0x0018)(Edit, BlueprintVisible)
	class UTexture2D*                             BigImage;                                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture2D*>                     SmallImages;                                       // 0x0308(0x0010)(Edit, BlueprintVisible)
	class UBasic_Image_C*                         SmallImage;                                        // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmallImageWidth;                                   // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_UI_Merch_BigAndSmall_C;                      // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Big_Image_Width;                                   // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Small_Images_Spacing;                              // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFileMediaSource*                       Movie;                                             // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMediaPlayer*                           Target;                                            // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Merch_BigAndSmall(int32 EntryPoint);
	void BndEvt__UI_Merch_BigAndSmall_EntryButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_Merch_BigAndSmall_EntryButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_Merch_BigAndSmall_EntryButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void CreateSmallImages();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Merch_BigAndSmall_C">();
	}
	static class UUI_Merch_BigAndSmall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Merch_BigAndSmall_C>();
	}
};
static_assert(alignof(UUI_Merch_BigAndSmall_C) == 0x000008, "Wrong alignment on UUI_Merch_BigAndSmall_C");
static_assert(sizeof(UUI_Merch_BigAndSmall_C) == 0x000340, "Wrong size on UUI_Merch_BigAndSmall_C");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, UberGraphFrame) == 0x000290, "Member 'UUI_Merch_BigAndSmall_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, AnimClick) == 0x000298, "Member 'UUI_Merch_BigAndSmall_C::AnimClick' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, AnimHover) == 0x0002A0, "Member 'UUI_Merch_BigAndSmall_C::AnimHover' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Description_Label) == 0x0002A8, "Member 'UUI_Merch_BigAndSmall_C::Description_Label' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, EntryButton) == 0x0002B0, "Member 'UUI_Merch_BigAndSmall_C::EntryButton' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Image_Big) == 0x0002B8, "Member 'UUI_Merch_BigAndSmall_C::Image_Big' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Image_Hovered) == 0x0002C0, "Member 'UUI_Merch_BigAndSmall_C::Image_Hovered' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Image_MediaPlayer) == 0x0002C8, "Member 'UUI_Merch_BigAndSmall_C::Image_MediaPlayer' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, IMG_Shadow) == 0x0002D0, "Member 'UUI_Merch_BigAndSmall_C::IMG_Shadow' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Overlay_Big) == 0x0002D8, "Member 'UUI_Merch_BigAndSmall_C::Overlay_Big' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Small_Box) == 0x0002E0, "Member 'UUI_Merch_BigAndSmall_C::Small_Box' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Description) == 0x0002E8, "Member 'UUI_Merch_BigAndSmall_C::Description' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, BigImage) == 0x000300, "Member 'UUI_Merch_BigAndSmall_C::BigImage' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, SmallImages) == 0x000308, "Member 'UUI_Merch_BigAndSmall_C::SmallImages' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, SmallImage) == 0x000318, "Member 'UUI_Merch_BigAndSmall_C::SmallImage' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, SmallImageWidth) == 0x000320, "Member 'UUI_Merch_BigAndSmall_C::SmallImageWidth' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Index_UI_Merch_BigAndSmall_C) == 0x000324, "Member 'UUI_Merch_BigAndSmall_C::Index_UI_Merch_BigAndSmall_C' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Big_Image_Width) == 0x000328, "Member 'UUI_Merch_BigAndSmall_C::Big_Image_Width' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Small_Images_Spacing) == 0x00032C, "Member 'UUI_Merch_BigAndSmall_C::Small_Images_Spacing' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Movie) == 0x000330, "Member 'UUI_Merch_BigAndSmall_C::Movie' has a wrong offset!");
static_assert(offsetof(UUI_Merch_BigAndSmall_C, Target) == 0x000338, "Member 'UUI_Merch_BigAndSmall_C::Target' has a wrong offset!");

}

