#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerReadyBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PlayerReadyBox.PlayerReadyBox_C.SetReady
// 0x0001 (0x0001 - 0x0000)
struct PlayerReadyBox_C_SetReady final
{
public:
	bool                                          Param_IsReady;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerReadyBox_C_SetReady) == 0x000001, "Wrong alignment on PlayerReadyBox_C_SetReady");
static_assert(sizeof(PlayerReadyBox_C_SetReady) == 0x000001, "Wrong size on PlayerReadyBox_C_SetReady");
static_assert(offsetof(PlayerReadyBox_C_SetReady, Param_IsReady) == 0x000000, "Member 'PlayerReadyBox_C_SetReady::Param_IsReady' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.ReadyChanged
// 0x0001 (0x0001 - 0x0000)
struct PlayerReadyBox_C_ReadyChanged final
{
public:
	bool                                          Param_IsReady;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerReadyBox_C_ReadyChanged) == 0x000001, "Wrong alignment on PlayerReadyBox_C_ReadyChanged");
static_assert(sizeof(PlayerReadyBox_C_ReadyChanged) == 0x000001, "Wrong size on PlayerReadyBox_C_ReadyChanged");
static_assert(offsetof(PlayerReadyBox_C_ReadyChanged, Param_IsReady) == 0x000000, "Member 'PlayerReadyBox_C_ReadyChanged::Param_IsReady' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.Init
// 0x0008 (0x0008 - 0x0000)
struct PlayerReadyBox_C_Init final
{
public:
	class AFSDPlayerState*                        Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_Init) == 0x000008, "Wrong alignment on PlayerReadyBox_C_Init");
static_assert(sizeof(PlayerReadyBox_C_Init) == 0x000008, "Wrong size on PlayerReadyBox_C_Init");
static_assert(offsetof(PlayerReadyBox_C_Init, Param_PlayerState) == 0x000000, "Member 'PlayerReadyBox_C_Init::Param_PlayerState' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.NameChanged
// 0x0010 (0x0010 - 0x0000)
struct PlayerReadyBox_C_NameChanged final
{
public:
	class FString                                 NewName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_NameChanged) == 0x000008, "Wrong alignment on PlayerReadyBox_C_NameChanged");
static_assert(sizeof(PlayerReadyBox_C_NameChanged) == 0x000010, "Wrong size on PlayerReadyBox_C_NameChanged");
static_assert(offsetof(PlayerReadyBox_C_NameChanged, NewName) == 0x000000, "Member 'PlayerReadyBox_C_NameChanged::NewName' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.OnSelectedCharacterChanged
// 0x0008 (0x0008 - 0x0000)
struct PlayerReadyBox_C_OnSelectedCharacterChanged final
{
public:
	TSubclassOf<class APlayerCharacter>           NewCharacter;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_OnSelectedCharacterChanged) == 0x000008, "Wrong alignment on PlayerReadyBox_C_OnSelectedCharacterChanged");
static_assert(sizeof(PlayerReadyBox_C_OnSelectedCharacterChanged) == 0x000008, "Wrong size on PlayerReadyBox_C_OnSelectedCharacterChanged");
static_assert(offsetof(PlayerReadyBox_C_OnSelectedCharacterChanged, NewCharacter) == 0x000000, "Member 'PlayerReadyBox_C_OnSelectedCharacterChanged::NewCharacter' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.Tick
// 0x003C (0x003C - 0x0000)
struct PlayerReadyBox_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_Tick) == 0x000004, "Wrong alignment on PlayerReadyBox_C_Tick");
static_assert(sizeof(PlayerReadyBox_C_Tick) == 0x00003C, "Wrong size on PlayerReadyBox_C_Tick");
static_assert(offsetof(PlayerReadyBox_C_Tick, MyGeometry) == 0x000000, "Member 'PlayerReadyBox_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_Tick, InDeltaTime) == 0x000038, "Member 'PlayerReadyBox_C_Tick::InDeltaTime' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.FractionGenerated
// 0x0004 (0x0004 - 0x0000)
struct PlayerReadyBox_C_FractionGenerated final
{
public:
	float                                         Fraction;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_FractionGenerated) == 0x000004, "Wrong alignment on PlayerReadyBox_C_FractionGenerated");
static_assert(sizeof(PlayerReadyBox_C_FractionGenerated) == 0x000004, "Wrong size on PlayerReadyBox_C_FractionGenerated");
static_assert(offsetof(PlayerReadyBox_C_FractionGenerated, Fraction) == 0x000000, "Member 'PlayerReadyBox_C_FractionGenerated::Fraction' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.LevelGenState
// 0x0010 (0x0010 - 0x0000)
struct PlayerReadyBox_C_LevelGenState final
{
public:
	class FString                                 NewState;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_LevelGenState) == 0x000008, "Wrong alignment on PlayerReadyBox_C_LevelGenState");
static_assert(sizeof(PlayerReadyBox_C_LevelGenState) == 0x000010, "Wrong size on PlayerReadyBox_C_LevelGenState");
static_assert(offsetof(PlayerReadyBox_C_LevelGenState, NewState) == 0x000000, "Member 'PlayerReadyBox_C_LevelGenState::NewState' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.UpdateHeroInfo
// 0x0008 (0x0008 - 0x0000)
struct PlayerReadyBox_C_UpdateHeroInfo final
{
public:
	class UPlayerCharacterID*                     HeroClass;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_UpdateHeroInfo) == 0x000008, "Wrong alignment on PlayerReadyBox_C_UpdateHeroInfo");
static_assert(sizeof(PlayerReadyBox_C_UpdateHeroInfo) == 0x000008, "Wrong size on PlayerReadyBox_C_UpdateHeroInfo");
static_assert(offsetof(PlayerReadyBox_C_UpdateHeroInfo, HeroClass) == 0x000000, "Member 'PlayerReadyBox_C_UpdateHeroInfo::HeroClass' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.OnCharacterStatsChanged
// 0x0008 (0x0008 - 0x0000)
struct PlayerReadyBox_C_OnCharacterStatsChanged final
{
public:
	class AFSDPlayerState*                        Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_OnCharacterStatsChanged) == 0x000008, "Wrong alignment on PlayerReadyBox_C_OnCharacterStatsChanged");
static_assert(sizeof(PlayerReadyBox_C_OnCharacterStatsChanged) == 0x000008, "Wrong size on PlayerReadyBox_C_OnCharacterStatsChanged");
static_assert(offsetof(PlayerReadyBox_C_OnCharacterStatsChanged, Param_PlayerState) == 0x000000, "Member 'PlayerReadyBox_C_OnCharacterStatsChanged::Param_PlayerState' has a wrong offset!");

// Function PlayerReadyBox.PlayerReadyBox_C.ExecuteUbergraph_PlayerReadyBox
// 0x0108 (0x0108 - 0x0000)
struct PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& NewName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSubclassOf<class APlayerCharacter> NewCharacter)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float Fraction)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& NewState)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFSDPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_IsReady;                        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F50[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        K2Node_CustomEvent_PlayerState_1;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NewName;                        // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSubclassOf<class APlayerCharacter>           K2Node_CustomEvent_NewCharacter;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetCharacterID_ReturnValue;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F51[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x008C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Fraction;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F52[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_newState;                       // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     K2Node_CustomEvent_HeroClass;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_CustomEvent_PlayerState;                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue_1;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox) == 0x000008, "Wrong alignment on PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox");
static_assert(sizeof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox) == 0x000108, "Wrong size on PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, EntryPoint) == 0x000000, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CustomEvent_IsReady) == 0x000054, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CustomEvent_IsReady' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CustomEvent_PlayerState_1) == 0x000058, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CustomEvent_PlayerState_1' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CustomEvent_NewName) == 0x000060, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CustomEvent_NewName' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CustomEvent_NewCharacter) == 0x000070, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CustomEvent_NewCharacter' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, CallFunc_GetCharacterID_ReturnValue) == 0x000078, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::CallFunc_GetCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, CallFunc_GetSelectedCharacterID_ReturnValue) == 0x000080, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::CallFunc_GetSelectedCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_Event_MyGeometry) == 0x00008C, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_Event_InDeltaTime) == 0x0000C4, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CustomEvent_Fraction) == 0x0000C8, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CustomEvent_Fraction' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000CC, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, CallFunc_FMin_ReturnValue) == 0x0000D0, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CustomEvent_newState) == 0x0000D8, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CustomEvent_HeroClass) == 0x0000E8, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CustomEvent_HeroClass' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, K2Node_CustomEvent_PlayerState) == 0x0000F0, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, CallFunc_GetSelectedCharacterID_ReturnValue_1) == 0x0000F8, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::CallFunc_GetSelectedCharacterID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox, CallFunc_Lerp_ReturnValue) == 0x000100, "Member 'PlayerReadyBox_C_ExecuteUbergraph_PlayerReadyBox::CallFunc_Lerp_ReturnValue' has a wrong offset!");

}

