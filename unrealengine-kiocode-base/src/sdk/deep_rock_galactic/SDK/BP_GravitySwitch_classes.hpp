#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GravitySwitch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GravitySwitch.BP_GravitySwitch_C
// 0x0078 (0x0298 - 0x0220)
class ABP_GravitySwitch_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Alarm;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonSphere;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstantUsable*                         InstantUsable;                                     // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_LightIntensity_2CB0110A43F837100C1A68A2642737BF; // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_2CB0110A43F837100C1A68A2642737BF; // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE4[0x3];                                     // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Normal_Gravity;                                    // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Use;                                           // 0x026C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FE5[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyLight*                              SkyLight;                                          // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OriginalSkylightClour;                             // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalSkyLightIntensity;                         // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE6[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       User;                                              // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature(class APlayerCharacter* Param_User, EInputKeys Key);
	void ReceiveBeginPlay();
	void ChangeSkyLight();
	void ResetSkyLight();
	void ExecuteUbergraph_BP_GravitySwitch(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GravitySwitch_C">();
	}
	static class ABP_GravitySwitch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GravitySwitch_C>();
	}
};
static_assert(alignof(ABP_GravitySwitch_C) == 0x000008, "Wrong alignment on ABP_GravitySwitch_C");
static_assert(sizeof(ABP_GravitySwitch_C) == 0x000298, "Wrong size on ABP_GravitySwitch_C");
static_assert(offsetof(ABP_GravitySwitch_C, UberGraphFrame) == 0x000220, "Member 'ABP_GravitySwitch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, Widget) == 0x000228, "Member 'ABP_GravitySwitch_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, Alarm) == 0x000230, "Member 'ABP_GravitySwitch_C::Alarm' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, ButtonSphere) == 0x000238, "Member 'ABP_GravitySwitch_C::ButtonSphere' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, Box) == 0x000240, "Member 'ABP_GravitySwitch_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, InstantUsable) == 0x000248, "Member 'ABP_GravitySwitch_C::InstantUsable' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, DefaultSceneRoot) == 0x000250, "Member 'ABP_GravitySwitch_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, Timeline_0_LightIntensity_2CB0110A43F837100C1A68A2642737BF) == 0x000258, "Member 'ABP_GravitySwitch_C::Timeline_0_LightIntensity_2CB0110A43F837100C1A68A2642737BF' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, Timeline_0__Direction_2CB0110A43F837100C1A68A2642737BF) == 0x00025C, "Member 'ABP_GravitySwitch_C::Timeline_0__Direction_2CB0110A43F837100C1A68A2642737BF' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, Timeline_0) == 0x000260, "Member 'ABP_GravitySwitch_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, Normal_Gravity) == 0x000268, "Member 'ABP_GravitySwitch_C::Normal_Gravity' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, Can_Use) == 0x00026C, "Member 'ABP_GravitySwitch_C::Can_Use' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, SkyLight) == 0x000270, "Member 'ABP_GravitySwitch_C::SkyLight' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, OriginalSkylightClour) == 0x000278, "Member 'ABP_GravitySwitch_C::OriginalSkylightClour' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, OriginalSkyLightIntensity) == 0x000288, "Member 'ABP_GravitySwitch_C::OriginalSkyLightIntensity' has a wrong offset!");
static_assert(offsetof(ABP_GravitySwitch_C, User) == 0x000290, "Member 'ABP_GravitySwitch_C::User' has a wrong offset!");

}

