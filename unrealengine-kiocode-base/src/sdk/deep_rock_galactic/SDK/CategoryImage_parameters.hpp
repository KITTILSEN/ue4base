#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CategoryImage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "E_MM_ButtonStyle_structs.hpp"


namespace SDK::Params
{

// Function CategoryImage.CategoryImage_C.ExecuteUbergraph_CategoryImage
// 0x0078 (0x0078 - 0x0000)
struct CategoryImage_C_ExecuteUbergraph_CategoryImage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4352[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjectiveMissionIcon                  K2Node_CustomEvent_MissionIcon;                    // 0x0018(0x0018)(ConstParm, NoDestructor)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_Image;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_BackgroundColor;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_OptionalMaskedImage;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MM_ButtonStyle                              K2Node_CustomEvent_IsEnabled;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CategoryImage_C_ExecuteUbergraph_CategoryImage) == 0x000008, "Wrong alignment on CategoryImage_C_ExecuteUbergraph_CategoryImage");
static_assert(sizeof(CategoryImage_C_ExecuteUbergraph_CategoryImage) == 0x000078, "Wrong size on CategoryImage_C_ExecuteUbergraph_CategoryImage");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, EntryPoint) == 0x000000, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::EntryPoint' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, CallFunc_MenuColors_OutputColor) == 0x000004, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, K2Node_CustomEvent_MissionIcon) == 0x000018, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::K2Node_CustomEvent_MissionIcon' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, CallFunc_MenuColors_OutputColor_1) == 0x000030, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, K2Node_CustomEvent_Color) == 0x000040, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, K2Node_CustomEvent_Image) == 0x000050, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::K2Node_CustomEvent_Image' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, K2Node_CustomEvent_BackgroundColor) == 0x000058, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::K2Node_CustomEvent_BackgroundColor' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, K2Node_CustomEvent_OptionalMaskedImage) == 0x000068, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::K2Node_CustomEvent_OptionalMaskedImage' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, K2Node_CustomEvent_IsEnabled) == 0x000070, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000071, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_ExecuteUbergraph_CategoryImage, K2Node_Event_IsDesignTime) == 0x000072, "Member 'CategoryImage_C_ExecuteUbergraph_CategoryImage::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function CategoryImage.CategoryImage_C.SetStyle
// 0x0001 (0x0001 - 0x0000)
struct CategoryImage_C_SetStyle final
{
public:
	E_MM_ButtonStyle                              IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CategoryImage_C_SetStyle) == 0x000001, "Wrong alignment on CategoryImage_C_SetStyle");
static_assert(sizeof(CategoryImage_C_SetStyle) == 0x000001, "Wrong size on CategoryImage_C_SetStyle");
static_assert(offsetof(CategoryImage_C_SetStyle, IsEnabled) == 0x000000, "Member 'CategoryImage_C_SetStyle::IsEnabled' has a wrong offset!");

// Function CategoryImage.CategoryImage_C.SetMissionIcon
// 0x0018 (0x0018 - 0x0000)
struct CategoryImage_C_SetMissionIcon final
{
public:
	struct FObjectiveMissionIcon                  MissionIcon;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CategoryImage_C_SetMissionIcon) == 0x000008, "Wrong alignment on CategoryImage_C_SetMissionIcon");
static_assert(sizeof(CategoryImage_C_SetMissionIcon) == 0x000018, "Wrong size on CategoryImage_C_SetMissionIcon");
static_assert(offsetof(CategoryImage_C_SetMissionIcon, MissionIcon) == 0x000000, "Member 'CategoryImage_C_SetMissionIcon::MissionIcon' has a wrong offset!");

// Function CategoryImage.CategoryImage_C.SetOutlineColor
// 0x0010 (0x0010 - 0x0000)
struct CategoryImage_C_SetOutlineColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CategoryImage_C_SetOutlineColor) == 0x000004, "Wrong alignment on CategoryImage_C_SetOutlineColor");
static_assert(sizeof(CategoryImage_C_SetOutlineColor) == 0x000010, "Wrong size on CategoryImage_C_SetOutlineColor");
static_assert(offsetof(CategoryImage_C_SetOutlineColor, Color) == 0x000000, "Member 'CategoryImage_C_SetOutlineColor::Color' has a wrong offset!");

// Function CategoryImage.CategoryImage_C.SetImage
// 0x0020 (0x0020 - 0x0000)
struct CategoryImage_C_SetImage final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundColor;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             OptionalMaskedImage;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CategoryImage_C_SetImage) == 0x000008, "Wrong alignment on CategoryImage_C_SetImage");
static_assert(sizeof(CategoryImage_C_SetImage) == 0x000020, "Wrong size on CategoryImage_C_SetImage");
static_assert(offsetof(CategoryImage_C_SetImage, Image) == 0x000000, "Member 'CategoryImage_C_SetImage::Image' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_SetImage, BackgroundColor) == 0x000008, "Member 'CategoryImage_C_SetImage::BackgroundColor' has a wrong offset!");
static_assert(offsetof(CategoryImage_C_SetImage, OptionalMaskedImage) == 0x000018, "Member 'CategoryImage_C_SetImage::OptionalMaskedImage' has a wrong offset!");

// Function CategoryImage.CategoryImage_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CategoryImage_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CategoryImage_C_PreConstruct) == 0x000001, "Wrong alignment on CategoryImage_C_PreConstruct");
static_assert(sizeof(CategoryImage_C_PreConstruct) == 0x000001, "Wrong size on CategoryImage_C_PreConstruct");
static_assert(offsetof(CategoryImage_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CategoryImage_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

