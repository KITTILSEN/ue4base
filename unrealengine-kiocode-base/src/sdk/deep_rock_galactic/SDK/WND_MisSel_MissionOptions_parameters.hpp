#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WND_MisSel_MissionOptions

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EMissionSelection_Mode_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.UpdateHazPlusVisibility
// 0x0020 (0x0020 - 0x0000)
struct WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility final
{
public:
	struct FGameDifficulty                        CallFunc_GetSelectedDifficulty_ReturnValue;        // 0x0000(0x0018)()
	bool                                          CallFunc_IsUnlocked_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility");
static_assert(sizeof(WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility) == 0x000020, "Wrong size on WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility, CallFunc_GetSelectedDifficulty_ReturnValue) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility::CallFunc_GetSelectedDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility, CallFunc_IsUnlocked_ReturnValue) == 0x000018, "Member 'WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility::CallFunc_IsUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility, CallFunc_SelectVisibility_IsVisible) == 0x00001A, "Member 'WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility, CallFunc_SelectVisibility_VisibilityChanged) == 0x00001B, "Member 'WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility, CallFunc_SelectVisibility_New_Visibility) == 0x00001C, "Member 'WND_MisSel_MissionOptions_C_UpdateHazPlusVisibility::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.OnKeyUp
// 0x01E8 (0x01E8 - 0x0000)
struct WND_MisSel_MissionOptions_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_HandleKeyUp_OutHandled;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E00[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_HandleKeyUp_OutReply;                     // 0x0130(0x00B8)()
};
static_assert(alignof(WND_MisSel_MissionOptions_C_OnKeyUp) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_OnKeyUp");
static_assert(sizeof(WND_MisSel_MissionOptions_C_OnKeyUp) == 0x0001E8, "Wrong size on WND_MisSel_MissionOptions_C_OnKeyUp");
static_assert(offsetof(WND_MisSel_MissionOptions_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WND_MisSel_MissionOptions_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'WND_MisSel_MissionOptions_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_OnKeyUp, CallFunc_HandleKeyUp_OutHandled) == 0x000128, "Member 'WND_MisSel_MissionOptions_C_OnKeyUp::CallFunc_HandleKeyUp_OutHandled' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_OnKeyUp, CallFunc_HandleKeyUp_OutReply) == 0x000130, "Member 'WND_MisSel_MissionOptions_C_OnKeyUp::CallFunc_HandleKeyUp_OutReply' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.HandleKeyUp
// 0x03F0 (0x03F0 - 0x0000)
struct WND_MisSel_MissionOptions_C_HandleKeyUp final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          OutHandled;                                        // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E01[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            OutReply;                                          // 0x0040(0x00B8)(Parm, OutParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
	bool                                          CallFunc_IsOkMenu_ReturnValue;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E02[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x01B8(0x00B8)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue_1;               // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E03[0x5];                                     // 0x0273(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0278(0x00B8)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_Key_Down_OutHandled;               // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E04[0x6];                                     // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handle_Key_Down_OutReply;                 // 0x0338(0x00B8)()
};
static_assert(alignof(WND_MisSel_MissionOptions_C_HandleKeyUp) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_HandleKeyUp");
static_assert(sizeof(WND_MisSel_MissionOptions_C_HandleKeyUp) == 0x0003F0, "Wrong size on WND_MisSel_MissionOptions_C_HandleKeyUp");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, KeyEvent) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::KeyEvent' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, OutHandled) == 0x000038, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::OutHandled' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, OutReply) == 0x000040, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::OutReply' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_IsOkMenu_ReturnValue) == 0x0001B0, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_IsOkMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_GetIsEnabled_ReturnValue) == 0x0001B1, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_IsVisible_ReturnValue) == 0x0001B2, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_BooleanAND_ReturnValue) == 0x0001B3, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_Handled_ReturnValue_1) == 0x0001B8, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_BooleanAND_ReturnValue_1) == 0x000270, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_GetIsEnabled_ReturnValue_1) == 0x000271, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_GetIsEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_IsVisible_ReturnValue_1) == 0x000272, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000278, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_BooleanAND_ReturnValue_2) == 0x000330, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_Handle_Key_Down_OutHandled) == 0x000331, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_Handle_Key_Down_OutHandled' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleKeyUp, CallFunc_Handle_Key_Down_OutReply) == 0x000338, "Member 'WND_MisSel_MissionOptions_C_HandleKeyUp::CallFunc_Handle_Key_Down_OutReply' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.GetSelectedDifficulty
// 0x0058 (0x0058 - 0x0000)
struct WND_MisSel_MissionOptions_C_GetSelectedDifficulty final
{
public:
	struct FGameDifficulty                        ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	TArray<struct FDifficultyMutatorItem>         CallFunc_GetDifficultyMutators_OutMutators;        // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSelectedIndex_Index;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E05[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameData*                              CallFunc_GetFSDGameData_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDifficultySetting*                     CallFunc_GetDifficultySetting_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameDifficulty                        K2Node_MakeStruct_GameDifficulty;                  // 0x0040(0x0018)()
};
static_assert(alignof(WND_MisSel_MissionOptions_C_GetSelectedDifficulty) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_GetSelectedDifficulty");
static_assert(sizeof(WND_MisSel_MissionOptions_C_GetSelectedDifficulty) == 0x000058, "Wrong size on WND_MisSel_MissionOptions_C_GetSelectedDifficulty");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetSelectedDifficulty, ReturnValue) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_GetSelectedDifficulty::ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetSelectedDifficulty, CallFunc_GetDifficultyMutators_OutMutators) == 0x000018, "Member 'WND_MisSel_MissionOptions_C_GetSelectedDifficulty::CallFunc_GetDifficultyMutators_OutMutators' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetSelectedDifficulty, CallFunc_GetSelectedIndex_Index) == 0x000028, "Member 'WND_MisSel_MissionOptions_C_GetSelectedDifficulty::CallFunc_GetSelectedIndex_Index' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetSelectedDifficulty, CallFunc_GetFSDGameData_ReturnValue) == 0x000030, "Member 'WND_MisSel_MissionOptions_C_GetSelectedDifficulty::CallFunc_GetFSDGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetSelectedDifficulty, CallFunc_GetDifficultySetting_ReturnValue) == 0x000038, "Member 'WND_MisSel_MissionOptions_C_GetSelectedDifficulty::CallFunc_GetDifficultySetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetSelectedDifficulty, K2Node_MakeStruct_GameDifficulty) == 0x000040, "Member 'WND_MisSel_MissionOptions_C_GetSelectedDifficulty::K2Node_MakeStruct_GameDifficulty' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.UpdateConfirmButton
// 0x0058 (0x0058 - 0x0000)
struct WND_MisSel_MissionOptions_C_UpdateConfirmButton final
{
public:
	struct FGameDifficulty                        Difficulty;                                        // 0x0000(0x0018)(Edit, BlueprintVisible)
	class FText                                   UnlockText;                                        // 0x0018(0x0018)(Edit, BlueprintVisible)
	bool                                          IsLocked;                                          // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E06[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameDifficulty                        CallFunc_GetSelectedDifficulty_ReturnValue;        // 0x0038(0x0018)()
	bool                                          CallFunc_IsUnlocked_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_UpdateConfirmButton) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_UpdateConfirmButton");
static_assert(sizeof(WND_MisSel_MissionOptions_C_UpdateConfirmButton) == 0x000058, "Wrong size on WND_MisSel_MissionOptions_C_UpdateConfirmButton");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateConfirmButton, Difficulty) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_UpdateConfirmButton::Difficulty' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateConfirmButton, UnlockText) == 0x000018, "Member 'WND_MisSel_MissionOptions_C_UpdateConfirmButton::UnlockText' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateConfirmButton, IsLocked) == 0x000030, "Member 'WND_MisSel_MissionOptions_C_UpdateConfirmButton::IsLocked' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateConfirmButton, CallFunc_GetSelectedDifficulty_ReturnValue) == 0x000038, "Member 'WND_MisSel_MissionOptions_C_UpdateConfirmButton::CallFunc_GetSelectedDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateConfirmButton, CallFunc_IsUnlocked_ReturnValue) == 0x000050, "Member 'WND_MisSel_MissionOptions_C_UpdateConfirmButton::CallFunc_IsUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateConfirmButton, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'WND_MisSel_MissionOptions_C_UpdateConfirmButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.SetMissionLocked
// 0x0028 (0x0028 - 0x0000)
struct WND_MisSel_MissionOptions_C_SetMissionLocked final
{
public:
	bool                                          IsLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E07[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Explanation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_SetMissionLocked) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_SetMissionLocked");
static_assert(sizeof(WND_MisSel_MissionOptions_C_SetMissionLocked) == 0x000028, "Wrong size on WND_MisSel_MissionOptions_C_SetMissionLocked");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, IsLocked) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::IsLocked' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, Explanation) == 0x000008, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::Explanation' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, CallFunc_SelectVisibility_IsVisible) == 0x000020, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, CallFunc_SelectVisibility_VisibilityChanged) == 0x000021, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, CallFunc_SelectVisibility_New_Visibility) == 0x000022, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, CallFunc_SelectVisibility_IsVisible_1) == 0x000024, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x000025, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMissionLocked, CallFunc_SelectVisibility_New_Visibility_1) == 0x000026, "Member 'WND_MisSel_MissionOptions_C_SetMissionLocked::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.HandleModeChange
// 0x000D (0x000D - 0x0000)
struct WND_MisSel_MissionOptions_C_HandleModeChange final
{
public:
	EMissionSelection_Mode                        Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFSDTargetPlatform                            Temp_byte_Variable_6;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_HandleModeChange) == 0x000001, "Wrong alignment on WND_MisSel_MissionOptions_C_HandleModeChange");
static_assert(sizeof(WND_MisSel_MissionOptions_C_HandleModeChange) == 0x00000D, "Wrong size on WND_MisSel_MissionOptions_C_HandleModeChange");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Selection) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Selection' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Temp_byte_Variable) == 0x000001, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Temp_byte_Variable_1) == 0x000002, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Temp_byte_Variable_2) == 0x000003, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Temp_byte_Variable_3) == 0x000004, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Temp_bool_Variable) == 0x000005, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Temp_byte_Variable_4) == 0x000006, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Temp_byte_Variable_5) == 0x000007, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, Temp_byte_Variable_6) == 0x000009, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, CallFunc_FSDTargetPlatform_ReturnValue) == 0x00000A, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::CallFunc_FSDTargetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, K2Node_Select_Default) == 0x00000B, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_HandleModeChange, K2Node_Select_Default_1) == 0x00000C, "Member 'WND_MisSel_MissionOptions_C_HandleModeChange::K2Node_Select_Default_1' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.GetPassword
// 0x0040 (0x0040 - 0x0000)
struct WND_MisSel_MissionOptions_C_GetPassword final
{
public:
	class FText                                   Password;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          HasPassword;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E08[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPassword_Password;                     // 0x0020(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_GetPassword) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_GetPassword");
static_assert(sizeof(WND_MisSel_MissionOptions_C_GetPassword) == 0x000040, "Wrong size on WND_MisSel_MissionOptions_C_GetPassword");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetPassword, Password) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_GetPassword::Password' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetPassword, HasPassword) == 0x000018, "Member 'WND_MisSel_MissionOptions_C_GetPassword::HasPassword' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetPassword, CallFunc_GetPassword_Password) == 0x000020, "Member 'WND_MisSel_MissionOptions_C_GetPassword::CallFunc_GetPassword_Password' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetPassword, CallFunc_TextIsEmpty_ReturnValue) == 0x000038, "Member 'WND_MisSel_MissionOptions_C_GetPassword::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_GetPassword, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'WND_MisSel_MissionOptions_C_GetPassword::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.IsFriendsOnly
// 0x0001 (0x0001 - 0x0000)
struct WND_MisSel_MissionOptions_C_IsFriendsOnly final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_IsFriendsOnly) == 0x000001, "Wrong alignment on WND_MisSel_MissionOptions_C_IsFriendsOnly");
static_assert(sizeof(WND_MisSel_MissionOptions_C_IsFriendsOnly) == 0x000001, "Wrong size on WND_MisSel_MissionOptions_C_IsFriendsOnly");
static_assert(offsetof(WND_MisSel_MissionOptions_C_IsFriendsOnly, ReturnValue) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_IsFriendsOnly::ReturnValue' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.UpdateHazardBonus
// 0x00F8 (0x00F8 - 0x0000)
struct WND_MisSel_MissionOptions_C_UpdateHazardBonus final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E09[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class UGameData*                              CallFunc_GetFSDGameData_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_Index;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E0A[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDifficultySetting*                     CallFunc_GetDifficultySetting_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentHazardBonus_OutBonus;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E0B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0048(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00E0(0x0018)()
};
static_assert(alignof(WND_MisSel_MissionOptions_C_UpdateHazardBonus) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_UpdateHazardBonus");
static_assert(sizeof(WND_MisSel_MissionOptions_C_UpdateHazardBonus) == 0x0000F8, "Wrong size on WND_MisSel_MissionOptions_C_UpdateHazardBonus");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, Temp_bool_Variable) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, Temp_text_Variable) == 0x000008, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_GetFSDGameData_ReturnValue) == 0x000020, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_GetFSDGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_GetSelectedIndex_Index) == 0x000028, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_GetSelectedIndex_Index' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_GetDifficultySetting_ReturnValue) == 0x000030, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_GetDifficultySetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_GetCurrentHazardBonus_OutBonus) == 0x000038, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_GetCurrentHazardBonus_OutBonus' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_Conv_FloatToText_ReturnValue) == 0x000048, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, K2Node_MakeArray_Array) == 0x0000A0, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, K2Node_Select_Default) == 0x0000C8, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_UpdateHazardBonus, CallFunc_TextToUpper_ReturnValue) == 0x0000E0, "Member 'WND_MisSel_MissionOptions_C_UpdateHazardBonus::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WND_MisSel_MissionOptions_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_PreConstruct) == 0x000001, "Wrong alignment on WND_MisSel_MissionOptions_C_PreConstruct");
static_assert(sizeof(WND_MisSel_MissionOptions_C_PreConstruct) == 0x000001, "Wrong size on WND_MisSel_MissionOptions_C_PreConstruct");
static_assert(offsetof(WND_MisSel_MissionOptions_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.ShowMode
// 0x0001 (0x0001 - 0x0000)
struct WND_MisSel_MissionOptions_C_ShowMode final
{
public:
	EMissionSelection_Mode                        Param_Mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_ShowMode) == 0x000001, "Wrong alignment on WND_MisSel_MissionOptions_C_ShowMode");
static_assert(sizeof(WND_MisSel_MissionOptions_C_ShowMode) == 0x000001, "Wrong size on WND_MisSel_MissionOptions_C_ShowMode");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ShowMode, Param_Mode) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_ShowMode::Param_Mode' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.SetMission
// 0x0008 (0x0008 - 0x0000)
struct WND_MisSel_MissionOptions_C_SetMission final
{
public:
	class UGeneratedMission*                      Param_Mission;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_SetMission) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_SetMission");
static_assert(sizeof(WND_MisSel_MissionOptions_C_SetMission) == 0x000008, "Wrong size on WND_MisSel_MissionOptions_C_SetMission");
static_assert(offsetof(WND_MisSel_MissionOptions_C_SetMission, Param_Mission) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_SetMission::Param_Mission' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature");
static_assert(sizeof(WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature) == 0x000018, "Wrong size on WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature");
static_assert(offsetof(WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature, Text) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_13_OnTextChanged__DelegateSignature::Text' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature");
static_assert(sizeof(WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature) == 0x000020, "Wrong size on WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature");
static_assert(offsetof(WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature, Text) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature, CommitMethod) == 0x000018, "Member 'WND_MisSel_MissionOptions_C_BndEvt__Basic_InputField_K2Node_ComponentBoundEvent_14_OnTextCommitted__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Param_Index;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature) == 0x000020, "Wrong size on WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature, Value) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature, Param_Index) == 0x000018, "Member 'WND_MisSel_MissionOptions_C_BndEvt__WorkEnvironmentSelector_K2Node_ComponentBoundEvent_27_OnSelectionChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.ExecuteUbergraph_WND_MisSel_MissionOptions
// 0x02F8 (0x02F8 - 0x0000)
struct WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E0C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	EFSDTargetPlatform                            Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            Temp_byte_Variable_6;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFSDInputSource                               Temp_byte_Variable_7;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E0D[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInActiveSession_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E0E[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue_1;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInActiveSession_ReturnValue_1;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E0F[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4E10[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue_1;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_2;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionSelection_Mode                        K2Node_CustomEvent_Mode;                           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E11[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E12[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D8(0x0028)()
	class UGeneratedMission*                      K2Node_CustomEvent_Mission;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E13[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0110(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E14[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0130(0x0018)()
	uint8                                         K2Node_ComponentBoundEvent_CommitMethod;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E15[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Value;                  // 0x0150(0x0018)()
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E16[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameData*                              CallFunc_GetFSDGameData_ReturnValue;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDifficultySetting*                     CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E17[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_Option_Index;                         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E18[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue_2;             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerController*                   K2Node_DynamicCast_AsFSDPlayer_Controller;         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E19[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDifficultyManager*                     CallFunc_GetDifficultyManager_ReturnValue;         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_Index;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1A[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameDifficulty                        CallFunc_GetCurrentGameDifficulty_ReturnValue;     // 0x01C8(0x0018)(ConstParm)
	struct FGameDifficulty                        CallFunc_GetSelectedDifficulty_ReturnValue;        // 0x01E0(0x0018)()
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0210(0x0028)()
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue_3;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDifficultyManager*                     CallFunc_GetDifficultyManager_ReturnValue_1;       // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_Index_1;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Should_Show_Online_Restriction_Should_Show; // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetVisibilityIf_IsVisible;                // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1B[0x2];                                     // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_3;         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0258(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0268(0x0018)()
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue_1;          // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1C[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDInputSource                               CallFunc_GetInputSource_ReturnValue;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1D[0x3];                                     // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_3;            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDifficultyMutatorItem>         CallFunc_GetDifficultyMutators_OutMutators;        // 0x02A0(0x0010)(ReferenceParm)
	TArray<struct FDifficultyMutatorItem>         CallFunc_GetDifficultyMutators_OutMutators_1;      // 0x02B0(0x0010)(ReferenceParm)
	struct FGameDifficulty                        CallFunc_SelectGameDifficulty_ReturnValue;         // 0x02C0(0x0018)(ConstParm)
	struct FGameDifficulty                        CallFunc_SelectGameDifficulty_ReturnValue_1;       // 0x02D8(0x0018)(ConstParm)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions");
static_assert(sizeof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions) == 0x0002F8, "Wrong size on WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, EntryPoint) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::EntryPoint' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000008, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_byte_Variable) == 0x000020, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_byte_Variable_1) == 0x000021, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_byte_Variable_2) == 0x000022, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_byte_Variable_3) == 0x000023, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_byte_Variable_4) == 0x000024, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_byte_Variable_5) == 0x000025, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_MakeLiteralByte_ReturnValue) == 0x000026, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_byte_Variable_6) == 0x000027, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_bool_Variable) == 0x000029, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_bool_Variable_1) == 0x00002A, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_bool_Variable_2) == 0x00002B, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_bool_Variable_3) == 0x00002C, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_bool_Variable_4) == 0x00002D, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_byte_Variable_7) == 0x00002E, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_bool_Variable_5) == 0x00002F, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_bool_Variable_6) == 0x000030, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_bool_Variable_7) == 0x000031, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_DestroySession_ReturnValue) == 0x000058, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_IsInActiveSession_ReturnValue) == 0x000060, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_IsInActiveSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameMode_ReturnValue) == 0x000068, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x000070, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000078, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_DestroySession_ReturnValue_1) == 0x000080, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_DestroySession_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_IsInActiveSession_ReturnValue_1) == 0x000088, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_IsInActiveSession_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameMode_ReturnValue_1) == 0x0000A0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameInstance_ReturnValue_2) == 0x0000A8, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_Event_IsDesignTime) == 0x0000B0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_CustomEvent_Mode) == 0x0000B1, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_CustomEvent_Mode' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_MenuColors_OutputColor) == 0x0000B4, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_MenuColors_OutputColor_1) == 0x0000C4, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_MakeStruct_SlateColor) == 0x0000D8, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_CustomEvent_Mission) == 0x000100, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_CustomEvent_Mission' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_FSDTargetPlatform_ReturnValue) == 0x000108, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_FSDTargetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_ComponentBoundEvent_Text_1) == 0x000110, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_Select_Default) == 0x000128, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_ComponentBoundEvent_Text) == 0x000130, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_ComponentBoundEvent_CommitMethod) == 0x000148, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_ComponentBoundEvent_Value) == 0x000150, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_ComponentBoundEvent_Index) == 0x000168, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameData_ReturnValue) == 0x000170, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_Array_Get_Item) == 0x000178, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_Add_Option_Index) == 0x000188, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_Add_Option_Index' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_SwitchEnum_CmpSuccess) == 0x00018C, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x000190, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameMode_ReturnValue_2) == 0x000198, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_DynamicCast_AsFSDPlayer_Controller) == 0x0001A0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_DynamicCast_AsFSDPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetDifficultyManager_ReturnValue) == 0x0001B0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetDifficultyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetSelectedIndex_Index) == 0x0001B8, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetSelectedIndex_Index' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameState_ReturnValue) == 0x0001C0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetCurrentGameDifficulty_ReturnValue) == 0x0001C8, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetCurrentGameDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetSelectedDifficulty_ReturnValue) == 0x0001E0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetSelectedDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDSaveGame_ReturnValue) == 0x0001F8, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_MenuColors_OutputColor_2) == 0x000200, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_MakeStruct_SlateColor_1) == 0x000210, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameMode_ReturnValue_3) == 0x000238, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetDifficultyManager_ReturnValue_1) == 0x000240, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetDifficultyManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetSelectedIndex_Index_1) == 0x000248, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetSelectedIndex_Index_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_Should_Show_Online_Restriction_Should_Show) == 0x00024C, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_Should_Show_Online_Restriction_Should_Show' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_SetVisibilityIf_IsVisible) == 0x00024D, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_SetVisibilityIf_IsVisible' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameInstance_ReturnValue_3) == 0x000250, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_CreateDelegate_OutputDelegate_3) == 0x000258, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_Conv_StringToText_ReturnValue) == 0x000268, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_FSDTargetPlatform_ReturnValue_1) == 0x000280, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_FSDTargetPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000288, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetInputSource_ReturnValue) == 0x000290, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetInputSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_Select_Default_1) == 0x000291, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, K2Node_Select_Default_2) == 0x000292, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_BooleanOR_ReturnValue) == 0x000293, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_BooleanOR_ReturnValue_1) == 0x000294, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetOwningPlayer_ReturnValue_3) == 0x000298, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetOwningPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetDifficultyMutators_OutMutators) == 0x0002A0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetDifficultyMutators_OutMutators' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_GetDifficultyMutators_OutMutators_1) == 0x0002B0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_GetDifficultyMutators_OutMutators_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_SelectGameDifficulty_ReturnValue) == 0x0002C0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_SelectGameDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_SelectGameDifficulty_ReturnValue_1) == 0x0002D8, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_SelectGameDifficulty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_IsLocked_ReturnValue) == 0x0002F0, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions, CallFunc_IsValid_ReturnValue_2) == 0x0002F1, "Member 'WND_MisSel_MissionOptions_C_ExecuteUbergraph_WND_MisSel_MissionOptions::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WND_MisSel_MissionOptions.WND_MisSel_MissionOptions_C.OnDifficultyChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature final
{
public:
	struct FGameDifficulty                        NewDifficulty;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UGeneratedMission*                      Param_Mission;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature) == 0x000008, "Wrong alignment on WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature");
static_assert(sizeof(WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature) == 0x000020, "Wrong size on WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature");
static_assert(offsetof(WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature, NewDifficulty) == 0x000000, "Member 'WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature::NewDifficulty' has a wrong offset!");
static_assert(offsetof(WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature, Param_Mission) == 0x000018, "Member 'WND_MisSel_MissionOptions_C_OnDifficultyChanged__DelegateSignature::Param_Mission' has a wrong offset!");

}

