#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grenade_WallSaw

#include "Basic.hpp"

#include "ITM_Grenade_Base_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Grenade_WallSaw.Grenade_WallSaw_C
// 0x0020 (0x0380 - 0x0360)
class AGrenade_WallSaw_C final : public AITM_Grenade_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Grenade_WallSaw_C;                  // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                InitialDirection;                                  // 0x0368(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5081[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WallSawSpawnable;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetDurationBeforeExpiration(float* Param_Duration);
	void ReceiveBeginPlay();
	void OnExploded();
	void ExecuteUbergraph_Grenade_WallSaw(int32 EntryPoint);

	void AddGearStateEntries(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Grenade_WallSaw_C">();
	}
	static class AGrenade_WallSaw_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenade_WallSaw_C>();
	}
};
static_assert(alignof(AGrenade_WallSaw_C) == 0x000008, "Wrong alignment on AGrenade_WallSaw_C");
static_assert(sizeof(AGrenade_WallSaw_C) == 0x000380, "Wrong size on AGrenade_WallSaw_C");
static_assert(offsetof(AGrenade_WallSaw_C, UberGraphFrame_Grenade_WallSaw_C) == 0x000360, "Member 'AGrenade_WallSaw_C::UberGraphFrame_Grenade_WallSaw_C' has a wrong offset!");
static_assert(offsetof(AGrenade_WallSaw_C, InitialDirection) == 0x000368, "Member 'AGrenade_WallSaw_C::InitialDirection' has a wrong offset!");
static_assert(offsetof(AGrenade_WallSaw_C, WallSawSpawnable) == 0x000378, "Member 'AGrenade_WallSaw_C::WallSawSpawnable' has a wrong offset!");

}

