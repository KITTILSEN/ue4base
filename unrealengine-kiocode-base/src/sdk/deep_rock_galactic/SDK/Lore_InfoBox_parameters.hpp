#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lore_InfoBox

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Lore_InfoBox.Lore_InfoBox_C.ExecuteUbergraph_Lore_InfoBox
// 0x0098 (0x0098 - 0x0000)
struct Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_InColorAndOpacity;              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47E9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0030(0x0018)()
	struct FObjectiveMissionIcon                  K2Node_CustomEvent_Icon;                           // 0x0048(0x0018)(NoDestructor)
	class FText                                   K2Node_CustomEvent_GrayText;                       // 0x0060(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0078(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox) == 0x000008, "Wrong alignment on Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox");
static_assert(sizeof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox) == 0x000098, "Wrong size on Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, EntryPoint) == 0x000000, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, K2Node_CustomEvent_InColorAndOpacity) == 0x000004, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::K2Node_CustomEvent_InColorAndOpacity' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, K2Node_Event_IsDesignTime) == 0x000014, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, K2Node_CustomEvent_Text) == 0x000030, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, K2Node_CustomEvent_Icon) == 0x000048, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, K2Node_CustomEvent_GrayText) == 0x000060, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::K2Node_CustomEvent_GrayText' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, CallFunc_TextToUpper_ReturnValue_1) == 0x000078, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, CallFunc_TextIsEmpty_ReturnValue) == 0x000090, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000092, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'Lore_InfoBox_C_ExecuteUbergraph_Lore_InfoBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Lore_InfoBox.Lore_InfoBox_C.SetColor
// 0x0010 (0x0010 - 0x0000)
struct Lore_InfoBox_C_SetColor final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_InfoBox_C_SetColor) == 0x000004, "Wrong alignment on Lore_InfoBox_C_SetColor");
static_assert(sizeof(Lore_InfoBox_C_SetColor) == 0x000010, "Wrong size on Lore_InfoBox_C_SetColor");
static_assert(offsetof(Lore_InfoBox_C_SetColor, InColorAndOpacity) == 0x000000, "Member 'Lore_InfoBox_C_SetColor::InColorAndOpacity' has a wrong offset!");

// Function Lore_InfoBox.Lore_InfoBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Lore_InfoBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_InfoBox_C_PreConstruct) == 0x000001, "Wrong alignment on Lore_InfoBox_C_PreConstruct");
static_assert(sizeof(Lore_InfoBox_C_PreConstruct) == 0x000001, "Wrong size on Lore_InfoBox_C_PreConstruct");
static_assert(offsetof(Lore_InfoBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Lore_InfoBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Lore_InfoBox.Lore_InfoBox_C.SetData
// 0x0048 (0x0048 - 0x0000)
struct Lore_InfoBox_C_SetData final
{
public:
	class FText                                   Param_Text;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FObjectiveMissionIcon                  Param_Icon;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FText                                   Param_GrayText;                                    // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Lore_InfoBox_C_SetData) == 0x000008, "Wrong alignment on Lore_InfoBox_C_SetData");
static_assert(sizeof(Lore_InfoBox_C_SetData) == 0x000048, "Wrong size on Lore_InfoBox_C_SetData");
static_assert(offsetof(Lore_InfoBox_C_SetData, Param_Text) == 0x000000, "Member 'Lore_InfoBox_C_SetData::Param_Text' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_SetData, Param_Icon) == 0x000018, "Member 'Lore_InfoBox_C_SetData::Param_Icon' has a wrong offset!");
static_assert(offsetof(Lore_InfoBox_C_SetData, Param_GrayText) == 0x000030, "Member 'Lore_InfoBox_C_SetData::Param_GrayText' has a wrong offset!");

}

