#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_LineCutter

#include "Basic.hpp"

#include "WPN_LineCutter_classes.hpp"
#include "WPN_LineCutter_parameters.hpp"


namespace SDK
{

// Function WPN_LineCutter.WPN_LineCutter_C.Get Homing Target Location
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_LineCutter_C::Get_Homing_Target_Location(struct FVector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "Get Homing Target Location");

	Params::WPN_LineCutter_C_Get_Homing_Target_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);
}


// Function WPN_LineCutter.WPN_LineCutter_C.GetHomingIgnoreList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>                   OutTargets                                             (Parm, OutParm)

void AWPN_LineCutter_C::GetHomingIgnoreList(TArray<class AActor*>* OutTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "GetHomingIgnoreList");

	Params::WPN_LineCutter_C_GetHomingIgnoreList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutTargets != nullptr)
		*OutTargets = std::move(Parms.OutTargets);
}


// Function WPN_LineCutter.WPN_LineCutter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AWPN_LineCutter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_LineCutter.WPN_LineCutter_C.Flicker Brightness__FinishedFunc
// (BlueprintEvent)

void AWPN_LineCutter_C::Flicker_Brightness__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "Flicker Brightness__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_LineCutter.WPN_LineCutter_C.Flicker Brightness__UpdateFunc
// (BlueprintEvent)

void AWPN_LineCutter_C::Flicker_Brightness__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "Flicker Brightness__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_LineCutter.WPN_LineCutter_C.OnFireWhileLastProjectileAlive
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ALineCutterProjectile*            Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_LineCutter_C::OnFireWhileLastProjectileAlive(class ALineCutterProjectile* Projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "OnFireWhileLastProjectileAlive");

	Params::WPN_LineCutter_C_OnFireWhileLastProjectileAlive Parms{};

	Parms.Projectile = Projectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_LineCutter.WPN_LineCutter_C.BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AProjectileBase*                  Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_LineCutter_C::BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature(class AProjectileBase* Projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature");

	Params::WPN_LineCutter_C_BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature Parms{};

	Parms.Projectile = Projectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_LineCutter.WPN_LineCutter_C.UpdateHomingTarget
// (BlueprintCallable, BlueprintEvent)

void AWPN_LineCutter_C::UpdateHomingTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "UpdateHomingTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_LineCutter.WPN_LineCutter_C.StopHoming
// (BlueprintCallable, BlueprintEvent)

void AWPN_LineCutter_C::StopHoming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "StopHoming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_LineCutter.WPN_LineCutter_C.Server_SetHomingLocation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector_NetQuantize              HomingLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AWPN_LineCutter_C::Server_SetHomingLocation(const struct FVector_NetQuantize& HomingLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "Server_SetHomingLocation");

	Params::WPN_LineCutter_C_Server_SetHomingLocation Parms{};

	Parms.HomingLocation = std::move(HomingLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_LineCutter.WPN_LineCutter_C.OnHomingHit
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Result                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AWPN_LineCutter_C::OnHomingHit(const struct FHitResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "OnHomingHit");

	Params::WPN_LineCutter_C_OnHomingHit Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_LineCutter.WPN_LineCutter_C.RecieveStopUsing
// (Event, Protected, BlueprintEvent)

void AWPN_LineCutter_C::RecieveStopUsing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "RecieveStopUsing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_LineCutter.WPN_LineCutter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWPN_LineCutter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_LineCutter.WPN_LineCutter_C.Server_StopHoming
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AProjectile*                      InProjectile                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_LineCutter_C::Server_StopHoming(class AProjectile* InProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "Server_StopHoming");

	Params::WPN_LineCutter_C_Server_StopHoming Parms{};

	Parms.InProjectile = InProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_LineCutter.WPN_LineCutter_C.All_SetHomingLocation
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector_NetQuantize              InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AWPN_LineCutter_C::All_SetHomingLocation(const struct FVector_NetQuantize& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "All_SetHomingLocation");

	Params::WPN_LineCutter_C_All_SetHomingLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_LineCutter.WPN_LineCutter_C.All_StopHoming
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AProjectile*                      InProjectile                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_LineCutter_C::All_StopHoming(class AProjectile* InProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "All_StopHoming");

	Params::WPN_LineCutter_C_All_StopHoming Parms{};

	Parms.InProjectile = InProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_LineCutter.WPN_LineCutter_C.ExecuteUbergraph_WPN_LineCutter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_LineCutter_C::ExecuteUbergraph_WPN_LineCutter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "ExecuteUbergraph_WPN_LineCutter");

	Params::WPN_LineCutter_C_ExecuteUbergraph_WPN_LineCutter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_LineCutter.WPN_LineCutter_C.GetGearStatEntry
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState*                  PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGearStatEntry>           Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AWPN_LineCutter_C::GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_LineCutter_C", "GetGearStatEntry");

	Params::WPN_LineCutter_C_GetGearStatEntry Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Stats = std::move(Stats);

	UObject::ProcessEvent(Func, &Parms);

	Stats = std::move(Parms.Stats);
}

}

