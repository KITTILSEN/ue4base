#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LureTarget_HealthReadout

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LureTarget_HealthReadout.LureTarget_HealthReadout_C.SetText
// 0x0080 (0x0080 - 0x0000)
struct LureTarget_HealthReadout_C_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(LureTarget_HealthReadout_C_SetText) == 0x000008, "Wrong alignment on LureTarget_HealthReadout_C_SetText");
static_assert(sizeof(LureTarget_HealthReadout_C_SetText) == 0x000080, "Wrong size on LureTarget_HealthReadout_C_SetText");
static_assert(offsetof(LureTarget_HealthReadout_C_SetText, Text) == 0x000000, "Member 'LureTarget_HealthReadout_C_SetText::Text' has a wrong offset!");
static_assert(offsetof(LureTarget_HealthReadout_C_SetText, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'LureTarget_HealthReadout_C_SetText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(LureTarget_HealthReadout_C_SetText, K2Node_MakeArray_Array) == 0x000058, "Member 'LureTarget_HealthReadout_C_SetText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LureTarget_HealthReadout_C_SetText, CallFunc_Format_ReturnValue) == 0x000068, "Member 'LureTarget_HealthReadout_C_SetText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function LureTarget_HealthReadout.LureTarget_HealthReadout_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct LureTarget_HealthReadout_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LureTarget_HealthReadout_C_PreConstruct) == 0x000001, "Wrong alignment on LureTarget_HealthReadout_C_PreConstruct");
static_assert(sizeof(LureTarget_HealthReadout_C_PreConstruct) == 0x000001, "Wrong size on LureTarget_HealthReadout_C_PreConstruct");
static_assert(offsetof(LureTarget_HealthReadout_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'LureTarget_HealthReadout_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function LureTarget_HealthReadout.LureTarget_HealthReadout_C.ExecuteUbergraph_LureTarget_HealthReadout
// 0x0038 (0x0038 - 0x0000)
struct LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_306C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0018(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout) == 0x000008, "Wrong alignment on LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout");
static_assert(sizeof(LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout) == 0x000038, "Wrong size on LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout");
static_assert(offsetof(LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout, EntryPoint) == 0x000000, "Member 'LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout::EntryPoint' has a wrong offset!");
static_assert(offsetof(LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout, K2Node_MakeArray_Array) == 0x000008, "Member 'LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout, CallFunc_Format_ReturnValue) == 0x000018, "Member 'LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout, K2Node_Event_IsDesignTime) == 0x000030, "Member 'LureTarget_HealthReadout_C_ExecuteUbergraph_LureTarget_HealthReadout::K2Node_Event_IsDesignTime' has a wrong offset!");

}

