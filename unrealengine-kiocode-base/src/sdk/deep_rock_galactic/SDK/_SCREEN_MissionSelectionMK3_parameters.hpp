#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: _SCREEN_MissionSelectionMK3

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "EMissionSelection_Mode_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.SelectRandomMission
// 0x00C0 (0x00C0 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_SelectRandomMission final
{
public:
	TArray<class UGeneratedMission*>              Missions;                                          // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UITM_MisSel_Biome_C*                    BiomeWidget;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGeneratedMission*                      SelectedMission;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5109[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_SpaceRig_C*        CallFunc_GetController_AsBP_Player_Controller_Space_Rig; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_510A[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeneratedMission*                      CallFunc_Array_GetRandom_Item;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_510B[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_510C[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UITM_MisSel_MissionMapIcon_C*>   CallFunc_GetAllAllMissionSlots_Items1;             // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UITM_MisSel_MissionMapIcon_C*           CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_510D[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGeneratedMission*>              CallFunc_GetAvailableMissions_ReturnValue;         // 0x00A0(0x0010)(ReferenceParm)
	class UITM_MisSel_Biome_C*                    CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_SelectRandomMission");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission) == 0x0000C0, "Wrong size on _SCREEN_MissionSelectionMK3_C_SelectRandomMission");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, Missions) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::Missions' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, BiomeWidget) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::BiomeWidget' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, SelectedMission) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::SelectedMission' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, Temp_int_Loop_Counter_Variable) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, Temp_int_Array_Index_Variable) == 0x000028, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_GetController_AsBP_Player_Controller_Space_Rig) == 0x000038, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_GetController_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Array_RemoveItem_ReturnValue) == 0x000040, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_IsLocked_ReturnValue) == 0x000041, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Array_GetRandom_Item) == 0x000048, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Array_GetRandom_Item' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_IsValid_ReturnValue) == 0x000050, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, Temp_int_Array_Index_Variable_1) == 0x000078, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_GetAllAllMissionSlots_Items1) == 0x000080, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_GetAllAllMissionSlots_Items1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Array_Get_Item) == 0x000090, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00009D, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_GetAvailableMissions_ReturnValue) == 0x0000A0, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_GetAvailableMissions_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000BC, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_SelectRandomMission, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BD, "Member '_SCREEN_MissionSelectionMK3_C_SelectRandomMission::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.GetAvailableMissions
// 0x0048 (0x0048 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_GetAvailableMissions final
{
public:
	TArray<class UGeneratedMission*>              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionGenerationManager*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UGeneratedMission*>              CallFunc_GetAvailableMissions_ReturnValue;         // 0x0020(0x0010)(ReferenceParm)
	TArray<class UGeneratedMission*>              CallFunc_GetMissions_ReturnValue;                  // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_GetAvailableMissions) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_GetAvailableMissions");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_GetAvailableMissions) == 0x000048, "Wrong size on _SCREEN_MissionSelectionMK3_C_GetAvailableMissions");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableMissions, ReturnValue) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableMissions::ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableMissions, CallFunc_GetFSDGameState_ReturnValue) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableMissions::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableMissions, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableMissions::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableMissions, CallFunc_GetAvailableMissions_ReturnValue) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableMissions::CallFunc_GetAvailableMissions_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableMissions, CallFunc_GetMissions_ReturnValue) == 0x000030, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableMissions::CallFunc_GetMissions_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableMissions, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableMissions::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.HighlightChallenges
// 0x01C8 (0x01C8 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_HighlightChallenges final
{
public:
	TArray<class UObject*>                        AssetReferences;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ShouldHighlight;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_510E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonChallenge*                       Challenge;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_MisSel_Biome_C*                    MisSelectionBiome;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_510F[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5110[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5111[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5112[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5113[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIconOutlined_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UGeneratedMission*>              CallFunc_GetAvailableMissions_ReturnValue;         // 0x0088(0x0010)(ReferenceParm)
	TArray<class UGeneratedMission*>              CallFunc_GetAvailableMissions_ReturnValue_1;       // 0x0098(0x0010)(ReferenceParm)
	TArray<class UGeneratedMission*>              CallFunc_GetMissionsForBiome_Missions;             // 0x00A8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5114[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5115[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIconOutlined_ReturnValue_1;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UGeneratedMission*>              CallFunc_GetMissionsForBiome_Missions_1;           // 0x00D8(0x0010)(ReferenceParm)
	class UGeneratedMission*                      CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5116[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionWarning*                        CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5117[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5118[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGeneratedMission*>              CallFunc_GetMissionsForBiome_Missions_2;           // 0x0110(0x0010)(ReferenceParm)
	class UGeneratedMission*                      CallFunc_Array_Get_Item_2;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5119[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_MisSel_Biome_C*                    CallFunc_Array_Get_Item_3;                         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511A[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIconOutlined_ReturnValue_2;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetIconOutlined_ReturnValue_3;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511B[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item_4;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGeneratedMission*                      CallFunc_Array_Get_Item_5;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionStat*                           K2Node_DynamicCast_AsMission_Stat;                 // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511C[0x2];                                     // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511D[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionWarning*                        K2Node_DynamicCast_AsMission_Warning;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511E[0x6];                                     // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionTemplate*                       K2Node_DynamicCast_AsMission_Template;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511F[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBiome*                                 K2Node_DynamicCast_AsBiome;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5120[0x2];                                     // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5121[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_MisSel_Biome_C*                    CallFunc_Array_Get_Item_6;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_HighlightChallenges");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges) == 0x0001C8, "Wrong size on _SCREEN_MissionSelectionMK3_C_HighlightChallenges");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, AssetReferences) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::AssetReferences' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, ShouldHighlight) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::ShouldHighlight' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Challenge) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Challenge' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, MisSelectionBiome) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::MisSelectionBiome' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Loop_Counter_Variable) == 0x000028, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Array_Index_Variable) == 0x000040, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Array_Index_Variable_1) == 0x000044, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000050, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Array_Index_Variable_2) == 0x000054, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000059, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005A, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Loop_Counter_Variable_3) == 0x00005C, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Add_IntInt_ReturnValue_3) == 0x000060, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Array_Index_Variable_3) == 0x000064, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Loop_Counter_Variable_4) == 0x000068, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Add_IntInt_ReturnValue_4) == 0x00006C, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Loop_Counter_Variable_5) == 0x000070, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Add_IntInt_ReturnValue_5) == 0x000074, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Array_Index_Variable_4) == 0x000078, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetIconOutlined_ReturnValue) == 0x000080, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetIconOutlined_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetAvailableMissions_ReturnValue) == 0x000088, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetAvailableMissions_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetAvailableMissions_ReturnValue_1) == 0x000098, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetAvailableMissions_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetMissionsForBiome_Missions) == 0x0000A8, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetMissionsForBiome_Missions' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Loop_Counter_Variable_6) == 0x0000B8, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000C0, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_BooleanAND_ReturnValue) == 0x0000C5, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Array_Index_Variable_5) == 0x0000C8, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetIconOutlined_ReturnValue_1) == 0x0000D0, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetIconOutlined_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetMissionsForBiome_Missions_1) == 0x0000D8, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetMissionsForBiome_Missions_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Get_Item) == 0x0000E8, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Less_IntInt_ReturnValue_1) == 0x000100, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Length_ReturnValue_2) == 0x000104, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_BooleanAND_ReturnValue_1) == 0x000108, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Less_IntInt_ReturnValue_2) == 0x000109, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetMissionsForBiome_Missions_2) == 0x000110, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetMissionsForBiome_Missions_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Get_Item_2) == 0x000120, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Length_ReturnValue_3) == 0x000128, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Less_IntInt_ReturnValue_3) == 0x00012C, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_BooleanAND_ReturnValue_2) == 0x00012D, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Get_Item_3) == 0x000130, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Length_ReturnValue_4) == 0x000138, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Less_IntInt_ReturnValue_4) == 0x00013C, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetIconOutlined_ReturnValue_2) == 0x000140, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetIconOutlined_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_GetIconOutlined_ReturnValue_3) == 0x000148, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_GetIconOutlined_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_int_Array_Index_Variable_6) == 0x000150, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Get_Item_4) == 0x000158, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Get_Item_5) == 0x000160, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, K2Node_DynamicCast_AsMission_Stat) == 0x000168, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::K2Node_DynamicCast_AsMission_Stat' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, K2Node_DynamicCast_bSuccess) == 0x000170, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000171, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Length_ReturnValue_5) == 0x000174, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000178, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, K2Node_DynamicCast_AsMission_Warning) == 0x000180, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::K2Node_DynamicCast_AsMission_Warning' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000189, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, K2Node_DynamicCast_AsMission_Template) == 0x000190, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::K2Node_DynamicCast_AsMission_Template' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000199, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, K2Node_DynamicCast_AsBiome) == 0x0001A0, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::K2Node_DynamicCast_AsBiome' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, K2Node_DynamicCast_bSuccess_3) == 0x0001A8, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0001A9, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Length_ReturnValue_6) == 0x0001AC, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Less_IntInt_ReturnValue_5) == 0x0001B0, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_IsValid_ReturnValue) == 0x0001B1, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, Temp_bool_True_if_break_was_hit_Variable_3) == 0x0001B2, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001B3, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_BooleanAND_ReturnValue_3) == 0x0001B4, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Get_Item_6) == 0x0001B8, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Array_Length_ReturnValue_7) == 0x0001C0, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HighlightChallenges, CallFunc_Less_IntInt_ReturnValue_6) == 0x0001C4, "Member '_SCREEN_MissionSelectionMK3_C_HighlightChallenges::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.ClearServerListMissionRestrictions
// 0x0028 (0x0028 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_SpaceRig_C*        K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5122[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class U_MENU_ServerList_C*                    K2Node_DynamicCast_As_MENU_Server_List;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions) == 0x000028, "Wrong size on _SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions, K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions::K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions, K2Node_DynamicCast_bSuccess) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions, K2Node_DynamicCast_As_MENU_Server_List) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions::K2Node_DynamicCast_As_MENU_Server_List' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_ClearServerListMissionRestrictions::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.OnMouseButtonUp
// 0x02D8 (0x02D8 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0160(0x00B8)()
	bool                                          CallFunc_IsBackMenuMouse_ReturnValue;              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5123[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0220(0x00B8)()
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_OnMouseButtonUp");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp) == 0x0002D8, "Wrong size on _SCREEN_MissionSelectionMK3_C_OnMouseButtonUp");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member '_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member '_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x000160, "Member '_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp, CallFunc_IsBackMenuMouse_ReturnValue) == 0x000218, "Member '_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp::CallFunc_IsBackMenuMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000220, "Member '_SCREEN_MissionSelectionMK3_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.UpdateMapPan
// 0x0188 (0x0188 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_UpdateMapPan final
{
public:
	bool                                          SnapToMouse;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5124[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewLocalVar_1;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedFactor;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMissSelected;                                    // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5125[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              BG_OriginalOffset;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MaxPanDistance;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Diff;                                              // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5126[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_FSDGameUserSettings_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowUIAnimations_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5127[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue_1;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5128[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5129[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512A[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512B[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_1;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_3;     // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_4;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512C[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue;       // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_5;     // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_6;     // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampAxes2D_ReturnValue;                  // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_UpdateMapPan");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan) == 0x000188, "Wrong size on _SCREEN_MissionSelectionMK3_C_UpdateMapPan");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, SnapToMouse) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::SnapToMouse' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, NewLocalVar_1) == 0x000004, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, SpeedFactor) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::SpeedFactor' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, IsMissSelected) == 0x00000C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::IsMissSelected' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, BG_OriginalOffset) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::BG_OriginalOffset' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, MaxPanDistance) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::MaxPanDistance' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, Delta) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::Delta' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, Diff) == 0x000024, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::Diff' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, Temp_bool_Variable) == 0x00002C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000030, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000038, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_FSDGameUserSettings_ReturnValue) == 0x000040, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_FSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetShowUIAnimations_ReturnValue) == 0x000048, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetShowUIAnimations_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x00004C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetRealTimeSeconds_ReturnValue_1) == 0x000050, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetRealTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00005C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000064, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_FClamp_ReturnValue) == 0x000068, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_SelectFloat_ReturnValue) == 0x00006C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_SelectFloat_ReturnValue_1) == 0x000070, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_IsValid_ReturnValue) == 0x000074, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000078, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000080, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_BreakVector2D_X) == 0x000088, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_BreakVector2D_Y) == 0x00008C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000090, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_BreakVector2D_X_1) == 0x000098, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_BreakVector2D_Y_1) == 0x00009C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, K2Node_MakeStruct_Margin) == 0x0000A0, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_IsVisible_ReturnValue) == 0x0000B0, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000B8, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_VSize2D_ReturnValue) == 0x0000C0, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C4, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_BooleanOR_ReturnValue) == 0x0000C5, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Normal2D_ReturnValue) == 0x0000C8, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x0000D0, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_VSize2D_ReturnValue_1) == 0x0000D8, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000DC, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000E0, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_FClamp_ReturnValue_1) == 0x0000E8, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, K2Node_Select_Default) == 0x0000EC, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000F4, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_Vector2DFloat_ReturnValue_3) == 0x0000FC, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000104, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000108, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000110, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000114, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_Vector2DFloat_ReturnValue_4) == 0x000118, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_Vector2DFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetViewportSize_ReturnValue) == 0x000120, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_BreakVector2D_X_2) == 0x000128, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_BreakVector2D_Y_2) == 0x00012C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000130, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetPlayerController_ReturnValue) == 0x000138, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetMousePosition_LocationX) == 0x000140, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetMousePosition_LocationY) == 0x000144, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_GetMousePosition_ReturnValue) == 0x000148, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00014C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000150, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_MakeVector2D_ReturnValue) == 0x000154, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Subtract_Vector2DFloat_ReturnValue) == 0x00015C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Subtract_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_Vector2DFloat_ReturnValue_5) == 0x000164, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_Vector2DFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_Vector2DFloat_ReturnValue_6) == 0x00016C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_Vector2DFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_ClampAxes2D_ReturnValue) == 0x000174, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_ClampAxes2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_UpdateMapPan, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x00017C, "Member '_SCREEN_MissionSelectionMK3_C_UpdateMapPan::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.CheckForNewZones
// 0x0058 (0x0058 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_CheckForNewZones final
{
public:
	TArray<class UBiome*>                         NewLocalVar_0;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_MisSel_PlanetZone_C*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	TArray<class UBiome*>                         CallFunc_GetBiomes_ReturnValue;                    // 0x0040(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_CheckItemUINotification_HasNotification;  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_CheckForNewZones");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones) == 0x000058, "Wrong size on _SCREEN_MissionSelectionMK3_C_CheckForNewZones");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, NewLocalVar_0) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, Temp_int_Array_Index_Variable) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, Temp_int_Loop_Counter_Variable) == 0x000014, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, CallFunc_Array_Get_Item) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, K2Node_MakeArray_Array) == 0x000030, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, CallFunc_GetBiomes_ReturnValue) == 0x000040, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::CallFunc_GetBiomes_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_CheckForNewZones, CallFunc_CheckItemUINotification_HasNotification) == 0x000050, "Member '_SCREEN_MissionSelectionMK3_C_CheckForNewZones::CallFunc_CheckItemUINotification_HasNotification' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.GetAvailableBiomes
// 0x0088 (0x0088 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_GetAvailableBiomes final
{
public:
	TArray<class UITM_MisSel_Biome_C*>            AvailableBiomes1;                                  // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UITM_MisSel_Biome_C*>            AvailableBiomes;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGeneratedMission*>              CallFunc_GetAvailableMissions_ReturnValue;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512F[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5130[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeneratedMission*                      CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5131[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5132[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5133[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_MisSel_Biome_C*                    CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5134[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_GetAvailableBiomes");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes) == 0x000088, "Wrong size on _SCREEN_MissionSelectionMK3_C_GetAvailableBiomes");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, AvailableBiomes1) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::AvailableBiomes1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, AvailableBiomes) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::AvailableBiomes' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, Temp_int_Loop_Counter_Variable) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, Temp_int_Array_Index_Variable) == 0x000028, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_GetAvailableMissions_ReturnValue) == 0x000030, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_GetAvailableMissions_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, Temp_int_Array_Index_Variable_1) == 0x000048, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Array_Get_Item) == 0x000050, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Array_Get_Item_1) == 0x000070, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member '_SCREEN_MissionSelectionMK3_C_GetAvailableBiomes::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.GetMode
// 0x0001 (0x0001 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_GetMode final
{
public:
	EMissionSelection_Mode                        Mode;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_GetMode) == 0x000001, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_GetMode");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_GetMode) == 0x000001, "Wrong size on _SCREEN_MissionSelectionMK3_C_GetMode");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMode, Mode) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_GetMode::Mode' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.ShouldEnableQuickJoin
// 0x0028 (0x0028 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFSDTargetPlatform                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingOffline_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5135[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameModeSpaceRig*                   K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin) == 0x000028, "Wrong size on _SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, Show) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::Show' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, Temp_byte_Variable) == 0x000001, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, Temp_bool_Variable) == 0x000002, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, Temp_bool_Variable_1) == 0x000003, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, Temp_bool_Variable_2) == 0x000004, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, Temp_bool_Variable_3) == 0x000005, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, Temp_bool_Variable_4) == 0x000006, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, CallFunc_FSDTargetPlatform_ReturnValue) == 0x000007, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::CallFunc_FSDTargetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, K2Node_Select_Default) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, CallFunc_IsPlayingOffline_ReturnValue) == 0x000009, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::CallFunc_IsPlayingOffline_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, K2Node_DynamicCast_bSuccess) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member '_SCREEN_MissionSelectionMK3_C_ShouldEnableQuickJoin::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.HandleButtonVisibility
// 0x0028 (0x0028 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_HandleButtonVisibility final
{
public:
	EFSDTargetPlatform                            Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFSDTargetPlatform                            Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            Temp_byte_Variable_4;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldEnableQuickJoin_show;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue;            // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5136[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_HandleButtonVisibility");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility) == 0x000028, "Wrong size on _SCREEN_MissionSelectionMK3_C_HandleButtonVisibility");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable) == 0x000001, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_1) == 0x000002, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_2) == 0x000003, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_3) == 0x000004, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_4) == 0x000005, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_1) == 0x000006, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_5) == 0x000007, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_6) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_7) == 0x000009, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_8) == 0x00000A, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_9) == 0x00000B, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_bool_Variable_10) == 0x00000C, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_2) == 0x00000D, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_3) == 0x00000E, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_4) == 0x00000F, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_5) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_6) == 0x000011, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_7) == 0x000012, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_8) == 0x000013, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, Temp_byte_Variable_9) == 0x000014, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, CallFunc_ShouldEnableQuickJoin_show) == 0x000015, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::CallFunc_ShouldEnableQuickJoin_show' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, CallFunc_FSDTargetPlatform_ReturnValue) == 0x000016, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::CallFunc_FSDTargetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, K2Node_Select_Default) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, CallFunc_FSDTargetPlatform_ReturnValue_1) == 0x000021, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::CallFunc_FSDTargetPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, K2Node_Select_Default_1) == 0x000022, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, K2Node_Select_Default_2) == 0x000023, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000025, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility, K2Node_Select_Default_3) == 0x000026, "Member '_SCREEN_MissionSelectionMK3_C_HandleButtonVisibility::K2Node_Select_Default_3' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.GetMission_CheckBiome
// 0x0010 (0x0010 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome final
{
public:
	class UGeneratedMission*                      Mission;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome) == 0x000010, "Wrong size on _SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome, Mission) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome::Mission' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome, CallFunc_IsValid_ReturnValue) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member '_SCREEN_MissionSelectionMK3_C_GetMission_CheckBiome::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.OnKeyUp
// 0x04D0 (0x04D0 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0128(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x01E0(0x00B8)()
	bool                                          CallFunc_IsMenuAction2_ReturnValue;                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCloseOrBackMenu_ReturnValue;            // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5137[0x6];                                     // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x02A0(0x00B8)()
	bool                                          CallFunc_HandleKeyUp_OutHandled;                   // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5138[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_HandleKeyUp_OutReply;                     // 0x0360(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x0418(0x00B8)()
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_OnKeyUp) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_OnKeyUp");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_OnKeyUp) == 0x0004D0, "Wrong size on _SCREEN_MissionSelectionMK3_C_OnKeyUp");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, MyGeometry) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, InKeyEvent) == 0x000038, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, ReturnValue) == 0x000070, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000128, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x0001E0, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, CallFunc_IsMenuAction2_ReturnValue) == 0x000298, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::CallFunc_IsMenuAction2_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, CallFunc_IsCloseOrBackMenu_ReturnValue) == 0x000299, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::CallFunc_IsCloseOrBackMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, CallFunc_Handled_ReturnValue_1) == 0x0002A0, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, CallFunc_HandleKeyUp_OutHandled) == 0x000358, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::CallFunc_HandleKeyUp_OutHandled' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, CallFunc_HandleKeyUp_OutReply) == 0x000360, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::CallFunc_HandleKeyUp_OutReply' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnKeyUp, CallFunc_Handled_ReturnValue_2) == 0x000418, "Member '_SCREEN_MissionSelectionMK3_C_OnKeyUp::CallFunc_Handled_ReturnValue_2' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.GetMission
// 0x0010 (0x0010 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_GetMission final
{
public:
	class UGeneratedMission*                      Mission;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_GetMission) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_GetMission");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_GetMission) == 0x000010, "Wrong size on _SCREEN_MissionSelectionMK3_C_GetMission");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMission, Mission) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_GetMission::Mission' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMission, CallFunc_IsValid_ReturnValue) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_GetMission::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.IsMissionLocked
// 0x0020 (0x0020 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_IsMissionLocked final
{
public:
	class UGeneratedMission*                      Mission;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5139[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_SpaceRig_C*        CallFunc_GetController_AsBP_Player_Controller_Space_Rig; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_IsMissionLocked) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_IsMissionLocked");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_IsMissionLocked) == 0x000020, "Wrong size on _SCREEN_MissionSelectionMK3_C_IsMissionLocked");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_IsMissionLocked, Mission) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_IsMissionLocked::Mission' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_IsMissionLocked, ReturnValue) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_IsMissionLocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_IsMissionLocked, CallFunc_GetController_AsBP_Player_Controller_Space_Rig) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_IsMissionLocked::CallFunc_GetController_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_IsMissionLocked, CallFunc_IsLocked_ReturnValue) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_IsMissionLocked::CallFunc_IsLocked_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.GetActiveSelectionMode
// 0x0048 (0x0048 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode final
{
public:
	EMissionSelection_Mode                        NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionSelection_Mode                        Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionSelection_Mode                        Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_513A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionSelection_Mode                        K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_513B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameModeSpaceRig*                   K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_513C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode) == 0x000048, "Wrong size on _SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, NewParam) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::NewParam' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, Temp_bool_Variable) == 0x000001, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, Temp_byte_Variable) == 0x000002, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, Temp_byte_Variable_1) == 0x000003, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, K2Node_Select_Default) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, K2Node_DynamicCast_bSuccess) == 0x000028, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x000030, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, CallFunc_GetFSDGameState_ReturnValue) == 0x000038, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member '_SCREEN_MissionSelectionMK3_C_GetActiveSelectionMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.GetController
// 0x0020 (0x0020 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_GetController final
{
public:
	class ABP_PlayerController_SpaceRig_C*        AsBP_Player_Controller_Space_Rig;                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_SpaceRig_C*        K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_GetController) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_GetController");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_GetController) == 0x000020, "Wrong size on _SCREEN_MissionSelectionMK3_C_GetController");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetController, AsBP_Player_Controller_Space_Rig) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_GetController::AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetController, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_GetController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetController, K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_GetController::K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_GetController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.GetMissionBiome
// 0x0030 (0x0030 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_GetMissionBiome final
{
public:
	class UBiome*                                 Biome;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_MisSel_Biome_C*                    Array_Element;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_MisSel_Biome_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_GetMissionBiome");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome) == 0x000030, "Wrong size on _SCREEN_MissionSelectionMK3_C_GetMissionBiome");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, Biome) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::Biome' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, Array_Element) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::Array_Element' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, Temp_int_Array_Index_Variable) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, Temp_int_Loop_Counter_Variable) == 0x000014, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, CallFunc_Array_Get_Item) == 0x000020, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_GetMissionBiome, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000029, "Member '_SCREEN_MissionSelectionMK3_C_GetMissionBiome::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_PreConstruct) == 0x000001, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_PreConstruct");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_PreConstruct) == 0x000001, "Wrong size on _SCREEN_MissionSelectionMK3_C_PreConstruct");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_PreConstruct, IsDesignTime) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.BiomeHovered
// 0x0008 (0x0008 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_BiomeHovered final
{
public:
	class UITM_MisSel_Biome_C*                    Biome;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_BiomeHovered) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_BiomeHovered");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_BiomeHovered) == 0x000008, "Wrong size on _SCREEN_MissionSelectionMK3_C_BiomeHovered");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_BiomeHovered, Biome) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_BiomeHovered::Biome' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.BiomeSelected
// 0x0008 (0x0008 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_BiomeSelected final
{
public:
	class UITM_MisSel_Biome_C*                    Biome;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_BiomeSelected) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_BiomeSelected");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_BiomeSelected) == 0x000008, "Wrong size on _SCREEN_MissionSelectionMK3_C_BiomeSelected");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_BiomeSelected, Biome) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_BiomeSelected::Biome' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.MissionHover
// 0x0010 (0x0010 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_MissionHover final
{
public:
	class UGeneratedMission*                      Mission;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHovering;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_MissionHover) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_MissionHover");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_MissionHover) == 0x000010, "Wrong size on _SCREEN_MissionSelectionMK3_C_MissionHover");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_MissionHover, Mission) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_MissionHover::Mission' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_MissionHover, IsHovering) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_MissionHover::IsHovering' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.ShowMode
// 0x0001 (0x0001 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_ShowMode final
{
public:
	EMissionSelection_Mode                        Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_ShowMode) == 0x000001, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_ShowMode");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_ShowMode) == 0x000001, "Wrong size on _SCREEN_MissionSelectionMK3_C_ShowMode");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ShowMode, Mode) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_ShowMode::Mode' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.InputSourceChanged
// 0x0001 (0x0001 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_InputSourceChanged final
{
public:
	EFSDInputSource                               InputSource;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_InputSourceChanged) == 0x000001, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_InputSourceChanged");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_InputSourceChanged) == 0x000001, "Wrong size on _SCREEN_MissionSelectionMK3_C_InputSourceChanged");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_InputSourceChanged, InputSource) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_InputSourceChanged::InputSource' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.Tick
// 0x003C (0x003C - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_Tick) == 0x000004, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_Tick");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_Tick) == 0x00003C, "Wrong size on _SCREEN_MissionSelectionMK3_C_Tick");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_Tick, MyGeometry) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_Tick, InDeltaTime) == 0x000038, "Member '_SCREEN_MissionSelectionMK3_C_Tick::InDeltaTime' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.MissionSelected
// 0x0008 (0x0008 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_MissionSelected final
{
public:
	class UITM_MisSel_MissionMapIcon_C*           Mission;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_MissionSelected) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_MissionSelected");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_MissionSelected) == 0x000008, "Wrong size on _SCREEN_MissionSelectionMK3_C_MissionSelected");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_MissionSelected, Mission) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_MissionSelected::Mission' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature final
{
public:
	TArray<class UObject*>                        AssetReferences;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InHovered;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_513D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonChallenge*                       Challenge;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature) == 0x000020, "Wrong size on _SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature, AssetReferences) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature::AssetReferences' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature, InHovered) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature::InHovered' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature, Challenge) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_BndEvt__ITM_Challenge_InfoBox_K2Node_ComponentBoundEvent_1_OnChallengeHovered__DelegateSignature::Challenge' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.OnDifficultyChanged
// 0x0020 (0x0020 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_OnDifficultyChanged final
{
public:
	struct FGameDifficulty                        NewDifficulty;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UGeneratedMission*                      Mission;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_OnDifficultyChanged) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_OnDifficultyChanged");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_OnDifficultyChanged) == 0x000020, "Wrong size on _SCREEN_MissionSelectionMK3_C_OnDifficultyChanged");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnDifficultyChanged, NewDifficulty) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_OnDifficultyChanged::NewDifficulty' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_OnDifficultyChanged, Mission) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_OnDifficultyChanged::Mission' has a wrong offset!");

// Function _SCREEN_MissionSelectionMK3._SCREEN_MissionSelectionMK3_C.ExecuteUbergraph__SCREEN_MissionSelectionMK3
// 0x0418 (0x0418 - 0x0000)
struct _SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_513E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USeasonsSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameDifficulty& NewDifficulty, class UGeneratedMission* Mission)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class USeason*                                CallFunc_GetCurrentSeason_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_513F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5140[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5141[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FSDUpdateSessionInfo_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5142[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameDifficulty                        CallFunc_GetCurrentGameDifficulty_ReturnValue;     // 0x0098(0x0018)(ConstParm)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_2;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_MisSel_Biome_C*                    K2Node_CustomEvent_Biome_1;                        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTooManyModsEnabled_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5143[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_MisSel_Biome_C*                    K2Node_CustomEvent_Biome;                          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_MisSel_Biome_C*                    CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5144[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5145[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_MisSel_Biome_C*                    CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5146[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeneratedMission*                      K2Node_CustomEvent_Mission_2;                      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsHovering;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionSelection_Mode                        K2Node_CustomEvent_Mode;                           // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5147[0x5];                                     // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPassword_Password;                     // 0x0110(0x0018)()
	bool                                          CallFunc_GetPassword_HasPassword;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFriendsOnly_ReturnValue;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5148[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_3;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGeneratedMission*                      CallFunc_GetMission_Mission;                       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5149[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_SpaceRig_C*        CallFunc_GetController_AsBP_Player_Controller_Space_Rig; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGeneratedMission*                      CallFunc_GetMission_CheckBiome_Mission;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_514A[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_FSDGameUserSettings_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDInputSource                               K2Node_CustomEvent_InputSource;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDInputSource                               CallFunc_GetCurrentInputSource_ReturnValue;        // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514B[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue_1;           // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFriendsOnly_ReturnValue_1;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_514C[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514D[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_MisSel_Biome_C*                    CallFunc_Array_Get_Item_2;                         // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_514E[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01D0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514F[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_MisSel_MissionMapIcon_C*           K2Node_CustomEvent_Mission_1;                      // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5150[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor;         // 0x021C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor_1;       // 0x022C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5151[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignManager*                       CallFunc_GetCampaingManager_ReturnValue;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base;    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5152[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameDifficulty                        CallFunc_GetSelectedDifficulty_ReturnValue;        // 0x0260(0x0018)()
	class AFSDPlayerState*                        CallFunc_GetOwningFSDPlayerState_ReturnValue;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base_1;  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5153[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_4;         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameModeSpaceRig*                   CallFunc_GetFSDSRGameMode_ReturnValue;             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDInputSource                               Temp_byte_Variable_3;                              // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5154[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeneratedMission*                      Temp_object_Variable;                              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5155[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeneratedMission*                      K2Node_Select_Default_1;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFSDInputSource InputSource)>  K2Node_CreateDelegate_OutputDelegate_4;            // 0x02D8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x02E8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UITM_MisSel_Biome_C* Biome)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x02F8(0x0010)(ZeroConstructor, NoDestructor)
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue_2;           // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTopWindow_ReturnValue;                  // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5156[0x5];                                     // 0x0313(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_5;         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITM_MisSel_Biome_C*>            K2Node_MakeArray_Array;                            // 0x0320(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_6;         // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxPublicConnections_ReturnValue;      // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5157[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDCreateSessionCallbackProxy*         CallFunc_FSDCreateSession_ReturnValue;             // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5158[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        K2Node_ComponentBoundEvent_assetReferences;        // 0x0350(0x0010)(ReferenceParm)
	bool                                          K2Node_ComponentBoundEvent_InHovered;              // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5159[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonChallenge*                       K2Node_ComponentBoundEvent_challenge;              // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITM_MisSel_PlanetZone_C*>       K2Node_MakeArray_Array_1;                          // 0x0370(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UGeneratedMission*>              CallFunc_GetAvailableMissions_ReturnValue;         // 0x0380(0x0010)(ReferenceParm)
	TArray<class UGeneratedMission*>              CallFunc_GetAvailableMissions_ReturnValue_1;       // 0x0390(0x0010)(ReferenceParm)
	struct FGameDifficulty                        K2Node_CustomEvent_NewDifficulty;                  // 0x03A0(0x0018)()
	class UGeneratedMission*                      K2Node_CustomEvent_Mission;                        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameDifficulty                        CallFunc_GetSelectedDifficulty_ReturnValue_1;      // 0x03C0(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x03F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor_2;       // 0x03F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor_3;       // 0x0404(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3) == 0x000008, "Wrong alignment on _SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3");
static_assert(sizeof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3) == 0x000418, "Wrong size on _SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, EntryPoint) == 0x000000, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::EntryPoint' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetCurrentSeason_ReturnValue) == 0x000028, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetCurrentSeason_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_int_Loop_Counter_Variable) == 0x000044, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_int_Array_Index_Variable) == 0x00004C, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_Event_IsDesignTime) == 0x000060, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000068, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x000080, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_FSDUpdateSessionInfo_ReturnValue) == 0x000088, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_FSDUpdateSessionInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDGameState_ReturnValue) == 0x000090, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetCurrentGameDifficulty_ReturnValue) == 0x000098, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetCurrentGameDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDGameInstance_ReturnValue_2) == 0x0000B0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_Biome_1) == 0x0000B8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_Biome_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_HasTooManyModsEnabled_ReturnValue) == 0x0000C0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_HasTooManyModsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsValid_ReturnValue_1) == 0x0000C2, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_BooleanOR_ReturnValue) == 0x0000C3, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_Biome) == 0x0000C8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_Biome' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_int_Array_Index_Variable_1) == 0x0000D0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_int_Loop_Counter_Variable_1) == 0x0000D4, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Array_Get_Item) == 0x0000D8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Array_Length_ReturnValue_2) == 0x0000F8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000FC, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_Mission_2) == 0x000100, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_Mission_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_IsHovering) == 0x000108, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_IsHovering' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsValid_ReturnValue_2) == 0x000109, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_Mode) == 0x00010A, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_Mode' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetPassword_Password) == 0x000110, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetPassword_Password' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetPassword_HasPassword) == 0x000128, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetPassword_HasPassword' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsFriendsOnly_ReturnValue) == 0x000129, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsFriendsOnly_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Conv_TextToString_ReturnValue) == 0x000130, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDGameInstance_ReturnValue_3) == 0x000140, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Conv_IntToString_ReturnValue) == 0x000148, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Concat_StrStr_ReturnValue) == 0x000158, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetMission_Mission) == 0x000168, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetMission_Mission' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsValid_ReturnValue_3) == 0x000170, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetController_AsBP_Player_Controller_Space_Rig) == 0x000178, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetController_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetMission_CheckBiome_Mission) == 0x000180, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetMission_CheckBiome_Mission' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsValid_ReturnValue_4) == 0x000188, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_FSDGameUserSettings_ReturnValue) == 0x000190, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_FSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_InputSource) == 0x000198, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_InputSource' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetCurrentInputSource_ReturnValue) == 0x000199, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetCurrentInputSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetWindowManager_ReturnValue) == 0x0001A0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetWindowManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetWindowManager_ReturnValue_1) == 0x0001A8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetWindowManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsFriendsOnly_ReturnValue_1) == 0x0001B0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsFriendsOnly_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_int_Loop_Counter_Variable_2) == 0x0001B4, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_int_Array_Index_Variable_2) == 0x0001B8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Array_Get_Item_2) == 0x0001C0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001C8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001CC, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_Event_MyGeometry) == 0x0001D0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_Event_InDeltaTime) == 0x000208, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_Mission_1) == 0x000210, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_Mission_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsValid_ReturnValue_5) == 0x000218, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_MenuColorsAndOpacity_OutputColor) == 0x00021C, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_MenuColorsAndOpacity_OutputColor' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_MenuColorsAndOpacity_OutputColor_1) == 0x00022C, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_MenuColorsAndOpacity_OutputColor_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetCampaingManager_ReturnValue) == 0x000240, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetCampaingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetOwningPlayer_ReturnValue) == 0x000248, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_DynamicCast_AsBP_Player_Controller_Base) == 0x000250, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_DynamicCast_AsBP_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_DynamicCast_bSuccess) == 0x000258, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetSelectedDifficulty_ReturnValue) == 0x000260, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetSelectedDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetOwningFSDPlayerState_ReturnValue) == 0x000278, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetOwningFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000280, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_DynamicCast_AsBP_Player_Controller_Base_1) == 0x000288, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_DynamicCast_AsBP_Player_Controller_Base_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_DynamicCast_bSuccess_1) == 0x000290, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDGameInstance_ReturnValue_4) == 0x000298, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDSRGameMode_ReturnValue) == 0x0002A0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDSRGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002A8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_byte_Variable) == 0x0002B8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_byte_Variable_1) == 0x0002B9, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_byte_Variable_2) == 0x0002BA, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_byte_Variable_3) == 0x0002BB, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_object_Variable) == 0x0002C0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_Select_Default) == 0x0002C8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, Temp_bool_Variable) == 0x0002C9, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Array_Contains_ReturnValue) == 0x0002CA, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsValid_ReturnValue_6) == 0x0002CB, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_Select_Default_1) == 0x0002D0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002D8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002E8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CreateDelegate_OutputDelegate_6) == 0x0002F8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetWindowManager_ReturnValue_2) == 0x000308, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetWindowManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Not_PreBool_ReturnValue) == 0x000310, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsTopWindow_ReturnValue) == 0x000311, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsTopWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_Not_PreBool_ReturnValue_1) == 0x000312, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDGameInstance_ReturnValue_5) == 0x000318, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_MakeArray_Array) == 0x000320, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetFSDGameInstance_ReturnValue_6) == 0x000330, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetFSDGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetMaxPublicConnections_ReturnValue) == 0x000338, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetMaxPublicConnections_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_FSDCreateSession_ReturnValue) == 0x000340, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_FSDCreateSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_IsValid_ReturnValue_7) == 0x000348, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_ComponentBoundEvent_assetReferences) == 0x000350, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_ComponentBoundEvent_assetReferences' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_ComponentBoundEvent_InHovered) == 0x000360, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_ComponentBoundEvent_InHovered' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_ComponentBoundEvent_challenge) == 0x000368, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_ComponentBoundEvent_challenge' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_MakeArray_Array_1) == 0x000370, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetAvailableMissions_ReturnValue) == 0x000380, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetAvailableMissions_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetAvailableMissions_ReturnValue_1) == 0x000390, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetAvailableMissions_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_NewDifficulty) == 0x0003A0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_NewDifficulty' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, K2Node_CustomEvent_Mission) == 0x0003B8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::K2Node_CustomEvent_Mission' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetSelectedDifficulty_ReturnValue_1) == 0x0003C0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetSelectedDifficulty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0003D8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_PlayAnimationForward_ReturnValue) == 0x0003E0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0003E8, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_HasAuthority_ReturnValue) == 0x0003F0, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_SelectVisibility_IsVisible) == 0x0003F1, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_SelectVisibility_VisibilityChanged) == 0x0003F2, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_SelectVisibility_New_Visibility) == 0x0003F3, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_MenuColorsAndOpacity_OutputColor_2) == 0x0003F4, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_MenuColorsAndOpacity_OutputColor_2' has a wrong offset!");
static_assert(offsetof(_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3, CallFunc_MenuColorsAndOpacity_OutputColor_3) == 0x000404, "Member '_SCREEN_MissionSelectionMK3_C_ExecuteUbergraph__SCREEN_MissionSelectionMK3::CallFunc_MenuColorsAndOpacity_OutputColor_3' has a wrong offset!");

}

