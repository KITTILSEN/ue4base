#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Crossbow_AmmoCount_Row

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HUD_Crossbow_AmmoCount_Row.HUD_Crossbow_AmmoCount_Row_C.SetIsActiveArrow
// 0x0030 (0x0030 - 0x0000)
struct HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow final
{
public:
	bool                                          Inactive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC9[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow) == 0x000004, "Wrong alignment on HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow");
static_assert(sizeof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow) == 0x000030, "Wrong size on HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, Inactive) == 0x000000, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::Inactive' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, Scale) == 0x000004, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::Scale' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, Temp_bool_Variable) == 0x000008, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, Temp_float_Variable) == 0x00000C, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, Temp_float_Variable_1) == 0x000010, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, K2Node_Select_Default) == 0x000024, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000028, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, CallFunc_SelectVisibility_IsVisible) == 0x00002C, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, CallFunc_SelectVisibility_VisibilityChanged) == 0x00002D, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow, CallFunc_SelectVisibility_New_Visibility) == 0x00002E, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIsActiveArrow::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function HUD_Crossbow_AmmoCount_Row.HUD_Crossbow_AmmoCount_Row_C.SetAmmoCount
// 0x0020 (0x0020 - 0x0000)
struct HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount final
{
public:
	int32                                         InAmmoCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DCA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount) == 0x000008, "Wrong alignment on HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount");
static_assert(sizeof(HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount) == 0x000020, "Wrong size on HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount, InAmmoCount) == 0x000000, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount::InAmmoCount' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetAmmoCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function HUD_Crossbow_AmmoCount_Row.HUD_Crossbow_AmmoCount_Row_C.SetIcon
// 0x0008 (0x0008 - 0x0000)
struct HUD_Crossbow_AmmoCount_Row_C_SetIcon final
{
public:
	class UTexture2D*                             InTexture;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Crossbow_AmmoCount_Row_C_SetIcon) == 0x000008, "Wrong alignment on HUD_Crossbow_AmmoCount_Row_C_SetIcon");
static_assert(sizeof(HUD_Crossbow_AmmoCount_Row_C_SetIcon) == 0x000008, "Wrong size on HUD_Crossbow_AmmoCount_Row_C_SetIcon");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_SetIcon, InTexture) == 0x000000, "Member 'HUD_Crossbow_AmmoCount_Row_C_SetIcon::InTexture' has a wrong offset!");

// Function HUD_Crossbow_AmmoCount_Row.HUD_Crossbow_AmmoCount_Row_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_Crossbow_AmmoCount_Row_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Crossbow_AmmoCount_Row_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_Crossbow_AmmoCount_Row_C_PreConstruct");
static_assert(sizeof(HUD_Crossbow_AmmoCount_Row_C_PreConstruct) == 0x000001, "Wrong size on HUD_Crossbow_AmmoCount_Row_C_PreConstruct");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_Crossbow_AmmoCount_Row_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_Crossbow_AmmoCount_Row.HUD_Crossbow_AmmoCount_Row_C.ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row
// 0x0018 (0x0018 - 0x0000)
struct HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row) == 0x000004, "Wrong alignment on HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row");
static_assert(sizeof(HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row) == 0x000018, "Wrong size on HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row, EntryPoint) == 0x000000, "Member 'HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row, K2Node_Event_IsDesignTime) == 0x000004, "Member 'HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row, CallFunc_MenuColors_OutputColor) == 0x000008, "Member 'HUD_Crossbow_AmmoCount_Row_C_ExecuteUbergraph_HUD_Crossbow_AmmoCount_Row::CallFunc_MenuColors_OutputColor' has a wrong offset!");

}

