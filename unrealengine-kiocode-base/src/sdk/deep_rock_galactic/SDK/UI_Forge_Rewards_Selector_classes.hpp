#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Forge_Rewards_Selector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Forge_Rewards_Selector.UI_Forge_Rewards_Selector_C
// 0x0058 (0x02B8 - 0x0260)
class UUI_Forge_Rewards_Selector_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimPing;                                          // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimBeginSelection;                                // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        FadeBlur;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Forge_Rewards_SelectorItem_C*       Item_Left;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Forge_Rewards_SelectorItem_C*       Item_Right;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Selection_Panel;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnRewardSelected;                                  // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Level;                                             // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Offset;                                            // 0x02AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Reset();
	void EndPickReward(class USchematic* InReward);
	void PopRandomReward(const TMap<class UPlayerCharacterID*, class USchematic*>& Rewards, const struct FRandomStream& Random, class UPlayerCharacterID** OutCharacter, class USchematic** OutReward);
	void Begin_Pick_Reward(int32 InLevel, int32 InSeed);
	void OnClicked(class USchematic* InSchematic);
	void OnIntroStarted();
	void OnIntroEnded();
	void TryPing();
	void BndEvt__UI_Forge_Rewards_Selector_Item_Left_K2Node_ComponentBoundEvent_0_OnHoverBegin__DelegateSignature();
	void BndEvt__UI_Forge_Rewards_Selector_Item_Left_K2Node_ComponentBoundEvent_1_OnHoverEnd__DelegateSignature();
	void BndEvt__UI_Forge_Rewards_Selector_Item_Right_K2Node_ComponentBoundEvent_2_OnHoverBegin__DelegateSignature();
	void BndEvt__UI_Forge_Rewards_Selector_Item_Right_K2Node_ComponentBoundEvent_3_OnHoverEnd__DelegateSignature();
	void OnPingEnded();
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_UI_Forge_Rewards_Selector(int32 EntryPoint);
	void OnRewardSelected__DelegateSignature(class USchematic* InReward);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Forge_Rewards_Selector_C">();
	}
	static class UUI_Forge_Rewards_Selector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Forge_Rewards_Selector_C>();
	}
};
static_assert(alignof(UUI_Forge_Rewards_Selector_C) == 0x000008, "Wrong alignment on UUI_Forge_Rewards_Selector_C");
static_assert(sizeof(UUI_Forge_Rewards_Selector_C) == 0x0002B8, "Wrong size on UUI_Forge_Rewards_Selector_C");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, UberGraphFrame) == 0x000260, "Member 'UUI_Forge_Rewards_Selector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, AnimPing) == 0x000268, "Member 'UUI_Forge_Rewards_Selector_C::AnimPing' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, AnimBeginSelection) == 0x000270, "Member 'UUI_Forge_Rewards_Selector_C::AnimBeginSelection' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, FadeBlur) == 0x000278, "Member 'UUI_Forge_Rewards_Selector_C::FadeBlur' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, Item_Left) == 0x000280, "Member 'UUI_Forge_Rewards_Selector_C::Item_Left' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, Item_Right) == 0x000288, "Member 'UUI_Forge_Rewards_Selector_C::Item_Right' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, Selection_Panel) == 0x000290, "Member 'UUI_Forge_Rewards_Selector_C::Selection_Panel' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, OnRewardSelected) == 0x000298, "Member 'UUI_Forge_Rewards_Selector_C::OnRewardSelected' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, Level) == 0x0002A8, "Member 'UUI_Forge_Rewards_Selector_C::Level' has a wrong offset!");
static_assert(offsetof(UUI_Forge_Rewards_Selector_C, Offset) == 0x0002AC, "Member 'UUI_Forge_Rewards_Selector_C::Offset' has a wrong offset!");

}

