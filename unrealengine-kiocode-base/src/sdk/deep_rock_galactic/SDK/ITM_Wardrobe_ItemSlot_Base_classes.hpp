#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Wardrobe_ItemSlot_Base

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Struct_Wardrobe_Entry_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_Wardrobe_ItemSlot_Base.ITM_Wardrobe_ItemSlot_Base_C
// 0x0188 (0x03E8 - 0x0260)
class UITM_Wardrobe_ItemSlot_Base_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimShuffle;                                       // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       IntroRight;                                        // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       IntroLeft;                                         // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimHovered;                                       // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IconImage;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               IconSizer;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_ItemUnlockedIcon_C*                Notification_NewItemAny;                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                OuterBorder;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ShuffleButton;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SideButtons_Overlay;                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SleevelessButton;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SlotButton;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SlotContentBox;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SlotSizer;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Label_C*                         TextHeader;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TextOverlay;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Label_C*                         TextSubheader;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RandomizeIcon_C*                    UI_RandomizeIcon;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ToggleSleevelessIcon_C*             UI_ToggleSleevelessIcon;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             TypeIcon;                                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         SlotSize;                                          // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3023[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_Wardrobe_ItemSelector_C*           Selector;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CharacterID;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITM_Wardrobe_ItemSlot_Base_C*>  RefreshSlotsOnChange;                              // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FStruct_Wardrobe_Entry>         Entries;                                           // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FDetailedTagSet                        SearchFilter;                                      // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWidget*                                EquippedEntryWidget;                               // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SlotHovered;                                       // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SlotSelected;                                      // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TextToLeft;                                        // 0x039A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3024[0x1];                                     // 0x039B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PreviewIndex;                                      // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewingItem;                                    // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3025[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           PreviewItemTimer;                                  // 0x03A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDesignTime;                                      // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3026[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnEquippedChanged;                                 // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UDialogDataAsset*                       ShoutOnEquipped;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanShuffle;                                        // 0x03D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanToggleType;                                     // 0x03D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GenerateWidgets;                                   // 0x03D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3027[0x5];                                     // 0x03D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnRequestCloseSelectors;                           // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ReceiveShowShuffleOptions(bool* OutShowOptions);
	void SetEquippedItem(class UObject* InObject, int32 InIndex, const class FText& InName);
	void UpdateEquippedItem();
	void UpdateNotificationIcon();
	void GetRandomIndex(const struct FDetailedTagSet& InFilter, int32* OutIndex);
	void SelectorFilterChanged(const struct FDetailedTagSet& InFilter);
	void UpdateToggleButton();
	void ReceiveToggleType(bool* Success);
	void EquipRandomItem();
	void UpdateShuffleButton();
	void GetTextToLeft(bool* Param_TextToLeft);
	void SetHovered(bool InSlotHovered);
	void ReceivePreviewItem(int32 Param_Index, bool Show, bool* OutSuccess);
	void ReceiveEquipItem(int32 InIndex, bool* OutSuccess);
	void SetRefreshSlotsOnChange(TArray<class UITM_Wardrobe_ItemSlot_Base_C*>& InOtherSlots);
	void SelectorItemUnhovered(int32 Param_Index);
	void SelectorItemHovered(int32 Param_Index);
	void ReceiveGetSelectedIndex(int32* OutIndex);
	void ReceiveInitializeEntries(TArray<struct FStruct_Wardrobe_Entry>& InEntries);
	void ReceiveCreateEntryWidget(class UObject* InObject, int32 InIndex, class UWidget* InReuseWidget, bool IsSlotWidget, class UWidget** OutWidget);
	void SetItemName(const class FText& InName);
	void Refresh();
	void SelectorItemClicked(int32 Param_Index, bool* OutCloseSelector);
	void GetFilter(struct FDetailedTagSet* OutFilter);
	void GetEntries(TArray<struct FStruct_Wardrobe_Entry>* OutEntry, int32* OutSelectedIndex);
	void ReceiveReleaseResource(class UWidget* InWidget);
	void ReceivePreConstruct();
	void SetTextToLeft(bool Param_Index);
	void Initialize(class UPlayerCharacterID* InCharacterID);
	void SetTypeIcon(class UTexture2D* Texture);
	void SetSlotName(const class FText& Title);
	void SetSlotSize(int32 InSize);
	void SetSelected(bool InSelected);
	void ReleaseResources();
	void UpdateSelectionBorder();
	void RefreshNextFrame();
	void PlayIntroAnim(bool IsLeftSide, float Duration);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void BndEvt__ShuffleButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__ShuffleButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ShuffleButton_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__SlotButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__ITM_Wardrobe_ItemSlot_Base_SleevelessButton_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ITM_Wardrobe_ItemSlot_Base_SleevelessButton_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ITM_Wardrobe_ItemSlot_Base_SleevelessButton_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
	void PostInitilization();
	void PreConstruct(bool Param_IsDesignTime);
	void RequestSelectorRefresh();
	void DelayedPreviewItem();
	void DelayedUnpreviewItem();
	void ExecuteUbergraph_ITM_Wardrobe_ItemSlot_Base(int32 EntryPoint);
	void OnRequestCloseSelectors__DelegateSignature();
	void OnEquippedChanged__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_Wardrobe_ItemSlot_Base_C">();
	}
	static class UITM_Wardrobe_ItemSlot_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_Wardrobe_ItemSlot_Base_C>();
	}
};
static_assert(alignof(UITM_Wardrobe_ItemSlot_Base_C) == 0x000008, "Wrong alignment on UITM_Wardrobe_ItemSlot_Base_C");
static_assert(sizeof(UITM_Wardrobe_ItemSlot_Base_C) == 0x0003E8, "Wrong size on UITM_Wardrobe_ItemSlot_Base_C");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, UberGraphFrame) == 0x000260, "Member 'UITM_Wardrobe_ItemSlot_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, AnimShuffle) == 0x000268, "Member 'UITM_Wardrobe_ItemSlot_Base_C::AnimShuffle' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, IntroRight) == 0x000270, "Member 'UITM_Wardrobe_ItemSlot_Base_C::IntroRight' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, IntroLeft) == 0x000278, "Member 'UITM_Wardrobe_ItemSlot_Base_C::IntroLeft' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, AnimHovered) == 0x000280, "Member 'UITM_Wardrobe_ItemSlot_Base_C::AnimHovered' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, IconImage) == 0x000288, "Member 'UITM_Wardrobe_ItemSlot_Base_C::IconImage' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, IconSizer) == 0x000290, "Member 'UITM_Wardrobe_ItemSlot_Base_C::IconSizer' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, Notification_NewItemAny) == 0x000298, "Member 'UITM_Wardrobe_ItemSlot_Base_C::Notification_NewItemAny' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, OuterBorder) == 0x0002A0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::OuterBorder' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, ShuffleButton) == 0x0002A8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::ShuffleButton' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SideButtons_Overlay) == 0x0002B0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SideButtons_Overlay' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SleevelessButton) == 0x0002B8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SleevelessButton' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SlotButton) == 0x0002C0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SlotButton' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SlotContentBox) == 0x0002C8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SlotContentBox' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SlotSizer) == 0x0002D0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SlotSizer' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, TextHeader) == 0x0002D8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::TextHeader' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, TextOverlay) == 0x0002E0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::TextOverlay' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, TextSubheader) == 0x0002E8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::TextSubheader' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, UI_RandomizeIcon) == 0x0002F0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::UI_RandomizeIcon' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, UI_ToggleSleevelessIcon) == 0x0002F8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::UI_ToggleSleevelessIcon' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, TypeIcon) == 0x000300, "Member 'UITM_Wardrobe_ItemSlot_Base_C::TypeIcon' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SlotSize) == 0x000308, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SlotSize' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, Selector) == 0x000310, "Member 'UITM_Wardrobe_ItemSlot_Base_C::Selector' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, CharacterID) == 0x000318, "Member 'UITM_Wardrobe_ItemSlot_Base_C::CharacterID' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, RefreshSlotsOnChange) == 0x000320, "Member 'UITM_Wardrobe_ItemSlot_Base_C::RefreshSlotsOnChange' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, Entries) == 0x000330, "Member 'UITM_Wardrobe_ItemSlot_Base_C::Entries' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SearchFilter) == 0x000340, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SearchFilter' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, EquippedEntryWidget) == 0x000390, "Member 'UITM_Wardrobe_ItemSlot_Base_C::EquippedEntryWidget' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SlotHovered) == 0x000398, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SlotHovered' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, SlotSelected) == 0x000399, "Member 'UITM_Wardrobe_ItemSlot_Base_C::SlotSelected' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, TextToLeft) == 0x00039A, "Member 'UITM_Wardrobe_ItemSlot_Base_C::TextToLeft' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, PreviewIndex) == 0x00039C, "Member 'UITM_Wardrobe_ItemSlot_Base_C::PreviewIndex' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, PreviewingItem) == 0x0003A0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::PreviewingItem' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, PreviewItemTimer) == 0x0003A8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::PreviewItemTimer' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, IsDesignTime) == 0x0003B0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::IsDesignTime' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, OnEquippedChanged) == 0x0003B8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::OnEquippedChanged' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, ShoutOnEquipped) == 0x0003C8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::ShoutOnEquipped' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, CanShuffle) == 0x0003D0, "Member 'UITM_Wardrobe_ItemSlot_Base_C::CanShuffle' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, CanToggleType) == 0x0003D1, "Member 'UITM_Wardrobe_ItemSlot_Base_C::CanToggleType' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, GenerateWidgets) == 0x0003D2, "Member 'UITM_Wardrobe_ItemSlot_Base_C::GenerateWidgets' has a wrong offset!");
static_assert(offsetof(UITM_Wardrobe_ItemSlot_Base_C, OnRequestCloseSelectors) == 0x0003D8, "Member 'UITM_Wardrobe_ItemSlot_Base_C::OnRequestCloseSelectors' has a wrong offset!");

}

