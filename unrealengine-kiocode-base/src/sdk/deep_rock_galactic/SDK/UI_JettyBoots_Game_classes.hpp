#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_JettyBoots_Game

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_JettyBoots_GameState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_JettyBoots_Game.UI_JettyBoots_Game_C
// 0x0178 (0x03D8 - 0x0260)
class UUI_JettyBoots_Game_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_JettyBoots_Character_C*             Character_Sprite;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Game_Canvas;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Game_SizeBox;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Gates_Layer;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUI_JettyBoots_Obstacle_C*>      Gates;                                             // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector2D                              DeathPos;                                          // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CharacterPos;                                      // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          JetBoostPressed;                                   // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4672[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CanvasHeight;                                      // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CharacterCenterX;                                  // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardSpeed;                                      // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GateStartDistance;                                 // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_JettyBoots_GameState                     GameState;                                         // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4673[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VerticalSpeed;                                     // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTime;                                         // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4674[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDistanceChanged;                                 // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnProgressChanged;                                 // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         NextGate;                                          // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4675[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              AudioJetBoost;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              AudioGatesCleared;                                 // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              AudioPlayerDied;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              AudioCompleted;                                    // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Audio_Scene_Component;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seed;                                              // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJettyBootsReplay                      LastReplay;                                        // 0x032C(0x001C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	FMulticastInlineDelegateProperty_             OnGameTicked;                                      // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGameStateChanged;                                // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReplayStateChanged;                              // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         UpForce;                                           // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnGateCleared;                                     // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAudioComponent*                        JetBoostAudio;                                     // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJettyBootSetting                      LevelSettings;                                     // 0x0398(0x0018)(Edit, BlueprintVisible, NoDestructor)
	TSubclassOf<class UUI_JettyBoots_Obstacle_C>  EndGateType;                                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnPointsGathered;                                  // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UDialogDataAsset*                       ShoutLevelCompleted;                               // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDialogDataAsset*                       ShoutPlayerDied;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnDistanceChanged__DelegateSignature(float InDistance);
	void OnProgressChanged__DelegateSignature(int32 InCurrentGate, int32 InTotalGates);
	void OnGameTicked__DelegateSignature(int32 InLevelSeed, const struct FVector2D& InCharacterPosition, ENUM_JettyBoots_GameState InGameState);
	void OnGameStateChanged__DelegateSignature(ENUM_JettyBoots_GameState InState, ENUM_JettyBoots_GameState InPreviousState);
	void OnReplayStateChanged__DelegateSignature(ENUM_JettyBoots_GameState InGameState);
	void OnGateCleared__DelegateSignature();
	void OnPointsGathered__DelegateSignature(int32 OutPoints);
	void ExecuteUbergraph_UI_JettyBoots_Game(int32 EntryPoint);
	void FX_GateCleared();
	void FX_JetBoost();
	void FX_LevelComplete();
	void FX_PlayerDied();
	void EnterFinishing();
	void EnterPlayerDied();
	void EnterRunning();
	void UpdateFinishing();
	void UpdateRestarting();
	void UpdatePlayerDied();
	void UpdateRunning();
	void OnActionKey(bool InKeyDown);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void CreateLevel(int32 InSeed);
	void StartGame();
	void GetStartPos(struct FVector2D* OutPos);
	void SetCharacterPos(const struct FVector2D& InPos, bool InMoveCamera);
	void CheckCharacterState();
	void SetGameState(ENUM_JettyBoots_GameState InGameState);
	void GetBoostActive(bool* OutBoosting);
	void DoAudio(class USoundCue* InSound, class UAudioComponent* InOptionalAudioComponent, class UAudioComponent** OutAudioComponent);
	void Shout(class UDialogDataAsset* InShout);
	void GetNextGateIndex(int32* OutIndex);
	void SetNextGate(int32 InIndex);
	void StartGameSeeded(int32 InSeed);
	void StopGame();
	void ReceiveReplay(const struct FJettyBootsReplay& InReplay);
	void UpdateReplaying();
	void InSafeZone(bool* OutValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_JettyBoots_Game_C">();
	}
	static class UUI_JettyBoots_Game_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_JettyBoots_Game_C>();
	}
};
static_assert(alignof(UUI_JettyBoots_Game_C) == 0x000008, "Wrong alignment on UUI_JettyBoots_Game_C");
static_assert(sizeof(UUI_JettyBoots_Game_C) == 0x0003D8, "Wrong size on UUI_JettyBoots_Game_C");
static_assert(offsetof(UUI_JettyBoots_Game_C, UberGraphFrame) == 0x000260, "Member 'UUI_JettyBoots_Game_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, Character_Sprite) == 0x000268, "Member 'UUI_JettyBoots_Game_C::Character_Sprite' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, Game_Canvas) == 0x000270, "Member 'UUI_JettyBoots_Game_C::Game_Canvas' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, Game_SizeBox) == 0x000278, "Member 'UUI_JettyBoots_Game_C::Game_SizeBox' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, Gates_Layer) == 0x000280, "Member 'UUI_JettyBoots_Game_C::Gates_Layer' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, Gates) == 0x000288, "Member 'UUI_JettyBoots_Game_C::Gates' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, DeathPos) == 0x000298, "Member 'UUI_JettyBoots_Game_C::DeathPos' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, CharacterPos) == 0x0002A0, "Member 'UUI_JettyBoots_Game_C::CharacterPos' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, JetBoostPressed) == 0x0002A8, "Member 'UUI_JettyBoots_Game_C::JetBoostPressed' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, CanvasHeight) == 0x0002AC, "Member 'UUI_JettyBoots_Game_C::CanvasHeight' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, CharacterCenterX) == 0x0002B0, "Member 'UUI_JettyBoots_Game_C::CharacterCenterX' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, ForwardSpeed) == 0x0002B4, "Member 'UUI_JettyBoots_Game_C::ForwardSpeed' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, GateStartDistance) == 0x0002B8, "Member 'UUI_JettyBoots_Game_C::GateStartDistance' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, GameState) == 0x0002BC, "Member 'UUI_JettyBoots_Game_C::GameState' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, DeltaTime) == 0x0002C0, "Member 'UUI_JettyBoots_Game_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, VerticalSpeed) == 0x0002C4, "Member 'UUI_JettyBoots_Game_C::VerticalSpeed' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, StateTime) == 0x0002C8, "Member 'UUI_JettyBoots_Game_C::StateTime' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, OnDistanceChanged) == 0x0002D0, "Member 'UUI_JettyBoots_Game_C::OnDistanceChanged' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, OnProgressChanged) == 0x0002E0, "Member 'UUI_JettyBoots_Game_C::OnProgressChanged' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, NextGate) == 0x0002F0, "Member 'UUI_JettyBoots_Game_C::NextGate' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, AudioJetBoost) == 0x0002F8, "Member 'UUI_JettyBoots_Game_C::AudioJetBoost' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, AudioGatesCleared) == 0x000300, "Member 'UUI_JettyBoots_Game_C::AudioGatesCleared' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, AudioPlayerDied) == 0x000308, "Member 'UUI_JettyBoots_Game_C::AudioPlayerDied' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, AudioCompleted) == 0x000310, "Member 'UUI_JettyBoots_Game_C::AudioCompleted' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, Audio_Scene_Component) == 0x000318, "Member 'UUI_JettyBoots_Game_C::Audio_Scene_Component' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, PlayerCharacter) == 0x000320, "Member 'UUI_JettyBoots_Game_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, Seed) == 0x000328, "Member 'UUI_JettyBoots_Game_C::Seed' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, LastReplay) == 0x00032C, "Member 'UUI_JettyBoots_Game_C::LastReplay' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, OnGameTicked) == 0x000348, "Member 'UUI_JettyBoots_Game_C::OnGameTicked' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, OnGameStateChanged) == 0x000358, "Member 'UUI_JettyBoots_Game_C::OnGameStateChanged' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, OnReplayStateChanged) == 0x000368, "Member 'UUI_JettyBoots_Game_C::OnReplayStateChanged' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, UpForce) == 0x000378, "Member 'UUI_JettyBoots_Game_C::UpForce' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, Gravity) == 0x00037C, "Member 'UUI_JettyBoots_Game_C::Gravity' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, OnGateCleared) == 0x000380, "Member 'UUI_JettyBoots_Game_C::OnGateCleared' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, JetBoostAudio) == 0x000390, "Member 'UUI_JettyBoots_Game_C::JetBoostAudio' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, LevelSettings) == 0x000398, "Member 'UUI_JettyBoots_Game_C::LevelSettings' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, EndGateType) == 0x0003B0, "Member 'UUI_JettyBoots_Game_C::EndGateType' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, OnPointsGathered) == 0x0003B8, "Member 'UUI_JettyBoots_Game_C::OnPointsGathered' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, ShoutLevelCompleted) == 0x0003C8, "Member 'UUI_JettyBoots_Game_C::ShoutLevelCompleted' has a wrong offset!");
static_assert(offsetof(UUI_JettyBoots_Game_C, ShoutPlayerDied) == 0x0003D0, "Member 'UUI_JettyBoots_Game_C::ShoutPlayerDied' has a wrong offset!");

}

