#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_PerkInfoBox

#include "Basic.hpp"

#include "ITM_PerkInfoBox_classes.hpp"
#include "ITM_PerkInfoBox_parameters.hpp"


namespace SDK
{

// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.ExecuteUbergraph_ITM_PerkInfoBox
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_PerkInfoBox_C::ExecuteUbergraph_ITM_PerkInfoBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_PerkInfoBox_C", "ExecuteUbergraph_ITM_PerkInfoBox");

	Params::ITM_PerkInfoBox_C_ExecuteUbergraph_ITM_PerkInfoBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.Update
// (BlueprintCallable, BlueprintEvent)

void UITM_PerkInfoBox_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_PerkInfoBox_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_PerkInfoBox_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_PerkInfoBox_C", "PreConstruct");

	Params::ITM_PerkInfoBox_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UITM_PerkInfoBox_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_PerkInfoBox_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.GetEquippedPerksByType
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayerCharacterID*               InCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPerkUsageType                          InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UPerkAsset*>               Perks                                                  (Parm, OutParm)

void UITM_PerkInfoBox_C::GetEquippedPerksByType(class UPlayerCharacterID* InCharacter, EPerkUsageType InType, TArray<class UPerkAsset*>* Perks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_PerkInfoBox_C", "GetEquippedPerksByType");

	Params::ITM_PerkInfoBox_C_GetEquippedPerksByType Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);

	if (Perks != nullptr)
		*Perks = std::move(Parms.Perks);
}


// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.CreateSlots
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     InSlotsBox                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPerkUsageType                          InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_PerkInfoBox_C::CreateSlots(class UPanelWidget* InSlotsBox, EPerkUsageType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_PerkInfoBox_C", "CreateSlots");

	Params::ITM_PerkInfoBox_C_CreateSlots Parms{};

	Parms.InSlotsBox = InSlotsBox;
	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_PerkInfoBox.ITM_PerkInfoBox_C.GetEquippedPerkAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Idx                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UPerkAsset*>               Perks                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UPerkAsset*                       Perk                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_PerkInfoBox_C::GetEquippedPerkAt(int32 Idx, TArray<class UPerkAsset*>& Perks, class UPerkAsset** Perk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_PerkInfoBox_C", "GetEquippedPerkAt");

	Params::ITM_PerkInfoBox_C_GetEquippedPerkAt Parms{};

	Parms.Idx = Idx;
	Parms.Perks = std::move(Perks);

	UObject::ProcessEvent(Func, &Parms);

	Perks = std::move(Parms.Perks);

	if (Perk != nullptr)
		*Perk = Parms.Perk;
}

}

