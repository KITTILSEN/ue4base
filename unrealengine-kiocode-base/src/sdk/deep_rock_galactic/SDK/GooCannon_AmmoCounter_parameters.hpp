#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GooCannon_AmmoCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GooCannon_AmmoCounter.GooCannon_AmmoCounter_C.UpdateClipCount
// 0x0038 (0x0038 - 0x0000)
struct GooCannon_AmmoCounter_C_UpdateClipCount final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54A7[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54A8[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetNumber_OutValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetNumber_OutValue_1;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GooCannon_AmmoCounter_C_UpdateClipCount) == 0x000008, "Wrong alignment on GooCannon_AmmoCounter_C_UpdateClipCount");
static_assert(sizeof(GooCannon_AmmoCounter_C_UpdateClipCount) == 0x000038, "Wrong size on GooCannon_AmmoCounter_C_UpdateClipCount");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, CallFunc_SetNumber_OutValue) == 0x000028, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::CallFunc_SetNumber_OutValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, CallFunc_SetNumber_OutValue_1) == 0x00002C, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::CallFunc_SetNumber_OutValue_1' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, CallFunc_Less_IntInt_ReturnValue_1) == 0x000030, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateClipCount, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'GooCannon_AmmoCounter_C_UpdateClipCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GooCannon_AmmoCounter.GooCannon_AmmoCounter_C.UpdateAmmoCritical
// 0x0010 (0x0010 - 0x0000)
struct GooCannon_AmmoCounter_C_UpdateAmmoCritical final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GooCannon_AmmoCounter_C_UpdateAmmoCritical) == 0x000008, "Wrong alignment on GooCannon_AmmoCounter_C_UpdateAmmoCritical");
static_assert(sizeof(GooCannon_AmmoCounter_C_UpdateAmmoCritical) == 0x000010, "Wrong size on GooCannon_AmmoCounter_C_UpdateAmmoCritical");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateAmmoCritical, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'GooCannon_AmmoCounter_C_UpdateAmmoCritical::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateAmmoCritical, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'GooCannon_AmmoCounter_C_UpdateAmmoCritical::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateAmmoCritical, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000009, "Member 'GooCannon_AmmoCounter_C_UpdateAmmoCritical::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_UpdateAmmoCritical, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'GooCannon_AmmoCounter_C_UpdateAmmoCritical::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GooCannon_AmmoCounter.GooCannon_AmmoCounter_C.SetNumber
// 0x0030 (0x0030 - 0x0000)
struct GooCannon_AmmoCounter_C_SetNumber final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54A9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             Label;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutValue;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54AA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(GooCannon_AmmoCounter_C_SetNumber) == 0x000008, "Wrong alignment on GooCannon_AmmoCounter_C_SetNumber");
static_assert(sizeof(GooCannon_AmmoCounter_C_SetNumber) == 0x000030, "Wrong size on GooCannon_AmmoCounter_C_SetNumber");
static_assert(offsetof(GooCannon_AmmoCounter_C_SetNumber, Value) == 0x000000, "Member 'GooCannon_AmmoCounter_C_SetNumber::Value' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_SetNumber, Label) == 0x000008, "Member 'GooCannon_AmmoCounter_C_SetNumber::Label' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_SetNumber, OutValue) == 0x000010, "Member 'GooCannon_AmmoCounter_C_SetNumber::OutValue' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_SetNumber, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'GooCannon_AmmoCounter_C_SetNumber::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function GooCannon_AmmoCounter.GooCannon_AmmoCounter_C.SetTotalCount
// 0x0004 (0x0004 - 0x0000)
struct GooCannon_AmmoCounter_C_SetTotalCount final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GooCannon_AmmoCounter_C_SetTotalCount) == 0x000004, "Wrong alignment on GooCannon_AmmoCounter_C_SetTotalCount");
static_assert(sizeof(GooCannon_AmmoCounter_C_SetTotalCount) == 0x000004, "Wrong size on GooCannon_AmmoCounter_C_SetTotalCount");
static_assert(offsetof(GooCannon_AmmoCounter_C_SetTotalCount, Value) == 0x000000, "Member 'GooCannon_AmmoCounter_C_SetTotalCount::Value' has a wrong offset!");

// Function GooCannon_AmmoCounter.GooCannon_AmmoCounter_C.SetClipCount
// 0x0004 (0x0004 - 0x0000)
struct GooCannon_AmmoCounter_C_SetClipCount final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GooCannon_AmmoCounter_C_SetClipCount) == 0x000004, "Wrong alignment on GooCannon_AmmoCounter_C_SetClipCount");
static_assert(sizeof(GooCannon_AmmoCounter_C_SetClipCount) == 0x000004, "Wrong size on GooCannon_AmmoCounter_C_SetClipCount");
static_assert(offsetof(GooCannon_AmmoCounter_C_SetClipCount, Value) == 0x000000, "Member 'GooCannon_AmmoCounter_C_SetClipCount::Value' has a wrong offset!");

// Function GooCannon_AmmoCounter.GooCannon_AmmoCounter_C.ExecuteUbergraph_GooCannon_AmmoCounter
// 0x0010 (0x0010 - 0x0000)
struct GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Value_1;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Value;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetNumber_OutValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter) == 0x000004, "Wrong alignment on GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter");
static_assert(sizeof(GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter) == 0x000010, "Wrong size on GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter");
static_assert(offsetof(GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter, EntryPoint) == 0x000000, "Member 'GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter::EntryPoint' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter, K2Node_Event_Value_1) == 0x000004, "Member 'GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter, K2Node_Event_Value) == 0x000008, "Member 'GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter, CallFunc_SetNumber_OutValue) == 0x00000C, "Member 'GooCannon_AmmoCounter_C_ExecuteUbergraph_GooCannon_AmmoCounter::CallFunc_SetNumber_OutValue' has a wrong offset!");

}

