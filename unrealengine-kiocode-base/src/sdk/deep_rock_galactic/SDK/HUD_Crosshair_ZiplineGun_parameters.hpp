#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Crosshair_ZiplineGun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function HUD_Crosshair_ZiplineGun.HUD_Crosshair_ZiplineGun_C.SetMinMaxAngle
// 0x0008 (0x0008 - 0x0000)
struct HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle final
{
public:
	float                                         Min;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle) == 0x000004, "Wrong alignment on HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle");
static_assert(sizeof(HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle) == 0x000008, "Wrong size on HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle, Min) == 0x000000, "Member 'HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle::Min' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle, Max) == 0x000004, "Member 'HUD_Crosshair_ZiplineGun_C_SetMinMaxAngle::Max' has a wrong offset!");

// Function HUD_Crosshair_ZiplineGun.HUD_Crosshair_ZiplineGun_C.DistanceMessage
// 0x0108 (0x0108 - 0x0000)
struct HUD_Crosshair_ZiplineGun_C_DistanceMessage final
{
public:
	float                                         Dist;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InRange;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E26[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E27[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0060(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0078(0x0028)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
};
static_assert(alignof(HUD_Crosshair_ZiplineGun_C_DistanceMessage) == 0x000008, "Wrong alignment on HUD_Crosshair_ZiplineGun_C_DistanceMessage");
static_assert(sizeof(HUD_Crosshair_ZiplineGun_C_DistanceMessage) == 0x000108, "Wrong size on HUD_Crosshair_ZiplineGun_C_DistanceMessage");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, Dist) == 0x000000, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::Dist' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, InRange) == 0x000004, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::InRange' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, Temp_bool_Variable) == 0x000005, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, CallFunc_Round_ReturnValue) == 0x000008, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, K2Node_Select_Default) == 0x000050, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, CallFunc_MakeLiteralText_ReturnValue) == 0x000060, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, K2Node_MakeStruct_SlateColor) == 0x000078, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, K2Node_MakeArray_Array) == 0x0000E0, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_DistanceMessage, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'HUD_Crosshair_ZiplineGun_C_DistanceMessage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function HUD_Crosshair_ZiplineGun.HUD_Crosshair_ZiplineGun_C.FailMessage
// 0x0040 (0x0040 - 0x0000)
struct HUD_Crosshair_ZiplineGun_C_FailMessage final
{
public:
	class FText                                   Msg;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(HUD_Crosshair_ZiplineGun_C_FailMessage) == 0x000008, "Wrong alignment on HUD_Crosshair_ZiplineGun_C_FailMessage");
static_assert(sizeof(HUD_Crosshair_ZiplineGun_C_FailMessage) == 0x000040, "Wrong size on HUD_Crosshair_ZiplineGun_C_FailMessage");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_FailMessage, Msg) == 0x000000, "Member 'HUD_Crosshair_ZiplineGun_C_FailMessage::Msg' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_FailMessage, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'HUD_Crosshair_ZiplineGun_C_FailMessage::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function HUD_Crosshair_ZiplineGun.HUD_Crosshair_ZiplineGun_C.SetText
// 0x0058 (0x0058 - 0x0000)
struct HUD_Crosshair_ZiplineGun_C_SetText final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E28[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E29[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(HUD_Crosshair_ZiplineGun_C_SetText) == 0x000008, "Wrong alignment on HUD_Crosshair_ZiplineGun_C_SetText");
static_assert(sizeof(HUD_Crosshair_ZiplineGun_C_SetText) == 0x000058, "Wrong size on HUD_Crosshair_ZiplineGun_C_SetText");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetText, Value) == 0x000000, "Member 'HUD_Crosshair_ZiplineGun_C_SetText::Value' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetText, Temp_bool_Variable) == 0x000018, "Member 'HUD_Crosshair_ZiplineGun_C_SetText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetText, Temp_byte_Variable) == 0x000019, "Member 'HUD_Crosshair_ZiplineGun_C_SetText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetText, Temp_byte_Variable_1) == 0x00001A, "Member 'HUD_Crosshair_ZiplineGun_C_SetText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetText, CallFunc_MenuColors_OutputColor) == 0x00001C, "Member 'HUD_Crosshair_ZiplineGun_C_SetText::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetText, K2Node_Select_Default) == 0x00002C, "Member 'HUD_Crosshair_ZiplineGun_C_SetText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_SetText, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'HUD_Crosshair_ZiplineGun_C_SetText::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function HUD_Crosshair_ZiplineGun.HUD_Crosshair_ZiplineGun_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_Crosshair_ZiplineGun_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Crosshair_ZiplineGun_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_Crosshair_ZiplineGun_C_PreConstruct");
static_assert(sizeof(HUD_Crosshair_ZiplineGun_C_PreConstruct) == 0x000001, "Wrong size on HUD_Crosshair_ZiplineGun_C_PreConstruct");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_Crosshair_ZiplineGun_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_Crosshair_ZiplineGun.HUD_Crosshair_ZiplineGun_C.ExecuteUbergraph_HUD_Crosshair_ZiplineGun
// 0x0008 (0x0008 - 0x0000)
struct HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun) == 0x000004, "Wrong alignment on HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun");
static_assert(sizeof(HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun) == 0x000008, "Wrong size on HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun, EntryPoint) == 0x000000, "Member 'HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun, K2Node_Event_IsDesignTime) == 0x000004, "Member 'HUD_Crosshair_ZiplineGun_C_ExecuteUbergraph_HUD_Crosshair_ZiplineGun::K2Node_Event_IsDesignTime' has a wrong offset!");

}

