#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_CampaignItem_Member

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_CampaignItem_Member.ITM_CampaignItem_Member_C
// 0x0020 (0x0280 - 0x0260)
class UITM_CampaignItem_Member_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFSDLabelWidget*                        FSDLabelWidget_0;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 MemberName;                                        // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_ITM_CampaignItem_Member(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_CampaignItem_Member_C">();
	}
	static class UITM_CampaignItem_Member_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_CampaignItem_Member_C>();
	}
};
static_assert(alignof(UITM_CampaignItem_Member_C) == 0x000008, "Wrong alignment on UITM_CampaignItem_Member_C");
static_assert(sizeof(UITM_CampaignItem_Member_C) == 0x000280, "Wrong size on UITM_CampaignItem_Member_C");
static_assert(offsetof(UITM_CampaignItem_Member_C, UberGraphFrame) == 0x000260, "Member 'UITM_CampaignItem_Member_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_CampaignItem_Member_C, FSDLabelWidget_0) == 0x000268, "Member 'UITM_CampaignItem_Member_C::FSDLabelWidget_0' has a wrong offset!");
static_assert(offsetof(UITM_CampaignItem_Member_C, MemberName) == 0x000270, "Member 'UITM_CampaignItem_Member_C::MemberName' has a wrong offset!");

}

