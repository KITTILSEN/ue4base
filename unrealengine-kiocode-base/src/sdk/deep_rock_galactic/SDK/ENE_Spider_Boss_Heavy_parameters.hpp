#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ENE_Spider_Boss_Heavy

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Spider_Boss_Heavy_State_structs.hpp"


namespace SDK::Params
{

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.SetupWeakspotGlow
// 0x0010 (0x0010 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow final
{
public:
	int32                                         CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_1;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_2;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_3;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow) == 0x000004, "Wrong alignment on ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow) == 0x000010, "Wrong size on ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow, CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow::CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow, CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_1) == 0x000004, "Member 'ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow::CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow, CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_2) == 0x000008, "Member 'ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow::CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow, CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_3) == 0x00000C, "Member 'ENE_Spider_Boss_Heavy_C_SetupWeakspotGlow::CallFunc_SetUpWeakPointGlowOnMesh_ReturnValue_3' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.TrySelectDeathAnimation
// 0x002C (0x002C - 0x0000)
struct ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation final
{
public:
	bool                                          WasWeakpoint;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BCC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimationIndex;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasSelectedAnimation;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BCD[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation) == 0x000004, "Wrong alignment on ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation) == 0x00002C, "Wrong size on ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, WasWeakpoint) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::WasWeakpoint' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, AnimationIndex) == 0x000004, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::AnimationIndex' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, HasSelectedAnimation) == 0x000008, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::HasSelectedAnimation' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, CallFunc_GetActorUpVector_ReturnValue) == 0x00000C, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, CallFunc_BreakVector_X) == 0x000018, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, CallFunc_BreakVector_Y) == 0x00001C, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, CallFunc_BreakVector_Z) == 0x000020, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000024, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'ENE_Spider_Boss_Heavy_C_TrySelectDeathAnimation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.SetArmorMeshState
// 0x0020 (0x0020 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_SetArmorMeshState final
{
public:
	bool                                          ArmorOpen;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BCE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_Spider_Boss_Heavy_C*               K2Node_DynamicCast_AsABP_Spider_Boss_Heavy;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_SetArmorMeshState) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Heavy_C_SetArmorMeshState");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_SetArmorMeshState) == 0x000020, "Wrong size on ENE_Spider_Boss_Heavy_C_SetArmorMeshState");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetArmorMeshState, ArmorOpen) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_SetArmorMeshState::ArmorOpen' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetArmorMeshState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'ENE_Spider_Boss_Heavy_C_SetArmorMeshState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetArmorMeshState, K2Node_DynamicCast_AsABP_Spider_Boss_Heavy) == 0x000010, "Member 'ENE_Spider_Boss_Heavy_C_SetArmorMeshState::K2Node_DynamicCast_AsABP_Spider_Boss_Heavy' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetArmorMeshState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ENE_Spider_Boss_Heavy_C_SetArmorMeshState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.ShouldExplode
// 0x0018 (0x0018 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_ShouldExplode final
{
public:
	TArray<class UDamageTag*>                     Param_Tags;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_ShouldExplode) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Heavy_C_ShouldExplode");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_ShouldExplode) == 0x000018, "Wrong size on ENE_Spider_Boss_Heavy_C_ShouldExplode");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ShouldExplode, Param_Tags) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_ShouldExplode::Param_Tags' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ShouldExplode, ReturnValue) == 0x000010, "Member 'ENE_Spider_Boss_Heavy_C_ShouldExplode::ReturnValue' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.OnRep_HeavyTankState
// 0x0048 (0x0048 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState final
{
public:
	class UPhysicsAsset*                          Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_2;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESpider_Boss_Heavy_State                      Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BCF[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsAsset*                          K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD0[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDAIController*                       CallFunc_GetFSDAIController_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIC_Spider_Boss_Heavy_C*               K2Node_DynamicCast_AsAIC_Spider_Boss_Heavy;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PopActiveStatusEffect_ReturnValue;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PushActiveStatusEffect_ReturnValue;       // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState) == 0x000048, "Wrong size on ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, Temp_object_Variable) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, Temp_object_Variable_1) == 0x000008, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, Temp_object_Variable_2) == 0x000010, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, CallFunc_HasAuthority_ReturnValue_1) == 0x000019, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, CallFunc_HasAuthority_ReturnValue_2) == 0x00001A, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, K2Node_SwitchEnum_CmpSuccess) == 0x00001B, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, Temp_byte_Variable) == 0x00001C, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, K2Node_Select_Default) == 0x000020, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, CallFunc_HasAuthority_ReturnValue_3) == 0x000028, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, CallFunc_GetFSDAIController_ReturnValue) == 0x000030, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::CallFunc_GetFSDAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, K2Node_DynamicCast_AsAIC_Spider_Boss_Heavy) == 0x000038, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::K2Node_DynamicCast_AsAIC_Spider_Boss_Heavy' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, CallFunc_PopActiveStatusEffect_ReturnValue) == 0x000041, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::CallFunc_PopActiveStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState, CallFunc_PushActiveStatusEffect_ReturnValue) == 0x000042, "Member 'ENE_Spider_Boss_Heavy_C_OnRep_HeavyTankState::CallFunc_PushActiveStatusEffect_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.IsArmorIntact
// 0x0006 (0x0006 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_IsArmorIntact final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_IsArmorIntact) == 0x000001, "Wrong alignment on ENE_Spider_Boss_Heavy_C_IsArmorIntact");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_IsArmorIntact) == 0x000006, "Wrong size on ENE_Spider_Boss_Heavy_C_IsArmorIntact");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_IsArmorIntact, ReturnValue) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_IsArmorIntact::ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_IsArmorIntact, CallFunc_IsAlive_ReturnValue) == 0x000001, "Member 'ENE_Spider_Boss_Heavy_C_IsArmorIntact::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_IsArmorIntact, CallFunc_IsAlive_ReturnValue_1) == 0x000002, "Member 'ENE_Spider_Boss_Heavy_C_IsArmorIntact::CallFunc_IsAlive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_IsArmorIntact, CallFunc_IsAlive_ReturnValue_2) == 0x000003, "Member 'ENE_Spider_Boss_Heavy_C_IsArmorIntact::CallFunc_IsAlive_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_IsArmorIntact, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'ENE_Spider_Boss_Heavy_C_IsArmorIntact::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_IsArmorIntact, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'ENE_Spider_Boss_Heavy_C_IsArmorIntact::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.SetWeakpointVisibility
// 0x0048 (0x0048 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleSubHealthComponent*        Health;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility) == 0x000048, "Wrong size on ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility, Visible) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility::Visible' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility, Health) == 0x000008, "Member 'ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility::Health' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000010, "Member 'ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility, K2Node_DynamicCast_AsPrimitive_Component) == 0x000028, "Member 'ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000038, "Member 'ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000040, "Member 'ENE_Spider_Boss_Heavy_C_SetWeakpointVisibility::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature final
{
public:
	class UDestructibleSubHealthComponent*        SubHealth;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature) == 0x000008, "Wrong size on ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature, SubHealth) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth_K2Node_ComponentBoundEvent_0_SubHealthDestroyed__DelegateSignature::SubHealth' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.BndEvt__DestructibleSubHealth1_K2Node_ComponentBoundEvent_1_SubHealthDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth1_K2Node_ComponentBoundEvent_1_SubHealthDestroyed__DelegateSignature final
{
public:
	class UDestructibleSubHealthComponent*        SubHealth;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth1_K2Node_ComponentBoundEvent_1_SubHealthDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth1_K2Node_ComponentBoundEvent_1_SubHealthDestroyed__DelegateSignature");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth1_K2Node_ComponentBoundEvent_1_SubHealthDestroyed__DelegateSignature) == 0x000008, "Wrong size on ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth1_K2Node_ComponentBoundEvent_1_SubHealthDestroyed__DelegateSignature");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth1_K2Node_ComponentBoundEvent_1_SubHealthDestroyed__DelegateSignature, SubHealth) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth1_K2Node_ComponentBoundEvent_1_SubHealthDestroyed__DelegateSignature::SubHealth' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.BndEvt__DestructibleSubHealth2_K2Node_ComponentBoundEvent_2_SubHealthDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth2_K2Node_ComponentBoundEvent_2_SubHealthDestroyed__DelegateSignature final
{
public:
	class UDestructibleSubHealthComponent*        SubHealth;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth2_K2Node_ComponentBoundEvent_2_SubHealthDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth2_K2Node_ComponentBoundEvent_2_SubHealthDestroyed__DelegateSignature");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth2_K2Node_ComponentBoundEvent_2_SubHealthDestroyed__DelegateSignature) == 0x000008, "Wrong size on ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth2_K2Node_ComponentBoundEvent_2_SubHealthDestroyed__DelegateSignature");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth2_K2Node_ComponentBoundEvent_2_SubHealthDestroyed__DelegateSignature, SubHealth) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_BndEvt__DestructibleSubHealth2_K2Node_ComponentBoundEvent_2_SubHealthDestroyed__DelegateSignature::SubHealth' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.OnMessageAI
// 0x0008 (0x0008 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_OnMessageAI final
{
public:
	class FName                                   TriggerName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_OnMessageAI) == 0x000004, "Wrong alignment on ENE_Spider_Boss_Heavy_C_OnMessageAI");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_OnMessageAI) == 0x000008, "Wrong size on ENE_Spider_Boss_Heavy_C_OnMessageAI");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnMessageAI, TriggerName) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_OnMessageAI::TriggerName' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature) == 0x000004, "Wrong alignment on ENE_Spider_Boss_Heavy_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature) == 0x000004, "Wrong size on ENE_Spider_Boss_Heavy_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature, Amount) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_BndEvt__HealthDamageTracker_K2Node_ComponentBoundEvent_3_DamageSig__DelegateSignature::Amount' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.PlayAnimatedDeath
// 0x0004 (0x0004 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_PlayAnimatedDeath final
{
public:
	int32                                         AnimationIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_PlayAnimatedDeath) == 0x000004, "Wrong alignment on ENE_Spider_Boss_Heavy_C_PlayAnimatedDeath");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_PlayAnimatedDeath) == 0x000004, "Wrong size on ENE_Spider_Boss_Heavy_C_PlayAnimatedDeath");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_PlayAnimatedDeath, AnimationIndex) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_PlayAnimatedDeath::AnimationIndex' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.SpawnProjectile
// 0x0040 (0x0040 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_SpawnProjectile final
{
public:
	TSubclassOf<class AActor>                     Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_2BD3[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_SpawnProjectile) == 0x000010, "Wrong alignment on ENE_Spider_Boss_Heavy_C_SpawnProjectile");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_SpawnProjectile) == 0x000040, "Wrong size on ENE_Spider_Boss_Heavy_C_SpawnProjectile");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SpawnProjectile, Actor) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_SpawnProjectile::Actor' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SpawnProjectile, Transform) == 0x000010, "Member 'ENE_Spider_Boss_Heavy_C_SpawnProjectile::Transform' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.SetPhysicsAsset
// 0x0008 (0x0008 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_SetPhysicsAsset final
{
public:
	class UPhysicsAsset*                          NewPhysicsAsset;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_SetPhysicsAsset) == 0x000008, "Wrong alignment on ENE_Spider_Boss_Heavy_C_SetPhysicsAsset");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_SetPhysicsAsset) == 0x000008, "Wrong size on ENE_Spider_Boss_Heavy_C_SetPhysicsAsset");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_SetPhysicsAsset, NewPhysicsAsset) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_SetPhysicsAsset::NewPhysicsAsset' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.ExecuteUbergraph_ENE_Spider_Boss_Heavy
// 0x01A0 (0x01A0 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class AActor> Actor, struct FTransform& Transform)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleSubHealthComponent*        K2Node_ComponentBoundEvent_subHealth_2;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleSubHealthComponent*        K2Node_ComponentBoundEvent_subHealth_1;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD6[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_PlaceActorsWithCallback_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsArmorIntact_ReturnValue;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD7[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleSubHealthComponent*        K2Node_ComponentBoundEvent_subHealth;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_triggerName;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD8[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Amount;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPct_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD9[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BDA[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_Spider_Boss_Heavy_C*               K2Node_DynamicCast_AsABP_Spider_Boss_Heavy;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDB[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_Spider_Boss_Heavy_C*               K2Node_DynamicCast_AsABP_Spider_Boss_Heavy_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDC[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_AnimationIndex;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpiderAnimInstance*                    K2Node_DynamicCast_AsSpider_Anim_Instance;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDD[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_1;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BDE[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     K2Node_CustomEvent_actor;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_transform;                      // 0x0110(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BDF[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProjectile;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE0[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectileBase*                        CallFunc_SpawnProjectile_ReturnValue;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE1[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsAsset*                          K2Node_CustomEvent_NewPhysicsAsset;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy) == 0x000010, "Wrong alignment on ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy) == 0x0001A0, "Wrong size on ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, EntryPoint) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::EntryPoint' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_ComponentBoundEvent_subHealth_2) == 0x000020, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_ComponentBoundEvent_subHealth_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_ComponentBoundEvent_subHealth_1) == 0x000028, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_ComponentBoundEvent_subHealth_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_GetProceduralSetup_ReturnValue) == 0x000030, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_GetProceduralSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_MakeArray_Array) == 0x000048, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_PlaceActorsWithCallback_ReturnValue) == 0x000058, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_PlaceActorsWithCallback_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_IsArmorIntact_ReturnValue) == 0x000059, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_IsArmorIntact_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_ComponentBoundEvent_subHealth) == 0x000060, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_ComponentBoundEvent_subHealth' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_Event_triggerName) == 0x000068, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_Event_triggerName' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_SwitchName_CmpSuccess) == 0x000070, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_ComponentBoundEvent_Amount) == 0x000074, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_ComponentBoundEvent_Amount' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_GetHealthPct_ReturnValue) == 0x000078, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_GetHealthPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007C, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007D, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_BooleanAND_ReturnValue) == 0x00007E, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_GetAnimInstance_ReturnValue) == 0x000090, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_DynamicCast_AsABP_Spider_Boss_Heavy) == 0x000098, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_DynamicCast_AsABP_Spider_Boss_Heavy' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000A8, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_DynamicCast_AsABP_Spider_Boss_Heavy_1) == 0x0000B0, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_DynamicCast_AsABP_Spider_Boss_Heavy_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_Event_AnimationIndex) == 0x0000BC, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_Event_AnimationIndex' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0000C0, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_DynamicCast_AsSpider_Anim_Instance) == 0x0000C8, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_DynamicCast_AsSpider_Anim_Instance' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D1, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000D8, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0000E0, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, Temp_object_Variable) == 0x0000E8, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000F0, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, Temp_object_Variable_1) == 0x0000F8, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, Temp_int_Variable) == 0x000100, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_CustomEvent_actor) == 0x000108, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_CustomEvent_actor' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_CustomEvent_transform) == 0x000110, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_CustomEvent_transform' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_BreakTransform_Location) == 0x000140, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_BreakTransform_Rotation) == 0x00014C, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_BreakTransform_Scale) == 0x000158, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_Select_Default) == 0x000168, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_ClassDynamicCast_AsProjectile) == 0x000170, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_ClassDynamicCast_AsProjectile' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_ClassDynamicCast_bSuccess) == 0x000178, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_SpawnProjectile_ReturnValue) == 0x000180, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_SpawnProjectile_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000188, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy, K2Node_CustomEvent_NewPhysicsAsset) == 0x000190, "Member 'ENE_Spider_Boss_Heavy_C_ExecuteUbergraph_ENE_Spider_Boss_Heavy::K2Node_CustomEvent_NewPhysicsAsset' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.OnStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_OnStateChanged__DelegateSignature final
{
public:
	ESpider_Boss_Heavy_State                      State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_OnStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on ENE_Spider_Boss_Heavy_C_OnStateChanged__DelegateSignature");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_OnStateChanged__DelegateSignature) == 0x000001, "Wrong size on ENE_Spider_Boss_Heavy_C_OnStateChanged__DelegateSignature");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_OnStateChanged__DelegateSignature, State) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_OnStateChanged__DelegateSignature::State' has a wrong offset!");

// Function ENE_Spider_Boss_Heavy.ENE_Spider_Boss_Heavy_C.GetIsTargetable
// 0x0004 (0x0004 - 0x0000)
struct ENE_Spider_Boss_Heavy_C_GetIsTargetable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ENE_Spider_Boss_Heavy_C_GetIsTargetable) == 0x000001, "Wrong alignment on ENE_Spider_Boss_Heavy_C_GetIsTargetable");
static_assert(sizeof(ENE_Spider_Boss_Heavy_C_GetIsTargetable) == 0x000004, "Wrong size on ENE_Spider_Boss_Heavy_C_GetIsTargetable");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_GetIsTargetable, ReturnValue) == 0x000000, "Member 'ENE_Spider_Boss_Heavy_C_GetIsTargetable::ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_GetIsTargetable, CallFunc_IsAlive_ReturnValue) == 0x000001, "Member 'ENE_Spider_Boss_Heavy_C_GetIsTargetable::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_GetIsTargetable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'ENE_Spider_Boss_Heavy_C_GetIsTargetable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ENE_Spider_Boss_Heavy_C_GetIsTargetable, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ENE_Spider_Boss_Heavy_C_GetIsTargetable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

