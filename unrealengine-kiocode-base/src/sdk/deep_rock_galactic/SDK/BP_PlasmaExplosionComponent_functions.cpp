#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlasmaExplosionComponent

#include "Basic.hpp"

#include "BP_PlasmaExplosionComponent_classes.hpp"
#include "BP_PlasmaExplosionComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.FindOrCreateDamageComponent
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageComponent*                 DamageComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::FindOrCreateDamageComponent(class AActor* Actor, class UDamageComponent** DamageComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "FindOrCreateDamageComponent");

	Params::BP_PlasmaExplosionComponent_C_FindOrCreateDamageComponent Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (DamageComponent != nullptr)
		*DamageComponent = Parms.DamageComponent;
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.GetFXMeshScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::GetFXMeshScale(float* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "GetFXMeshScale");

	Params::BP_PlasmaExplosionComponent_C_GetFXMeshScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PlasmaExplosionComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.InitializeEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// class UStatusEffect*                    Effect                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           EffectOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::InitializeEffect(class UStatusEffect* Effect, class AActor* EffectOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "InitializeEffect");

	Params::BP_PlasmaExplosionComponent_C_InitializeEffect Parms{};

	Parms.Effect = Effect;
	Parms.EffectOwner = EffectOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.OnDeathEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHealthComponentBase*             HealthComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::OnDeathEvent(class UHealthComponentBase* HealthComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "OnDeathEvent");

	Params::BP_PlasmaExplosionComponent_C_OnDeathEvent Parms{};

	Parms.HealthComponent = HealthComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.BindReload
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Effect_Owner                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::BindReload(class AActor* Effect_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "BindReload");

	Params::BP_PlasmaExplosionComponent_C_BindReload Parms{};

	Parms.Effect_Owner = Effect_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.ReloadEvent
// (BlueprintCallable, BlueprintEvent)

void UBP_PlasmaExplosionComponent_C::ReloadEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "ReloadEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.ExplosionEffects
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExplosionRadius                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFSDPawn*                         TargetPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::ExplosionEffects(const struct FVector& Location, float ExplosionRadius, class AFSDPawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "ExplosionEffects");

	Params::BP_PlasmaExplosionComponent_C_ExplosionEffects Parms{};

	Parms.Location = std::move(Location);
	Parms.ExplosionRadius = ExplosionRadius;
	Parms.TargetPawn = TargetPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "ReceiveEndPlay");

	Params::BP_PlasmaExplosionComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.ResetComponent
// (BlueprintCallable, BlueprintEvent)

void UBP_PlasmaExplosionComponent_C::ResetComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "ResetComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.TrackHealth
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::TrackHealth(float Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "TrackHealth");

	Params::BP_PlasmaExplosionComponent_C_TrackHealth Parms{};

	Parms.Health = Health;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.CalculateDeadBugWalking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::CalculateDeadBugWalking(float Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "CalculateDeadBugWalking");

	Params::BP_PlasmaExplosionComponent_C_CalculateDeadBugWalking Parms{};

	Parms.Health = Health;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlasmaExplosionComponent.BP_PlasmaExplosionComponent_C.ExecuteUbergraph_BP_PlasmaExplosionComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlasmaExplosionComponent_C::ExecuteUbergraph_BP_PlasmaExplosionComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlasmaExplosionComponent_C", "ExecuteUbergraph_BP_PlasmaExplosionComponent");

	Params::BP_PlasmaExplosionComponent_C_ExecuteUbergraph_BP_PlasmaExplosionComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

