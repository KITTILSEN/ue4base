#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_MicroMissileLauncher

#include "Basic.hpp"

#include "WPN_MicroMissileLauncher_classes.hpp"
#include "WPN_MicroMissileLauncher_parameters.hpp"


namespace SDK
{

// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.SetUpgradeModifiers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemUpgrade*                     ItemUpgrade                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_MicroMissileLauncher_C::SetUpgradeModifiers(class UItemUpgrade* ItemUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "SetUpgradeModifiers");

	Params::WPN_MicroMissileLauncher_C_SetUpgradeModifiers Parms{};

	Parms.ItemUpgrade = ItemUpgrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWPN_MicroMissileLauncher_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.CustomEvent1
// (Event, Public, BlueprintEvent)
// Parameters:
// class UItemUpgrade*                     Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_MicroMissileLauncher_C::CustomEvent1(const class UItemUpgrade* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "CustomEvent1");

	Params::WPN_MicroMissileLauncher_C_CustomEvent1 Parms{};

	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.SetHomingTarget
// (BlueprintCallable, BlueprintEvent)

void AWPN_MicroMissileLauncher_C::SetHomingTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "SetHomingTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_MicroMissileLauncher_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "ReceiveTick");

	Params::WPN_MicroMissileLauncher_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.Server_SetHomingLocation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector_NetQuantize              HomingLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AWPN_MicroMissileLauncher_C::Server_SetHomingLocation(const struct FVector_NetQuantize& HomingLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "Server_SetHomingLocation");

	Params::WPN_MicroMissileLauncher_C_Server_SetHomingLocation Parms{};

	Parms.HomingLocation = std::move(HomingLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.All_SetHomingLocation
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector_NetQuantize              HomingLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AWPN_MicroMissileLauncher_C::All_SetHomingLocation(const struct FVector_NetQuantize& HomingLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "All_SetHomingLocation");

	Params::WPN_MicroMissileLauncher_C_All_SetHomingLocation Parms{};

	Parms.HomingLocation = std::move(HomingLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.TriggerCluster
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AWPN_MicroMissileLauncher_C::TriggerCluster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "TriggerCluster");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.OnProjectileSpawned_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AProjectileBase*                  Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_MicroMissileLauncher_C::OnProjectileSpawned_Event(class AProjectileBase* Projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "OnProjectileSpawned_Event");

	Params::WPN_MicroMissileLauncher_C_OnProjectileSpawned_Event Parms{};

	Parms.Projectile = Projectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.OnTriggerCluster
// (Event, Protected, BlueprintEvent)

void AWPN_MicroMissileLauncher_C::OnTriggerCluster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "OnTriggerCluster");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.ExecuteUbergraph_WPN_MicroMissileLauncher
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_MicroMissileLauncher_C::ExecuteUbergraph_WPN_MicroMissileLauncher(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "ExecuteUbergraph_WPN_MicroMissileLauncher");

	Params::WPN_MicroMissileLauncher_C_ExecuteUbergraph_WPN_MicroMissileLauncher Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WPN_MicroMissileLauncher.WPN_MicroMissileLauncher_C.GetGearStatEntry
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState*                  PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGearStatEntry>           Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AWPN_MicroMissileLauncher_C::GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_MicroMissileLauncher_C", "GetGearStatEntry");

	Params::WPN_MicroMissileLauncher_C_GetGearStatEntry Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Stats = std::move(Stats);

	UObject::ProcessEvent(Func, &Parms);

	Stats = std::move(Parms.Stats);
}

}

