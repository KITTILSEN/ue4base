#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HoopsGame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HoopsGame.BP_HoopsGame_C
// 0x0118 (0x03E0 - 0x02C8)
class ABP_HoopsGame_C final : public AHoopsGame
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box2;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          R;                                                 // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          E;                                                 // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box1;                                              // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget_Previous_Scores;                            // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_ScoreBoardPrevious;                           // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget_Score;                                      // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Scoreboard;                                   // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh_SlideAnim;                                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Hoops_Edge;                                      // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Forcefield;                                   // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          FailCollision;                                     // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RestartButton_Mesh;                                // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RestartButton_Collider;                            // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    RestartButton;                                     // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    DestinationRight;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Collision;                                         // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule5;                                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule4;                                          // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule3;                                          // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule2;                                          // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule1;                                          // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HoopMesh;                                          // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_Hoop;                                        // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstantUsable*                         InstantUsable;                                     // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    DestinationLeft;                                   // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFSDAchievement*                        BarrelScoreAchievement;                            // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDAchievement*                        DarwinAwardAchievement;                            // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDAchievement*                        BarrelKickerAchievement;                           // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommunicationComponent*                Communication_Component;                           // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	struct FVector CalculateMovementVector(float NextFlipTime, float DeltaTime, bool bIsMovingRight);
	int32 GetBarrelScoreData(class APhysicsBarrel* Barrel, class APhysicsBarrel** OutBarrel);
	void ReceiveBeginPlay();
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__InstantUsable_K2Node_ComponentBoundEvent_3_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
	void BndEvt__FailCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Cheat_ToggleHoopGameMovement();
	void Set_Latest_Barrel_kicker(class APlayerCharacter* Kicked_by);
	void Event_Player_In_Hoop(class APlayerCharacter* Player);
	void ReceiveTick(float DeltaSeconds);
	void All_PlayComboLostSFX();
	void BndEvt__BP_HoopsGame_Box2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void MoveDirectionChanged();
	void UpdateScoreAchievementProgress();
	void ExecuteUbergraph_BP_HoopsGame(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HoopsGame_C">();
	}
	static class ABP_HoopsGame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HoopsGame_C>();
	}
};
static_assert(alignof(ABP_HoopsGame_C) == 0x000008, "Wrong alignment on ABP_HoopsGame_C");
static_assert(sizeof(ABP_HoopsGame_C) == 0x0003E0, "Wrong size on ABP_HoopsGame_C");
static_assert(offsetof(ABP_HoopsGame_C, UberGraphFrame) == 0x0002C8, "Member 'ABP_HoopsGame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Box2) == 0x0002D0, "Member 'ABP_HoopsGame_C::Box2' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, R) == 0x0002D8, "Member 'ABP_HoopsGame_C::R' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, E) == 0x0002E0, "Member 'ABP_HoopsGame_C::E' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Box1) == 0x0002E8, "Member 'ABP_HoopsGame_C::Box1' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Widget_Previous_Scores) == 0x0002F0, "Member 'ABP_HoopsGame_C::Widget_Previous_Scores' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Mesh_ScoreBoardPrevious) == 0x0002F8, "Member 'ABP_HoopsGame_C::Mesh_ScoreBoardPrevious' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Widget_Score) == 0x000300, "Member 'ABP_HoopsGame_C::Widget_Score' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Mesh_Scoreboard) == 0x000308, "Member 'ABP_HoopsGame_C::Mesh_Scoreboard' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Mesh_SlideAnim) == 0x000310, "Member 'ABP_HoopsGame_C::Mesh_SlideAnim' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, PointLight) == 0x000318, "Member 'ABP_HoopsGame_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, P_Hoops_Edge) == 0x000320, "Member 'ABP_HoopsGame_C::P_Hoops_Edge' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Mesh_Forcefield) == 0x000328, "Member 'ABP_HoopsGame_C::Mesh_Forcefield' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, FailCollision) == 0x000330, "Member 'ABP_HoopsGame_C::FailCollision' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, RestartButton_Mesh) == 0x000338, "Member 'ABP_HoopsGame_C::RestartButton_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, RestartButton_Collider) == 0x000340, "Member 'ABP_HoopsGame_C::RestartButton_Collider' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, RestartButton) == 0x000348, "Member 'ABP_HoopsGame_C::RestartButton' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, DestinationRight) == 0x000350, "Member 'ABP_HoopsGame_C::DestinationRight' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Box) == 0x000358, "Member 'ABP_HoopsGame_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Collision) == 0x000360, "Member 'ABP_HoopsGame_C::Collision' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Capsule5) == 0x000368, "Member 'ABP_HoopsGame_C::Capsule5' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Capsule4) == 0x000370, "Member 'ABP_HoopsGame_C::Capsule4' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Capsule3) == 0x000378, "Member 'ABP_HoopsGame_C::Capsule3' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Capsule2) == 0x000380, "Member 'ABP_HoopsGame_C::Capsule2' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Capsule1) == 0x000388, "Member 'ABP_HoopsGame_C::Capsule1' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Capsule) == 0x000390, "Member 'ABP_HoopsGame_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, HoopMesh) == 0x000398, "Member 'ABP_HoopsGame_C::HoopMesh' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Scene_Hoop) == 0x0003A0, "Member 'ABP_HoopsGame_C::Scene_Hoop' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, InstantUsable) == 0x0003A8, "Member 'ABP_HoopsGame_C::InstantUsable' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, DestinationLeft) == 0x0003B0, "Member 'ABP_HoopsGame_C::DestinationLeft' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, DefaultSceneRoot) == 0x0003B8, "Member 'ABP_HoopsGame_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, BarrelScoreAchievement) == 0x0003C0, "Member 'ABP_HoopsGame_C::BarrelScoreAchievement' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, DarwinAwardAchievement) == 0x0003C8, "Member 'ABP_HoopsGame_C::DarwinAwardAchievement' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, BarrelKickerAchievement) == 0x0003D0, "Member 'ABP_HoopsGame_C::BarrelKickerAchievement' has a wrong offset!");
static_assert(offsetof(ABP_HoopsGame_C, Communication_Component) == 0x0003D8, "Member 'ABP_HoopsGame_C::Communication_Component' has a wrong offset!");

}

