#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_NVIDIA_DLSSFG

#include "Basic.hpp"

#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function Options_NVIDIA_DLSSFG.Options_NVIDIA_DLSSFG_C.ExecuteUbergraph_Options_NVIDIA_DLSSFG
// 0x0070 (0x0070 - 0x0000)
struct Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4CAF[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Value;                  // 0x0018(0x0018)()
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB0[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUFSDStreamlineDLSSGMode                      CallFunc_IndexToMode_Mode;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB1[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_2;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUFSDStreamlineDLSSGMode                      CallFunc_GetFrameGenerationMode_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB2[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ModeToIndex_Index;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG) == 0x000008, "Wrong alignment on Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG");
static_assert(sizeof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG) == 0x000070, "Wrong size on Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, EntryPoint) == 0x000000, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::EntryPoint' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, K2Node_ComponentBoundEvent_Value) == 0x000018, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, K2Node_ComponentBoundEvent_Index) == 0x000030, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000038, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, CallFunc_IndexToMode_Mode) == 0x000040, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::CallFunc_IndexToMode_Mode' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000048, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x000050, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, CallFunc_GetFSDGameUserSettings_ReturnValue_2) == 0x000058, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::CallFunc_GetFSDGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x000060, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, CallFunc_GetFrameGenerationMode_ReturnValue) == 0x000068, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::CallFunc_GetFrameGenerationMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG, CallFunc_ModeToIndex_Index) == 0x00006C, "Member 'Options_NVIDIA_DLSSFG_C_ExecuteUbergraph_Options_NVIDIA_DLSSFG::CallFunc_ModeToIndex_Index' has a wrong offset!");

// Function Options_NVIDIA_DLSSFG.Options_NVIDIA_DLSSFG_C.BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Param_Index;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature) == 0x000020, "Wrong size on Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature, Value) == 0x000000, "Member 'Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature, Param_Index) == 0x000018, "Member 'Options_NVIDIA_DLSSFG_C_BndEvt__Options_NVIDIA_DLSS_Quality_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function Options_NVIDIA_DLSSFG.Options_NVIDIA_DLSSFG_C.IndexToMode
// 0x0010 (0x0010 - 0x0000)
struct Options_NVIDIA_DLSSFG_C_IndexToMode final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUFSDStreamlineDLSSGMode                      Mode;                                              // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUFSDStreamlineDLSSGMode                      Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUFSDStreamlineDLSSGMode                      Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUFSDStreamlineDLSSGMode                      Temp_byte_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUFSDStreamlineDLSSGMode                      K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_NVIDIA_DLSSFG_C_IndexToMode) == 0x000004, "Wrong alignment on Options_NVIDIA_DLSSFG_C_IndexToMode");
static_assert(sizeof(Options_NVIDIA_DLSSFG_C_IndexToMode) == 0x000010, "Wrong size on Options_NVIDIA_DLSSFG_C_IndexToMode");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_IndexToMode, Param_Index) == 0x000000, "Member 'Options_NVIDIA_DLSSFG_C_IndexToMode::Param_Index' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_IndexToMode, Mode) == 0x000004, "Member 'Options_NVIDIA_DLSSFG_C_IndexToMode::Mode' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_IndexToMode, Temp_int_Variable) == 0x000008, "Member 'Options_NVIDIA_DLSSFG_C_IndexToMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_IndexToMode, Temp_byte_Variable) == 0x00000C, "Member 'Options_NVIDIA_DLSSFG_C_IndexToMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_IndexToMode, Temp_byte_Variable_1) == 0x00000D, "Member 'Options_NVIDIA_DLSSFG_C_IndexToMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_IndexToMode, Temp_byte_Variable_2) == 0x00000E, "Member 'Options_NVIDIA_DLSSFG_C_IndexToMode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_IndexToMode, K2Node_Select_Default) == 0x00000F, "Member 'Options_NVIDIA_DLSSFG_C_IndexToMode::K2Node_Select_Default' has a wrong offset!");

// Function Options_NVIDIA_DLSSFG.Options_NVIDIA_DLSSFG_C.ModeToIndex
// 0x001C (0x001C - 0x0000)
struct Options_NVIDIA_DLSSFG_C_ModeToIndex final
{
public:
	EUFSDStreamlineDLSSGMode                      Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUFSDStreamlineDLSSGMode                      Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB5[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_NVIDIA_DLSSFG_C_ModeToIndex) == 0x000004, "Wrong alignment on Options_NVIDIA_DLSSFG_C_ModeToIndex");
static_assert(sizeof(Options_NVIDIA_DLSSFG_C_ModeToIndex) == 0x00001C, "Wrong size on Options_NVIDIA_DLSSFG_C_ModeToIndex");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ModeToIndex, Mode) == 0x000000, "Member 'Options_NVIDIA_DLSSFG_C_ModeToIndex::Mode' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ModeToIndex, Param_Index) == 0x000004, "Member 'Options_NVIDIA_DLSSFG_C_ModeToIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ModeToIndex, Temp_byte_Variable) == 0x000008, "Member 'Options_NVIDIA_DLSSFG_C_ModeToIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ModeToIndex, Temp_int_Variable) == 0x00000C, "Member 'Options_NVIDIA_DLSSFG_C_ModeToIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ModeToIndex, Temp_int_Variable_1) == 0x000010, "Member 'Options_NVIDIA_DLSSFG_C_ModeToIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ModeToIndex, Temp_int_Variable_2) == 0x000014, "Member 'Options_NVIDIA_DLSSFG_C_ModeToIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Options_NVIDIA_DLSSFG_C_ModeToIndex, K2Node_Select_Default) == 0x000018, "Member 'Options_NVIDIA_DLSSFG_C_ModeToIndex::K2Node_Select_Default' has a wrong offset!");

}

