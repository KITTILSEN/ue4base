#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_MenuLabel

#include "Basic.hpp"

#include "ENUM_MenuColors_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_CarbonTypeFace_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Basic_MenuLabel.Basic_MenuLabel_C
// 0x0038 (0x0298 - 0x0260)
class UBasic_MenuLabel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Label;                                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0270(0x0018)(Edit, BlueprintVisible)
	int32                                         Font_Size;                                         // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CarbonTypeface                           Typeface;                                          // 0x028C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Justification;                                     // 0x028D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413B[0x2];                                     // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Min_Desired_Width;                                 // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Text_Color;                                        // 0x0294(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpperCase;                                         // 0x0295(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_Basic_MenuLabel(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetText(const class FText& NewText);
	void SetFontSize(int32 InFontSize);
	void SetTypeFace(ENUM_CarbonTypeface Param_Typeface);
	void SetJustification(ETextJustify InJustification);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Basic_MenuLabel_C">();
	}
	static class UBasic_MenuLabel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasic_MenuLabel_C>();
	}
};
static_assert(alignof(UBasic_MenuLabel_C) == 0x000008, "Wrong alignment on UBasic_MenuLabel_C");
static_assert(sizeof(UBasic_MenuLabel_C) == 0x000298, "Wrong size on UBasic_MenuLabel_C");
static_assert(offsetof(UBasic_MenuLabel_C, UberGraphFrame) == 0x000260, "Member 'UBasic_MenuLabel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBasic_MenuLabel_C, Label) == 0x000268, "Member 'UBasic_MenuLabel_C::Label' has a wrong offset!");
static_assert(offsetof(UBasic_MenuLabel_C, Text) == 0x000270, "Member 'UBasic_MenuLabel_C::Text' has a wrong offset!");
static_assert(offsetof(UBasic_MenuLabel_C, Font_Size) == 0x000288, "Member 'UBasic_MenuLabel_C::Font_Size' has a wrong offset!");
static_assert(offsetof(UBasic_MenuLabel_C, Typeface) == 0x00028C, "Member 'UBasic_MenuLabel_C::Typeface' has a wrong offset!");
static_assert(offsetof(UBasic_MenuLabel_C, Justification) == 0x00028D, "Member 'UBasic_MenuLabel_C::Justification' has a wrong offset!");
static_assert(offsetof(UBasic_MenuLabel_C, Min_Desired_Width) == 0x000290, "Member 'UBasic_MenuLabel_C::Min_Desired_Width' has a wrong offset!");
static_assert(offsetof(UBasic_MenuLabel_C, Text_Color) == 0x000294, "Member 'UBasic_MenuLabel_C::Text_Color' has a wrong offset!");
static_assert(offsetof(UBasic_MenuLabel_C, UpperCase) == 0x000295, "Member 'UBasic_MenuLabel_C::UpperCase' has a wrong offset!");

}

