#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_UpgradeHelpers

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Engine_structs.hpp"
#include "FormatPreviewStatusType_structs.hpp"
#include "FormatWeaponStatType_structs.hpp"


namespace SDK::Params
{

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_HitScan_Bullets
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0018(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D0E[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0088(0x0018)()
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A0(0x001C)(NoDestructor)
	uint8                                         Pad_4D0F[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, __WorldContext) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, GearStatEntry) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, HasUpgradedValue) == 0x000080, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, CallFunc_MakeLiteralText_ReturnValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan_Bullets::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Capacity
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Capacity final
{
public:
	class UClass*                                 UpgradedItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComponentIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D10[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0088(0x0018)()
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A0(0x001C)(NoDestructor)
	uint8                                         Pad_4D11[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Capacity) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Capacity");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Capacity) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Capacity");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, UpgradedItem) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::UpgradedItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, ComponentIndex) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::ComponentIndex' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, CallFunc_MakeLiteralText_ReturnValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Capacity, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Capacity::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Drills
// 0x01B8 (0x01B8 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Drills final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDoubleDrillUpgradeType                       UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D12[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          Has_Upgraded_Value;                                // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDoubleDrillUpgradeType                       Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D13[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0108(0x0018)()
	EDoubleDrillUpgradeType                       Temp_byte_Variable_1;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D14[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D15[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0148(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Drills) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Drills");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Drills) == 0x0001B8, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Drills");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Has_Upgraded_Value) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Has_Upgraded_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_text_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_text_Variable_2) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_text_Variable_3) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_text_Variable_4) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_byte_Variable_1) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_byte_Variable_2) == 0x000121, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, K2Node_Select_Default) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_byte_Variable_3) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_byte_Variable_4) == 0x000141, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_byte_Variable_5) == 0x000142, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, Temp_byte_Variable_6) == 0x000143, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, K2Node_Select_Default_1) == 0x000144, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Drills, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Drills::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Flare_Base
// 0x0180 (0x0180 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Flare_Base final
{
public:
	class UClass*                                 FlareClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlareUpgradeType                             UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D16[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	EFlareUpgradeType                             Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D17[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatWeaponStatType                         Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlareUpgradeType                             Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default;                             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D18[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00F8(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0110(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Flare_Base");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base) == 0x000180, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Flare_Base");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, FlareClass) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::FlareClass' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Temp_byte_Variable) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, K2Node_Select_Default) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, K2Node_Select_Default_1) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flare_Base, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000178, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flare_Base::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Item
// 0x01C0 (0x01C0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Item final
{
public:
	class AFSDPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInventoryItemUpgradeType                     UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D19[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EInventoryItemUpgradeType                     Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1A[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInventoryItemUpgradeType                     Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1B[0x1];                                     // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0110(0x0018)()
	EInventoryItemUpgradeType                     Temp_byte_Variable_7;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1C[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0130(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1D[0x2];                                     // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0150(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Item) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Item");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Item) == 0x0001C0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Item");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Player) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Item) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, K2Node_Select_Default) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_text_Variable_3) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_text_Variable_4) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_7) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, K2Node_Select_Default_1) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_8) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_9) == 0x000149, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_10) == 0x00014A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_11) == 0x00014B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, Temp_byte_Variable_12) == 0x00014C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, K2Node_Select_Default_2) == 0x00014D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Item, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Item::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_SingleUsable_UseDuration
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SubItem;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0088(0x0018)()
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A0(0x001C)(NoDestructor)
	uint8                                         Pad_4D1E[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, SubItem) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::SubItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, Player) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, CallFunc_MakeLiteralText_ReturnValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SingleUsable_UseDuration::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_HitScan
// 0x02B0 (0x02B0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_HitScan final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitScanBaseUpgradeType                       UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHitScanBaseUpgradeType                       Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D20[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_9;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_10;                             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_11;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_12;                             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_13;                             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_14;                             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitScanBaseUpgradeType                       Temp_byte_Variable_15;                             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_16;                             // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_17;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_18;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_19;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_20;                             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_21;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_22;                             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_23;                             // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_24;                             // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_25;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_26;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_27;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_28;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_29;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitScanBaseUpgradeType                       Temp_byte_Variable_30;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D21[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x01B8(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x01D0(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x01E8(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0200(0x0018)()
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D22[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0220(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D23[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0240(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_HitScan) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_HitScan");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_HitScan) == 0x0002B0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_HitScan");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, HasAnyupgrades) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_8) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_9) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_10) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_11) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_12) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_13) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_14) == 0x0000B5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_15) == 0x0000B6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_16) == 0x0000B7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_17) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_18) == 0x0000B9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_19) == 0x0000BA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_20) == 0x0000BB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_21) == 0x0000BC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_22) == 0x0000BD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_23) == 0x0000BE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_24) == 0x0000BF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_25) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_26) == 0x0000C1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_27) == 0x0000C2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_28) == 0x0000C3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_29) == 0x0000C4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_byte_Variable_30) == 0x0000C5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_1) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_2) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_3) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_4) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_5) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_6) == 0x000158, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_7) == 0x000170, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_8) == 0x000188, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_9) == 0x0001A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_10) == 0x0001B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_11) == 0x0001D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_12) == 0x0001E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, Temp_text_Variable_13) == 0x000200, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, K2Node_Select_Default) == 0x000218, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, K2Node_Select_Default_1) == 0x000220, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, K2Node_Select_Default_2) == 0x000238, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000240, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitScan, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0002A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitScan::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Damage
// 0x0368 (0x0368 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Damage final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UpgradedItem;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageUpgrade                                UpgradeType;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D24[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Prefix;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EDamageComponentType                          DamageComponentType;                               // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D25[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0048(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D26[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00B4(0x001C)(NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDamageUpgrade                                Temp_byte_Variable;                                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_1;                              // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageUpgrade                                Temp_byte_Variable_14;                             // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0180(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x01B0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x01C8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x01E0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x01F8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0210(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0228(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0240(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0258(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D27[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0278(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02C8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x02E0(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x02F8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Damage) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Damage");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Damage) == 0x000368, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Damage");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, UpgradedItem) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::UpgradedItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Player) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, UpgradeType) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Prefix) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Prefix' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, DamageComponentType) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::DamageComponentType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, __WorldContext) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, GearStatEntry) == 0x000048, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, HasUpgradedValue) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_bool_Variable) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, CallFunc_TextIsEmpty_ReturnValue) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable) == 0x000111, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_1) == 0x000112, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_2) == 0x000113, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_3) == 0x000114, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_4) == 0x000115, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_5) == 0x000116, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_6) == 0x000117, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_7) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_8) == 0x000119, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_9) == 0x00011A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_10) == 0x00011B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_11) == 0x00011C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_12) == 0x00011D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_13) == 0x00011E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_byte_Variable_14) == 0x00011F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_1) == 0x000138, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_2) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_3) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_4) == 0x000180, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_5) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_6) == 0x0001B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_7) == 0x0001C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_8) == 0x0001E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_9) == 0x0001F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_10) == 0x000210, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_11) == 0x000228, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, Temp_text_Variable_12) == 0x000240, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, K2Node_Select_Default) == 0x000258, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, K2Node_Select_Default_1) == 0x000270, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000278, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, K2Node_MakeArray_Array) == 0x0002B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, CallFunc_Format_ReturnValue) == 0x0002C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, K2Node_Select_Default_2) == 0x0002E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0002F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Damage, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000360, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Damage::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_AmmoDriven
// 0x0310 (0x0310 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmmoDrivenWeapnUpgradeType                   UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideStatType;                                  // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFormatWeaponStatType                         StatTypeOverride;                                  // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D28[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFormatWeaponStatType                         StatFormatType;                                    // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D29[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EAmmoDrivenWeapnUpgradeType                   Temp_byte_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_9;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_10;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_11;                             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_12;                             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_13;                             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_14;                             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_15;                             // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_16;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_17;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_18;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmmoDrivenWeapnUpgradeType                   Temp_byte_Variable_19;                             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_20;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_21;                             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_22;                             // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_23;                             // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_24;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_25;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_26;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_27;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_28;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_29;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_30;                             // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_31;                             // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_32;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_33;                             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_34;                             // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_35;                             // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_36;                             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_37;                             // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmmoDrivenWeapnUpgradeType                   Temp_byte_Variable_38;                             // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2A[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0178(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0190(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x01D8(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x01F0(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0208(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0220(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0238(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x0250(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x0268(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0280(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_3;                           // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2B[0x5];                                     // 0x029B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x02A0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven) == 0x000310, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, OverrideStatType) == 0x000011, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::OverrideStatType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, StatTypeOverride) == 0x000012, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::StatTypeOverride' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, HasAnyupgrades) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, StatFormatType) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::StatFormatType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_bool_Variable) == 0x00008A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_1) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_2) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_3) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_4) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_5) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_6) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_7) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_8) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_9) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_10) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_11) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_12) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_13) == 0x0000B5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_14) == 0x0000B6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_15) == 0x0000B7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_16) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_17) == 0x0000B9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_18) == 0x0000BA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_19) == 0x0000BB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_20) == 0x0000BC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_21) == 0x0000BD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_22) == 0x0000BE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_23) == 0x0000BF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_24) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_25) == 0x0000C1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_26) == 0x0000C2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_27) == 0x0000C3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_28) == 0x0000C4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_29) == 0x0000C5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_30) == 0x0000C6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_31) == 0x0000C7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_32) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_33) == 0x0000C9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_34) == 0x0000CA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_35) == 0x0000CB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_36) == 0x0000CC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_37) == 0x0000CD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_byte_Variable_38) == 0x0000CE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_1) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_2) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_3) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_4) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_5) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_6) == 0x000160, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_7) == 0x000178, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_8) == 0x000190, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_9) == 0x0001A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_10) == 0x0001C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_11) == 0x0001D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_12) == 0x0001F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_13) == 0x000208, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_14) == 0x000220, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_15) == 0x000238, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_16) == 0x000250, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, Temp_text_Variable_17) == 0x000268, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, K2Node_Select_Default) == 0x000280, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, K2Node_Select_Default_1) == 0x000298, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, K2Node_Select_Default_2) == 0x000299, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, K2Node_Select_Default_3) == 0x00029A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0002A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000308, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDriven::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_PushStatus
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 StatusEffect;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D2C[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, StatusEffect) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::StatusEffect' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, StatName) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, HasUpgradedValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_PushStatus::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_DamageConversion
// 0x0148 (0x0148 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UpgradedItem;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageClass*                           DamageClass;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          OverrideStatType;                                  // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFormatWeaponStatType                         StatTypeOverride;                                  // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2D[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0048(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D2E[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00B4(0x001C)(NoDestructor)
	EFormatWeaponStatType                         Temp_byte_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2F[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00D8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion) == 0x000148, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, UpgradedItem) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::UpgradedItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, Player) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, DamageClass) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::DamageClass' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, StatName) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, OverrideStatType) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::OverrideStatType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, StatTypeOverride) == 0x000039, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::StatTypeOverride' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, __WorldContext) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, GearStatEntry) == 0x000048, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, HasUpgradedValue) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, Temp_bool_Variable) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, Temp_byte_Variable) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, K2Node_Select_Default) == 0x0000D1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_DamageConversion::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_Flat
// 0x0138 (0x0138 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageClass*                           DamageClass;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EFormatPreviewStatusType                      FormatType;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D30[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0040(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D31[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00AC(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat) == 0x000138, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, DamageClass) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::DamageClass' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, StatName) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, FormatType) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::FormatType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, __WorldContext) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, GearStatEntry) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, HasUpgradedValue) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Flat::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_ElectricalSMG
// 0x01A0 (0x01A0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElectricalSMGUpgrades                        UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D32[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EElectricalSMGUpgrades                        Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D33[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00D8(0x0018)()
	EElectricalSMGUpgrades                        Temp_byte_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D34[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x00F8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0110(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D35[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0130(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG) == 0x0001A0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_text_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_text_Variable_2) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_byte_Variable_1) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_byte_Variable_2) == 0x0000F1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_byte_Variable_3) == 0x0000F2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_byte_Variable_4) == 0x0000F3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, Temp_byte_Variable_5) == 0x0000F4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, CallFunc_GetUpgradeName_ReturnValue) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, K2Node_Select_Default) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, K2Node_Select_Default_1) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ElectricalSMG::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_StatusBonus
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SstatusEffectIn;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D36[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, SstatusEffectIn) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::SstatusEffectIn' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, StatName) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, HasUpgradedValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_StatusBonus::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_TargetTypeBonus
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   Key;                                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D37[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, StatName) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, Key) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::Key' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, HasUpgradedValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetTypeBonus::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_TargetStateBonus
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETargetStateDamageBonusType                   TargetState;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D38[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D39[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, StatName) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, TargetState) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::TargetState' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, HasUpgradedValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_TargetStateBonus::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_BoltAction
// 0x0278 (0x0278 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_BoltAction final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBoltActionRifleUpgrades                      UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D3A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBoltActionRifleUpgrades                      Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D3B[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_9;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_10;                             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_11;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_12;                             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBoltActionRifleUpgrades                      Temp_byte_Variable_13;                             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D3C[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0178(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0190(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x01C0(0x0018)()
	EBoltActionRifleUpgrades                      Temp_byte_Variable_14;                             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_15;                             // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_16;                             // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_17;                             // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_18;                             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_19;                             // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_20;                             // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_21;                             // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_22;                             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_23;                             // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_24;                             // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_25;                             // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_26;                             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D3D[0x2];                                     // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x01E8(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D3E[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0208(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_BoltAction");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction) == 0x000278, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_BoltAction");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_8) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_9) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_10) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_11) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_12) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_13) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_1) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_2) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_3) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_4) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_5) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_6) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_7) == 0x000160, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_8) == 0x000178, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_9) == 0x000190, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_10) == 0x0001A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_text_Variable_11) == 0x0001C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_14) == 0x0001D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_15) == 0x0001D9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_16) == 0x0001DA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_17) == 0x0001DB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_18) == 0x0001DC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_19) == 0x0001DD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_20) == 0x0001DE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_21) == 0x0001DF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_22) == 0x0001E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_23) == 0x0001E1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_24) == 0x0001E2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_25) == 0x0001E3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, Temp_byte_Variable_26) == 0x0001E4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, K2Node_Select_Default) == 0x0001E5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, K2Node_Select_Default_1) == 0x0001E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, K2Node_Select_Default_2) == 0x000200, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000208, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BoltAction, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000270, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BoltAction::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Projectile
// 0x02B0 (0x02B0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Projectile final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UpgradedItem;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProjectileUpgrade                            UpgradeType;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D3F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0028(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EProjectileUpgrade                            Temp_byte_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D40[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x0094(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_9;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_10;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_11;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_12;                             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_13;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_14;                             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProjectileUpgrade                            Temp_byte_Variable_15;                             // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D41[0x1];                                     // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0180(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x01B0(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x01C8(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x01E0(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x01F8(0x0018)()
	EProjectileUpgrade                            Temp_byte_Variable_16;                             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_17;                             // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D42[0x6];                                     // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0218(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_18;                             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_19;                             // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_20;                             // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_21;                             // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_22;                             // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_23;                             // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_24;                             // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_25;                             // 0x0237(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_26;                             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_27;                             // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_28;                             // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_29;                             // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_30;                             // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_1;                           // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D43[0x1];                                     // 0x023F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0240(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Projectile) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Projectile");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Projectile) == 0x0002B0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Projectile");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, UpgradedItem) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::UpgradedItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Player) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, UpgradeType) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, GearStatEntry) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, HasUpgradedValue) == 0x000090, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable) == 0x000091, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, CallFunc_GetUpgradedValue_ReturnValue) == 0x000094, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_1) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_2) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_3) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_4) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_5) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_6) == 0x0000B5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_7) == 0x0000B6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_8) == 0x0000B7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_9) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_10) == 0x0000B9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_11) == 0x0000BA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_12) == 0x0000BB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_13) == 0x0000BC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_14) == 0x0000BD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_15) == 0x0000BE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_1) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_2) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_3) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_4) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_5) == 0x000138, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_6) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_7) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_8) == 0x000180, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_9) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_10) == 0x0001B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_11) == 0x0001C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_12) == 0x0001E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_text_Variable_13) == 0x0001F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_16) == 0x000210, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_17) == 0x000211, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, K2Node_Select_Default) == 0x000218, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_18) == 0x000230, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_19) == 0x000231, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_20) == 0x000232, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_21) == 0x000233, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_22) == 0x000234, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_23) == 0x000235, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_24) == 0x000236, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_25) == 0x000237, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_26) == 0x000238, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_27) == 0x000239, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_28) == 0x00023A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_29) == 0x00023B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, Temp_byte_Variable_30) == 0x00023C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, K2Node_Select_Default_1) == 0x00023D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, K2Node_Select_Default_2) == 0x00023E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000240, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Projectile, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0002A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Projectile::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_ChargedWeapon
// 0x01F0 (0x01F0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChargedWeaponUpgrades                        UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D44[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EChargedWeaponUpgrades                        Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D45[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChargedWeaponUpgrades                        Temp_byte_Variable_8;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0140(0x0018)()
	EChargedWeaponUpgrades                        Temp_byte_Variable_9;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D46[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0160(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_15;                             // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_16;                             // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_1;                           // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x017F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0180(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon) == 0x0001F0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_8) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_text_Variable_3) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_text_Variable_4) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_text_Variable_5) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_text_Variable_6) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_9) == 0x000158, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_10) == 0x000159, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, K2Node_Select_Default) == 0x000160, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_11) == 0x000178, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_12) == 0x000179, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_13) == 0x00017A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_14) == 0x00017B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_15) == 0x00017C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, Temp_byte_Variable_16) == 0x00017D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, K2Node_Select_Default_1) == 0x00017E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, K2Node_Select_Default_2) == 0x00017F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000180, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedWeapon::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_FlameThrower
// 0x01A8 (0x01A8 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_FlameThrower final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlameThrowerUpgradeType                      UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D47[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlameThrowerUpgradeType                      Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D48[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlameThrowerUpgradeType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D49[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F8(0x0018)()
	EFlameThrowerUpgradeType                      Temp_byte_Variable_6;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4A[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0118(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_1;                           // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4B[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0138(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_FlameThrower");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower) == 0x0001A8, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_FlameThrower");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_text_Variable_3) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_6) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_7) == 0x000111, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, K2Node_Select_Default) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_8) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_9) == 0x000131, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, Temp_byte_Variable_10) == 0x000132, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, K2Node_Select_Default_1) == 0x000133, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, K2Node_Select_Default_2) == 0x000134, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000138, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlameThrower, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlameThrower::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Cryospray
// 0x0218 (0x0218 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Cryospray final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECryoSprayUpgrades                            UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFormatWeaponStatType                         StatFormatType;                                    // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECryoSprayUpgrades                            Temp_byte_Variable;                                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4D[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECryoSprayUpgrades                            Temp_byte_Variable_9;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4E[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0160(0x0018)()
	ECryoSprayUpgrades                            Temp_byte_Variable_10;                             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4F[0x6];                                     // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0180(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_15;                             // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_16;                             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_17;                             // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_18;                             // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_1;                           // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D50[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x01A8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Cryospray");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray) == 0x000218, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Cryospray");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, StatFormatType) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::StatFormatType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable) == 0x00008A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_8) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_9) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_text_Variable) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_text_Variable_1) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_text_Variable_2) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_text_Variable_3) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_text_Variable_4) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_text_Variable_5) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_text_Variable_6) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_text_Variable_7) == 0x000160, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_10) == 0x000178, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_11) == 0x000179, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, K2Node_Select_Default) == 0x000180, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_12) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_13) == 0x000199, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_14) == 0x00019A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_15) == 0x00019B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_16) == 0x00019C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_17) == 0x00019D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, Temp_byte_Variable_18) == 0x00019E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, K2Node_Select_Default_1) == 0x00019F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, K2Node_Select_Default_2) == 0x0001A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0001A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Cryospray, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000210, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Cryospray::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatPercentage
// 0x0220 (0x0220 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatPercentage final
{
public:
	float                                         Base_Value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Upgraded_Value;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Old_Upgraded_Value;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Value;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Format;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D51[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Base_Text;                                         // 0x0020(0x0018)(Parm, OutParm)
	class FText                                   Upgrade_Text;                                      // 0x0038(0x0018)(Parm, OutParm)
	class FText                                   Value;                                             // 0x0050(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D52[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0088(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0148(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0170(0x0018)()
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D53[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D54[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x01A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0208(0x0018)()
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatPercentage) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatPercentage");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatPercentage) == 0x000220, "Wrong size on BPL_UpgradeHelpers_C_FormatPercentage");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Base_Value) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Base_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Upgraded_Value) == 0x000004, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Upgraded_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Old_Upgraded_Value) == 0x000008, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Old_Upgraded_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Final_Value) == 0x00000C, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Final_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Format) == 0x000010, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Format' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Base_Text) == 0x000020, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Upgrade_Text) == 0x000038, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Value) == 0x000050, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Temp_bool_Variable) == 0x000068, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000069, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00006A, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00006B, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Not_PreBool_ReturnValue) == 0x00006C, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_BooleanOR_ReturnValue) == 0x00006D, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_FClamp_ReturnValue) == 0x000074, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, K2Node_Select_Default) == 0x00007C, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000084, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Conv_FloatToText_ReturnValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, K2Node_MakeArray_Array) == 0x000138, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, K2Node_MakeArray_Array_1) == 0x000148, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Format_ReturnValue) == 0x000158, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Format_ReturnValue_1) == 0x000170, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000188, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, Temp_bool_Variable_1) == 0x00018C, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_FClamp_ReturnValue_1) == 0x000190, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, K2Node_Select_Default_1) == 0x000194, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000198, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x0001A0, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001B8, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, K2Node_MakeArray_Array_2) == 0x0001F8, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPercentage, CallFunc_Format_ReturnValue_2) == 0x000208, "Member 'BPL_UpgradeHelpers_C_FormatPercentage::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatCmtoM
// 0x00C8 (0x00C8 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatCmtoM final
{
public:
	float                                         Base_Value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Upgrade_Value;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Old_Upgrade_Value;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Value;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Base_Text;                                         // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   Upgrade_Text;                                      // 0x0030(0x0018)(Parm, OutParm)
	class FText                                   Value;                                             // 0x0048(0x0018)(Parm, OutParm)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D55[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0070(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D56[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0098(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x00B0(0x0018)()
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatCmtoM) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatCmtoM");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatCmtoM) == 0x0000C8, "Wrong size on BPL_UpgradeHelpers_C_FormatCmtoM");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, Base_Value) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::Base_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, Upgrade_Value) == 0x000004, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::Upgrade_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, Old_Upgrade_Value) == 0x000008, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::Old_Upgrade_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, Final_Value) == 0x00000C, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::Final_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, __WorldContext) == 0x000010, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, Base_Text) == 0x000018, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, Upgrade_Text) == 0x000030, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, Value) == 0x000048, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_MakeLiteralInt_ReturnValue) == 0x000060, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_Conv_FloatToText_ReturnValue) == 0x000070, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000088, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000098, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatCmtoM, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_FormatCmtoM::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_ShieldRegenerator
// 0x01D8 (0x01D8 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShieldGeneratorUpgrades                      UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D57[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EShieldGeneratorUpgrades                      Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D58[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShieldGeneratorUpgrades                      Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D59[0x1];                                     // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0128(0x0018)()
	EShieldGeneratorUpgrades                      Temp_byte_Variable_8;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5A[0x6];                                     // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0148(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_1;                           // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5B[0x1];                                     // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0168(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator) == 0x0001D8, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_text_Variable_3) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_text_Variable_4) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_text_Variable_5) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_8) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_9) == 0x000141, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, K2Node_Select_Default) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_10) == 0x000160, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_11) == 0x000161, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_12) == 0x000162, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_13) == 0x000163, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, Temp_byte_Variable_14) == 0x000164, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, K2Node_Select_Default_1) == 0x000165, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, K2Node_Select_Default_2) == 0x000166, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ShieldRegenerator::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_GatlingGun
// 0x01A0 (0x01A0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_GatlingGun final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGatlingGunUpgrade                            UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGatlingGunUpgrade                            Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5D[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F0(0x0018)()
	EGatlingGunUpgrade                            Temp_byte_Variable_1;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5E[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0110(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5F[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0130(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_GatlingGun");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun) == 0x0001A0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_GatlingGun");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_text_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_text_Variable_2) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_text_Variable_3) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_byte_Variable_1) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, K2Node_Select_Default) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_byte_Variable_2) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_byte_Variable_3) == 0x000129, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_byte_Variable_4) == 0x00012A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, Temp_byte_Variable_5) == 0x00012B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, K2Node_Select_Default_1) == 0x00012C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GatlingGun, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GatlingGun::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_AssaultRifle
// 0x0170 (0x0170 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAssaultRifleUpgrade                          UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D60[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EAssaultRifleUpgrade                          Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D61[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EAssaultRifleUpgrade                          Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D62[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x00B0(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_1;             // 0x00C8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D63[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0100(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle) == 0x000170, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, CallFunc_GetUpgradeName_ReturnValue) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, CallFunc_GetUpgradeName_ReturnValue_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::CallFunc_GetUpgradeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, K2Node_Select_Default) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, K2Node_Select_Default_1) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AssaultRifle::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_AutoCannon
// 0x01C0 (0x01C0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_AutoCannon final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoCannonUpgrades                           UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D64[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EAutoCannonUpgrades                           Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D65[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoCannonUpgrades                           Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D66[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F8(0x0018)()
	EAutoCannonUpgrades                           Temp_byte_Variable_7;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D67[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x0118(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0130(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_2;                           // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D68[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0150(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_AutoCannon");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon) == 0x0001C0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_AutoCannon");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_text_Variable_3) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_7) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_8) == 0x000111, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_9) == 0x000112, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_10) == 0x000113, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_11) == 0x000114, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, Temp_byte_Variable_12) == 0x000115, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, CallFunc_GetUpgradeName_ReturnValue) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, K2Node_Select_Default) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, K2Node_Select_Default_1) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, K2Node_Select_Default_2) == 0x000149, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AutoCannon, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AutoCannon::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_BeltDriven
// 0x0178 (0x0178 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_BeltDriven final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBeltDrivenWeaponUpgrade                      UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D69[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBeltDrivenWeaponUpgrade                      Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6A[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBeltDrivenWeaponUpgrade                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6B[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	EBeltDrivenWeaponUpgrade                      Temp_byte_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6C[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00E8(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_1;                           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6D[0x5];                                     // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0108(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_BeltDriven");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven) == 0x000178, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_BeltDriven");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_byte_Variable_4) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_byte_Variable_5) == 0x0000E1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, K2Node_Select_Default) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, Temp_byte_Variable_6) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, K2Node_Select_Default_1) == 0x000101, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, K2Node_Select_Default_2) == 0x000102, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BeltDriven, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000170, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BeltDriven::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_HotBullets
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageClass*                           DamageClass;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6E[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, DamageClass) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::DamageClass' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, StatName) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, HasUpgradedValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_HotBullets::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_AoEFear
// 0x0128 (0x0128 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0030(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6F[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x009C(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00B8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear) == 0x000128, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, StatName) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, __WorldContext) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, GearStatEntry) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, HasUpgradedValue) == 0x000098, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, CallFunc_GetUpgradedValue_ReturnValue) == 0x00009C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_AoEFear::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_BurstWeapon
// 0x0170 (0x0170 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBurstWeaponUpgrades                          UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D70[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBurstWeaponUpgrades                          Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D71[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0018)()
	EBurstWeaponUpgrades                          Temp_byte_Variable_1;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D72[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D73[0x5];                                     // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0100(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon) == 0x000170, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, Temp_text_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, Temp_byte_Variable_1) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, K2Node_Select_Default) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, Temp_byte_Variable_2) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, Temp_byte_Variable_3) == 0x0000F9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, K2Node_Select_Default_1) == 0x0000FA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_BurstWeapon::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Armor
// 0x0150 (0x0150 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Armor final
{
public:
	class AFSDPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ArmorClass;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EArmorUpgradeType                             Armor_Upgrade_Type;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D74[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EFormatWeaponStatType                         Format;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      PreviewFormat;                                     // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D75[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0040(0x0068)(Parm, OutParm)
	struct FUpgradeValues                         UpgradeValues;                                     // 0x00A8(0x001C)(Edit, BlueprintVisible, NoDestructor)
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00C4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00E0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Armor) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Armor");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Armor) == 0x000150, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Armor");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, Player) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, ArmorClass) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::ArmorClass' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, Armor_Upgrade_Type) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::Armor_Upgrade_Type' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, Text) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, Format) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::Format' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, PreviewFormat) == 0x000031, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::PreviewFormat' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, __WorldContext) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, GearStatEntry) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, UpgradeValues) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::UpgradeValues' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000C4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Armor, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Armor::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_SawedOff
// 0x0188 (0x0188 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_SawedOff final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESawedOffShotgunUpgrades                      UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D76[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESawedOffShotgunUpgrades                      Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D77[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0018)()
	ESawedOffShotgunUpgrades                      Temp_byte_Variable_1;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D78[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x00E0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00F8(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D79[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0118(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_SawedOff");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff) == 0x000188, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_SawedOff");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Temp_text_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Temp_byte_Variable_1) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Temp_byte_Variable_2) == 0x0000D9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Temp_byte_Variable_3) == 0x0000DA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, Temp_byte_Variable_4) == 0x0000DB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, CallFunc_GetUpgradeName_ReturnValue) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, K2Node_Select_Default) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, K2Node_Select_Default_1) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SawedOff, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000180, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SawedOff::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_StickyFlame
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_StickyFlame final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 StatusEffect;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D7A[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_StickyFlame");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_StickyFlame");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, StatusEffect) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::StatusEffect' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, Text) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, HasUpgradedValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_StickyFlame, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_StickyFlame::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_ChargedProjectile
// 0x0190 (0x0190 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChargedProjectileUpgrades                    UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 UpgradedActor;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0028(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EChargedProjectileUpgrades                    Temp_byte_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7C[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x0094(0x001C)(NoDestructor)
	EChargedProjectileUpgrades                    Temp_byte_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7D[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x00B8(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_1;             // 0x00D0(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_2;             // 0x00E8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0100(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7E[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0120(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile) == 0x000190, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, UpgradedActor) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::UpgradedActor' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, GearStatEntry) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, HasUpgradedValue) == 0x000090, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, Temp_byte_Variable) == 0x000091, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, CallFunc_GetUpgradedValue_ReturnValue) == 0x000094, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, Temp_byte_Variable_1) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, Temp_byte_Variable_2) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, Temp_byte_Variable_3) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, Temp_byte_Variable_4) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, CallFunc_GetUpgradeName_ReturnValue) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, CallFunc_GetUpgradeName_ReturnValue_1) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::CallFunc_GetUpgradeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, CallFunc_GetUpgradeName_ReturnValue_2) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::CallFunc_GetUpgradeName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, K2Node_Select_Default) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, K2Node_Select_Default_1) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000188, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ChargedProjectile::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_CombatShotgun
// 0x0188 (0x0188 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoShotgunUpgrades                          UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EAutoShotgunUpgrades                          Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D80[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	EAutoShotgunUpgrades                          Temp_byte_Variable_1;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D81[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x00C8(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_1;             // 0x00E0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00F8(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D82[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0118(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun) == 0x000188, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, Temp_byte_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, Temp_byte_Variable_2) == 0x0000C1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, Temp_byte_Variable_3) == 0x0000C2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, Temp_byte_Variable_4) == 0x0000C3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, CallFunc_GetUpgradeName_ReturnValue) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, CallFunc_GetUpgradeName_ReturnValue_1) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::CallFunc_GetUpgradeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, K2Node_Select_Default) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, K2Node_Select_Default_1) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000180, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CombatShotgun::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_LineCutterProjectile
// 0x0288 (0x0288 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELineCutterProjectileUpgradeType              UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D83[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELineCutterProjectileUpgradeType              Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D84[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_9;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_10;                             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_11;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_12;                             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_13;                             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELineCutterProjectileUpgradeType              Temp_byte_Variable_14;                             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_15;                             // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_16;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_17;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_18;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_19;                             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_20;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_21;                             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_22;                             // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_23;                             // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_24;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_25;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_26;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_27;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELineCutterProjectileUpgradeType              Temp_byte_Variable_28;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D85[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0188(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x01A0(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_1;             // 0x01B8(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_2;             // 0x01D0(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_3;             // 0x01E8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0200(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0218(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile) == 0x000288, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_8) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_9) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_10) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_11) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_12) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_13) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_14) == 0x0000B5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, K2Node_Select_Default) == 0x0000B6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_15) == 0x0000B7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_16) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_17) == 0x0000B9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_18) == 0x0000BA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_19) == 0x0000BB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_20) == 0x0000BC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_21) == 0x0000BD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_22) == 0x0000BE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_23) == 0x0000BF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_24) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_25) == 0x0000C1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_26) == 0x0000C2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_27) == 0x0000C3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_byte_Variable_28) == 0x0000C4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, K2Node_Select_Default_1) == 0x0000C5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable_1) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable_2) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable_3) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable_4) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable_5) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable_6) == 0x000158, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable_7) == 0x000170, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, Temp_text_Variable_8) == 0x000188, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, CallFunc_GetUpgradeName_ReturnValue) == 0x0001A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, CallFunc_GetUpgradeName_ReturnValue_1) == 0x0001B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::CallFunc_GetUpgradeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, CallFunc_GetUpgradeName_ReturnValue_2) == 0x0001D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::CallFunc_GetUpgradeName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, CallFunc_GetUpgradeName_ReturnValue_3) == 0x0001E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::CallFunc_GetUpgradeName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, K2Node_Select_Default_2) == 0x000200, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000218, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000280, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LineCutterProjectile::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Pickaxe
// 0x01D8 (0x01D8 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Pickaxe final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPickaxeUpgradeType                           UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D86[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPickaxeUpgradeType                           Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D87[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPickaxeUpgradeType                           Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0128(0x0018)()
	EPickaxeUpgradeType                           Temp_byte_Variable_8;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D88[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0148(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D89[0x1];                                     // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0168(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Pickaxe");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe) == 0x0001D8, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Pickaxe");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, K2Node_Select_Default) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_text_Variable_3) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_text_Variable_4) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_text_Variable_5) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_8) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, K2Node_Select_Default_1) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_9) == 0x000160, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_10) == 0x000161, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_11) == 0x000162, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_12) == 0x000163, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_13) == 0x000164, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, Temp_byte_Variable_14) == 0x000165, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, K2Node_Select_Default_2) == 0x000166, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Pickaxe, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Pickaxe::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Grenades
// 0x0170 (0x0170 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Grenades final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrenadeUpgradeType                           UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	EGrenadeUpgradeType                           Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8B[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0018)()
	EGrenadeUpgradeType                           Temp_byte_Variable_1;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8C[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8D[0x5];                                     // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0100(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Grenades) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Grenades");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Grenades) == 0x000170, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Grenades");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, Temp_byte_Variable) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, Temp_text_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, Temp_byte_Variable_1) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, K2Node_Select_Default) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, Temp_byte_Variable_2) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, Temp_byte_Variable_3) == 0x0000F9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, K2Node_Select_Default_1) == 0x0000FA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Grenades, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Grenades::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_ZiplineGun
// 0x01A0 (0x01A0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZiplineGunUpgrades                           UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EZiplineGunUpgrades                           Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8F[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F0(0x0018)()
	EZiplineGunUpgrades                           Temp_byte_Variable_1;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D90[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0110(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D91[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0130(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun) == 0x0001A0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_text_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_text_Variable_2) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_text_Variable_3) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_byte_Variable_1) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, K2Node_Select_Default) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_byte_Variable_2) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_byte_Variable_3) == 0x000129, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_byte_Variable_4) == 0x00012A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, Temp_byte_Variable_5) == 0x00012B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, K2Node_Select_Default_1) == 0x00012C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ZiplineGun::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_FlaregunProjectile
// 0x0160 (0x0160 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlaregunProjectileUpgrades                   UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D92[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 UpgradedActor;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0028(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlaregunProjectileUpgrades                   Temp_byte_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D93[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x0094(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	EFlaregunProjectileUpgrades                   Temp_byte_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D94[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00D0(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D95[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00F0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile) == 0x000160, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, UpgradedActor) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::UpgradedActor' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, GearStatEntry) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, HasUpgradedValue) == 0x000090, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, Temp_byte_Variable) == 0x000091, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, CallFunc_GetUpgradedValue_ReturnValue) == 0x000094, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, Temp_byte_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, Temp_byte_Variable_2) == 0x0000C9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, K2Node_Select_Default) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, K2Node_Select_Default_1) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000158, "Member 'BPL_UpgradeHelpers_C_UPGDESC_FlaregunProjectile::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_GrapplingHook
// 0x0190 (0x0190 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrapplingHookUpgrade                         UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D96[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGrapplingHookUpgrade                         Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D97[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrapplingHookUpgrade                         Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D98[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	EGrapplingHookUpgrade                         Temp_byte_Variable_5;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D99[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0100(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9A[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0120(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook) == 0x000190, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, K2Node_Select_Default) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable_5) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, K2Node_Select_Default_1) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable_6) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable_7) == 0x000119, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, Temp_byte_Variable_8) == 0x00011A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, K2Node_Select_Default_2) == 0x00011B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000188, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GrapplingHook::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_CoooldownAggregator
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0018(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9B[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0088(0x0018)()
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A0(0x001C)(NoDestructor)
	uint8                                         Pad_4D9C[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, __WorldContext) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, GearStatEntry) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, HasUpgradedValue) == 0x000080, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, CallFunc_MakeLiteralText_ReturnValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoooldownAggregator::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Bosco
// 0x01F8 (0x01F8 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Bosco final
{
public:
	class UClass*                                 UpgradedItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBoscoUpgrades                                UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasChanged;                                        // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBoscoUpgrades                                Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9E[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBoscoUpgrades                                Temp_byte_Variable_8;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9F[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0130(0x0018)()
	EBoscoUpgrades                                Temp_byte_Variable_9;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_15;                             // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_16;                             // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x0150(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA0[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0170(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0188(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Bosco) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Bosco");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Bosco) == 0x0001F8, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Bosco");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, UpgradedItem) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::UpgradedItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, HasChanged) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::HasChanged' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_8) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, K2Node_Select_Default) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_text_Variable) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_text_Variable_1) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_text_Variable_2) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_text_Variable_3) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_text_Variable_4) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_text_Variable_5) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_9) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_10) == 0x000149, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_11) == 0x00014A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_12) == 0x00014B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_13) == 0x00014C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_14) == 0x00014D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_15) == 0x00014E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, Temp_byte_Variable_16) == 0x00014F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, CallFunc_GetUpgradeName_ReturnValue) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, K2Node_Select_Default_1) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, K2Node_Select_Default_2) == 0x000170, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000188, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Bosco, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Bosco::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_PlatformGun
// 0x01A0 (0x01A0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_PlatformGun final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlatformGunUpgrades                          UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          Should_show_text;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlatformGunUpgrades                          Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA2[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA3[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA4[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0100(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0118(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0130(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_PlatformGun");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun) == 0x0001A0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_PlatformGun");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, Should_show_text) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::Should_show_text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000C1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, CallFunc_BooleanAND_ReturnValue) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, Temp_text_Variable_2) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, Temp_text_Variable_3) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, K2Node_Select_Default) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_PlatformGun, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_PlatformGun::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_TriggeredStat
// 0x0138 (0x0138 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat final
{
public:
	class AFSDPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Status_Effect;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETriggeredStatusEffectType                    Type;                                              // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Format;                                            // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA5[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         Gear_stat_entry;                                   // 0x0040(0x0068)(Parm, OutParm)
	bool                                          Is_upgraded;                                       // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA6[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00AC(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat) == 0x000138, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, Player) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, Item) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, Status_Effect) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::Status_Effect' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, Text) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, Type) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::Type' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, Format) == 0x000031, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::Format' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, __WorldContext) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, Gear_stat_entry) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::Gear_stat_entry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, Is_upgraded) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::Is_upgraded' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_TriggeredStat::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_ArmorStat
// 0x0138 (0x0138 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_ArmorStat final
{
public:
	class AFSDPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ArmorClass;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnStat*                              Stat;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EFormatWeaponStatType                         Format;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA7[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0040(0x0068)(Parm, OutParm)
	bool                                          Changed;                                           // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA8[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedStatValue_ReturnValue;         // 0x00AC(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_ArmorStat");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat) == 0x000138, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_ArmorStat");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, Player) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, ArmorClass) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::ArmorClass' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, Stat) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::Stat' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, Text) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, Format) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::Format' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, __WorldContext) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, GearStatEntry) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, Changed) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::Changed' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, CallFunc_GetUpgradedStatValue_ReturnValue) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::CallFunc_GetUpgradedStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ArmorStat, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ArmorStat::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Flaregun
// 0x0158 (0x0158 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Flaregun final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlaregunUpgrades                             UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlaregunUpgrades                             Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DAA[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	EFlaregunUpgrades                             Temp_byte_Variable_1;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DAB[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DAC[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00E8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Flaregun");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun) == 0x000158, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Flaregun");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, PlayerState) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::PlayerState' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, Temp_byte_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, K2Node_Select_Default) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, Temp_byte_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, K2Node_Select_Default_1) == 0x0000E1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Flaregun, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Flaregun::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Detpack
// 0x01B0 (0x01B0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Detpack final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDetPackUpgrades                              UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DAD[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDetPackUpgrades                              Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DAE[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatWeaponStatType                         Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDetPackUpgrades                              Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default;                             // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DAF[0x1];                                     // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0110(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0128(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0140(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Detpack) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Detpack");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Detpack) == 0x0001B0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Detpack");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, PlayerState) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::PlayerState' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, K2Node_Select_Default) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_text_Variable_2) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_text_Variable_3) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, Temp_text_Variable_4) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, K2Node_Select_Default_1) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Detpack, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Detpack::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_SentryGun
// 0x0208 (0x0208 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_SentryGun final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESentryGunUpgradeType                         Upgrade_Type;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          Has_Upgraded_Value;                                // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESentryGunUpgradeType                         Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB1[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0120(0x0018)()
	ESentryGunUpgradeType                         Temp_byte_Variable_1;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB2[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x0148(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_1;             // 0x0160(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default;                             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB3[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0180(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0198(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_SentryGun");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun) == 0x000208, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_SentryGun");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Upgrade_Type) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Upgrade_Type' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Has_Upgraded_Value) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Has_Upgraded_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_text_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_text_Variable_1) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_text_Variable_2) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_text_Variable_3) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_text_Variable_4) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_text_Variable_5) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_1) == 0x000138, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_2) == 0x000139, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_3) == 0x00013A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_4) == 0x00013B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_5) == 0x00013C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_6) == 0x00013D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_7) == 0x00013E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_8) == 0x00013F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, Temp_byte_Variable_9) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, CallFunc_GetUpgradeName_ReturnValue) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, CallFunc_GetUpgradeName_ReturnValue_1) == 0x000160, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::CallFunc_GetUpgradeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, K2Node_Select_Default) == 0x000178, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, K2Node_Select_Default_1) == 0x000180, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_SentryGun, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000200, "Member 'BPL_UpgradeHelpers_C_UPGDESC_SentryGun::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DualMPs
// 0x0158 (0x0158 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DualMPs final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDualMachinePistolsUpgrades                   UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDualMachinePistolsUpgrades                   Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB5[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EDualMachinePistolsUpgrades                   Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB6[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x00B0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB7[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00E8(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DualMPs");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs) == 0x000158, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DualMPs");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, CallFunc_GetUpgradeName_ReturnValue) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, K2Node_Select_Default) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, K2Node_Select_Default_1) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DualMPs, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DualMPs::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_AmmoDrivenEx
// 0x00C0 (0x00C0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EAmmoDrivenWeapnUpgradeType>           UpgradeTypes;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FGearStatEntry>                 GearStats;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmmoDrivenWeapnUpgradeType                   CallFunc_Array_Get_Item;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DB8[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB9[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry;         // 0x0050(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DBA[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx) == 0x0000C0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, UpgradeTypes) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::UpgradeTypes' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, GearStats) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::GearStats' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, CallFunc_Array_Get_Item) == 0x000044, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, CallFunc_UPGDESC_AmmoDriven_GearStatEntry) == 0x000050, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::CallFunc_UPGDESC_AmmoDriven_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_AmmoDrivenEx::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatToPercentageNormalized
// 0x00D8 (0x00D8 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatToPercentageNormalized final
{
public:
	float                                         Base_Value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Upgrade_Value;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Old_Upgrade_Value;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Value;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         FormatType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DBB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Base_Text;                                         // 0x0020(0x0018)(Parm, OutParm)
	class FText                                   Upgrade_Text;                                      // 0x0038(0x0018)(Parm, OutParm)
	class FText                                   Value;                                             // 0x0050(0x0018)(Parm, OutParm)
	EFormatWeaponStatType                         Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DBC[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_1;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default;                             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DBD[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatPercentage_Base_Text;               // 0x0090(0x0018)()
	class FText                                   CallFunc_FormatPercentage_Upgrade_Text;            // 0x00A8(0x0018)()
	class FText                                   CallFunc_FormatPercentage_Value;                   // 0x00C0(0x0018)()
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatToPercentageNormalized");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized) == 0x0000D8, "Wrong size on BPL_UpgradeHelpers_C_FormatToPercentageNormalized");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Base_Value) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Base_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Upgrade_Value) == 0x000004, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Upgrade_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Old_Upgrade_Value) == 0x000008, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Old_Upgrade_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Final_Value) == 0x00000C, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Final_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, FormatType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::FormatType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Base_Text) == 0x000020, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Upgrade_Text) == 0x000038, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Value) == 0x000050, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable) == 0x000068, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00006C, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000078, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_1) == 0x00007C, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_2) == 0x00007D, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_3) == 0x00007E, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_4) == 0x00007F, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_5) == 0x000080, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_6) == 0x000081, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_7) == 0x000082, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_8) == 0x000083, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_9) == 0x000084, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_10) == 0x000085, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_11) == 0x000086, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_12) == 0x000087, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_13) == 0x000088, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, Temp_byte_Variable_14) == 0x000089, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, K2Node_Select_Default) == 0x00008A, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, CallFunc_FormatPercentage_Base_Text) == 0x000090, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::CallFunc_FormatPercentage_Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, CallFunc_FormatPercentage_Upgrade_Text) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::CallFunc_FormatPercentage_Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageNormalized, CallFunc_FormatPercentage_Value) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageNormalized::CallFunc_FormatPercentage_Value' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_HitCounter
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_HitCounter final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 HitCounterClass;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Upgrade_Text;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DBE[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_HitCounter");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_HitCounter");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, HitCounterClass) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::HitCounterClass' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, Upgrade_Text) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, HasUpgradedValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_HitCounter, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_HitCounter::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DamageBonus_Random
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0018(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DBF[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0088(0x0018)()
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A0(0x001C)(NoDestructor)
	uint8                                         Pad_4DC0[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, __WorldContext) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, GearStatEntry) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, HasUpgradedValue) == 0x000080, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, CallFunc_MakeLiteralText_ReturnValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DamageBonus_Random::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_CryoSprayProjectile
// 0x0130 (0x0130 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileClass;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   UpgradeText;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DC1[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00C0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile) == 0x000130, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, ProjectileClass) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::ProjectileClass' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, UpgradeText) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::UpgradeText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, HasUpgradedValue) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CryoSprayProjectile::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Generic
// 0x0150 (0x0150 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Generic final
{
public:
	class AFSDPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           UpgradeType;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCustomText;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DC2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0040(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DC3[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetGenericUpgradedValue_ReturnValue;      // 0x00AC(0x001C)(NoDestructor)
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
	struct FGearStatEntry                         K2Node_MakeStruct_GearStatEntry;                   // 0x00E0(0x0068)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Generic) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Generic");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Generic) == 0x000150, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Generic");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, Player) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, Item) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, UseCustomText) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::UseCustomText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, Text) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, __WorldContext) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, GearStatEntry) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, HasUpgradedValue) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, Temp_bool_Variable) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, CallFunc_GetGenericUpgradedValue_ReturnValue) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::CallFunc_GetGenericUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, K2Node_Select_Default) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, K2Node_MakeStruct_GearStatEntry) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::K2Node_MakeStruct_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Generic, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Generic::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatUpgrade
// 0x00C8 (0x00C8 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatUpgrade final
{
public:
	struct FUpgradeValues                         UpgradeValues;                                     // 0x0000(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EFormatWeaponStatType                         StatFormat;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      PreviewFormat;                                     // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC4[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   BaseText;                                          // 0x0028(0x0018)(Parm, OutParm)
	class FText                                   UpgradeText;                                       // 0x0040(0x0018)(Parm, OutParm)
	class FText                                   Value;                                             // 0x0058(0x0018)(Parm, OutParm)
	EItemPreviewStatus                            Format;                                            // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasAnyupgrades;                                    // 0x0071(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemPreviewStatus                            CallFunc_FormatPreviewStatus_ReturnValue;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC5[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatValues_BaseText;                    // 0x0078(0x0018)()
	class FText                                   CallFunc_FormatValues_UpgradeText;                 // 0x0090(0x0018)()
	class FText                                   CallFunc_FormatValues_Value;                       // 0x00A8(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatUpgrade) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatUpgrade");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatUpgrade) == 0x0000C8, "Wrong size on BPL_UpgradeHelpers_C_FormatUpgrade");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, UpgradeValues) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::UpgradeValues' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, StatFormat) == 0x00001C, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::StatFormat' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, PreviewFormat) == 0x00001D, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::PreviewFormat' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, BaseText) == 0x000028, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::BaseText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, UpgradeText) == 0x000040, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::UpgradeText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, Value) == 0x000058, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, Format) == 0x000070, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::Format' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, HasAnyupgrades) == 0x000071, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, CallFunc_FormatPreviewStatus_ReturnValue) == 0x000072, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::CallFunc_FormatPreviewStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, CallFunc_FormatValues_BaseText) == 0x000078, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::CallFunc_FormatValues_BaseText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, CallFunc_FormatValues_UpgradeText) == 0x000090, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::CallFunc_FormatValues_UpgradeText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, CallFunc_FormatValues_Value) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::CallFunc_FormatValues_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgrade, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_FormatUpgrade::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatUpgradeToEntry
// 0x0168 (0x0168 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatUpgradeToEntry final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FUpgradeValues                         UpgradeValues;                                     // 0x0018(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EFormatWeaponStatType                         StatFormat;                                        // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      PreviewFormat;                                     // 0x0035(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC6[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0040(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemPreviewStatus                            CallFunc_FormatPreviewStatus_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC7[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatValues_BaseText;                    // 0x00B0(0x0018)()
	class FText                                   CallFunc_FormatValues_UpgradeText;                 // 0x00C8(0x0018)()
	class FText                                   CallFunc_FormatValues_Value;                       // 0x00E0(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DC8[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         K2Node_MakeStruct_GearStatEntry;                   // 0x0100(0x0068)()
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatUpgradeToEntry");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry) == 0x000168, "Wrong size on BPL_UpgradeHelpers_C_FormatUpgradeToEntry");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, Text) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, UpgradeValues) == 0x000018, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::UpgradeValues' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, StatFormat) == 0x000034, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::StatFormat' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, PreviewFormat) == 0x000035, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::PreviewFormat' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, __WorldContext) == 0x000038, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, GearStatEntry) == 0x000040, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, HasAnyupgrades) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, CallFunc_FormatPreviewStatus_ReturnValue) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::CallFunc_FormatPreviewStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, CallFunc_FormatValues_BaseText) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::CallFunc_FormatValues_BaseText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, CallFunc_FormatValues_UpgradeText) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::CallFunc_FormatValues_UpgradeText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, CallFunc_FormatValues_Value) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::CallFunc_FormatValues_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatUpgradeToEntry, K2Node_MakeStruct_GearStatEntry) == 0x000100, "Member 'BPL_UpgradeHelpers_C_FormatUpgradeToEntry::K2Node_MakeStruct_GearStatEntry' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DPS
// 0x0170 (0x0170 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DPS final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UpgradedItem;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Interval;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC9[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0040(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DCA[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00AC(0x001C)(NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUpgradeValues                         K2Node_MakeStruct_UpgradeValues;                   // 0x00E0(0x001C)(NoDestructor)
	uint8                                         Pad_4DCB[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0100(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DPS) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DPS");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DPS) == 0x000170, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DPS");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, UpgradedItem) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::UpgradedItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, Player) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, StatName) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::StatName' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, Interval) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::Interval' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, __WorldContext) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, GearStatEntry) == 0x000040, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, HasUpgradedValue) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000D4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0000DC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, K2Node_MakeStruct_UpgradeValues) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::K2Node_MakeStruct_UpgradeValues' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DPS, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DPS::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatStatic
// 0x0160 (0x0160 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatStatic final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Value;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Format;                                            // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DCC[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0028(0x0068)(Parm, OutParm)
	struct FUpgradeValues                         K2Node_MakeStruct_UpgradeValues;                   // 0x0090(0x001C)(NoDestructor)
	uint8                                         Pad_4DCD[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatValues_BaseText;                    // 0x00B0(0x0018)()
	class FText                                   CallFunc_FormatValues_UpgradeText;                 // 0x00C8(0x0018)()
	class FText                                   CallFunc_FormatValues_Value;                       // 0x00E0(0x0018)()
	struct FGearStatEntry                         K2Node_MakeStruct_GearStatEntry;                   // 0x00F8(0x0068)()
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatStatic) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatStatic");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatStatic) == 0x000160, "Wrong size on BPL_UpgradeHelpers_C_FormatStatic");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, Text) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatStatic::Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, Value) == 0x000018, "Member 'BPL_UpgradeHelpers_C_FormatStatic::Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, Format) == 0x00001C, "Member 'BPL_UpgradeHelpers_C_FormatStatic::Format' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_FormatStatic::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, GearStatEntry) == 0x000028, "Member 'BPL_UpgradeHelpers_C_FormatStatic::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, K2Node_MakeStruct_UpgradeValues) == 0x000090, "Member 'BPL_UpgradeHelpers_C_FormatStatic::K2Node_MakeStruct_UpgradeValues' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, CallFunc_FormatValues_BaseText) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_FormatStatic::CallFunc_FormatValues_BaseText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, CallFunc_FormatValues_UpgradeText) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_FormatStatic::CallFunc_FormatValues_UpgradeText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, CallFunc_FormatValues_Value) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_FormatStatic::CallFunc_FormatValues_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatStatic, K2Node_MakeStruct_GearStatEntry) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_FormatStatic::K2Node_MakeStruct_GearStatEntry' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_GooCannon
// 0x01B8 (0x01B8 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_GooCannon final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGooGunUpgrades                               UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DCE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGooGunUpgrades                               Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DCF[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGooGunUpgrades                               Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGooGunUpgrades                               Temp_byte_Variable_12;                             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD0[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0118(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0130(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0148(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_GooCannon");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon) == 0x0001B8, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_GooCannon");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, HasAnyupgrades) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, K2Node_Select_Default) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_7) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_8) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_9) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_10) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_11) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_byte_Variable_12) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, K2Node_Select_Default_1) == 0x0000B5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_text_Variable) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_text_Variable_1) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_text_Variable_2) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_text_Variable_3) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, Temp_text_Variable_4) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, K2Node_Select_Default_2) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_DynamicSTE
// 0x0150 (0x0150 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UpgradedItem;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModifyStatusEffectDamageUpgrade              UpgradeType;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0028(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EModifyStatusEffectDamageUpgrade              Temp_byte_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD2[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x0094(0x001C)(NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x00E0(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE) == 0x000150, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, UpgradedItem) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::UpgradedItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, Player) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, UpgradeType) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, GearStatEntry) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, HasAnyupgrades) == 0x000090, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, Temp_byte_Variable) == 0x000091, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, CallFunc_GetUpgradedValue_ReturnValue) == 0x000094, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, K2Node_Select_Default) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_DynamicSTE::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_GooCannon_Projectile
// 0x0170 (0x0170 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UpgradedItem;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGooGunProjectileUpgrades                     UpgradeType;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0028(0x0068)(Parm, OutParm)
	EGooGunProjectileUpgrades                     Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD4[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x0094(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGooGunProjectileUpgrades                     Temp_byte_Variable_3;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGooGunProjectileUpgrades                     Temp_byte_Variable_6;                              // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00D0(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x00E8(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0100(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile) == 0x000170, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, UpgradedItem) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::UpgradedItem' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Player) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, UpgradeType) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, GearStatEntry) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_byte_Variable) == 0x000090, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, CallFunc_GetUpgradedValue_ReturnValue) == 0x000094, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_byte_Variable_1) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_byte_Variable_2) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_byte_Variable_3) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, K2Node_Select_Default) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_byte_Variable_4) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_byte_Variable_5) == 0x0000B5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_byte_Variable_6) == 0x0000B6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, K2Node_Select_Default_1) == 0x0000B7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_text_Variable) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, Temp_text_Variable_1) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, K2Node_Select_Default_2) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_GooCannon_Projectile::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_LockOnRifle
// 0x02C0 (0x02C0 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockOnWeaponUpgrades                         UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELockOnWeaponUpgrades                         Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD6[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatWeaponStatType                         Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_15;                             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockOnWeaponUpgrades                         Temp_byte_Variable_16;                             // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_17;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_18;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_19;                             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_20;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_21;                             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_22;                             // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_23;                             // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_24;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_25;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_26;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_27;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_28;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_29;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_30;                             // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_31;                             // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockOnWeaponUpgrades                         Temp_byte_Variable_32;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default_1;                           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD7[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0178(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0190(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x01D8(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x01F0(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0208(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0220(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0238(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0250(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle) == 0x0002C0, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, HasAnyupgrades) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_7) == 0x0000AE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_8) == 0x0000AF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_9) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_10) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_11) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_12) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_13) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_14) == 0x0000B5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_15) == 0x0000B6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_16) == 0x0000B7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, K2Node_Select_Default) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_17) == 0x0000B9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_18) == 0x0000BA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_19) == 0x0000BB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_20) == 0x0000BC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_21) == 0x0000BD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_22) == 0x0000BE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_23) == 0x0000BF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_24) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_25) == 0x0000C1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_26) == 0x0000C2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_27) == 0x0000C3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_28) == 0x0000C4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_29) == 0x0000C5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_30) == 0x0000C6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_31) == 0x0000C7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_byte_Variable_32) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, K2Node_Select_Default_1) == 0x0000C9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_1) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_2) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_3) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_4) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_5) == 0x000148, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_6) == 0x000160, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_7) == 0x000178, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_8) == 0x000190, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_9) == 0x0001A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_10) == 0x0001C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_11) == 0x0001D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_12) == 0x0001F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_13) == 0x000208, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, Temp_text_Variable_14) == 0x000220, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, K2Node_Select_Default_2) == 0x000238, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000250, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0002B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_LockOnRifle::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_ProjectileLauncher
// 0x01C8 (0x01C8 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProjectileLauncherBaseUpgradeType            UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasUpgradedValue;                                  // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD9[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NewLocalVar_0;                                     // 0x0090(0x0018)(Edit, BlueprintVisible)
	EProjectileLauncherBaseUpgradeType            Temp_byte_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDA[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00AC(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProjectileLauncherBaseUpgradeType            Temp_byte_Variable_5;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProjectileLauncherBaseUpgradeType            Temp_byte_Variable_10;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDB[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0120(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0138(0x0018)()
	EFormatPreviewStatusType                      K2Node_Select_Default_1;                           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDC[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0158(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher) == 0x0001C8, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, HasUpgradedValue) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, NewLocalVar_0) == 0x000090, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_2) == 0x0000C9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_3) == 0x0000CA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_4) == 0x0000CB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_5) == 0x0000CC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_6) == 0x0000CD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_7) == 0x0000CE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_8) == 0x0000CF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_9) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_byte_Variable_10) == 0x0000D1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_text_Variable) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_text_Variable_1) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_text_Variable_2) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, Temp_text_Variable_3) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, K2Node_Select_Default) == 0x000138, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, K2Node_Select_Default_1) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, K2Node_Select_Default_2) == 0x000151, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000158, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x0001C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_ProjectileLauncher::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_Crossbow
// 0x0378 (0x0378 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_Crossbow final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class ACrossbowProjectileBase>    Projectile;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossbowUpgrades                             UpgradeType;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDD[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0028(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECrossbowUpgrades                             Temp_byte_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDE[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x0094(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_9;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_10;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_11;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_12;                             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_13;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_14;                             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_15;                             // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_16;                             // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_17;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_18;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_19;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_20;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_21;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_22;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossbowUpgrades                             Temp_byte_Variable_23;                             // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_24;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_25;                             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_26;                             // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_27;                             // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_28;                             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_29;                             // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_30;                             // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_31;                             // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_32;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_33;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_34;                             // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_35;                             // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_36;                             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_37;                             // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_38;                             // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_39;                             // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_40;                             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_41;                             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_42;                             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_43;                             // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_44;                             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_45;                             // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossbowUpgrades                             Temp_byte_Variable_46;                             // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x01B8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x01D0(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x01E8(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0200(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0218(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0230(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0248(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x0260(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x0278(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x0290(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x02A8(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x02C0(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x02D8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x02F0(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0308(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_Crossbow");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow) == 0x000378, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_Crossbow");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Projectile) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Projectile' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Player) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, UpgradeType) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, GearStatEntry) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, HasAnyupgrades) == 0x000090, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable) == 0x000091, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, CallFunc_GetUpgradedValue_ReturnValue) == 0x000094, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_1) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_2) == 0x0000B1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_3) == 0x0000B2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_4) == 0x0000B3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_5) == 0x0000B4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_6) == 0x0000B5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_7) == 0x0000B6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_8) == 0x0000B7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_9) == 0x0000B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_10) == 0x0000B9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_11) == 0x0000BA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_12) == 0x0000BB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_13) == 0x0000BC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_14) == 0x0000BD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_15) == 0x0000BE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_16) == 0x0000BF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_17) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_18) == 0x0000C1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_19) == 0x0000C2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_20) == 0x0000C3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_21) == 0x0000C4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_22) == 0x0000C5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_23) == 0x0000C6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, K2Node_Select_Default) == 0x0000C7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_24) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_25) == 0x0000C9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_26) == 0x0000CA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_27) == 0x0000CB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_28) == 0x0000CC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_29) == 0x0000CD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_30) == 0x0000CE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_31) == 0x0000CF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_32) == 0x0000D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_33) == 0x0000D1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_34) == 0x0000D2, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_35) == 0x0000D3, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_36) == 0x0000D4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_37) == 0x0000D5, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_38) == 0x0000D6, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_39) == 0x0000D7, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_40) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_41) == 0x0000D9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_42) == 0x0000DA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_43) == 0x0000DB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_44) == 0x0000DC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_45) == 0x0000DD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_byte_Variable_46) == 0x0000DE, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, K2Node_Select_Default_1) == 0x0000DF, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_1) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_2) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_3) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_4) == 0x000140, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_5) == 0x000158, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_6) == 0x000170, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_7) == 0x000188, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_8) == 0x0001A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_9) == 0x0001B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_10) == 0x0001D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_11) == 0x0001E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_12) == 0x000200, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_13) == 0x000218, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_14) == 0x000230, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_15) == 0x000248, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_16) == 0x000260, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_17) == 0x000278, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_18) == 0x000290, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_19) == 0x0002A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_20) == 0x0002C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, Temp_text_Variable_21) == 0x0002D8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, K2Node_Select_Default_2) == 0x0002F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000308, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_Crossbow, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000370, "Member 'BPL_UpgradeHelpers_C_UPGDESC_Crossbow::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_CoilGun
// 0x0480 (0x0480 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_CoilGun final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Prefix;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ECoilgunUpgrades                              UpgradeType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDF[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE0[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECoilgunUpgrades                              Temp_byte_Variable;                                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_9;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_10;                             // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_11;                             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_12;                             // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_13;                             // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_14;                             // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_15;                             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_16;                             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_17;                             // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_18;                             // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_19;                             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_20;                             // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_21;                             // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_22;                             // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_23;                             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_24;                             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECoilgunUpgrades                              Temp_byte_Variable_25;                             // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_26;                             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_27;                             // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_28;                             // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_29;                             // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_30;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_31;                             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_32;                             // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_33;                             // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_34;                             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_35;                             // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_36;                             // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_37;                             // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_38;                             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_39;                             // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_40;                             // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_41;                             // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_42;                             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_43;                             // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_44;                             // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_45;                             // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_46;                             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_47;                             // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_48;                             // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_49;                             // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECoilgunUpgrades                              Temp_byte_Variable_50;                             // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE1[0x2];                                     // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0180(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x01B0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x01C8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x01E0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x01F8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0210(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0228(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0240(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0258(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0270(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0288(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x02A0(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x02B8(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x02D0(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x02E8(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x0300(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x0318(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0330(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x0348(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x0360(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0378(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0390(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03E0(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x03F8(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0410(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_CoilGun");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun) == 0x000480, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_CoilGun");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Prefix) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Prefix' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, UpgradeType) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, HasAnyupgrades) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_bool_Variable) == 0x0000A1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, K2Node_MakeStruct_FormatArgumentData) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, CallFunc_TextIsEmpty_ReturnValue) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable) == 0x000101, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_1) == 0x000102, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_2) == 0x000103, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_3) == 0x000104, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_4) == 0x000105, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_5) == 0x000106, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_6) == 0x000107, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_7) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_8) == 0x000109, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_9) == 0x00010A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_10) == 0x00010B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_11) == 0x00010C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_12) == 0x00010D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_13) == 0x00010E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_14) == 0x00010F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_15) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_16) == 0x000111, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_17) == 0x000112, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_18) == 0x000113, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_19) == 0x000114, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_20) == 0x000115, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_21) == 0x000116, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_22) == 0x000117, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_23) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_24) == 0x000119, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_25) == 0x00011A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, K2Node_Select_Default) == 0x00011B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_26) == 0x00011C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_27) == 0x00011D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_28) == 0x00011E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_29) == 0x00011F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_30) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_31) == 0x000121, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_32) == 0x000122, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_33) == 0x000123, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_34) == 0x000124, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_35) == 0x000125, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_36) == 0x000126, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_37) == 0x000127, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_38) == 0x000128, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_39) == 0x000129, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_40) == 0x00012A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_41) == 0x00012B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_42) == 0x00012C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_43) == 0x00012D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_44) == 0x00012E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_45) == 0x00012F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_46) == 0x000130, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_47) == 0x000131, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_47' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_48) == 0x000132, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_48' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_49) == 0x000133, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_49' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_byte_Variable_50) == 0x000134, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_byte_Variable_50' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, K2Node_Select_Default_1) == 0x000135, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable) == 0x000138, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_1) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_2) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_3) == 0x000180, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_4) == 0x000198, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_5) == 0x0001B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_6) == 0x0001C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_7) == 0x0001E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_8) == 0x0001F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_9) == 0x000210, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_10) == 0x000228, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_11) == 0x000240, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_12) == 0x000258, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_13) == 0x000270, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_14) == 0x000288, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_15) == 0x0002A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_16) == 0x0002B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_17) == 0x0002D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_18) == 0x0002E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_19) == 0x000300, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_20) == 0x000318, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_21) == 0x000330, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_22) == 0x000348, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, Temp_text_Variable_23) == 0x000360, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, K2Node_Select_Default_2) == 0x000378, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, K2Node_MakeStruct_FormatArgumentData_1) == 0x000390, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, K2Node_MakeArray_Array) == 0x0003D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, CallFunc_Format_ReturnValue) == 0x0003E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, K2Node_Select_Default_3) == 0x0003F8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000410, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CoilGun, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000478, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CoilGun::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatToPercentageZeroBasedNormalized
// 0x00F0 (0x00F0 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized final
{
public:
	float                                         Base_Value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Upgrade_Value;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Old_Upgrade_Value;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Value;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         FormatType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Base_Text;                                         // 0x0020(0x0018)(Parm, OutParm)
	class FText                                   Upgrade_Text;                                      // 0x0038(0x0018)(Parm, OutParm)
	class FText                                   Value;                                             // 0x0050(0x0018)(Parm, OutParm)
	EFormatWeaponStatType                         Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE3[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE4[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_2;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE5[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_3;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE6[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_6;                              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_7;                              // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_8;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_9;                              // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_10;                             // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_11;                             // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_12;                             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default;                             // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE7[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatPercentage_Base_Text;               // 0x00A8(0x0018)()
	class FText                                   CallFunc_FormatPercentage_Upgrade_Text;            // 0x00C0(0x0018)()
	class FText                                   CallFunc_FormatPercentage_Value;                   // 0x00D8(0x0018)()
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized) == 0x0000F0, "Wrong size on BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Base_Value) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Base_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Upgrade_Value) == 0x000004, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Upgrade_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Old_Upgrade_Value) == 0x000008, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Old_Upgrade_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Final_Value) == 0x00000C, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Final_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, FormatType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::FormatType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Base_Text) == 0x000020, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Upgrade_Text) == 0x000038, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Value) == 0x000050, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable) == 0x000068, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000069, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_SelectFloat_ReturnValue) == 0x00006C, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_1) == 0x000070, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_2) == 0x00007C, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000080, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000084, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000088, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_3) == 0x000090, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000094, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_4) == 0x000098, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_5) == 0x000099, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_6) == 0x00009A, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_7) == 0x00009B, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_8) == 0x00009C, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_9) == 0x00009D, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_10) == 0x00009E, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_11) == 0x00009F, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_12) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_13) == 0x0000A1, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, Temp_byte_Variable_14) == 0x0000A2, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, K2Node_Select_Default) == 0x0000A3, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_FormatPercentage_Base_Text) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_FormatPercentage_Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_FormatPercentage_Upgrade_Text) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_FormatPercentage_Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized, CallFunc_FormatPercentage_Value) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_FormatToPercentageZeroBasedNormalized::CallFunc_FormatPercentage_Value' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_MicrowaveGun
// 0x0408 (0x0408 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Prefix;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EMicrowaveGunUpgrade                          UpgradeType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTextOnly;                                       // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE8[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0038(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE9[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x00A4(0x001C)(NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMicrowaveGunUpgrade                          Temp_byte_Variable;                                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_3;                              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_4;                              // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_5;                              // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_6;                              // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_7;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_8;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_9;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_10;                             // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_11;                             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMicrowaveGunUpgrade                          Temp_byte_Variable_12;                             // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_13;                             // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_14;                             // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_15;                             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_16;                             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_17;                             // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_18;                             // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_19;                             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_20;                             // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_21;                             // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_22;                             // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_23;                             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMicrowaveGunUpgrade                          Temp_byte_Variable_24;                             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEA[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0150(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         K2Node_Select_Default_1;                           // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEB[0x5];                                     // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x0170(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_1;             // 0x0188(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_2;             // 0x01A0(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_3;             // 0x01B8(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_4;             // 0x01D0(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_5;             // 0x01E8(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_6;             // 0x0200(0x0018)()
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_7;             // 0x0218(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0230(0x0018)()
	struct FGearStatEntry                         K2Node_MakeStruct_GearStatEntry;                   // 0x0248(0x0068)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0300(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0318(0x0018)()
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0330(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DEC[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         K2Node_Select_Default_4;                           // 0x03A0(0x0068)()
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun) == 0x000408, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Prefix) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Prefix' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, UpgradeType) == 0x000028, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, UseTextOnly) == 0x000029, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::UseTextOnly' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, __WorldContext) == 0x000030, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, GearStatEntry) == 0x000038, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, HasAnyupgrades) == 0x0000A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_bool_Variable) == 0x0000A1, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradedValue_ReturnValue) == 0x0000A4, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_MakeStruct_FormatArgumentData) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_TextIsEmpty_ReturnValue) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable) == 0x000101, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_1) == 0x000102, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_2) == 0x000103, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_3) == 0x000104, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_4) == 0x000105, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_5) == 0x000106, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_6) == 0x000107, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_7) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_8) == 0x000109, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_9) == 0x00010A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_10) == 0x00010B, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_11) == 0x00010C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_12) == 0x00010D, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_13) == 0x00010E, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_14) == 0x00010F, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_15) == 0x000110, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_16) == 0x000111, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_17) == 0x000112, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_18) == 0x000113, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_19) == 0x000114, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_20) == 0x000115, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_21) == 0x000116, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_22) == 0x000117, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_23) == 0x000118, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_byte_Variable_24) == 0x000119, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_text_Variable) == 0x000120, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_text_Variable_1) == 0x000138, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_text_Variable_2) == 0x000150, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, Temp_bool_Variable_1) == 0x000168, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_Select_Default) == 0x000169, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_Select_Default_1) == 0x00016A, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradeName_ReturnValue) == 0x000170, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradeName_ReturnValue_1) == 0x000188, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradeName_ReturnValue_2) == 0x0001A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradeName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradeName_ReturnValue_3) == 0x0001B8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradeName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradeName_ReturnValue_4) == 0x0001D0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradeName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradeName_ReturnValue_5) == 0x0001E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradeName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradeName_ReturnValue_6) == 0x000200, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradeName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_GetUpgradeName_ReturnValue_7) == 0x000218, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_GetUpgradeName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_Select_Default_2) == 0x000230, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_MakeStruct_GearStatEntry) == 0x000248, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_MakeStruct_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_MakeArray_Array) == 0x0002F0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_Format_ReturnValue) == 0x000300, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_Select_Default_3) == 0x000318, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000330, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000398, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun, K2Node_Select_Default_4) == 0x0003A0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_MicrowaveGun::K2Node_Select_Default_4' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.UPGDESC_CapsuleHitScan
// 0x0178 (0x0178 - 0x0000)
struct BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECapsuleHitscanUpgradeType                    UpgradeType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DED[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         GearStatEntry;                                     // 0x0020(0x0068)(Parm, OutParm)
	bool                                          HasAnyupgrades;                                    // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECapsuleHitscanUpgradeType                    Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEE[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         CallFunc_GetUpgradedValue_ReturnValue;             // 0x008C(0x001C)(NoDestructor)
	EFormatPreviewStatusType                      Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECapsuleHitscanUpgradeType                    Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_4;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatWeaponStatType                         Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECapsuleHitscanUpgradeType                    Temp_byte_Variable_6;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEF[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0018)()
	EFormatPreviewStatusType                      K2Node_Select_Default;                             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF0[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00E8(0x0018)()
	EFormatWeaponStatType                         K2Node_Select_Default_2;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF1[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_FormatUpgradeToEntry_GearStatEntry;       // 0x0108(0x0068)()
	bool                                          CallFunc_FormatUpgradeToEntry_HasAnyupgrades;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan");
static_assert(sizeof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan) == 0x000178, "Wrong size on BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Item) == 0x000000, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Item' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Player) == 0x000008, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Player' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, UpgradeType) == 0x000010, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::UpgradeType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, __WorldContext) == 0x000018, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, GearStatEntry) == 0x000020, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, HasAnyupgrades) == 0x000088, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::HasAnyupgrades' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_byte_Variable) == 0x000089, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, CallFunc_GetUpgradedValue_ReturnValue) == 0x00008C, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::CallFunc_GetUpgradedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_byte_Variable_1) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_byte_Variable_2) == 0x0000A9, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_byte_Variable_3) == 0x0000AA, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_byte_Variable_4) == 0x0000AB, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_byte_Variable_5) == 0x0000AC, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_byte_Variable_6) == 0x0000AD, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_text_Variable) == 0x0000B0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, Temp_text_Variable_1) == 0x0000C8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, K2Node_Select_Default) == 0x0000E0, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, K2Node_Select_Default_1) == 0x0000E8, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, K2Node_Select_Default_2) == 0x000100, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, CallFunc_FormatUpgradeToEntry_GearStatEntry) == 0x000108, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::CallFunc_FormatUpgradeToEntry_GearStatEntry' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan, CallFunc_FormatUpgradeToEntry_HasAnyupgrades) == 0x000170, "Member 'BPL_UpgradeHelpers_C_UPGDESC_CapsuleHitScan::CallFunc_FormatUpgradeToEntry_HasAnyupgrades' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatValues
// 0x0630 (0x0630 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatValues final
{
public:
	struct FUpgradeValues                         UpgradeValues;                                     // 0x0000(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EFormatWeaponStatType                         Format;                                            // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF2[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   BaseText;                                          // 0x0028(0x0018)(Parm, OutParm)
	class FText                                   UpgradeText;                                       // 0x0040(0x0018)(Parm, OutParm)
	class FText                                   Value;                                             // 0x0058(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemPreviewStatus                            Temp_byte_Variable;                                // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF3[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00D8(0x0018)()
	EItemPreviewStatus                            Temp_byte_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF4[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0170(0x0018)()
	EItemPreviewStatus                            Temp_byte_Variable_2;                              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF5[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_10;                             // 0x0190(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x01D8(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x01F0(0x0018)()
	EItemPreviewStatus                            Temp_byte_Variable_3;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF6[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_15;                             // 0x0210(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x0228(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x0240(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x0258(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x0270(0x0018)()
	EItemPreviewStatus                            Temp_byte_Variable_4;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF7[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_20;                             // 0x0290(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x02A8(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x02C0(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x02D8(0x0018)()
	class FText                                   Temp_text_Variable_24;                             // 0x02F0(0x0018)()
	EItemPreviewStatus                            Temp_byte_Variable_5;                              // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF8[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_25;                             // 0x0310(0x0018)()
	class FText                                   Temp_text_Variable_26;                             // 0x0328(0x0018)()
	class FText                                   Temp_text_Variable_27;                             // 0x0340(0x0018)()
	class FText                                   Temp_text_Variable_28;                             // 0x0358(0x0018)()
	class FText                                   Temp_text_Variable_29;                             // 0x0370(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF9[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_FormatToPercentageZeroBasedNormalized_Base_Text; // 0x0398(0x0018)()
	class FText                                   CallFunc_FormatToPercentageZeroBasedNormalized_Upgrade_Text; // 0x03B0(0x0018)()
	class FText                                   CallFunc_FormatToPercentageZeroBasedNormalized_Value; // 0x03C8(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x03E8(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0408(0x0018)()
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DFA[0x4];                                     // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0430(0x0018)()
	class FText                                   CallFunc_FormatToPercentageNormalized_Base_Text;   // 0x0448(0x0018)()
	class FText                                   CallFunc_FormatToPercentageNormalized_Upgrade_Text; // 0x0460(0x0018)()
	class FText                                   CallFunc_FormatToPercentageNormalized_Value;       // 0x0478(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0490(0x0018)()
	float                                         CallFunc_RoundToDecimalPlace_ReturnValue;          // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RoundToDecimalPlace_ReturnValue_1;        // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x04C0(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x04D8(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x04F0(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x0508(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x0520(0x0018)()
	class FText                                   CallFunc_FormatCmtoM_Base_Text;                    // 0x0538(0x0018)()
	class FText                                   CallFunc_FormatCmtoM_Upgrade_Text;                 // 0x0550(0x0018)()
	class FText                                   CallFunc_FormatCmtoM_Value;                        // 0x0568(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DFB[0x3];                                     // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_6;                           // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_FormatPercentage_Base_Text;               // 0x0588(0x0018)()
	class FText                                   CallFunc_FormatPercentage_Upgrade_Text;            // 0x05A0(0x0018)()
	class FText                                   CallFunc_FormatPercentage_Value;                   // 0x05B8(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x05D0(0x0018)()
	class FText                                   K2Node_Select_Default_7;                           // 0x05E8(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_4;           // 0x0600(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_5;           // 0x0618(0x0018)()
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatValues) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatValues");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatValues) == 0x000630, "Wrong size on BPL_UpgradeHelpers_C_FormatValues");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, UpgradeValues) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatValues::UpgradeValues' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Format) == 0x00001C, "Member 'BPL_UpgradeHelpers_C_FormatValues::Format' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, __WorldContext) == 0x000020, "Member 'BPL_UpgradeHelpers_C_FormatValues::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, BaseText) == 0x000028, "Member 'BPL_UpgradeHelpers_C_FormatValues::BaseText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, UpgradeText) == 0x000040, "Member 'BPL_UpgradeHelpers_C_FormatValues::UpgradeText' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Value) == 0x000058, "Member 'BPL_UpgradeHelpers_C_FormatValues::Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_bool_Variable) == 0x000070, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_byte_Variable) == 0x000072, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable) == 0x000078, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_1) == 0x000090, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_2) == 0x0000A8, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_3) == 0x0000C0, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_4) == 0x0000D8, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_byte_Variable_1) == 0x0000F0, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_Select_Default) == 0x0000F8, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_5) == 0x000110, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_6) == 0x000128, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_7) == 0x000140, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_8) == 0x000158, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_9) == 0x000170, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_byte_Variable_2) == 0x000188, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_10) == 0x000190, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_11) == 0x0001A8, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_12) == 0x0001C0, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_13) == 0x0001D8, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_14) == 0x0001F0, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_byte_Variable_3) == 0x000208, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_15) == 0x000210, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_16) == 0x000228, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_17) == 0x000240, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_18) == 0x000258, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_19) == 0x000270, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_byte_Variable_4) == 0x000288, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_20) == 0x000290, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_21) == 0x0002A8, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_22) == 0x0002C0, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_23) == 0x0002D8, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_24) == 0x0002F0, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_24' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_byte_Variable_5) == 0x000308, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_25) == 0x000310, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_25' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_26) == 0x000328, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_26' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_27) == 0x000340, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_27' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_28) == 0x000358, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_28' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_text_Variable_29) == 0x000370, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_text_Variable_29' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_bool_Variable_1) == 0x000388, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_int_Variable) == 0x00038C, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, Temp_int_Variable_1) == 0x000390, "Member 'BPL_UpgradeHelpers_C_FormatValues::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_MakeLiteralInt_ReturnValue) == 0x000394, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatToPercentageZeroBasedNormalized_Base_Text) == 0x000398, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatToPercentageZeroBasedNormalized_Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatToPercentageZeroBasedNormalized_Upgrade_Text) == 0x0003B0, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatToPercentageZeroBasedNormalized_Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatToPercentageZeroBasedNormalized_Value) == 0x0003C8, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatToPercentageZeroBasedNormalized_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003E0, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0003E4, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Conv_FloatToText_ReturnValue) == 0x0003E8, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000400, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000404, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000408, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000420, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000424, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000428, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000430, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatToPercentageNormalized_Base_Text) == 0x000448, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatToPercentageNormalized_Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatToPercentageNormalized_Upgrade_Text) == 0x000460, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatToPercentageNormalized_Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatToPercentageNormalized_Value) == 0x000478, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatToPercentageNormalized_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_Select_Default_1) == 0x000490, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_RoundToDecimalPlace_ReturnValue) == 0x0004A8, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_RoundToDecimalPlace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Round_ReturnValue) == 0x0004AC, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_RoundToDecimalPlace_ReturnValue_1) == 0x0004B0, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_RoundToDecimalPlace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Round_ReturnValue_1) == 0x0004B4, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0004B8, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Subtract_IntInt_ReturnValue) == 0x0004BC, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Conv_IntToText_ReturnValue) == 0x0004C0, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_Select_Default_2) == 0x0004D8, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_Select_Default_3) == 0x0004F0, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_Select_Default_4) == 0x000508, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_Select_Default_5) == 0x000520, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatCmtoM_Base_Text) == 0x000538, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatCmtoM_Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatCmtoM_Upgrade_Text) == 0x000550, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatCmtoM_Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatCmtoM_Value) == 0x000568, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatCmtoM_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000580, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_Select_Default_6) == 0x000584, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatPercentage_Base_Text) == 0x000588, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatPercentage_Base_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatPercentage_Upgrade_Text) == 0x0005A0, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatPercentage_Upgrade_Text' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_FormatPercentage_Value) == 0x0005B8, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_FormatPercentage_Value' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x0005D0, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, K2Node_Select_Default_7) == 0x0005E8, "Member 'BPL_UpgradeHelpers_C_FormatValues::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Conv_FloatToText_ReturnValue_4) == 0x000600, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Conv_FloatToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatValues, CallFunc_Conv_FloatToText_ReturnValue_5) == 0x000618, "Member 'BPL_UpgradeHelpers_C_FormatValues::CallFunc_Conv_FloatToText_ReturnValue_5' has a wrong offset!");

// Function BPL_UpgradeHelpers.BPL_UpgradeHelpers_C.FormatPreviewStatus
// 0x0048 (0x0048 - 0x0000)
struct BPL_UpgradeHelpers_C_FormatPreviewStatus final
{
public:
	bool                                          FormatValue;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DFC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUpgradeValues                         UpgradeValues;                                     // 0x0004(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EFormatPreviewStatusType                      FormatType;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DFD[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemPreviewStatus                            ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemPreviewStatus                            Temp_byte_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemPreviewStatus                            Temp_byte_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFormatPreviewStatusType                      Temp_byte_Variable_2;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemPreviewStatus                            Temp_byte_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemPreviewStatus                            Temp_byte_Variable_4;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemPreviewStatus                            Temp_byte_Variable_5;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemPreviewStatus                            K2Node_Select_Default;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemPreviewStatus                            K2Node_Select_Default_1;                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemPreviewStatus                            K2Node_Select_Default_2;                           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemPreviewStatus                            K2Node_Select_Default_3;                           // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemPreviewStatus                            K2Node_Select_Default_4;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemPreviewStatus                            K2Node_Select_Default_5;                           // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UpgradeHelpers_C_FormatPreviewStatus) == 0x000008, "Wrong alignment on BPL_UpgradeHelpers_C_FormatPreviewStatus");
static_assert(sizeof(BPL_UpgradeHelpers_C_FormatPreviewStatus) == 0x000048, "Wrong size on BPL_UpgradeHelpers_C_FormatPreviewStatus");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, FormatValue) == 0x000000, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::FormatValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, UpgradeValues) == 0x000004, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::UpgradeValues' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, FormatType) == 0x000020, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::FormatType' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, __WorldContext) == 0x000028, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, ReturnValue) == 0x000030, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_bool_Variable) == 0x000031, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_byte_Variable) == 0x000032, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000033, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_byte_Variable_1) == 0x000035, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_byte_Variable_2) == 0x000036, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_bool_Variable_1) == 0x000037, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_byte_Variable_3) == 0x000038, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_bool_Variable_2) == 0x000039, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_byte_Variable_4) == 0x00003A, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_byte_Variable_5) == 0x00003B, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_bool_Variable_3) == 0x00003C, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, Temp_bool_Variable_4) == 0x00003D, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003E, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003F, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, K2Node_Select_Default) == 0x000040, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, K2Node_Select_Default_1) == 0x000041, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, K2Node_Select_Default_2) == 0x000042, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, K2Node_Select_Default_3) == 0x000043, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, K2Node_Select_Default_4) == 0x000044, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPL_UpgradeHelpers_C_FormatPreviewStatus, K2Node_Select_Default_5) == 0x000045, "Member 'BPL_UpgradeHelpers_C_FormatPreviewStatus::K2Node_Select_Default_5' has a wrong offset!");

}

