#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LCD_ActiveEventEndDateDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function LCD_ActiveEventEndDateDisplay.LCD_ActiveEventEndDateDisplay_C.ChangeEvent
// 0x0008 (0x0008 - 0x0000)
struct LCD_ActiveEventEndDateDisplay_C_ChangeEvent final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LCD_ActiveEventEndDateDisplay_C_ChangeEvent) == 0x000008, "Wrong alignment on LCD_ActiveEventEndDateDisplay_C_ChangeEvent");
static_assert(sizeof(LCD_ActiveEventEndDateDisplay_C_ChangeEvent) == 0x000008, "Wrong size on LCD_ActiveEventEndDateDisplay_C_ChangeEvent");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_ChangeEvent, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'LCD_ActiveEventEndDateDisplay_C_ChangeEvent::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function LCD_ActiveEventEndDateDisplay.LCD_ActiveEventEndDateDisplay_C.GetEventToDisplay
// 0x0030 (0x0030 - 0x0000)
struct LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay final
{
public:
	class UFSDEvent*                              EventToDisplay;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDEvent*                              ToReturn;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDEvent*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay) == 0x000008, "Wrong alignment on LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay");
static_assert(sizeof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay) == 0x000030, "Wrong size on LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay, EventToDisplay) == 0x000000, "Member 'LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay::EventToDisplay' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay, ToReturn) == 0x000008, "Member 'LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay::ToReturn' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay, Temp_int_Variable) == 0x000014, "Member 'LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay, CallFunc_Array_Get_Item) == 0x000020, "Member 'LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000028, "Member 'LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay, CallFunc_Multiply_IntInt_ReturnValue) == 0x00002C, "Member 'LCD_ActiveEventEndDateDisplay_C_GetEventToDisplay::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function LCD_ActiveEventEndDateDisplay.LCD_ActiveEventEndDateDisplay_C.CheckForActiveEvents
// 0x0068 (0x0068 - 0x0000)
struct LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4F2C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UFSDEventManager*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFSDEvent*>                      CallFunc_GetActiveEventHandlers_ReturnValue;       // 0x0048(0x0010)(ReferenceParm)
	class UFSDEvent*                              CallFunc_GetFirstActiveEventHandler_ReturnValue;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents) == 0x000008, "Wrong alignment on LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents");
static_assert(sizeof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents) == 0x000068, "Wrong size on LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, Temp_int_Variable) == 0x000000, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000004, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000038, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000040, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, CallFunc_GetActiveEventHandlers_ReturnValue) == 0x000048, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::CallFunc_GetActiveEventHandlers_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, CallFunc_GetFirstActiveEventHandler_ReturnValue) == 0x000058, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::CallFunc_GetFirstActiveEventHandler_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'LCD_ActiveEventEndDateDisplay_C_CheckForActiveEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function LCD_ActiveEventEndDateDisplay.LCD_ActiveEventEndDateDisplay_C.Refresh
// 0x0158 (0x0158 - 0x0000)
struct LCD_ActiveEventEndDateDisplay_C_Refresh final
{
public:
	class UFSDEvent*                              ActiveEvent;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0048(0x0088)()
	class UFSDEvent*                              CallFunc_GetEventToDisplay_EventToDisplay;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsDate_DateTime_ReturnValue;              // 0x00D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
};
static_assert(alignof(LCD_ActiveEventEndDateDisplay_C_Refresh) == 0x000008, "Wrong alignment on LCD_ActiveEventEndDateDisplay_C_Refresh");
static_assert(sizeof(LCD_ActiveEventEndDateDisplay_C_Refresh) == 0x000158, "Wrong size on LCD_ActiveEventEndDateDisplay_C_Refresh");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, ActiveEvent) == 0x000000, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::ActiveEvent' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000040, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, K2Node_MakeStruct_SlateBrush) == 0x000048, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, CallFunc_GetEventToDisplay_EventToDisplay) == 0x0000D0, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::CallFunc_GetEventToDisplay_EventToDisplay' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, CallFunc_AsDate_DateTime_ReturnValue) == 0x0000D8, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::CallFunc_AsDate_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, K2Node_MakeStruct_FormatArgumentData) == 0x0000F0, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, K2Node_MakeArray_Array) == 0x000130, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_Refresh, CallFunc_Format_ReturnValue) == 0x000140, "Member 'LCD_ActiveEventEndDateDisplay_C_Refresh::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function LCD_ActiveEventEndDateDisplay.LCD_ActiveEventEndDateDisplay_C.ExecuteUbergraph_LCD_ActiveEventEndDateDisplay
// 0x0004 (0x0004 - 0x0000)
struct LCD_ActiveEventEndDateDisplay_C_ExecuteUbergraph_LCD_ActiveEventEndDateDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LCD_ActiveEventEndDateDisplay_C_ExecuteUbergraph_LCD_ActiveEventEndDateDisplay) == 0x000004, "Wrong alignment on LCD_ActiveEventEndDateDisplay_C_ExecuteUbergraph_LCD_ActiveEventEndDateDisplay");
static_assert(sizeof(LCD_ActiveEventEndDateDisplay_C_ExecuteUbergraph_LCD_ActiveEventEndDateDisplay) == 0x000004, "Wrong size on LCD_ActiveEventEndDateDisplay_C_ExecuteUbergraph_LCD_ActiveEventEndDateDisplay");
static_assert(offsetof(LCD_ActiveEventEndDateDisplay_C_ExecuteUbergraph_LCD_ActiveEventEndDateDisplay, EntryPoint) == 0x000000, "Member 'LCD_ActiveEventEndDateDisplay_C_ExecuteUbergraph_LCD_ActiveEventEndDateDisplay::EntryPoint' has a wrong offset!");

}

