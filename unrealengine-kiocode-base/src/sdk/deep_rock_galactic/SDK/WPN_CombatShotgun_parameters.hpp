#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_CombatShotgun

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.OnNotifyEnd_4B7DB4F44E81366933E16CAB9B80C557
// 0x0008 (0x0008 - 0x0000)
struct WPN_CombatShotgun_C_OnNotifyEnd_4B7DB4F44E81366933E16CAB9B80C557 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_CombatShotgun_C_OnNotifyEnd_4B7DB4F44E81366933E16CAB9B80C557) == 0x000004, "Wrong alignment on WPN_CombatShotgun_C_OnNotifyEnd_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(sizeof(WPN_CombatShotgun_C_OnNotifyEnd_4B7DB4F44E81366933E16CAB9B80C557) == 0x000008, "Wrong size on WPN_CombatShotgun_C_OnNotifyEnd_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(offsetof(WPN_CombatShotgun_C_OnNotifyEnd_4B7DB4F44E81366933E16CAB9B80C557, NotifyName) == 0x000000, "Member 'WPN_CombatShotgun_C_OnNotifyEnd_4B7DB4F44E81366933E16CAB9B80C557::NotifyName' has a wrong offset!");

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.OnNotifyBegin_4B7DB4F44E81366933E16CAB9B80C557
// 0x0008 (0x0008 - 0x0000)
struct WPN_CombatShotgun_C_OnNotifyBegin_4B7DB4F44E81366933E16CAB9B80C557 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_CombatShotgun_C_OnNotifyBegin_4B7DB4F44E81366933E16CAB9B80C557) == 0x000004, "Wrong alignment on WPN_CombatShotgun_C_OnNotifyBegin_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(sizeof(WPN_CombatShotgun_C_OnNotifyBegin_4B7DB4F44E81366933E16CAB9B80C557) == 0x000008, "Wrong size on WPN_CombatShotgun_C_OnNotifyBegin_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(offsetof(WPN_CombatShotgun_C_OnNotifyBegin_4B7DB4F44E81366933E16CAB9B80C557, NotifyName) == 0x000000, "Member 'WPN_CombatShotgun_C_OnNotifyBegin_4B7DB4F44E81366933E16CAB9B80C557::NotifyName' has a wrong offset!");

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.OnInterrupted_4B7DB4F44E81366933E16CAB9B80C557
// 0x0008 (0x0008 - 0x0000)
struct WPN_CombatShotgun_C_OnInterrupted_4B7DB4F44E81366933E16CAB9B80C557 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_CombatShotgun_C_OnInterrupted_4B7DB4F44E81366933E16CAB9B80C557) == 0x000004, "Wrong alignment on WPN_CombatShotgun_C_OnInterrupted_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(sizeof(WPN_CombatShotgun_C_OnInterrupted_4B7DB4F44E81366933E16CAB9B80C557) == 0x000008, "Wrong size on WPN_CombatShotgun_C_OnInterrupted_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(offsetof(WPN_CombatShotgun_C_OnInterrupted_4B7DB4F44E81366933E16CAB9B80C557, NotifyName) == 0x000000, "Member 'WPN_CombatShotgun_C_OnInterrupted_4B7DB4F44E81366933E16CAB9B80C557::NotifyName' has a wrong offset!");

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.OnBlendOut_4B7DB4F44E81366933E16CAB9B80C557
// 0x0008 (0x0008 - 0x0000)
struct WPN_CombatShotgun_C_OnBlendOut_4B7DB4F44E81366933E16CAB9B80C557 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_CombatShotgun_C_OnBlendOut_4B7DB4F44E81366933E16CAB9B80C557) == 0x000004, "Wrong alignment on WPN_CombatShotgun_C_OnBlendOut_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(sizeof(WPN_CombatShotgun_C_OnBlendOut_4B7DB4F44E81366933E16CAB9B80C557) == 0x000008, "Wrong size on WPN_CombatShotgun_C_OnBlendOut_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(offsetof(WPN_CombatShotgun_C_OnBlendOut_4B7DB4F44E81366933E16CAB9B80C557, NotifyName) == 0x000000, "Member 'WPN_CombatShotgun_C_OnBlendOut_4B7DB4F44E81366933E16CAB9B80C557::NotifyName' has a wrong offset!");

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.OnCompleted_4B7DB4F44E81366933E16CAB9B80C557
// 0x0008 (0x0008 - 0x0000)
struct WPN_CombatShotgun_C_OnCompleted_4B7DB4F44E81366933E16CAB9B80C557 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_CombatShotgun_C_OnCompleted_4B7DB4F44E81366933E16CAB9B80C557) == 0x000004, "Wrong alignment on WPN_CombatShotgun_C_OnCompleted_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(sizeof(WPN_CombatShotgun_C_OnCompleted_4B7DB4F44E81366933E16CAB9B80C557) == 0x000008, "Wrong size on WPN_CombatShotgun_C_OnCompleted_4B7DB4F44E81366933E16CAB9B80C557");
static_assert(offsetof(WPN_CombatShotgun_C_OnCompleted_4B7DB4F44E81366933E16CAB9B80C557, NotifyName) == 0x000000, "Member 'WPN_CombatShotgun_C_OnCompleted_4B7DB4F44E81366933E16CAB9B80C557::NotifyName' has a wrong offset!");

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.CustomEvent1
// 0x0008 (0x0008 - 0x0000)
struct WPN_CombatShotgun_C_CustomEvent1 final
{
public:
	const class UItemUpgrade*                     Event;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_CombatShotgun_C_CustomEvent1) == 0x000008, "Wrong alignment on WPN_CombatShotgun_C_CustomEvent1");
static_assert(sizeof(WPN_CombatShotgun_C_CustomEvent1) == 0x000008, "Wrong size on WPN_CombatShotgun_C_CustomEvent1");
static_assert(offsetof(WPN_CombatShotgun_C_CustomEvent1, Event) == 0x000000, "Member 'WPN_CombatShotgun_C_CustomEvent1::Event' has a wrong offset!");

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.AddPoisonToPlatform
// 0x008C (0x008C - 0x0000)
struct WPN_CombatShotgun_C_AddPoisonToPlatform final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          AlwaysPenetrate;                                   // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WPN_CombatShotgun_C_AddPoisonToPlatform) == 0x000004, "Wrong alignment on WPN_CombatShotgun_C_AddPoisonToPlatform");
static_assert(sizeof(WPN_CombatShotgun_C_AddPoisonToPlatform) == 0x00008C, "Wrong size on WPN_CombatShotgun_C_AddPoisonToPlatform");
static_assert(offsetof(WPN_CombatShotgun_C_AddPoisonToPlatform, Hit) == 0x000000, "Member 'WPN_CombatShotgun_C_AddPoisonToPlatform::Hit' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_AddPoisonToPlatform, AlwaysPenetrate) == 0x000088, "Member 'WPN_CombatShotgun_C_AddPoisonToPlatform::AlwaysPenetrate' has a wrong offset!");

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.ExecuteUbergraph_WPN_CombatShotgun
// 0x02C0 (0x02C0 - 0x0000)
struct WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ECD[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UItemUpgrade*                     K2Node_Event_Event;                                // 0x00A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_Base_AmmoCount_C*        K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ECE[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x00B4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_alwaysPenetrate;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ECF[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPhysicalMaterial*>              K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED0[0x2];                                     // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED1[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED2[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit, bool AlwaysPenetrate)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x01D8(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4ED3[0x8];                                     // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED4[0xC];                                     // 0x0244(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CombatShotgun_PoisonPlatforms_C*    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED5[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED6[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED7[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun) == 0x000010, "Wrong alignment on WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun");
static_assert(sizeof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun) == 0x0002C0, "Wrong size on WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, EntryPoint) == 0x000000, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::EntryPoint' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CustomEvent_NotifyName_4) == 0x000024, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CustomEvent_NotifyName_3) == 0x00002C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CustomEvent_NotifyName_2) == 0x000044, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CreateDelegate_OutputDelegate_3) == 0x00004C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CustomEvent_NotifyName_1) == 0x00005C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CreateDelegate_OutputDelegate_4) == 0x000064, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CustomEvent_NotifyName) == 0x000074, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CreateDelegate_OutputDelegate_5) == 0x00007C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, Temp_name_Variable) == 0x00008C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_HasAuthority_ReturnValue) == 0x000094, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000098, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_Event_Event) == 0x0000A0, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_Event_Event' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count) == 0x0000A8, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_DynamicCast_AsWeapon_Display_Base_Ammo_Count' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B1, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000B2, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CustomEvent_Hit) == 0x0000B4, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CustomEvent_alwaysPenetrate) == 0x00013C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CustomEvent_alwaysPenetrate' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_MakeArray_Array) == 0x000140, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_bBlockingHit) == 0x000150, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_bInitialOverlap) == 0x000151, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_Time) == 0x000154, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_Distance) == 0x000158, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_Location) == 0x00015C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_ImpactPoint) == 0x000168, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_Normal) == 0x000174, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_ImpactNormal) == 0x000180, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_ElementIndex) == 0x0001B4, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_FaceIndex) == 0x0001B8, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_TraceStart) == 0x0001BC, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_Array_Contains_ReturnValue) == 0x0001D4, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001D8, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0001F0, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakTransform_Location) == 0x000220, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakTransform_Rotation) == 0x00022C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BreakTransform_Scale) == 0x000238, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_MakeTransform_ReturnValue) == 0x000250, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000280, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_FinishSpawningActor_ReturnValue) == 0x000288, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_Greater_IntInt_ReturnValue) == 0x000290, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_Montage_Play_ReturnValue) == 0x000294, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_BooleanAND_ReturnValue) == 0x000298, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_Montage_Play_ReturnValue_1) == 0x00029C, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002A0, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0002A8, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0002B0, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun, CallFunc_IsValid_ReturnValue) == 0x0002B8, "Member 'WPN_CombatShotgun_C_ExecuteUbergraph_WPN_CombatShotgun::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WPN_CombatShotgun.WPN_CombatShotgun_C.GetGearStatEntry
// 0x0780 (0x0780 - 0x0000)
struct WPN_CombatShotgun_C_GetGearStatEntry final
{
public:
	class AFSDPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGearStatEntry>                 Stats;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_HitScan_GearStatEntry;            // 0x0020(0x0068)()
	bool                                          CallFunc_UPGDESC_HitScan_HasAnyUpgrades;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED8[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry;             // 0x0090(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED9[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_1;           // 0x0100(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_1;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EDA[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EDB[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EDC[0x2];                                     // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_2;           // 0x0198(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_2;        // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EDD[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDE[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_HitScan_GearStatEntry_1;          // 0x0210(0x0068)()
	bool                                          CallFunc_UPGDESC_HitScan_HasAnyUpgrades_1;         // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EDF[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_CombatShotgun_GearStatEntry;      // 0x0280(0x0068)()
	bool                                          CallFunc_UPGDESC_CombatShotgun_HasUpgradedValue;   // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE0[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE1[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_CombatShotgun_GearStatEntry_1;    // 0x02F8(0x0068)()
	bool                                          CallFunc_UPGDESC_CombatShotgun_HasUpgradedValue_1; // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE2[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_3;           // 0x0368(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_3;        // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE3[0x3];                                     // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE4[0x4];                                     // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_HitScan_GearStatEntry_2;          // 0x03E0(0x0068)()
	bool                                          CallFunc_UPGDESC_HitScan_HasAnyUpgrades_2;         // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE5[0x7];                                     // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry;         // 0x0450(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades;        // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE6[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE7[0x4];                                     // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_HitScan_Bullets_GearStatEntry;    // 0x04C8(0x0068)()
	bool                                          CallFunc_UPGDESC_HitScan_Bullets_HasUpgradedValue; // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE8[0x7];                                     // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1;       // 0x0538(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1;      // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE9[0x3];                                     // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EEA[0x4];                                     // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2;       // 0x05B0(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2;      // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EEB[0x7];                                     // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3;       // 0x0620(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3;      // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EEC[0x3];                                     // 0x0689(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_13;                 // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EED[0x4];                                     // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry_4;       // 0x0698(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_4;      // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EEE[0x7];                                     // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_4;           // 0x0708(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_4;        // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EEF[0x3];                                     // 0x0771(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_14;                 // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_15;                 // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_CombatShotgun_C_GetGearStatEntry) == 0x000008, "Wrong alignment on WPN_CombatShotgun_C_GetGearStatEntry");
static_assert(sizeof(WPN_CombatShotgun_C_GetGearStatEntry) == 0x000780, "Wrong size on WPN_CombatShotgun_C_GetGearStatEntry");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, PlayerState) == 0x000000, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::PlayerState' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, Stats) == 0x000008, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::Stats' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_HitScan_GearStatEntry) == 0x000020, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_HitScan_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_HitScan_HasAnyUpgrades) == 0x000088, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_HitScan_HasAnyUpgrades' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry) == 0x000090, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue) == 0x0000F8, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue) == 0x0000FC, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_1) == 0x000100, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_1) == 0x000168, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_1) == 0x00016C, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000170, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Conv_TextToString_ReturnValue) == 0x000178, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000188, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00018C, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_BooleanAND_ReturnValue) == 0x00018D, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_1) == 0x000190, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_2) == 0x000198, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_2) == 0x000200, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_2) == 0x000204, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_3) == 0x000208, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_HitScan_GearStatEntry_1) == 0x000210, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_HitScan_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_HitScan_HasAnyUpgrades_1) == 0x000278, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_HitScan_HasAnyUpgrades_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_CombatShotgun_GearStatEntry) == 0x000280, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_CombatShotgun_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_CombatShotgun_HasUpgradedValue) == 0x0002E8, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_CombatShotgun_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_4) == 0x0002EC, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_5) == 0x0002F0, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_CombatShotgun_GearStatEntry_1) == 0x0002F8, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_CombatShotgun_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_CombatShotgun_HasUpgradedValue_1) == 0x000360, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_CombatShotgun_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_3) == 0x000368, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_3) == 0x0003D0, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_3' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_6) == 0x0003D4, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_7) == 0x0003D8, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_HitScan_GearStatEntry_2) == 0x0003E0, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_HitScan_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_HitScan_HasAnyUpgrades_2) == 0x000448, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_HitScan_HasAnyUpgrades_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry) == 0x000450, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades) == 0x0004B8, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_8) == 0x0004BC, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_9) == 0x0004C0, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_HitScan_Bullets_GearStatEntry) == 0x0004C8, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_HitScan_Bullets_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_HitScan_Bullets_HasUpgradedValue) == 0x000530, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_HitScan_Bullets_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1) == 0x000538, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1) == 0x0005A0, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_1' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_10) == 0x0005A4, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_11) == 0x0005A8, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2) == 0x0005B0, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2) == 0x000618, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_2' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3) == 0x000620, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3) == 0x000688, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_3' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_12) == 0x00068C, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_13) == 0x000690, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry_4) == 0x000698, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry_4' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_4) == 0x000700, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades_4' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_4) == 0x000708, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_4' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_4) == 0x000770, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_4' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_14) == 0x000774, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WPN_CombatShotgun_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_15) == 0x000778, "Member 'WPN_CombatShotgun_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_15' has a wrong offset!");

}

