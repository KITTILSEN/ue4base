#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hud_LockOnTarget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.OnTargetDistanceChanged
// 0x0004 (0x0004 - 0x0000)
struct Hud_LockOnTarget_C_OnTargetDistanceChanged final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Hud_LockOnTarget_C_OnTargetDistanceChanged) == 0x000004, "Wrong alignment on Hud_LockOnTarget_C_OnTargetDistanceChanged");
static_assert(sizeof(Hud_LockOnTarget_C_OnTargetDistanceChanged) == 0x000004, "Wrong size on Hud_LockOnTarget_C_OnTargetDistanceChanged");
static_assert(offsetof(Hud_LockOnTarget_C_OnTargetDistanceChanged, Distance) == 0x000000, "Member 'Hud_LockOnTarget_C_OnTargetDistanceChanged::Distance' has a wrong offset!");

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.OnInViewChanged
// 0x0008 (0x0008 - 0x0000)
struct Hud_LockOnTarget_C_OnInViewChanged final
{
public:
	bool                                          InView;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52E1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Hud_LockOnTarget_C_OnInViewChanged) == 0x000004, "Wrong alignment on Hud_LockOnTarget_C_OnInViewChanged");
static_assert(sizeof(Hud_LockOnTarget_C_OnInViewChanged) == 0x000008, "Wrong size on Hud_LockOnTarget_C_OnInViewChanged");
static_assert(offsetof(Hud_LockOnTarget_C_OnInViewChanged, InView) == 0x000000, "Member 'Hud_LockOnTarget_C_OnInViewChanged::InView' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_OnInViewChanged, Angle) == 0x000004, "Member 'Hud_LockOnTarget_C_OnInViewChanged::Angle' has a wrong offset!");

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Hud_LockOnTarget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Hud_LockOnTarget_C_PreConstruct) == 0x000001, "Wrong alignment on Hud_LockOnTarget_C_PreConstruct");
static_assert(sizeof(Hud_LockOnTarget_C_PreConstruct) == 0x000001, "Wrong size on Hud_LockOnTarget_C_PreConstruct");
static_assert(offsetof(Hud_LockOnTarget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Hud_LockOnTarget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.UpdateArrow
// 0x0008 (0x0008 - 0x0000)
struct Hud_LockOnTarget_C_UpdateArrow final
{
public:
	bool                                          InView;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52E2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Hud_LockOnTarget_C_UpdateArrow) == 0x000004, "Wrong alignment on Hud_LockOnTarget_C_UpdateArrow");
static_assert(sizeof(Hud_LockOnTarget_C_UpdateArrow) == 0x000008, "Wrong size on Hud_LockOnTarget_C_UpdateArrow");
static_assert(offsetof(Hud_LockOnTarget_C_UpdateArrow, InView) == 0x000000, "Member 'Hud_LockOnTarget_C_UpdateArrow::InView' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_UpdateArrow, Angle) == 0x000004, "Member 'Hud_LockOnTarget_C_UpdateArrow::Angle' has a wrong offset!");

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.OnLockOn
// 0x0008 (0x0008 - 0x0000)
struct Hud_LockOnTarget_C_OnLockOn final
{
public:
	int32                                         NumberOfLockOnsOnThisTarget;                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalNumberOfLockOns;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Hud_LockOnTarget_C_OnLockOn) == 0x000004, "Wrong alignment on Hud_LockOnTarget_C_OnLockOn");
static_assert(sizeof(Hud_LockOnTarget_C_OnLockOn) == 0x000008, "Wrong size on Hud_LockOnTarget_C_OnLockOn");
static_assert(offsetof(Hud_LockOnTarget_C_OnLockOn, NumberOfLockOnsOnThisTarget) == 0x000000, "Member 'Hud_LockOnTarget_C_OnLockOn::NumberOfLockOnsOnThisTarget' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_OnLockOn, TotalNumberOfLockOns) == 0x000004, "Member 'Hud_LockOnTarget_C_OnLockOn::TotalNumberOfLockOns' has a wrong offset!");

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.OnFireComplete
// 0x0004 (0x0004 - 0x0000)
struct Hud_LockOnTarget_C_OnFireComplete final
{
public:
	int32                                         NumberOfLockOnsOnThisTarget;                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Hud_LockOnTarget_C_OnFireComplete) == 0x000004, "Wrong alignment on Hud_LockOnTarget_C_OnFireComplete");
static_assert(sizeof(Hud_LockOnTarget_C_OnFireComplete) == 0x000004, "Wrong size on Hud_LockOnTarget_C_OnFireComplete");
static_assert(offsetof(Hud_LockOnTarget_C_OnFireComplete, NumberOfLockOnsOnThisTarget) == 0x000000, "Member 'Hud_LockOnTarget_C_OnFireComplete::NumberOfLockOnsOnThisTarget' has a wrong offset!");

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.UpdateCount
// 0x0004 (0x0004 - 0x0000)
struct Hud_LockOnTarget_C_UpdateCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Hud_LockOnTarget_C_UpdateCount) == 0x000004, "Wrong alignment on Hud_LockOnTarget_C_UpdateCount");
static_assert(sizeof(Hud_LockOnTarget_C_UpdateCount) == 0x000004, "Wrong size on Hud_LockOnTarget_C_UpdateCount");
static_assert(offsetof(Hud_LockOnTarget_C_UpdateCount, NewCount) == 0x000000, "Member 'Hud_LockOnTarget_C_UpdateCount::NewCount' has a wrong offset!");

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.CleanUpWidget
// 0x0001 (0x0001 - 0x0000)
struct Hud_LockOnTarget_C_CleanUpWidget final
{
public:
	bool                                          ShowFade;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Hud_LockOnTarget_C_CleanUpWidget) == 0x000001, "Wrong alignment on Hud_LockOnTarget_C_CleanUpWidget");
static_assert(sizeof(Hud_LockOnTarget_C_CleanUpWidget) == 0x000001, "Wrong size on Hud_LockOnTarget_C_CleanUpWidget");
static_assert(offsetof(Hud_LockOnTarget_C_CleanUpWidget, ShowFade) == 0x000000, "Member 'Hud_LockOnTarget_C_CleanUpWidget::ShowFade' has a wrong offset!");

// Function Hud_LockOnTarget.Hud_LockOnTarget_C.ExecuteUbergraph_Hud_LockOnTarget
// 0x00B0 (0x00B0 - 0x0000)
struct Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52E3[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Distance;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_inView;                               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Angle;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_InView;                         // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52E4[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Angle;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E5[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_numberOfLockOnsOnThisTarget_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_totalNumberOfLockOns;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_numberOfLockOnsOnThisTarget;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewCount;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52E6[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E7[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_showFade;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52E8[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget) == 0x000008, "Wrong alignment on Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget");
static_assert(sizeof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget) == 0x0000B0, "Wrong size on Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, EntryPoint) == 0x000000, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, Temp_byte_Variable) == 0x000004, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, Temp_bool_Variable) == 0x000005, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, Temp_byte_Variable_1) == 0x000006, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, Temp_byte_Variable_2) == 0x000007, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, Temp_bool_IsClosed_Variable) == 0x000009, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Event_Distance) == 0x00000C, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Event_Distance' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_IsVisible_ReturnValue) == 0x000014, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, Temp_byte_Variable_3) == 0x000015, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, Temp_bool_Variable_1) == 0x000016, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Event_inView) == 0x000017, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Event_inView' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Event_Angle) == 0x000018, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Event_IsDesignTime) == 0x00001C, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_CustomEvent_InView) == 0x00001E, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_CustomEvent_InView' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_CustomEvent_Angle) == 0x000020, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_CustomEvent_Angle' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_DegSin_ReturnValue) == 0x000028, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_DegCos_ReturnValue) == 0x00002C, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Select_Default) == 0x000038, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x00003C, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Event_numberOfLockOnsOnThisTarget_1) == 0x000044, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Event_numberOfLockOnsOnThisTarget_1' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Event_totalNumberOfLockOns) == 0x000048, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Event_totalNumberOfLockOns' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Event_numberOfLockOnsOnThisTarget) == 0x00004C, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Event_numberOfLockOnsOnThisTarget' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000050, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000058, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_CustomEvent_NewCount) == 0x000060, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_CustomEvent_NewCount' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Select_Default_1) == 0x000080, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_PlayAnimationForward_ReturnValue) == 0x000088, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_Event_showFade) == 0x000090, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_Event_showFade' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, CallFunc_PlayAnimation_ReturnValue) == 0x000098, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget, K2Node_CreateDelegate_OutputDelegate) == 0x0000A0, "Member 'Hud_LockOnTarget_C_ExecuteUbergraph_Hud_LockOnTarget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

