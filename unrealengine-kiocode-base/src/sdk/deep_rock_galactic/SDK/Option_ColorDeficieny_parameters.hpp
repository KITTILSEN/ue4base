#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Option_ColorDeficieny

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Option_ColorDeficieny.Option_ColorDeficieny_C.ExecuteUbergraph_Option_ColorDeficieny
// 0x0040 (0x0040 - 0x0000)
struct Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C50[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0018)()
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Percent;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny) == 0x000008, "Wrong alignment on Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny");
static_assert(sizeof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny) == 0x000040, "Wrong size on Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny");
static_assert(offsetof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny, EntryPoint) == 0x000000, "Member 'Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny::EntryPoint' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny, K2Node_ComponentBoundEvent_Index) == 0x000020, "Member 'Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny, K2Node_ComponentBoundEvent_Percent) == 0x000024, "Member 'Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny::K2Node_ComponentBoundEvent_Percent' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny, CallFunc_MenuColors_OutputColor) == 0x000028, "Member 'Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'Option_ColorDeficieny_C_ExecuteUbergraph_Option_ColorDeficieny::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function Option_ColorDeficieny.Option_ColorDeficieny_C.BndEvt__Option_ColorDeficieny_Severity_Slider_K2Node_ComponentBoundEvent_1_OnPercentChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Severity_Slider_K2Node_ComponentBoundEvent_1_OnPercentChanged__DelegateSignature final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Severity_Slider_K2Node_ComponentBoundEvent_1_OnPercentChanged__DelegateSignature) == 0x000004, "Wrong alignment on Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Severity_Slider_K2Node_ComponentBoundEvent_1_OnPercentChanged__DelegateSignature");
static_assert(sizeof(Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Severity_Slider_K2Node_ComponentBoundEvent_1_OnPercentChanged__DelegateSignature) == 0x000004, "Wrong size on Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Severity_Slider_K2Node_ComponentBoundEvent_1_OnPercentChanged__DelegateSignature");
static_assert(offsetof(Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Severity_Slider_K2Node_ComponentBoundEvent_1_OnPercentChanged__DelegateSignature, Percent) == 0x000000, "Member 'Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Severity_Slider_K2Node_ComponentBoundEvent_1_OnPercentChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Option_ColorDeficieny.Option_ColorDeficieny_C.BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Param_Index;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature) == 0x000020, "Wrong size on Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature, Value) == 0x000000, "Member 'Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature, Param_Index) == 0x000018, "Member 'Option_ColorDeficieny_C_BndEvt__Option_ColorDeficieny_Type_Selector_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function Option_ColorDeficieny.Option_ColorDeficieny_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Option_ColorDeficieny_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Option_ColorDeficieny_C_PreConstruct) == 0x000001, "Wrong alignment on Option_ColorDeficieny_C_PreConstruct");
static_assert(sizeof(Option_ColorDeficieny_C_PreConstruct) == 0x000001, "Wrong size on Option_ColorDeficieny_C_PreConstruct");
static_assert(offsetof(Option_ColorDeficieny_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Option_ColorDeficieny_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Option_ColorDeficieny.Option_ColorDeficieny_C.Refresh
// 0x0020 (0x0020 - 0x0000)
struct Option_ColorDeficieny_C_Refresh final
{
public:
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C51[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Option_ColorDeficieny_C_Refresh) == 0x000008, "Wrong alignment on Option_ColorDeficieny_C_Refresh");
static_assert(sizeof(Option_ColorDeficieny_C_Refresh) == 0x000020, "Wrong size on Option_ColorDeficieny_C_Refresh");
static_assert(offsetof(Option_ColorDeficieny_C_Refresh, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000000, "Member 'Option_ColorDeficieny_C_Refresh::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_Refresh, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x000008, "Member 'Option_ColorDeficieny_C_Refresh::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_Refresh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Option_ColorDeficieny_C_Refresh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_Refresh, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'Option_ColorDeficieny_C_Refresh::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_Refresh, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Option_ColorDeficieny_C_Refresh::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Option_ColorDeficieny.Option_ColorDeficieny_C.ApplyAndSave
// 0x0020 (0x0020 - 0x0000)
struct Option_ColorDeficieny_C_ApplyAndSave final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorVisionDeficiency                        Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorVisionDeficiency                        Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorVisionDeficiency                        Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorVisionDeficiency                        Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Percent_Percent;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_Index;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorVisionDeficiency                        K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Option_ColorDeficieny_C_ApplyAndSave) == 0x000008, "Wrong alignment on Option_ColorDeficieny_C_ApplyAndSave");
static_assert(sizeof(Option_ColorDeficieny_C_ApplyAndSave) == 0x000020, "Wrong size on Option_ColorDeficieny_C_ApplyAndSave");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, Temp_int_Variable) == 0x000000, "Member 'Option_ColorDeficieny_C_ApplyAndSave::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, Temp_byte_Variable) == 0x000004, "Member 'Option_ColorDeficieny_C_ApplyAndSave::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, Temp_byte_Variable_1) == 0x000005, "Member 'Option_ColorDeficieny_C_ApplyAndSave::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, Temp_byte_Variable_2) == 0x000006, "Member 'Option_ColorDeficieny_C_ApplyAndSave::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, Temp_byte_Variable_3) == 0x000007, "Member 'Option_ColorDeficieny_C_ApplyAndSave::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, CallFunc_Get_Percent_Percent) == 0x000008, "Member 'Option_ColorDeficieny_C_ApplyAndSave::CallFunc_Get_Percent_Percent' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, CallFunc_GetSelectedIndex_Index) == 0x00000C, "Member 'Option_ColorDeficieny_C_ApplyAndSave::CallFunc_GetSelectedIndex_Index' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000010, "Member 'Option_ColorDeficieny_C_ApplyAndSave::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Option_ColorDeficieny_C_ApplyAndSave, K2Node_Select_Default) == 0x000018, "Member 'Option_ColorDeficieny_C_ApplyAndSave::K2Node_Select_Default' has a wrong offset!");

}

