#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_HeavyParticleCannon_AmmoCount_Internal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUD_HeavyParticleCannon_AmmoCount_Internal.HUD_HeavyParticleCannon_AmmoCount_Internal_C
// 0x0040 (0x02C8 - 0x0288)
class UHUD_HeavyParticleCannon_AmmoCount_Internal_C final : public UAmmoCountWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         AmmoBox;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_Current;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_Total;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ClipSize;                                          // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReloadDuration;                                    // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrClipAmmo;                                      // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeCounting;                               // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReserveAmmo;                                       // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MappedAlpha;                                       // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnTotalChanged(int32 Total);
	void OnAmountChanged(int32 Count);
	void OnVisibleChanged(bool Visible, bool ShowClipCount);
	void OnTotalVisibleChanged(bool Visible);
	void PreConstruct(bool IsDesignTime);
	void SetData(int32 Param_ClipSize, float Param_ReloadDuration);
	void OnReloadTimeChanged_Event(float Amount);
	void ExecuteUbergraph_HUD_HeavyParticleCannon_AmmoCount_Internal(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_HeavyParticleCannon_AmmoCount_Internal_C">();
	}
	static class UHUD_HeavyParticleCannon_AmmoCount_Internal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_HeavyParticleCannon_AmmoCount_Internal_C>();
	}
};
static_assert(alignof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C) == 0x000008, "Wrong alignment on UHUD_HeavyParticleCannon_AmmoCount_Internal_C");
static_assert(sizeof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C) == 0x0002C8, "Wrong size on UHUD_HeavyParticleCannon_AmmoCount_Internal_C");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, UberGraphFrame) == 0x000288, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, AmmoBox) == 0x000290, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::AmmoBox' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, DATA_Current) == 0x000298, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::DATA_Current' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, DATA_Total) == 0x0002A0, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::DATA_Total' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, ClipSize) == 0x0002A8, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::ClipSize' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, ReloadDuration) == 0x0002AC, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::ReloadDuration' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, CurrClipAmmo) == 0x0002B0, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::CurrClipAmmo' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, Alpha) == 0x0002B4, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::Alpha' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, DelayBeforeCounting) == 0x0002B8, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::DelayBeforeCounting' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, ReserveAmmo) == 0x0002BC, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::ReserveAmmo' has a wrong offset!");
static_assert(offsetof(UHUD_HeavyParticleCannon_AmmoCount_Internal_C, MappedAlpha) == 0x0002C0, "Member 'UHUD_HeavyParticleCannon_AmmoCount_Internal_C::MappedAlpha' has a wrong offset!");

}

