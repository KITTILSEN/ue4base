#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ENE_PF_SpiderBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ENE_PF_SpiderBase.ENE_PF_SpiderBase_C
// 0x0080 (0x0468 - 0x03E8)
class AENE_PF_SpiderBase_C : public ASpiderEnemy
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIKComponent*                           IK;                                                // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPawnAlertComponent*                    PawnAlert;                                         // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPathfinderReactiveTerrainTrackerComponent* PathfinderReactiveTerrainTracker;                  // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOutlineComponent*                      Outline;                                           // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEnemyComponent*                        Enemy;                                             // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPawnSensingComponent*                  PawnSensing;                                       // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFXSystemAsset*                         Death_Particles;                                   // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Death_Sound;                                       // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeathDuration;                                     // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlertOthersRadius;                                 // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MeshScale;                                         // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC9[0x4];                                     // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           SpawnMontage;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalSize;                                         // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FCA[0x4];                                     // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              FleeSound;                                         // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             AlertedScream;                                     // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DeathSplatDecal;                                   // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EndSpecialAttack();
	void BeginSpecialAttack(int32 SpecialAttackIndex, class UAnimMontage** Montage);
	void ChangeVisibility(bool bNewVisibility);
	void ActivateSpider(class AActor* Target);
	void InitBlackboard();
	void PlayDeathEffects();
	void OnNotifyEnd_994DB7944B827DB8A3582CB9C470D4B6(class FName NotifyName);
	void OnNotifyBegin_994DB7944B827DB8A3582CB9C470D4B6(class FName NotifyName);
	void OnInterrupted_994DB7944B827DB8A3582CB9C470D4B6(class FName NotifyName);
	void OnBlendOut_994DB7944B827DB8A3582CB9C470D4B6(class FName NotifyName);
	void OnCompleted_994DB7944B827DB8A3582CB9C470D4B6(class FName NotifyName);
	void ReceiveBeginPlay();
	void BndEvt__HealthComponent_K2Node_ComponentBoundEvent_0_DeathSig__DelegateSignature(class UHealthComponentBase* Param_HealthComponent);
	void OnDeathBase();
	void Spawn();
	void OnFrozen(class AActor* Source);
	void OnUnFrozen();
	void OnStartedFleeing();
	void PlayFleeSound();
	void All_PlayAlertScream();
	void Receive_Alerted();
	void CancelSpecialAttack();
	void StopMontagesOnDeath();
	void ExecuteUbergraph_ENE_PF_SpiderBase(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ENE_PF_SpiderBase_C">();
	}
	static class AENE_PF_SpiderBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AENE_PF_SpiderBase_C>();
	}
};
static_assert(alignof(AENE_PF_SpiderBase_C) == 0x000008, "Wrong alignment on AENE_PF_SpiderBase_C");
static_assert(sizeof(AENE_PF_SpiderBase_C) == 0x000468, "Wrong size on AENE_PF_SpiderBase_C");
static_assert(offsetof(AENE_PF_SpiderBase_C, UberGraphFrame) == 0x0003E8, "Member 'AENE_PF_SpiderBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, IK) == 0x0003F0, "Member 'AENE_PF_SpiderBase_C::IK' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, PawnAlert) == 0x0003F8, "Member 'AENE_PF_SpiderBase_C::PawnAlert' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, PathfinderReactiveTerrainTracker) == 0x000400, "Member 'AENE_PF_SpiderBase_C::PathfinderReactiveTerrainTracker' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, Outline) == 0x000408, "Member 'AENE_PF_SpiderBase_C::Outline' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, Enemy) == 0x000410, "Member 'AENE_PF_SpiderBase_C::Enemy' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, PawnSensing) == 0x000418, "Member 'AENE_PF_SpiderBase_C::PawnSensing' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, Death_Particles) == 0x000420, "Member 'AENE_PF_SpiderBase_C::Death_Particles' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, Death_Sound) == 0x000428, "Member 'AENE_PF_SpiderBase_C::Death_Sound' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, DeathDuration) == 0x000430, "Member 'AENE_PF_SpiderBase_C::DeathDuration' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, AlertOthersRadius) == 0x000434, "Member 'AENE_PF_SpiderBase_C::AlertOthersRadius' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, MeshScale) == 0x000438, "Member 'AENE_PF_SpiderBase_C::MeshScale' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, SpawnMontage) == 0x000440, "Member 'AENE_PF_SpiderBase_C::SpawnMontage' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, DecalSize) == 0x000448, "Member 'AENE_PF_SpiderBase_C::DecalSize' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, FleeSound) == 0x000450, "Member 'AENE_PF_SpiderBase_C::FleeSound' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, AlertedScream) == 0x000458, "Member 'AENE_PF_SpiderBase_C::AlertedScream' has a wrong offset!");
static_assert(offsetof(AENE_PF_SpiderBase_C, DeathSplatDecal) == 0x000460, "Member 'AENE_PF_SpiderBase_C::DeathSplatDecal' has a wrong offset!");

}

