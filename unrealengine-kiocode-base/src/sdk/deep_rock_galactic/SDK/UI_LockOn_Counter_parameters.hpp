#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_LockOn_Counter

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_LockOn_Counter.UI_LockOn_Counter_C.SetCurrentTargets
// 0x0050 (0x0050 - 0x0000)
struct UI_LockOn_Counter_C_SetCurrentTargets final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LimitIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3621[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_LockOn_Counter_Entry_C*             Counter;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3622[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3623[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3624[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_LockOn_Counter_Entry_C*             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LockOn_Counter_C_SetCurrentTargets) == 0x000008, "Wrong alignment on UI_LockOn_Counter_C_SetCurrentTargets");
static_assert(sizeof(UI_LockOn_Counter_C_SetCurrentTargets) == 0x000050, "Wrong size on UI_LockOn_Counter_C_SetCurrentTargets");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, InCount) == 0x000000, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::InCount' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, LimitIndex) == 0x000004, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::LimitIndex' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, Param_Index) == 0x000008, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::Param_Index' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, Counter) == 0x000010, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::Counter' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, Temp_int_Variable) == 0x000018, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, Temp_bool_Variable) == 0x000028, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, CallFunc_Less_IntInt_ReturnValue_1) == 0x000031, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, K2Node_Select_Default) == 0x000034, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, CallFunc_Array_Get_Item) == 0x000040, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetCurrentTargets, CallFunc_Less_IntInt_ReturnValue_2) == 0x000048, "Member 'UI_LockOn_Counter_C_SetCurrentTargets::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function UI_LockOn_Counter.UI_LockOn_Counter_C.SetMaxTargets
// 0x0028 (0x0028 - 0x0000)
struct UI_LockOn_Counter_C_SetMaxTargets final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool WasCreated, class UUserWidget* Widget, int32 ActiveIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3625[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_LockOn_Counter_Entry_C*>     CallFunc_CreateOrReuseChildrenWithCallback_ReturnValue; // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(UI_LockOn_Counter_C_SetMaxTargets) == 0x000008, "Wrong alignment on UI_LockOn_Counter_C_SetMaxTargets");
static_assert(sizeof(UI_LockOn_Counter_C_SetMaxTargets) == 0x000028, "Wrong size on UI_LockOn_Counter_C_SetMaxTargets");
static_assert(offsetof(UI_LockOn_Counter_C_SetMaxTargets, Count) == 0x000000, "Member 'UI_LockOn_Counter_C_SetMaxTargets::Count' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetMaxTargets, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_LockOn_Counter_C_SetMaxTargets::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetMaxTargets, CallFunc_CreateOrReuseChildrenWithCallback_ReturnValue) == 0x000018, "Member 'UI_LockOn_Counter_C_SetMaxTargets::CallFunc_CreateOrReuseChildrenWithCallback_ReturnValue' has a wrong offset!");

// Function UI_LockOn_Counter.UI_LockOn_Counter_C.SetupTargetCounter
// 0x0048 (0x0048 - 0x0000)
struct UI_LockOn_Counter_C_SetupTargetCounter final
{
public:
	bool                                          WasCreated;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3626[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveIndex;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3627[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       VerticalSlot;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0020(0x0008)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3628[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_LockOn_TargetCounter_C*             K2Node_DynamicCast_AsUI_Lock_on_Target_Counter;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3629[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LockOn_Counter_C_SetupTargetCounter) == 0x000008, "Wrong alignment on UI_LockOn_Counter_C_SetupTargetCounter");
static_assert(sizeof(UI_LockOn_Counter_C_SetupTargetCounter) == 0x000048, "Wrong size on UI_LockOn_Counter_C_SetupTargetCounter");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, WasCreated) == 0x000000, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::WasCreated' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, Widget) == 0x000008, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::Widget' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, ActiveIndex) == 0x000010, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::ActiveIndex' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, VerticalSlot) == 0x000018, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::VerticalSlot' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, K2Node_MakeStruct_SlateChildSize) == 0x000020, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, K2Node_DynamicCast_AsUI_Lock_on_Target_Counter) == 0x000030, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::K2Node_DynamicCast_AsUI_Lock_on_Target_Counter' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_SetupTargetCounter, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000040, "Member 'UI_LockOn_Counter_C_SetupTargetCounter::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");

// Function UI_LockOn_Counter.UI_LockOn_Counter_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_LockOn_Counter_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LockOn_Counter_C_PreConstruct) == 0x000001, "Wrong alignment on UI_LockOn_Counter_C_PreConstruct");
static_assert(sizeof(UI_LockOn_Counter_C_PreConstruct) == 0x000001, "Wrong size on UI_LockOn_Counter_C_PreConstruct");
static_assert(offsetof(UI_LockOn_Counter_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_LockOn_Counter_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_LockOn_Counter.UI_LockOn_Counter_C.SetItem
// 0x0008 (0x0008 - 0x0000)
struct UI_LockOn_Counter_C_SetItem final
{
public:
	class ALockOnWeapon*                          InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LockOn_Counter_C_SetItem) == 0x000008, "Wrong alignment on UI_LockOn_Counter_C_SetItem");
static_assert(sizeof(UI_LockOn_Counter_C_SetItem) == 0x000008, "Wrong size on UI_LockOn_Counter_C_SetItem");
static_assert(offsetof(UI_LockOn_Counter_C_SetItem, InItem) == 0x000000, "Member 'UI_LockOn_Counter_C_SetItem::InItem' has a wrong offset!");

// Function UI_LockOn_Counter.UI_LockOn_Counter_C.OnLockOnCountChanged
// 0x0004 (0x0004 - 0x0000)
struct UI_LockOn_Counter_C_OnLockOnCountChanged final
{
public:
	int32                                         InCurrentCount;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LockOn_Counter_C_OnLockOnCountChanged) == 0x000004, "Wrong alignment on UI_LockOn_Counter_C_OnLockOnCountChanged");
static_assert(sizeof(UI_LockOn_Counter_C_OnLockOnCountChanged) == 0x000004, "Wrong size on UI_LockOn_Counter_C_OnLockOnCountChanged");
static_assert(offsetof(UI_LockOn_Counter_C_OnLockOnCountChanged, InCurrentCount) == 0x000000, "Member 'UI_LockOn_Counter_C_OnLockOnCountChanged::InCurrentCount' has a wrong offset!");

// Function UI_LockOn_Counter.UI_LockOn_Counter_C.ExecuteUbergraph_UI_LockOn_Counter
// 0x0038 (0x0038 - 0x0000)
struct UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALockOnWeapon*                          K2Node_CustomEvent_InItem;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InMaxTargets)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_InCurrentCount;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 InCurrentCount)>         K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter) == 0x000008, "Wrong alignment on UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter");
static_assert(sizeof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter) == 0x000038, "Wrong size on UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter");
static_assert(offsetof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter, EntryPoint) == 0x000000, "Member 'UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter, K2Node_CustomEvent_InItem) == 0x000008, "Member 'UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter::K2Node_CustomEvent_InItem' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter, K2Node_CustomEvent_InCurrentCount) == 0x000020, "Member 'UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter::K2Node_CustomEvent_InCurrentCount' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'UI_LockOn_Counter_C_ExecuteUbergraph_UI_LockOn_Counter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

}

