#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PRJ_Spider_Tank_Boss_Eggshot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PRJ_Spider_Tank_Boss_Eggshot.PRJ_Spider_Tank_Boss_Eggshot_C
// 0x0058 (0x0398 - 0x0340)
class APRJ_Spider_Tank_Boss_Eggshot_C final : public AProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USimpleObjectInfoComponent*             SimpleObjectInfo;                                  // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Egg;                                          // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosion;                               // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Particle_Smoke;                                    // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEnemyDescriptor*                       EnemyToSpawn;                                      // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnAmount;                                       // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnImpacted(bool PredictedImpact, const struct FHitResult& HitResult);
	void ExecuteUbergraph_PRJ_Spider_Tank_Boss_Eggshot(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PRJ_Spider_Tank_Boss_Eggshot_C">();
	}
	static class APRJ_Spider_Tank_Boss_Eggshot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APRJ_Spider_Tank_Boss_Eggshot_C>();
	}
};
static_assert(alignof(APRJ_Spider_Tank_Boss_Eggshot_C) == 0x000008, "Wrong alignment on APRJ_Spider_Tank_Boss_Eggshot_C");
static_assert(sizeof(APRJ_Spider_Tank_Boss_Eggshot_C) == 0x000398, "Wrong size on APRJ_Spider_Tank_Boss_Eggshot_C");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, UberGraphFrame) == 0x000340, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, SimpleObjectInfo) == 0x000348, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::SimpleObjectInfo' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, RotatingMovement) == 0x000350, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, Mesh_Egg) == 0x000358, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::Mesh_Egg' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, Damage) == 0x000360, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::Damage' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, ProjectileExplosion) == 0x000368, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::ProjectileExplosion' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, Particle_Smoke) == 0x000370, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::Particle_Smoke' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, Audio) == 0x000378, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::Audio' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, PointLight) == 0x000380, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::PointLight' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, EnemyToSpawn) == 0x000388, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::EnemyToSpawn' has a wrong offset!");
static_assert(offsetof(APRJ_Spider_Tank_Boss_Eggshot_C, SpawnAmount) == 0x000390, "Member 'APRJ_Spider_Tank_Boss_Eggshot_C::SpawnAmount' has a wrong offset!");

}

