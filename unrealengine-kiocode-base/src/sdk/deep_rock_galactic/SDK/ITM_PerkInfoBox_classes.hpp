#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_PerkInfoBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_PerkInfoBox.ITM_PerkInfoBox_C
// 0x0060 (0x02C0 - 0x0260)
class UITM_PerkInfoBox_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_Window_CutCorner_C*              Basic_Window_CutCorner_165;                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ActrivePerks;                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_PassivePerks;                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_466;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ItemName;                                // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUpgradableGearComponent*               Upgradable;                                        // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 WeaponSlot;                                        // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C83[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     Character;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PerkIndex;                                         // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C84[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UITM_StatusScreen_PerkItem_C*>   PerkItems;                                         // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_ITM_PerkInfoBox(int32 EntryPoint);
	void Update();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void GetEquippedPerksByType(class UPlayerCharacterID* InCharacter, EPerkUsageType InType, TArray<class UPerkAsset*>* Perks);
	void CreateSlots(class UPanelWidget* InSlotsBox, EPerkUsageType InType);
	void GetEquippedPerkAt(int32 Idx, TArray<class UPerkAsset*>& Perks, class UPerkAsset** Perk);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_PerkInfoBox_C">();
	}
	static class UITM_PerkInfoBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_PerkInfoBox_C>();
	}
};
static_assert(alignof(UITM_PerkInfoBox_C) == 0x000008, "Wrong alignment on UITM_PerkInfoBox_C");
static_assert(sizeof(UITM_PerkInfoBox_C) == 0x0002C0, "Wrong size on UITM_PerkInfoBox_C");
static_assert(offsetof(UITM_PerkInfoBox_C, UberGraphFrame) == 0x000260, "Member 'UITM_PerkInfoBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, Basic_Window_CutCorner_165) == 0x000268, "Member 'UITM_PerkInfoBox_C::Basic_Window_CutCorner_165' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, HorizontalBox_ActrivePerks) == 0x000270, "Member 'UITM_PerkInfoBox_C::HorizontalBox_ActrivePerks' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, HorizontalBox_PassivePerks) == 0x000278, "Member 'UITM_PerkInfoBox_C::HorizontalBox_PassivePerks' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, Image_466) == 0x000280, "Member 'UITM_PerkInfoBox_C::Image_466' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, TextBlock_ItemName) == 0x000288, "Member 'UITM_PerkInfoBox_C::TextBlock_ItemName' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, Upgradable) == 0x000290, "Member 'UITM_PerkInfoBox_C::Upgradable' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, WeaponSlot) == 0x000298, "Member 'UITM_PerkInfoBox_C::WeaponSlot' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, Character) == 0x0002A0, "Member 'UITM_PerkInfoBox_C::Character' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, PerkIndex) == 0x0002A8, "Member 'UITM_PerkInfoBox_C::PerkIndex' has a wrong offset!");
static_assert(offsetof(UITM_PerkInfoBox_C, PerkItems) == 0x0002B0, "Member 'UITM_PerkInfoBox_C::PerkItems' has a wrong offset!");

}

