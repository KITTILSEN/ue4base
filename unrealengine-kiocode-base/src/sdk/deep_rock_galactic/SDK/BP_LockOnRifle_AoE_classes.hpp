#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LockOnRifle_AoE

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LockOnRifle_AoE.BP_LockOnRifle_AoE_C
// 0x0030 (0x0250 - 0x0220)
class ABP_LockOnRifle_AoE_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Grenade_Cluster_Fragment;                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Particle;                                          // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_LockOnRifle_AoE(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LockOnRifle_AoE_C">();
	}
	static class ABP_LockOnRifle_AoE_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LockOnRifle_AoE_C>();
	}
};
static_assert(alignof(ABP_LockOnRifle_AoE_C) == 0x000008, "Wrong alignment on ABP_LockOnRifle_AoE_C");
static_assert(sizeof(ABP_LockOnRifle_AoE_C) == 0x000250, "Wrong size on ABP_LockOnRifle_AoE_C");
static_assert(offsetof(ABP_LockOnRifle_AoE_C, UberGraphFrame) == 0x000220, "Member 'ABP_LockOnRifle_AoE_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LockOnRifle_AoE_C, P_Grenade_Cluster_Fragment) == 0x000228, "Member 'ABP_LockOnRifle_AoE_C::P_Grenade_Cluster_Fragment' has a wrong offset!");
static_assert(offsetof(ABP_LockOnRifle_AoE_C, Damage) == 0x000230, "Member 'ABP_LockOnRifle_AoE_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_LockOnRifle_AoE_C, Audio) == 0x000238, "Member 'ABP_LockOnRifle_AoE_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_LockOnRifle_AoE_C, Particle) == 0x000240, "Member 'ABP_LockOnRifle_AoE_C::Particle' has a wrong offset!");
static_assert(offsetof(ABP_LockOnRifle_AoE_C, DefaultSceneRoot) == 0x000248, "Member 'ABP_LockOnRifle_AoE_C::DefaultSceneRoot' has a wrong offset!");

}

