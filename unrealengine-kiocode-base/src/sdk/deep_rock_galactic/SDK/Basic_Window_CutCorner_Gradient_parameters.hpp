#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_Window_CutCorner_Gradient

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"


namespace SDK::Params
{

// Function Basic_Window_CutCorner_Gradient.Basic_Window_CutCorner_Gradient_C.ExecuteUbergraph_Basic_Window_CutCorner_Gradient
// 0x0038 (0x0038 - 0x0000)
struct Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D7B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_InColorAndOpacity;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_CustomEvent_Colorbar_Tint;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient) == 0x000008, "Wrong alignment on Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient");
static_assert(sizeof(Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient) == 0x000038, "Wrong size on Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient, EntryPoint) == 0x000000, "Member 'Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient, CallFunc_MakeColor_ReturnValue) == 0x000008, "Member 'Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000018, "Member 'Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient, K2Node_CustomEvent_InColorAndOpacity) == 0x000020, "Member 'Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient::K2Node_CustomEvent_InColorAndOpacity' has a wrong offset!");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient, K2Node_CustomEvent_Colorbar_Tint) == 0x000030, "Member 'Basic_Window_CutCorner_Gradient_C_ExecuteUbergraph_Basic_Window_CutCorner_Gradient::K2Node_CustomEvent_Colorbar_Tint' has a wrong offset!");

// Function Basic_Window_CutCorner_Gradient.Basic_Window_CutCorner_Gradient_C.SetColorbarColor
// 0x0001 (0x0001 - 0x0000)
struct Basic_Window_CutCorner_Gradient_C_SetColorbarColor final
{
public:
	ENUM_MenuColors                               Colorbar_Tint;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Window_CutCorner_Gradient_C_SetColorbarColor) == 0x000001, "Wrong alignment on Basic_Window_CutCorner_Gradient_C_SetColorbarColor");
static_assert(sizeof(Basic_Window_CutCorner_Gradient_C_SetColorbarColor) == 0x000001, "Wrong size on Basic_Window_CutCorner_Gradient_C_SetColorbarColor");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_SetColorbarColor, Colorbar_Tint) == 0x000000, "Member 'Basic_Window_CutCorner_Gradient_C_SetColorbarColor::Colorbar_Tint' has a wrong offset!");

// Function Basic_Window_CutCorner_Gradient.Basic_Window_CutCorner_Gradient_C.SetBackgroundTint
// 0x0010 (0x0010 - 0x0000)
struct Basic_Window_CutCorner_Gradient_C_SetBackgroundTint final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Window_CutCorner_Gradient_C_SetBackgroundTint) == 0x000004, "Wrong alignment on Basic_Window_CutCorner_Gradient_C_SetBackgroundTint");
static_assert(sizeof(Basic_Window_CutCorner_Gradient_C_SetBackgroundTint) == 0x000010, "Wrong size on Basic_Window_CutCorner_Gradient_C_SetBackgroundTint");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_SetBackgroundTint, InColorAndOpacity) == 0x000000, "Member 'Basic_Window_CutCorner_Gradient_C_SetBackgroundTint::InColorAndOpacity' has a wrong offset!");

// Function Basic_Window_CutCorner_Gradient.Basic_Window_CutCorner_Gradient_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_Window_CutCorner_Gradient_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_Window_CutCorner_Gradient_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_Window_CutCorner_Gradient_C_PreConstruct");
static_assert(sizeof(Basic_Window_CutCorner_Gradient_C_PreConstruct) == 0x000001, "Wrong size on Basic_Window_CutCorner_Gradient_C_PreConstruct");
static_assert(offsetof(Basic_Window_CutCorner_Gradient_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_Window_CutCorner_Gradient_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

