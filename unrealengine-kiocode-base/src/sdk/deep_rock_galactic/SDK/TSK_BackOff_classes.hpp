#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TSK_BackOff

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TSK_BackOff.TSK_BackOff_C
// 0x0040 (0x00E8 - 0x00A8)
class UTSK_BackOff_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 DangerKey;                                         // 0x00B0(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn)
	float                                         Distance;                                          // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitAfterFleeing;                                  // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomWaitTime;                                    // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetBackOffFalse(class AController* Controller);
	void OutsideDanger(class AActor* Pawn, bool* Res);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void PathDone(bool Success);
	void RefreshDest();
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_TSK_BackOff(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TSK_BackOff_C">();
	}
	static class UTSK_BackOff_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTSK_BackOff_C>();
	}
};
static_assert(alignof(UTSK_BackOff_C) == 0x000008, "Wrong alignment on UTSK_BackOff_C");
static_assert(sizeof(UTSK_BackOff_C) == 0x0000E8, "Wrong size on UTSK_BackOff_C");
static_assert(offsetof(UTSK_BackOff_C, UberGraphFrame) == 0x0000A8, "Member 'UTSK_BackOff_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTSK_BackOff_C, DangerKey) == 0x0000B0, "Member 'UTSK_BackOff_C::DangerKey' has a wrong offset!");
static_assert(offsetof(UTSK_BackOff_C, Distance) == 0x0000D8, "Member 'UTSK_BackOff_C::Distance' has a wrong offset!");
static_assert(offsetof(UTSK_BackOff_C, WaitAfterFleeing) == 0x0000DC, "Member 'UTSK_BackOff_C::WaitAfterFleeing' has a wrong offset!");
static_assert(offsetof(UTSK_BackOff_C, RandomWaitTime) == 0x0000E0, "Member 'UTSK_BackOff_C::RandomWaitTime' has a wrong offset!");

}

