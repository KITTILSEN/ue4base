#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Mod

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SimpleUGC_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ITM_Mod.ITM_Mod_C.OnActivationChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_Mod_C_OnActivationChanged__DelegateSignature final
{
public:
	class UITM_Mod_C*                             ManipulatedModItem;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_OnActivationChanged__DelegateSignature) == 0x000008, "Wrong alignment on ITM_Mod_C_OnActivationChanged__DelegateSignature");
static_assert(sizeof(ITM_Mod_C_OnActivationChanged__DelegateSignature) == 0x000008, "Wrong size on ITM_Mod_C_OnActivationChanged__DelegateSignature");
static_assert(offsetof(ITM_Mod_C_OnActivationChanged__DelegateSignature, ManipulatedModItem) == 0x000000, "Member 'ITM_Mod_C_OnActivationChanged__DelegateSignature::ManipulatedModItem' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.ExecuteUbergraph_ITM_Mod
// 0x0128 (0x0128 - 0x0000)
struct ITM_Mod_C_ExecuteUbergraph_ITM_Mod final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3346[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameModeSpaceRig*                   K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_IsChecked;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isEmpty_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isEmpty_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3347[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_ToolTip_C*                       CallFunc_CreateBasicToolTip_ToolTipWidget;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3348[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& LastURL)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& LastURL)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3349[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUGCSubsystem*                          CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetIdAsInt_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsChecked_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsChecked;                      // 0x0069(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334A[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334B[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUGCSubsystem*                          CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334C[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334D[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_Mod_C*                             CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUGCSubsystem*                          CallFunc_GetEngineSubsystem_ReturnValue_2;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334E[0x1];                                     // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334F[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUGCSubsystem*                          CallFunc_GetEngineSubsystem_ReturnValue_3;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3350[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUGCLatentActionManager*                CallFunc_GetUGCLatentActionManager_ReturnValue;    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUGCLatentActionManager*                CallFunc_GetUGCLatentActionManager_ReturnValue_1;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3351[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2DDynamic*                      CallFunc_Map_Find_Value;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3352[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Int64ToString_ReturnValue;           // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_K2_RequestModMetaData_ModId;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3353[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioModInfoWrapper*                   CallFunc_GetCachedModioModMetaData_ReturnValue;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3354[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod) == 0x000008, "Wrong alignment on ITM_Mod_C_ExecuteUbergraph_ITM_Mod");
static_assert(sizeof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod) == 0x000128, "Wrong size on ITM_Mod_C_ExecuteUbergraph_ITM_Mod");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, EntryPoint) == 0x000000, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig) == 0x000010, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::K2Node_DynamicCast_AsFSDGame_Mode_Space_Rig' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, K2Node_ComponentBoundEvent_IsChecked) == 0x000019, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::K2Node_ComponentBoundEvent_IsChecked' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001B, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_SelectVisibility_IsVisible) == 0x00001E, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_SelectVisibility_VisibilityChanged) == 0x00001F, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_SelectVisibility_New_Visibility) == 0x000020, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_isEmpty_ReturnValue) == 0x000021, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_isEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_isEmpty_ReturnValue_1) == 0x000022, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_isEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsHovered_ReturnValue) == 0x000023, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_CreateBasicToolTip_ToolTipWidget) == 0x000028, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_CreateBasicToolTip_ToolTipWidget' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsHovered_ReturnValue_1) == 0x000030, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000058, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetIdAsInt_ReturnValue) == 0x000060, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetIdAsInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, K2Node_CustomEvent_IsChecked_1) == 0x000068, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::K2Node_CustomEvent_IsChecked_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, K2Node_CustomEvent_IsChecked) == 0x000069, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::K2Node_CustomEvent_IsChecked' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006A, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000080, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue_1) == 0x00008C, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, Temp_int_Array_Index_Variable) == 0x000090, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Array_Get_Item) == 0x000098, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetEngineSubsystem_ReturnValue_2) == 0x0000A0, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetEngineSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue_3) == 0x0000A9, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AA, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetEngineSubsystem_ReturnValue_3) == 0x0000B8, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetEngineSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue_4) == 0x0000C0, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetUGCLatentActionManager_ReturnValue) == 0x0000C8, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetUGCLatentActionManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetUGCLatentActionManager_ReturnValue_1) == 0x0000D0, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetUGCLatentActionManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue_5) == 0x0000D8, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue_6) == 0x0000D9, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, Temp_int_Array_Index_Variable_1) == 0x0000DC, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Map_Find_ReturnValue) == 0x0000E8, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Conv_Int64ToString_ReturnValue) == 0x0000F8, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Conv_Int64ToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_K2_RequestModMetaData_ModId) == 0x000108, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_K2_RequestModMetaData_ModId' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue_7) == 0x000110, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_GetCachedModioModMetaData_ReturnValue) == 0x000118, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_GetCachedModioModMetaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_IsValid_ReturnValue_8) == 0x000120, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_ExecuteUbergraph_ITM_Mod, CallFunc_Array_AddUnique_ReturnValue) == 0x000124, "Member 'ITM_Mod_C_ExecuteUbergraph_ITM_Mod::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.SetModActivationChangedForceParents
// 0x0001 (0x0001 - 0x0000)
struct ITM_Mod_C_SetModActivationChangedForceParents final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_SetModActivationChangedForceParents) == 0x000001, "Wrong alignment on ITM_Mod_C_SetModActivationChangedForceParents");
static_assert(sizeof(ITM_Mod_C_SetModActivationChangedForceParents) == 0x000001, "Wrong size on ITM_Mod_C_SetModActivationChangedForceParents");
static_assert(offsetof(ITM_Mod_C_SetModActivationChangedForceParents, IsChecked) == 0x000000, "Member 'ITM_Mod_C_SetModActivationChangedForceParents::IsChecked' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.SetModActivationChanged
// 0x0001 (0x0001 - 0x0000)
struct ITM_Mod_C_SetModActivationChanged final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_SetModActivationChanged) == 0x000001, "Wrong alignment on ITM_Mod_C_SetModActivationChanged");
static_assert(sizeof(ITM_Mod_C_SetModActivationChanged) == 0x000001, "Wrong size on ITM_Mod_C_SetModActivationChanged");
static_assert(offsetof(ITM_Mod_C_SetModActivationChanged, IsChecked) == 0x000000, "Member 'ITM_Mod_C_SetModActivationChanged::IsChecked' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_Mod_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_Mod_C_PreConstruct");
static_assert(sizeof(ITM_Mod_C_PreConstruct) == 0x000001, "Wrong size on ITM_Mod_C_PreConstruct");
static_assert(offsetof(ITM_Mod_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_Mod_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.BndEvt__Basic_CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ITM_Mod_C_BndEvt__Basic_CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_BndEvt__Basic_CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on ITM_Mod_C_BndEvt__Basic_CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(ITM_Mod_C_BndEvt__Basic_CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on ITM_Mod_C_BndEvt__Basic_CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(ITM_Mod_C_BndEvt__Basic_CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'ITM_Mod_C_BndEvt__Basic_CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.SetData
// 0x02F8 (0x02F8 - 0x0000)
struct ITM_Mod_C_SetData final
{
public:
	class FString                                 InModName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InModVersion;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InModURL;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InModCategory;                                     // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EUGCApprovalStatus                            InModStatus;                                       // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUGCDownloadVersion                           InModDownloadVersion;                              // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3355[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InModDescription;                                  // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InModAuthor;                                       // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InModAuthorURL;                                    // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          InModIsMounted;                                    // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InModPendingMounted;                               // 0x0079(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InModIsDeprecated;                                 // 0x007A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InDependencyRemoved;                               // 0x007B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowStatus;                                      // 0x007C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InCrashed;                                         // 0x007D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InWrongVersion;                                    // 0x007E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3356[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDownloadVersionToolTip_OutStatus;      // 0x0088(0x0018)()
	class FText                                   CallFunc_GetDownloadVersionText_OutStatus;         // 0x00A0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3357[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_ToolTip_C*                       CallFunc_CreateBasicToolTip_ToolTipWidget;         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3358[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetStatusToolTip_OutStatus;               // 0x00D0(0x0018)()
	class UBasic_ToolTip_C*                       CallFunc_CreateBasicToolTip_ToolTipWidget_1;       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetStatusText_OutStatus;                  // 0x00F0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0108(0x0018)()
	class UBasic_ToolTip_C*                       CallFunc_CreateBasicToolTip_ToolTipWidget_2;       // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetStringOrDefault_OutValue;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTruncatedString_OutResult;             // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0148(0x0018)()
	class FString                                 CallFunc_GetStringOrDefault_OutValue_1;            // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0170(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01B0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01D8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0240(0x0018)()
	class FString                                 CallFunc_GetTruncatedString_OutResult_1;           // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0268(0x0018)()
	class FString                                 CallFunc_GetTruncatedString_OutResult_2;           // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3359[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0298(0x0018)()
	float                                         K2Node_Select_Default;                             // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible_2;             // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_2;     // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_2;        // 0x02B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335A[0x6];                                     // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringOrDefault_OutValue_2;            // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x02D0(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335B[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_ToolTip_C*                       CallFunc_CreateBasicToolTip_ToolTipWidget_3;       // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_SetData) == 0x000008, "Wrong alignment on ITM_Mod_C_SetData");
static_assert(sizeof(ITM_Mod_C_SetData) == 0x0002F8, "Wrong size on ITM_Mod_C_SetData");
static_assert(offsetof(ITM_Mod_C_SetData, InModName) == 0x000000, "Member 'ITM_Mod_C_SetData::InModName' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModVersion) == 0x000010, "Member 'ITM_Mod_C_SetData::InModVersion' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModURL) == 0x000020, "Member 'ITM_Mod_C_SetData::InModURL' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModCategory) == 0x000030, "Member 'ITM_Mod_C_SetData::InModCategory' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModStatus) == 0x000040, "Member 'ITM_Mod_C_SetData::InModStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModDownloadVersion) == 0x000041, "Member 'ITM_Mod_C_SetData::InModDownloadVersion' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModDescription) == 0x000048, "Member 'ITM_Mod_C_SetData::InModDescription' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModAuthor) == 0x000058, "Member 'ITM_Mod_C_SetData::InModAuthor' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModAuthorURL) == 0x000068, "Member 'ITM_Mod_C_SetData::InModAuthorURL' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModIsMounted) == 0x000078, "Member 'ITM_Mod_C_SetData::InModIsMounted' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModPendingMounted) == 0x000079, "Member 'ITM_Mod_C_SetData::InModPendingMounted' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InModIsDeprecated) == 0x00007A, "Member 'ITM_Mod_C_SetData::InModIsDeprecated' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InDependencyRemoved) == 0x00007B, "Member 'ITM_Mod_C_SetData::InDependencyRemoved' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InShowStatus) == 0x00007C, "Member 'ITM_Mod_C_SetData::InShowStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InCrashed) == 0x00007D, "Member 'ITM_Mod_C_SetData::InCrashed' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, InWrongVersion) == 0x00007E, "Member 'ITM_Mod_C_SetData::InWrongVersion' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, Temp_float_Variable) == 0x000080, "Member 'ITM_Mod_C_SetData::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, Temp_float_Variable_1) == 0x000084, "Member 'ITM_Mod_C_SetData::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetDownloadVersionToolTip_OutStatus) == 0x000088, "Member 'ITM_Mod_C_SetData::CallFunc_GetDownloadVersionToolTip_OutStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetDownloadVersionText_OutStatus) == 0x0000A0, "Member 'ITM_Mod_C_SetData::CallFunc_GetDownloadVersionText_OutStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_TextIsEmpty_ReturnValue) == 0x0000B8, "Member 'ITM_Mod_C_SetData::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_CreateBasicToolTip_ToolTipWidget) == 0x0000C0, "Member 'ITM_Mod_C_SetData::CallFunc_CreateBasicToolTip_ToolTipWidget' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_IsVisible) == 0x0000C8, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_VisibilityChanged) == 0x0000C9, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_New_Visibility) == 0x0000CA, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Not_PreBool_ReturnValue) == 0x0000CB, "Member 'ITM_Mod_C_SetData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_IsVisible_1) == 0x0000CC, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x0000CD, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_New_Visibility_1) == 0x0000CE, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetStatusToolTip_OutStatus) == 0x0000D0, "Member 'ITM_Mod_C_SetData::CallFunc_GetStatusToolTip_OutStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_CreateBasicToolTip_ToolTipWidget_1) == 0x0000E8, "Member 'ITM_Mod_C_SetData::CallFunc_CreateBasicToolTip_ToolTipWidget_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetStatusText_OutStatus) == 0x0000F0, "Member 'ITM_Mod_C_SetData::CallFunc_GetStatusText_OutStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Conv_StringToText_ReturnValue) == 0x000108, "Member 'ITM_Mod_C_SetData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_CreateBasicToolTip_ToolTipWidget_2) == 0x000120, "Member 'ITM_Mod_C_SetData::CallFunc_CreateBasicToolTip_ToolTipWidget_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetStringOrDefault_OutValue) == 0x000128, "Member 'ITM_Mod_C_SetData::CallFunc_GetStringOrDefault_OutValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetTruncatedString_OutResult) == 0x000138, "Member 'ITM_Mod_C_SetData::CallFunc_GetTruncatedString_OutResult' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000148, "Member 'ITM_Mod_C_SetData::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetStringOrDefault_OutValue_1) == 0x000160, "Member 'ITM_Mod_C_SetData::CallFunc_GetStringOrDefault_OutValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, K2Node_MakeStruct_FormatArgumentData) == 0x000170, "Member 'ITM_Mod_C_SetData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001B0, "Member 'ITM_Mod_C_SetData::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, K2Node_MakeArray_Array) == 0x0001C8, "Member 'ITM_Mod_C_SetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001D8, "Member 'ITM_Mod_C_SetData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Format_ReturnValue) == 0x000218, "Member 'ITM_Mod_C_SetData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, K2Node_MakeArray_Array_1) == 0x000230, "Member 'ITM_Mod_C_SetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Format_ReturnValue_1) == 0x000240, "Member 'ITM_Mod_C_SetData::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetTruncatedString_OutResult_1) == 0x000258, "Member 'ITM_Mod_C_SetData::CallFunc_GetTruncatedString_OutResult_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000268, "Member 'ITM_Mod_C_SetData::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetTruncatedString_OutResult_2) == 0x000280, "Member 'ITM_Mod_C_SetData::CallFunc_GetTruncatedString_OutResult_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, Temp_bool_Variable) == 0x000290, "Member 'ITM_Mod_C_SetData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000298, "Member 'ITM_Mod_C_SetData::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, K2Node_Select_Default) == 0x0002B0, "Member 'ITM_Mod_C_SetData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_IsVisible_2) == 0x0002B4, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_IsVisible_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_VisibilityChanged_2) == 0x0002B5, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_VisibilityChanged_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_SelectVisibility_New_Visibility_2) == 0x0002B6, "Member 'ITM_Mod_C_SetData::CallFunc_SelectVisibility_New_Visibility_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002B7, "Member 'ITM_Mod_C_SetData::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002B8, "Member 'ITM_Mod_C_SetData::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_BooleanAND_ReturnValue) == 0x0002B9, "Member 'ITM_Mod_C_SetData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_GetStringOrDefault_OutValue_2) == 0x0002C0, "Member 'ITM_Mod_C_SetData::CallFunc_GetStringOrDefault_OutValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Conv_StringToText_ReturnValue_5) == 0x0002D0, "Member 'ITM_Mod_C_SetData::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_Not_PreBool_ReturnValue_3) == 0x0002E8, "Member 'ITM_Mod_C_SetData::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetData, CallFunc_CreateBasicToolTip_ToolTipWidget_3) == 0x0002F0, "Member 'ITM_Mod_C_SetData::CallFunc_CreateBasicToolTip_ToolTipWidget_3' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.SetColors
// 0x0010 (0x0010 - 0x0000)
struct ITM_Mod_C_SetColors final
{
public:
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_SetColors) == 0x000004, "Wrong alignment on ITM_Mod_C_SetColors");
static_assert(sizeof(ITM_Mod_C_SetColors) == 0x000010, "Wrong size on ITM_Mod_C_SetColors");
static_assert(offsetof(ITM_Mod_C_SetColors, CallFunc_MenuColors_OutputColor) == 0x000000, "Member 'ITM_Mod_C_SetColors::CallFunc_MenuColors_OutputColor' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.GetStatusText
// 0x00A0 (0x00A0 - 0x0000)
struct ITM_Mod_C_GetStatusText final
{
public:
	bool                                          InShowStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EUGCApprovalStatus                            InStatus;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335C[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutStatus;                                         // 0x0008(0x0018)(Parm, OutParm)
	EUGCApprovalStatus                            Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335D[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)()
};
static_assert(alignof(ITM_Mod_C_GetStatusText) == 0x000008, "Wrong alignment on ITM_Mod_C_GetStatusText");
static_assert(sizeof(ITM_Mod_C_GetStatusText) == 0x0000A0, "Wrong size on ITM_Mod_C_GetStatusText");
static_assert(offsetof(ITM_Mod_C_GetStatusText, InShowStatus) == 0x000000, "Member 'ITM_Mod_C_GetStatusText::InShowStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, InStatus) == 0x000001, "Member 'ITM_Mod_C_GetStatusText::InStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, OutStatus) == 0x000008, "Member 'ITM_Mod_C_GetStatusText::OutStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, Temp_byte_Variable) == 0x000020, "Member 'ITM_Mod_C_GetStatusText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'ITM_Mod_C_GetStatusText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, Temp_text_Variable) == 0x000028, "Member 'ITM_Mod_C_GetStatusText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, Temp_text_Variable_1) == 0x000040, "Member 'ITM_Mod_C_GetStatusText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, Temp_text_Variable_2) == 0x000058, "Member 'ITM_Mod_C_GetStatusText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, Temp_text_Variable_3) == 0x000070, "Member 'ITM_Mod_C_GetStatusText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusText, K2Node_Select_Default) == 0x000088, "Member 'ITM_Mod_C_GetStatusText::K2Node_Select_Default' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.GetTruncatedString
// 0x0068 (0x0068 - 0x0000)
struct ITM_Mod_C_GetTruncatedString final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         InMaxLength;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutResult;                                         // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3360[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_GetTruncatedString) == 0x000008, "Wrong alignment on ITM_Mod_C_GetTruncatedString");
static_assert(sizeof(ITM_Mod_C_GetTruncatedString) == 0x000068, "Wrong size on ITM_Mod_C_GetTruncatedString");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, InString) == 0x000000, "Member 'ITM_Mod_C_GetTruncatedString::InString' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, InMaxLength) == 0x000010, "Member 'ITM_Mod_C_GetTruncatedString::InMaxLength' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, OutResult) == 0x000018, "Member 'ITM_Mod_C_GetTruncatedString::OutResult' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, Temp_bool_Variable) == 0x000028, "Member 'ITM_Mod_C_GetTruncatedString::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, CallFunc_Mid_ReturnValue) == 0x000030, "Member 'ITM_Mod_C_GetTruncatedString::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'ITM_Mod_C_GetTruncatedString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, CallFunc_Len_ReturnValue) == 0x000050, "Member 'ITM_Mod_C_GetTruncatedString::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'ITM_Mod_C_GetTruncatedString::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetTruncatedString, K2Node_Select_Default) == 0x000058, "Member 'ITM_Mod_C_GetTruncatedString::K2Node_Select_Default' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.GetStringOrDefault
// 0x0098 (0x0098 - 0x0000)
struct ITM_Mod_C_GetStringOrDefault final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   InDefault;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 OutValue;                                          // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Trimmed;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3361[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TrimTrailing_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Trim_ReturnValue;                         // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_isEmpty_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3362[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_GetStringOrDefault) == 0x000008, "Wrong alignment on ITM_Mod_C_GetStringOrDefault");
static_assert(sizeof(ITM_Mod_C_GetStringOrDefault) == 0x000098, "Wrong size on ITM_Mod_C_GetStringOrDefault");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, InString) == 0x000000, "Member 'ITM_Mod_C_GetStringOrDefault::InString' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, InDefault) == 0x000010, "Member 'ITM_Mod_C_GetStringOrDefault::InDefault' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, OutValue) == 0x000028, "Member 'ITM_Mod_C_GetStringOrDefault::OutValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, Trimmed) == 0x000038, "Member 'ITM_Mod_C_GetStringOrDefault::Trimmed' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, Temp_bool_Variable) == 0x000048, "Member 'ITM_Mod_C_GetStringOrDefault::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, CallFunc_TrimTrailing_ReturnValue) == 0x000050, "Member 'ITM_Mod_C_GetStringOrDefault::CallFunc_TrimTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, CallFunc_Trim_ReturnValue) == 0x000060, "Member 'ITM_Mod_C_GetStringOrDefault::CallFunc_Trim_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'ITM_Mod_C_GetStringOrDefault::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, CallFunc_isEmpty_ReturnValue) == 0x000080, "Member 'ITM_Mod_C_GetStringOrDefault::CallFunc_isEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStringOrDefault, K2Node_Select_Default) == 0x000088, "Member 'ITM_Mod_C_GetStringOrDefault::K2Node_Select_Default' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.OnThumbnailFetched
// 0x0008 (0x0008 - 0x0000)
struct ITM_Mod_C_OnThumbnailFetched final
{
public:
	class UTexture2DDynamic*                      ModioModThumbnail;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_OnThumbnailFetched) == 0x000008, "Wrong alignment on ITM_Mod_C_OnThumbnailFetched");
static_assert(sizeof(ITM_Mod_C_OnThumbnailFetched) == 0x000008, "Wrong size on ITM_Mod_C_OnThumbnailFetched");
static_assert(offsetof(ITM_Mod_C_OnThumbnailFetched, ModioModThumbnail) == 0x000000, "Member 'ITM_Mod_C_OnThumbnailFetched::ModioModThumbnail' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.GetStatusToolTip
// 0x00A0 (0x00A0 - 0x0000)
struct ITM_Mod_C_GetStatusToolTip final
{
public:
	bool                                          InShowStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EUGCApprovalStatus                            InStatus;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3363[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutStatus;                                         // 0x0008(0x0018)(Parm, OutParm)
	EUGCApprovalStatus                            Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3364[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)()
};
static_assert(alignof(ITM_Mod_C_GetStatusToolTip) == 0x000008, "Wrong alignment on ITM_Mod_C_GetStatusToolTip");
static_assert(sizeof(ITM_Mod_C_GetStatusToolTip) == 0x0000A0, "Wrong size on ITM_Mod_C_GetStatusToolTip");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, InShowStatus) == 0x000000, "Member 'ITM_Mod_C_GetStatusToolTip::InShowStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, InStatus) == 0x000001, "Member 'ITM_Mod_C_GetStatusToolTip::InStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, OutStatus) == 0x000008, "Member 'ITM_Mod_C_GetStatusToolTip::OutStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, Temp_byte_Variable) == 0x000020, "Member 'ITM_Mod_C_GetStatusToolTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'ITM_Mod_C_GetStatusToolTip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, Temp_text_Variable) == 0x000028, "Member 'ITM_Mod_C_GetStatusToolTip::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, Temp_text_Variable_1) == 0x000040, "Member 'ITM_Mod_C_GetStatusToolTip::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, Temp_text_Variable_2) == 0x000058, "Member 'ITM_Mod_C_GetStatusToolTip::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, Temp_text_Variable_3) == 0x000070, "Member 'ITM_Mod_C_GetStatusToolTip::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetStatusToolTip, K2Node_Select_Default) == 0x000088, "Member 'ITM_Mod_C_GetStatusToolTip::K2Node_Select_Default' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.SetCompactMode
// 0x0018 (0x0018 - 0x0000)
struct ITM_Mod_C_SetCompactMode final
{
public:
	bool                                          SimpleMode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3365[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3366[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_SetCompactMode) == 0x000004, "Wrong alignment on ITM_Mod_C_SetCompactMode");
static_assert(sizeof(ITM_Mod_C_SetCompactMode) == 0x000018, "Wrong size on ITM_Mod_C_SetCompactMode");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, SimpleMode) == 0x000000, "Member 'ITM_Mod_C_SetCompactMode::SimpleMode' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, Temp_bool_Variable) == 0x000001, "Member 'ITM_Mod_C_SetCompactMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, Temp_byte_Variable) == 0x000002, "Member 'ITM_Mod_C_SetCompactMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, Temp_byte_Variable_1) == 0x000003, "Member 'ITM_Mod_C_SetCompactMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, Temp_bool_Variable_1) == 0x000004, "Member 'ITM_Mod_C_SetCompactMode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, Temp_float_Variable) == 0x000008, "Member 'ITM_Mod_C_SetCompactMode::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, Temp_float_Variable_1) == 0x00000C, "Member 'ITM_Mod_C_SetCompactMode::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, K2Node_Select_Default) == 0x000010, "Member 'ITM_Mod_C_SetCompactMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetCompactMode, K2Node_Select_Default_1) == 0x000014, "Member 'ITM_Mod_C_SetCompactMode::K2Node_Select_Default_1' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.HasCrashed
// 0x0040 (0x0040 - 0x0000)
struct ITM_Mod_C_HasCrashed final
{
public:
	bool                                          OutHasCrashed;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3367[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUGCSubsystem*                          CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3368[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetIdAsString_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3369[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUGCSubsystem*                          CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_HasCrashed) == 0x000008, "Wrong alignment on ITM_Mod_C_HasCrashed");
static_assert(sizeof(ITM_Mod_C_HasCrashed) == 0x000040, "Wrong size on ITM_Mod_C_HasCrashed");
static_assert(offsetof(ITM_Mod_C_HasCrashed, OutHasCrashed) == 0x000000, "Member 'ITM_Mod_C_HasCrashed::OutHasCrashed' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_HasCrashed, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000008, "Member 'ITM_Mod_C_HasCrashed::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_HasCrashed, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITM_Mod_C_HasCrashed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_HasCrashed, CallFunc_GetIdAsString_ReturnValue) == 0x000018, "Member 'ITM_Mod_C_HasCrashed::CallFunc_GetIdAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_HasCrashed, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'ITM_Mod_C_HasCrashed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_HasCrashed, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000030, "Member 'ITM_Mod_C_HasCrashed::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_HasCrashed, CallFunc_Array_Contains_ReturnValue) == 0x000038, "Member 'ITM_Mod_C_HasCrashed::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.OnOverlayClosed
// 0x0020 (0x0020 - 0x0000)
struct ITM_Mod_C_OnOverlayClosed final
{
public:
	class FString                                 LastURL;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UUGCSubsystem*                          CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_OnOverlayClosed) == 0x000008, "Wrong alignment on ITM_Mod_C_OnOverlayClosed");
static_assert(sizeof(ITM_Mod_C_OnOverlayClosed) == 0x000020, "Wrong size on ITM_Mod_C_OnOverlayClosed");
static_assert(offsetof(ITM_Mod_C_OnOverlayClosed, LastURL) == 0x000000, "Member 'ITM_Mod_C_OnOverlayClosed::LastURL' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_OnOverlayClosed, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'ITM_Mod_C_OnOverlayClosed::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_OnOverlayClosed, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITM_Mod_C_OnOverlayClosed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.SetModEnabled
// 0x0002 (0x0002 - 0x0000)
struct ITM_Mod_C_SetModEnabled final
{
public:
	bool                                          InEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_SetModEnabled) == 0x000001, "Wrong alignment on ITM_Mod_C_SetModEnabled");
static_assert(sizeof(ITM_Mod_C_SetModEnabled) == 0x000002, "Wrong size on ITM_Mod_C_SetModEnabled");
static_assert(offsetof(ITM_Mod_C_SetModEnabled, InEnabled) == 0x000000, "Member 'ITM_Mod_C_SetModEnabled::InEnabled' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetModEnabled, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ITM_Mod_C_SetModEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.ResetModEnabled
// 0x0001 (0x0001 - 0x0000)
struct ITM_Mod_C_ResetModEnabled final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_ResetModEnabled) == 0x000001, "Wrong alignment on ITM_Mod_C_ResetModEnabled");
static_assert(sizeof(ITM_Mod_C_ResetModEnabled) == 0x000001, "Wrong size on ITM_Mod_C_ResetModEnabled");
static_assert(offsetof(ITM_Mod_C_ResetModEnabled, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ITM_Mod_C_ResetModEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.OnModStateDependencyChanged
// 0x0007 (0x0007 - 0x0000)
struct ITM_Mod_C_OnModStateDependencyChanged final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldDisableCheckmark;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasChanged;                                        // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_OnModStateDependencyChanged) == 0x000001, "Wrong alignment on ITM_Mod_C_OnModStateDependencyChanged");
static_assert(sizeof(ITM_Mod_C_OnModStateDependencyChanged) == 0x000007, "Wrong size on ITM_Mod_C_OnModStateDependencyChanged");
static_assert(offsetof(ITM_Mod_C_OnModStateDependencyChanged, IsChecked) == 0x000000, "Member 'ITM_Mod_C_OnModStateDependencyChanged::IsChecked' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_OnModStateDependencyChanged, ShouldDisableCheckmark) == 0x000001, "Member 'ITM_Mod_C_OnModStateDependencyChanged::ShouldDisableCheckmark' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_OnModStateDependencyChanged, HasChanged) == 0x000002, "Member 'ITM_Mod_C_OnModStateDependencyChanged::HasChanged' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_OnModStateDependencyChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'ITM_Mod_C_OnModStateDependencyChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_OnModStateDependencyChanged, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'ITM_Mod_C_OnModStateDependencyChanged::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_OnModStateDependencyChanged, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'ITM_Mod_C_OnModStateDependencyChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_OnModStateDependencyChanged, CallFunc_Not_PreBool_ReturnValue_2) == 0x000006, "Member 'ITM_Mod_C_OnModStateDependencyChanged::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.CheckGameVersionBeforeEnable
// 0x0030 (0x0030 - 0x0000)
struct ITM_Mod_C_CheckGameVersionBeforeEnable final
{
public:
	bool                                          InEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBasic_Popup_YesNoPrompt_C*             CallFunc_OpenSingleUseWindow_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Yes)>                     K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_CheckGameVersionBeforeEnable) == 0x000008, "Wrong alignment on ITM_Mod_C_CheckGameVersionBeforeEnable");
static_assert(sizeof(ITM_Mod_C_CheckGameVersionBeforeEnable) == 0x000030, "Wrong size on ITM_Mod_C_CheckGameVersionBeforeEnable");
static_assert(offsetof(ITM_Mod_C_CheckGameVersionBeforeEnable, InEnabled) == 0x000000, "Member 'ITM_Mod_C_CheckGameVersionBeforeEnable::InEnabled' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckGameVersionBeforeEnable, CallFunc_GetWindowManager_ReturnValue) == 0x000008, "Member 'ITM_Mod_C_CheckGameVersionBeforeEnable::CallFunc_GetWindowManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckGameVersionBeforeEnable, CallFunc_OpenSingleUseWindow_ReturnValue) == 0x000010, "Member 'ITM_Mod_C_CheckGameVersionBeforeEnable::CallFunc_OpenSingleUseWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckGameVersionBeforeEnable, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ITM_Mod_C_CheckGameVersionBeforeEnable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckGameVersionBeforeEnable, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ITM_Mod_C_CheckGameVersionBeforeEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckGameVersionBeforeEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'ITM_Mod_C_CheckGameVersionBeforeEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.CreateversionTooltip
// 0x00A8 (0x00A8 - 0x0000)
struct ITM_Mod_C_CreateversionTooltip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336B[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AsTimeZoneDate_DateTime_ReturnValue;      // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class UUserWidget*                            CallFunc_CreateToolTip_OutToolTip;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
	class UBasic_ToolTip_C*                       K2Node_DynamicCast_AsBasic_Tool_Tip;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_CreateversionTooltip) == 0x000008, "Wrong alignment on ITM_Mod_C_CreateversionTooltip");
static_assert(sizeof(ITM_Mod_C_CreateversionTooltip) == 0x0000A8, "Wrong size on ITM_Mod_C_CreateversionTooltip");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, ReturnValue) == 0x000000, "Member 'ITM_Mod_C_CreateversionTooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ITM_Mod_C_CreateversionTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'ITM_Mod_C_CreateversionTooltip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, CallFunc_AsTimeZoneDate_DateTime_ReturnValue) == 0x000010, "Member 'ITM_Mod_C_CreateversionTooltip::CallFunc_AsTimeZoneDate_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'ITM_Mod_C_CreateversionTooltip::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, K2Node_MakeArray_Array) == 0x000068, "Member 'ITM_Mod_C_CreateversionTooltip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, CallFunc_CreateToolTip_OutToolTip) == 0x000078, "Member 'ITM_Mod_C_CreateversionTooltip::CallFunc_CreateToolTip_OutToolTip' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, CallFunc_Format_ReturnValue) == 0x000080, "Member 'ITM_Mod_C_CreateversionTooltip::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, K2Node_DynamicCast_AsBasic_Tool_Tip) == 0x000098, "Member 'ITM_Mod_C_CreateversionTooltip::K2Node_DynamicCast_AsBasic_Tool_Tip' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CreateversionTooltip, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'ITM_Mod_C_CreateversionTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.FindParentsInArray
// 0x0068 (0x0068 - 0x0000)
struct ITM_Mod_C_FindParentsInArray final
{
public:
	TArray<class UWidget*>                        PotentialParents;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_Mod_C*                             K2Node_DynamicCast_AsITM_Mod;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336C[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336D[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetIdAsInt_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnModStateDependencyChanged_HasChanged;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336F[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3370[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetIdAsInt_ReturnValue_1;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_FindParentsInArray) == 0x000008, "Wrong alignment on ITM_Mod_C_FindParentsInArray");
static_assert(sizeof(ITM_Mod_C_FindParentsInArray) == 0x000068, "Wrong size on ITM_Mod_C_FindParentsInArray");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, PotentialParents) == 0x000000, "Member 'ITM_Mod_C_FindParentsInArray::PotentialParents' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ITM_Mod_C_FindParentsInArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_Array_Get_Item) == 0x000018, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, K2Node_DynamicCast_AsITM_Mod) == 0x000020, "Member 'ITM_Mod_C_FindParentsInArray::K2Node_DynamicCast_AsITM_Mod' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITM_Mod_C_FindParentsInArray::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'ITM_Mod_C_FindParentsInArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_GetIdAsInt_ReturnValue) == 0x000038, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_GetIdAsInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_OnModStateDependencyChanged_HasChanged) == 0x000048, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_OnModStateDependencyChanged_HasChanged' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_Array_AddUnique_ReturnValue) == 0x00004C, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_Array_Contains_ReturnValue) == 0x000050, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_GetIdAsInt_ReturnValue_1) == 0x000058, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_GetIdAsInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_FindParentsInArray, CallFunc_Array_Contains_ReturnValue_1) == 0x000060, "Member 'ITM_Mod_C_FindParentsInArray::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.GetDependencyCheckboxTooltip
// 0x00C8 (0x00C8 - 0x0000)
struct ITM_Mod_C_GetDependencyCheckboxTooltip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBasic_ToolTip_C*                       ToolTip;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   DependencyDisabled;                                // 0x0010(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3371[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3372[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3373[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3374[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOrCreateSingletonWidget_WidgetCreated; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3375[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_ToolTip_C*                       CallFunc_GetOrCreateSingletonWidget_ReturnValue;   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Mod_C_GetDependencyCheckboxTooltip) == 0x000008, "Wrong alignment on ITM_Mod_C_GetDependencyCheckboxTooltip");
static_assert(sizeof(ITM_Mod_C_GetDependencyCheckboxTooltip) == 0x0000C8, "Wrong size on ITM_Mod_C_GetDependencyCheckboxTooltip");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, ReturnValue) == 0x000000, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, ToolTip) == 0x000008, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::ToolTip' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, DependencyDisabled) == 0x000010, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::DependencyDisabled' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_JoinStringArray_ReturnValue) == 0x000040, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_GetWindowManager_ReturnValue) == 0x0000B0, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_GetWindowManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_GetOrCreateSingletonWidget_WidgetCreated) == 0x0000B8, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_GetOrCreateSingletonWidget_WidgetCreated' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDependencyCheckboxTooltip, CallFunc_GetOrCreateSingletonWidget_ReturnValue) == 0x0000C0, "Member 'ITM_Mod_C_GetDependencyCheckboxTooltip::CallFunc_GetOrCreateSingletonWidget_ReturnValue' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.SetFromPackage
// 0x0010 (0x0010 - 0x0000)
struct ITM_Mod_C_SetFromPackage final
{
public:
	class UUGCPackage*                            InPackage;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCrashed_OutHasCrashed;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Mod_C_SetFromPackage) == 0x000008, "Wrong alignment on ITM_Mod_C_SetFromPackage");
static_assert(sizeof(ITM_Mod_C_SetFromPackage) == 0x000010, "Wrong size on ITM_Mod_C_SetFromPackage");
static_assert(offsetof(ITM_Mod_C_SetFromPackage, InPackage) == 0x000000, "Member 'ITM_Mod_C_SetFromPackage::InPackage' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetFromPackage, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ITM_Mod_C_SetFromPackage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetFromPackage, CallFunc_HasCrashed_OutHasCrashed) == 0x000009, "Member 'ITM_Mod_C_SetFromPackage::CallFunc_HasCrashed_OutHasCrashed' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_SetFromPackage, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'ITM_Mod_C_SetFromPackage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.CheckIfSavedInSlot
// 0x0270 (0x0270 - 0x0000)
struct ITM_Mod_C_CheckIfSavedInSlot final
{
public:
	class FString                                 SlotString;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3376[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3377[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3378[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_4;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3379[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_6;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337A[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0018)()
	class UUGCSettings*                           CallFunc_GetUGCSettings_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetIdAsString_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetModIdsOfSlot_ReturnValue;              // 0x00E8(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_GetModIdsOfSlot_ReturnValue_1;            // 0x00F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337B[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetModIdsOfSlot_ReturnValue_2;            // 0x0130(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_GetModIdsOfSlot_ReturnValue_3;            // 0x0140(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337C[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_3;                           // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337D[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUGCSettings*                           CallFunc_GetUGCSettings_ReturnValue_1;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337E[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01E8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_isEmpty_ReturnValue;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337F[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0240(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x0258(0x0018)()
};
static_assert(alignof(ITM_Mod_C_CheckIfSavedInSlot) == 0x000008, "Wrong alignment on ITM_Mod_C_CheckIfSavedInSlot");
static_assert(sizeof(ITM_Mod_C_CheckIfSavedInSlot) == 0x000270, "Wrong size on ITM_Mod_C_CheckIfSavedInSlot");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, SlotString) == 0x000000, "Member 'ITM_Mod_C_CheckIfSavedInSlot::SlotString' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_bool_Variable) == 0x000010, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_string_Variable) == 0x000018, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_string_Variable_1) == 0x000028, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_bool_Variable_1) == 0x000038, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_string_Variable_2) == 0x000040, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_string_Variable_3) == 0x000050, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_bool_Variable_2) == 0x000060, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_string_Variable_4) == 0x000068, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_string_Variable_5) == 0x000078, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_bool_Variable_3) == 0x000088, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_string_Variable_6) == 0x000090, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_string_Variable_7) == 0x0000A0, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_bool_Variable_4) == 0x0000B0, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, Temp_text_Variable) == 0x0000B8, "Member 'ITM_Mod_C_CheckIfSavedInSlot::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_GetUGCSettings_ReturnValue) == 0x0000D0, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_GetUGCSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_GetIdAsString_ReturnValue) == 0x0000D8, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_GetIdAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_GetModIdsOfSlot_ReturnValue) == 0x0000E8, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_GetModIdsOfSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_GetModIdsOfSlot_ReturnValue_1) == 0x0000F8, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_GetModIdsOfSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Array_Contains_ReturnValue) == 0x000108, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Array_Contains_ReturnValue_1) == 0x000109, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, K2Node_Select_Default) == 0x000110, "Member 'ITM_Mod_C_CheckIfSavedInSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, K2Node_Select_Default_1) == 0x000120, "Member 'ITM_Mod_C_CheckIfSavedInSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_GetModIdsOfSlot_ReturnValue_2) == 0x000130, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_GetModIdsOfSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_GetModIdsOfSlot_ReturnValue_3) == 0x000140, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_GetModIdsOfSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Array_Contains_ReturnValue_2) == 0x000150, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Array_Contains_ReturnValue_3) == 0x000151, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, K2Node_Select_Default_2) == 0x000158, "Member 'ITM_Mod_C_CheckIfSavedInSlot::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, K2Node_Select_Default_3) == 0x000168, "Member 'ITM_Mod_C_CheckIfSavedInSlot::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Concat_StrStr_ReturnValue) == 0x000178, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000190, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001A0, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_GetUGCSettings_ReturnValue_1) == 0x0001B0, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_GetUGCSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_LeftChop_ReturnValue) == 0x0001B8, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_IsValid_ReturnValue_1) == 0x0001C8, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Conv_StringToText_ReturnValue) == 0x0001D0, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x0001E8, "Member 'ITM_Mod_C_CheckIfSavedInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_isEmpty_ReturnValue) == 0x000228, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_isEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, K2Node_MakeArray_Array) == 0x000230, "Member 'ITM_Mod_C_CheckIfSavedInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, CallFunc_Format_ReturnValue) == 0x000240, "Member 'ITM_Mod_C_CheckIfSavedInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_CheckIfSavedInSlot, K2Node_Select_Default_4) == 0x000258, "Member 'ITM_Mod_C_CheckIfSavedInSlot::K2Node_Select_Default_4' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.GetDownloadVersionText
// 0x0088 (0x0088 - 0x0000)
struct ITM_Mod_C_GetDownloadVersionText final
{
public:
	EUGCDownloadVersion                           InDownloadVersion;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3380[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutStatus;                                         // 0x0008(0x0018)(Parm, OutParm)
	EUGCDownloadVersion                           Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3381[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0018)()
};
static_assert(alignof(ITM_Mod_C_GetDownloadVersionText) == 0x000008, "Wrong alignment on ITM_Mod_C_GetDownloadVersionText");
static_assert(sizeof(ITM_Mod_C_GetDownloadVersionText) == 0x000088, "Wrong size on ITM_Mod_C_GetDownloadVersionText");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionText, InDownloadVersion) == 0x000000, "Member 'ITM_Mod_C_GetDownloadVersionText::InDownloadVersion' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionText, OutStatus) == 0x000008, "Member 'ITM_Mod_C_GetDownloadVersionText::OutStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionText, Temp_byte_Variable) == 0x000020, "Member 'ITM_Mod_C_GetDownloadVersionText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionText, Temp_text_Variable) == 0x000028, "Member 'ITM_Mod_C_GetDownloadVersionText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionText, Temp_text_Variable_1) == 0x000040, "Member 'ITM_Mod_C_GetDownloadVersionText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionText, Temp_text_Variable_2) == 0x000058, "Member 'ITM_Mod_C_GetDownloadVersionText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionText, K2Node_Select_Default) == 0x000070, "Member 'ITM_Mod_C_GetDownloadVersionText::K2Node_Select_Default' has a wrong offset!");

// Function ITM_Mod.ITM_Mod_C.GetDownloadVersionToolTip
// 0x0088 (0x0088 - 0x0000)
struct ITM_Mod_C_GetDownloadVersionToolTip final
{
public:
	EUGCDownloadVersion                           InStatus;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3382[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutStatus;                                         // 0x0008(0x0018)(Parm, OutParm)
	EUGCDownloadVersion                           Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3383[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0018)()
};
static_assert(alignof(ITM_Mod_C_GetDownloadVersionToolTip) == 0x000008, "Wrong alignment on ITM_Mod_C_GetDownloadVersionToolTip");
static_assert(sizeof(ITM_Mod_C_GetDownloadVersionToolTip) == 0x000088, "Wrong size on ITM_Mod_C_GetDownloadVersionToolTip");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionToolTip, InStatus) == 0x000000, "Member 'ITM_Mod_C_GetDownloadVersionToolTip::InStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionToolTip, OutStatus) == 0x000008, "Member 'ITM_Mod_C_GetDownloadVersionToolTip::OutStatus' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionToolTip, Temp_byte_Variable) == 0x000020, "Member 'ITM_Mod_C_GetDownloadVersionToolTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionToolTip, Temp_text_Variable) == 0x000028, "Member 'ITM_Mod_C_GetDownloadVersionToolTip::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionToolTip, Temp_text_Variable_1) == 0x000040, "Member 'ITM_Mod_C_GetDownloadVersionToolTip::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionToolTip, Temp_text_Variable_2) == 0x000058, "Member 'ITM_Mod_C_GetDownloadVersionToolTip::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_Mod_C_GetDownloadVersionToolTip, K2Node_Select_Default) == 0x000070, "Member 'ITM_Mod_C_GetDownloadVersionToolTip::K2Node_Select_Default' has a wrong offset!");

}

