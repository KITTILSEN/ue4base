#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Forge_MasteryBar

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Forge_MasteryBar.UI_Forge_MasteryBar_C
// 0x00A8 (0x0308 - 0x0260)
class UUI_Forge_MasteryBar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimToolTip;                                       // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimResetReward;                                   // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimRewardPopUp;                                   // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimCount;                                         // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                BorderProgressBarXP;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Menu_MinimalWindow_C*            Box_ToolTip;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_BigButton_C*                       ClaimButton;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_MatrixCore_C*                      ForgeLevelReward;                                  // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           GhostProgressBar;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           LevelProgressBar;                                  // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Forge_LevelIcon_C*                  PlayerForgeLevel;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_30;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ESchematicType                                Reward;                                            // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C4[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartXP;                                           // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndXP;                                             // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpProgress;                                      // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          LevelIncreased;                                    // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C5[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCountingFinished;                                // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnClaimClicked;                                    // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ClaimButtonEnabled;                                // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MouseHovering;                                     // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetClaimButtonEnabled(bool InEnabled);
	void SetRewardFromLevel(int32 InLevel);
	void StartCounting(int32 InStartLevel, float InStartXP);
	void SetLerpProgress(float Value);
	void SetFromSaveGame(bool Animate);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void PlayRewardAnim();
	void RewardPopUpStarted();
	void FinishedCounting();
	void ResetReward();
	void StartedCounting();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void ExecuteUbergraph_UI_Forge_MasteryBar(int32 EntryPoint);
	void OnClaimClicked__DelegateSignature(int32 InLevel, int32 InSeed);
	void OnCountingFinished__DelegateSignature(uint8 Param_Reward);
	void BndEvt__UI_Forge_MasteryBar_ClaimButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Forge_MasteryBar_C">();
	}
	static class UUI_Forge_MasteryBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Forge_MasteryBar_C>();
	}
};
static_assert(alignof(UUI_Forge_MasteryBar_C) == 0x000008, "Wrong alignment on UUI_Forge_MasteryBar_C");
static_assert(sizeof(UUI_Forge_MasteryBar_C) == 0x000308, "Wrong size on UUI_Forge_MasteryBar_C");
static_assert(offsetof(UUI_Forge_MasteryBar_C, UberGraphFrame) == 0x000260, "Member 'UUI_Forge_MasteryBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, AnimToolTip) == 0x000268, "Member 'UUI_Forge_MasteryBar_C::AnimToolTip' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, AnimResetReward) == 0x000270, "Member 'UUI_Forge_MasteryBar_C::AnimResetReward' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, AnimRewardPopUp) == 0x000278, "Member 'UUI_Forge_MasteryBar_C::AnimRewardPopUp' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, AnimCount) == 0x000280, "Member 'UUI_Forge_MasteryBar_C::AnimCount' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, BorderProgressBarXP) == 0x000288, "Member 'UUI_Forge_MasteryBar_C::BorderProgressBarXP' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, Box_ToolTip) == 0x000290, "Member 'UUI_Forge_MasteryBar_C::Box_ToolTip' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, ClaimButton) == 0x000298, "Member 'UUI_Forge_MasteryBar_C::ClaimButton' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, ForgeLevelReward) == 0x0002A0, "Member 'UUI_Forge_MasteryBar_C::ForgeLevelReward' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, GhostProgressBar) == 0x0002A8, "Member 'UUI_Forge_MasteryBar_C::GhostProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, LevelProgressBar) == 0x0002B0, "Member 'UUI_Forge_MasteryBar_C::LevelProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, PlayerForgeLevel) == 0x0002B8, "Member 'UUI_Forge_MasteryBar_C::PlayerForgeLevel' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, RichTextBlock_30) == 0x0002C0, "Member 'UUI_Forge_MasteryBar_C::RichTextBlock_30' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, Reward) == 0x0002C8, "Member 'UUI_Forge_MasteryBar_C::Reward' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, StartXP) == 0x0002CC, "Member 'UUI_Forge_MasteryBar_C::StartXP' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, EndXP) == 0x0002D0, "Member 'UUI_Forge_MasteryBar_C::EndXP' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, LerpProgress) == 0x0002D4, "Member 'UUI_Forge_MasteryBar_C::LerpProgress' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, LevelIncreased) == 0x0002D8, "Member 'UUI_Forge_MasteryBar_C::LevelIncreased' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, OnCountingFinished) == 0x0002E0, "Member 'UUI_Forge_MasteryBar_C::OnCountingFinished' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, OnClaimClicked) == 0x0002F0, "Member 'UUI_Forge_MasteryBar_C::OnClaimClicked' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, ClaimButtonEnabled) == 0x000300, "Member 'UUI_Forge_MasteryBar_C::ClaimButtonEnabled' has a wrong offset!");
static_assert(offsetof(UUI_Forge_MasteryBar_C, MouseHovering) == 0x000301, "Member 'UUI_Forge_MasteryBar_C::MouseHovering' has a wrong offset!");

}

