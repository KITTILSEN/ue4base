#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_MisSel_FullBiome

#include "Basic.hpp"

#include "ITM_MisSel_FullBiome_classes.hpp"
#include "ITM_MisSel_FullBiome_parameters.hpp"


namespace SDK
{

// Function ITM_MisSel_FullBiome.ITM_MisSel_FullBiome_C.HighlightMissions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  AssetReferences                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ShouldHighlight                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USeasonChallenge*                 Challenge                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_MisSel_FullBiome_C::HighlightMissions(TArray<class UObject*>& AssetReferences, bool ShouldHighlight, class USeasonChallenge* Challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_MisSel_FullBiome_C", "HighlightMissions");

	Params::ITM_MisSel_FullBiome_C_HighlightMissions Parms{};

	Parms.AssetReferences = std::move(AssetReferences);
	Parms.ShouldHighlight = ShouldHighlight;
	Parms.Challenge = Challenge;

	UObject::ProcessEvent(Func, &Parms);

	AssetReferences = std::move(Parms.AssetReferences);
}


// Function ITM_MisSel_FullBiome.ITM_MisSel_FullBiome_C.UpdateMapPan
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InPosition                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_MisSel_FullBiome_C::UpdateMapPan(const struct FVector2D& InPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_MisSel_FullBiome_C", "UpdateMapPan");

	Params::ITM_MisSel_FullBiome_C_UpdateMapPan Parms{};

	Parms.InPosition = std::move(InPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_MisSel_FullBiome.ITM_MisSel_FullBiome_C.GetRandomFreeMissionSlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITM_MisSel_MissionMapIcon_C*     Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_MisSel_FullBiome_C::GetRandomFreeMissionSlot(class UITM_MisSel_MissionMapIcon_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_MisSel_FullBiome_C", "GetRandomFreeMissionSlot");

	Params::ITM_MisSel_FullBiome_C_GetRandomFreeMissionSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function ITM_MisSel_FullBiome.ITM_MisSel_FullBiome_C.ClearMissions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITM_MisSel_FullBiome_C::ClearMissions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_MisSel_FullBiome_C", "ClearMissions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_MisSel_FullBiome.ITM_MisSel_FullBiome_C.GetAllAllMissionSlots
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UITM_MisSel_MissionMapIcon_C*>Items1                                                 (Parm, OutParm, ContainsInstancedReference)

void UITM_MisSel_FullBiome_C::GetAllAllMissionSlots(TArray<class UITM_MisSel_MissionMapIcon_C*>* Items1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_MisSel_FullBiome_C", "GetAllAllMissionSlots");

	Params::ITM_MisSel_FullBiome_C_GetAllAllMissionSlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Items1 != nullptr)
		*Items1 = std::move(Parms.Items1);
}


// Function ITM_MisSel_FullBiome.ITM_MisSel_FullBiome_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UITM_MisSel_FullBiome_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_MisSel_FullBiome_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_MisSel_FullBiome.ITM_MisSel_FullBiome_C.SetData
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UGeneratedMission*>        Missions                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UBiome*                           Param_Biome                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_MisSel_FullBiome_C::SetData(const TArray<class UGeneratedMission*>& Missions, class UBiome* Param_Biome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_MisSel_FullBiome_C", "SetData");

	Params::ITM_MisSel_FullBiome_C_SetData Parms{};

	Parms.Missions = std::move(Missions);
	Parms.Param_Biome = Param_Biome;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_MisSel_FullBiome.ITM_MisSel_FullBiome_C.ExecuteUbergraph_ITM_MisSel_FullBiome
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_MisSel_FullBiome_C::ExecuteUbergraph_ITM_MisSel_FullBiome(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_MisSel_FullBiome_C", "ExecuteUbergraph_ITM_MisSel_FullBiome");

	Params::ITM_MisSel_FullBiome_C_ExecuteUbergraph_ITM_MisSel_FullBiome Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

