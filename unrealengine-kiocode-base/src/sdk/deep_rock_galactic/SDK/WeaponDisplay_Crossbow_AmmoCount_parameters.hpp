#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponDisplay_Crossbow_AmmoCount

#include "Basic.hpp"


namespace SDK::Params
{

// Function WeaponDisplay_Crossbow_AmmoCount.WeaponDisplay_Crossbow_AmmoCount_C.GetArrowIcon
// 0x0098 (0x0098 - 0x0000)
struct WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon final
{
public:
	class UTexture2D*                             OutIcon;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UClass*                                 Arrow;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490B[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCrossbow_Projectile_Base; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDefaultArrowEquipped_ReturnValue;    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490C[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDefaultArrowEquipped_ReturnValue_1;  // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490D[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0068(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon) == 0x000008, "Wrong alignment on WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon");
static_assert(sizeof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon) == 0x000098, "Wrong size on WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, OutIcon) == 0x000000, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::OutIcon' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, Icon) == 0x000008, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::Icon' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, Arrow) == 0x000030, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::Arrow' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, Temp_bool_Variable) == 0x000038, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, CallFunc_IsValidClass_ReturnValue) == 0x000039, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, K2Node_ClassDynamicCast_AsCrossbow_Projectile_Base) == 0x000040, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::K2Node_ClassDynamicCast_AsCrossbow_Projectile_Base' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, K2Node_ClassDynamicCast_bSuccess) == 0x000048, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000049, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, CallFunc_GetIsDefaultArrowEquipped_ReturnValue) == 0x00004A, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::CallFunc_GetIsDefaultArrowEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000050, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, K2Node_DynamicCast_AsTexture_2D) == 0x000058, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, Temp_bool_Variable_1) == 0x000062, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, CallFunc_GetIsDefaultArrowEquipped_ReturnValue_1) == 0x000063, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::CallFunc_GetIsDefaultArrowEquipped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, K2Node_Select_Default) == 0x000068, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon, K2Node_Select_Default_1) == 0x000090, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_GetArrowIcon::K2Node_Select_Default_1' has a wrong offset!");

// Function WeaponDisplay_Crossbow_AmmoCount.WeaponDisplay_Crossbow_AmmoCount_C.Refresh
// 0x0030 (0x0030 - 0x0000)
struct WeaponDisplay_Crossbow_AmmoCount_C_Refresh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDefaultArrowEquipped_ReturnValue;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490E[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetArrowIcon_OutIcon;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDefaultArrowEquipped_ReturnValue_1;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalArrowCount_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh) == 0x000008, "Wrong alignment on WeaponDisplay_Crossbow_AmmoCount_C_Refresh");
static_assert(sizeof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh) == 0x000030, "Wrong size on WeaponDisplay_Crossbow_AmmoCount_C_Refresh");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_GetIsDefaultArrowEquipped_ReturnValue) == 0x000002, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_GetIsDefaultArrowEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000003, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_GetArrowIcon_OutIcon) == 0x000008, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_GetArrowIcon_OutIcon' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_GetIsDefaultArrowEquipped_ReturnValue_1) == 0x000010, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_GetIsDefaultArrowEquipped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_GetTotalArrowCount_ReturnValue) == 0x000014, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_GetTotalArrowCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_Refresh, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_Refresh::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WeaponDisplay_Crossbow_AmmoCount.WeaponDisplay_Crossbow_AmmoCount_C.SetItem
// 0x0038 (0x0038 - 0x0000)
struct WeaponDisplay_Crossbow_AmmoCount_C_SetItem final
{
public:
	class AItem*                                  InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACrossbow*                              K2Node_DynamicCast_AsCrossbow;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4910[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Amount)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool InDefaultArrow)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WeaponDisplay_Crossbow_AmmoCount_C_SetItem) == 0x000008, "Wrong alignment on WeaponDisplay_Crossbow_AmmoCount_C_SetItem");
static_assert(sizeof(WeaponDisplay_Crossbow_AmmoCount_C_SetItem) == 0x000038, "Wrong size on WeaponDisplay_Crossbow_AmmoCount_C_SetItem");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_SetItem, InItem) == 0x000000, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_SetItem::InItem' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_SetItem, K2Node_DynamicCast_AsCrossbow) == 0x000008, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_SetItem::K2Node_DynamicCast_AsCrossbow' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_SetItem, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_SetItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_SetItem, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_SetItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_SetItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_SetItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WeaponDisplay_Crossbow_AmmoCount.WeaponDisplay_Crossbow_AmmoCount_C.OnAmountChanged
// 0x0004 (0x0004 - 0x0000)
struct WeaponDisplay_Crossbow_AmmoCount_C_OnAmountChanged final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_Crossbow_AmmoCount_C_OnAmountChanged) == 0x000004, "Wrong alignment on WeaponDisplay_Crossbow_AmmoCount_C_OnAmountChanged");
static_assert(sizeof(WeaponDisplay_Crossbow_AmmoCount_C_OnAmountChanged) == 0x000004, "Wrong size on WeaponDisplay_Crossbow_AmmoCount_C_OnAmountChanged");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_OnAmountChanged, Amount) == 0x000000, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_OnAmountChanged::Amount' has a wrong offset!");

// Function WeaponDisplay_Crossbow_AmmoCount.WeaponDisplay_Crossbow_AmmoCount_C.OnArrowChanged
// 0x0001 (0x0001 - 0x0000)
struct WeaponDisplay_Crossbow_AmmoCount_C_OnArrowChanged final
{
public:
	bool                                          InDefaultArrow;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponDisplay_Crossbow_AmmoCount_C_OnArrowChanged) == 0x000001, "Wrong alignment on WeaponDisplay_Crossbow_AmmoCount_C_OnArrowChanged");
static_assert(sizeof(WeaponDisplay_Crossbow_AmmoCount_C_OnArrowChanged) == 0x000001, "Wrong size on WeaponDisplay_Crossbow_AmmoCount_C_OnArrowChanged");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_OnArrowChanged, InDefaultArrow) == 0x000000, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_OnArrowChanged::InDefaultArrow' has a wrong offset!");

// Function WeaponDisplay_Crossbow_AmmoCount.WeaponDisplay_Crossbow_AmmoCount_C.ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount
// 0x002C (0x002C - 0x0000)
struct WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InDefaultArrow;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4911[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount) == 0x000004, "Wrong alignment on WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount");
static_assert(sizeof(WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount) == 0x00002C, "Wrong size on WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount, EntryPoint) == 0x000000, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount, K2Node_CustomEvent_Amount) == 0x000014, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount, K2Node_CustomEvent_InDefaultArrow) == 0x000018, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount::K2Node_CustomEvent_InDefaultArrow' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'WeaponDisplay_Crossbow_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_Crossbow_AmmoCount::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

}

