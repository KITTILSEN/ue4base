#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MinersManualConsole

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MinersManualConsole.BP_MinersManualConsole_C
// 0x00B0 (0x02D0 - 0x0220)
class ABP_MinersManualConsole_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Flier_Shooter;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstantUsable*                         InstantUsable;                                     // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_MonsterManual_Hologram;                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spider_Grunt_GuardA;                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spider_Grunt_A;                                 // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Flier_Grabber_A;                                // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Flier_Heavy;                                    // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Flier_Triple_Shooter;                           // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Spider_Tank_A;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Enemy_Meshes;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MinersManual;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Rot_speed;                                         // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F15[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            EnemyMeshes;                                       // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UPrimitiveComponent*                    CurrVisibleMesh;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__BP_MinersManual_InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
	void ReceiveBeginPlay();
	void SwitchMesh();
	void ExecuteUbergraph_BP_MinersManualConsole(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MinersManualConsole_C">();
	}
	static class ABP_MinersManualConsole_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MinersManualConsole_C>();
	}
};
static_assert(alignof(ABP_MinersManualConsole_C) == 0x000008, "Wrong alignment on ABP_MinersManualConsole_C");
static_assert(sizeof(ABP_MinersManualConsole_C) == 0x0002D0, "Wrong size on ABP_MinersManualConsole_C");
static_assert(offsetof(ABP_MinersManualConsole_C, UberGraphFrame) == 0x000220, "Member 'ABP_MinersManualConsole_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, Box) == 0x000228, "Member 'ABP_MinersManualConsole_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, SK_Flier_Shooter) == 0x000230, "Member 'ABP_MinersManualConsole_C::SK_Flier_Shooter' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, InstantUsable) == 0x000238, "Member 'ABP_MinersManualConsole_C::InstantUsable' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, Widget) == 0x000240, "Member 'ABP_MinersManualConsole_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, TextRender) == 0x000248, "Member 'ABP_MinersManualConsole_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, PointLight1) == 0x000250, "Member 'ABP_MinersManualConsole_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, PointLight) == 0x000258, "Member 'ABP_MinersManualConsole_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, NS_MonsterManual_Hologram) == 0x000260, "Member 'ABP_MinersManualConsole_C::NS_MonsterManual_Hologram' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, SM_Spider_Grunt_GuardA) == 0x000268, "Member 'ABP_MinersManualConsole_C::SM_Spider_Grunt_GuardA' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, SM_Spider_Grunt_A) == 0x000270, "Member 'ABP_MinersManualConsole_C::SM_Spider_Grunt_A' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, SK_Flier_Grabber_A) == 0x000278, "Member 'ABP_MinersManualConsole_C::SK_Flier_Grabber_A' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, SK_Flier_Heavy) == 0x000280, "Member 'ABP_MinersManualConsole_C::SK_Flier_Heavy' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, SK_Flier_Triple_Shooter) == 0x000288, "Member 'ABP_MinersManualConsole_C::SK_Flier_Triple_Shooter' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, SK_Spider_Tank_A) == 0x000290, "Member 'ABP_MinersManualConsole_C::SK_Spider_Tank_A' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, Enemy_Meshes) == 0x000298, "Member 'ABP_MinersManualConsole_C::Enemy_Meshes' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, MinersManual) == 0x0002A0, "Member 'ABP_MinersManualConsole_C::MinersManual' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_MinersManualConsole_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, Rot_speed) == 0x0002B0, "Member 'ABP_MinersManualConsole_C::Rot_speed' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, EnemyMeshes) == 0x0002B8, "Member 'ABP_MinersManualConsole_C::EnemyMeshes' has a wrong offset!");
static_assert(offsetof(ABP_MinersManualConsole_C, CurrVisibleMesh) == 0x0002C8, "Member 'ABP_MinersManualConsole_C::CurrVisibleMesh' has a wrong offset!");

}

