#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_TickerText

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_TickerText.UI_TickerText_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_TickerText_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TickerText_C_Tick) == 0x000004, "Wrong alignment on UI_TickerText_C_Tick");
static_assert(sizeof(UI_TickerText_C_Tick) == 0x00003C, "Wrong size on UI_TickerText_C_Tick");
static_assert(offsetof(UI_TickerText_C_Tick, MyGeometry) == 0x000000, "Member 'UI_TickerText_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_TickerText_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_TickerText.UI_TickerText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_TickerText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TickerText_C_PreConstruct) == 0x000001, "Wrong alignment on UI_TickerText_C_PreConstruct");
static_assert(sizeof(UI_TickerText_C_PreConstruct) == 0x000001, "Wrong size on UI_TickerText_C_PreConstruct");
static_assert(offsetof(UI_TickerText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_TickerText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_TickerText.UI_TickerText_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct UI_TickerText_C_SetText final
{
public:
	class FText                                   TickerText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_TickerText_C_SetText) == 0x000008, "Wrong alignment on UI_TickerText_C_SetText");
static_assert(sizeof(UI_TickerText_C_SetText) == 0x000018, "Wrong size on UI_TickerText_C_SetText");
static_assert(offsetof(UI_TickerText_C_SetText, TickerText) == 0x000000, "Member 'UI_TickerText_C_SetText::TickerText' has a wrong offset!");

// Function UI_TickerText.UI_TickerText_C.SetSpeed
// 0x0004 (0x0004 - 0x0000)
struct UI_TickerText_C_SetSpeed final
{
public:
	float                                         Param_Speed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TickerText_C_SetSpeed) == 0x000004, "Wrong alignment on UI_TickerText_C_SetSpeed");
static_assert(sizeof(UI_TickerText_C_SetSpeed) == 0x000004, "Wrong size on UI_TickerText_C_SetSpeed");
static_assert(offsetof(UI_TickerText_C_SetSpeed, Param_Speed) == 0x000000, "Member 'UI_TickerText_C_SetSpeed::Param_Speed' has a wrong offset!");

// Function UI_TickerText.UI_TickerText_C.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct UI_TickerText_C_SetStyle final
{
public:
	class UDataTable*                             NewTextStyleSet;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TickerText_C_SetStyle) == 0x000008, "Wrong alignment on UI_TickerText_C_SetStyle");
static_assert(sizeof(UI_TickerText_C_SetStyle) == 0x000008, "Wrong size on UI_TickerText_C_SetStyle");
static_assert(offsetof(UI_TickerText_C_SetStyle, NewTextStyleSet) == 0x000000, "Member 'UI_TickerText_C_SetStyle::NewTextStyleSet' has a wrong offset!");

// Function UI_TickerText.UI_TickerText_C.ExecuteUbergraph_UI_TickerText
// 0x0158 (0x0158 - 0x0000)
struct UI_TickerText_C_ExecuteUbergraph_UI_TickerText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F91[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F92[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_TickerText;                     // 0x0068(0x0018)()
	float                                         CallFunc_BreakVector2D_X;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F93[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Speed;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F94[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_CustomEvent_NewTextStyleSet;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText) == 0x000008, "Wrong alignment on UI_TickerText_C_ExecuteUbergraph_UI_TickerText");
static_assert(sizeof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText) == 0x000158, "Wrong size on UI_TickerText_C_ExecuteUbergraph_UI_TickerText");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, EntryPoint) == 0x000000, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000040, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_MakeStruct_Margin) == 0x000048, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_Event_IsDesignTime) == 0x000058, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_GetDesiredSize_ReturnValue) == 0x00005C, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_CustomEvent_TickerText) == 0x000068, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_CustomEvent_TickerText' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_BreakVector2D_X) == 0x000080, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_BreakVector2D_Y) == 0x000084, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_MakeArray_Array) == 0x000108, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_Format_ReturnValue) == 0x000118, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000130, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_Less_FloatFloat_ReturnValue) == 0x000134, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000138, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_CustomEvent_Speed) == 0x00013C, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000140, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_TextIsEmpty_ReturnValue) == 0x000144, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, K2Node_CustomEvent_NewTextStyleSet) == 0x000148, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::K2Node_CustomEvent_NewTextStyleSet' has a wrong offset!");
static_assert(offsetof(UI_TickerText_C_ExecuteUbergraph_UI_TickerText, CallFunc_Not_PreBool_ReturnValue) == 0x000150, "Member 'UI_TickerText_C_ExecuteUbergraph_UI_TickerText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

