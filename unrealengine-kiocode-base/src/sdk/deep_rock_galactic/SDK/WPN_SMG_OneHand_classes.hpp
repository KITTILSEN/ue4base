#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_SMG_OneHand

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_SMG_OneHand.WPN_SMG_OneHand_C
// 0x0088 (0x0888 - 0x0800)
class AWPN_SMG_OneHand_C final : public AElectricalSMG
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0800(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFirstPersonStaticMeshComponent*        FP_AnimationMag;                                   // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TP_AnimationMag;                                   // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonParticleSystemComponent*    FirstPersonParticleSystem;                         // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TP_SMG_MAG;                                        // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonStaticMeshComponent*        SMG_Mag_Full;                                      // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonWidgetComponent*            FirstPersonWidget;                                 // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   MuzzleLight;                                       // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitscanComponent*                      HitScan;                                           // 0x0850(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x0858(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SalineConductorScale;                              // 0x0860(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A9[0x4];                                     // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_TurretEMPDischarge_Indicator_C*> EMPDischargeIndicators;                            // 0x0870(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           EMPIndicatorUpdateTimer;                           // 0x0880(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void Recieve_UpdateMeshses(bool Param_IsFirstPerson);
	void ReceiveBeginPlay();
	void Receive_ReloadBegin();
	void Receive_ReloadEnd();
	void OnSkinChanged(class USkinEffect* Skin);
	void RecieveUnequipped();
	void StopEMDischargeCheck();
	void ExecuteUbergraph_WPN_SMG_OneHand(int32 EntryPoint);

	class UStaticMeshComponent* Receive_GetTPAnimationEventMesh() const;
	class UFirstPersonStaticMeshComponent* Receive_GetFPAnimationEventMesh() const;
	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_SMG_OneHand_C">();
	}
	static class AWPN_SMG_OneHand_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_SMG_OneHand_C>();
	}
};
static_assert(alignof(AWPN_SMG_OneHand_C) == 0x000008, "Wrong alignment on AWPN_SMG_OneHand_C");
static_assert(sizeof(AWPN_SMG_OneHand_C) == 0x000888, "Wrong size on AWPN_SMG_OneHand_C");
static_assert(offsetof(AWPN_SMG_OneHand_C, UberGraphFrame) == 0x000800, "Member 'AWPN_SMG_OneHand_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, FP_AnimationMag) == 0x000808, "Member 'AWPN_SMG_OneHand_C::FP_AnimationMag' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, TP_AnimationMag) == 0x000810, "Member 'AWPN_SMG_OneHand_C::TP_AnimationMag' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, ParticleSystem) == 0x000818, "Member 'AWPN_SMG_OneHand_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, FirstPersonParticleSystem) == 0x000820, "Member 'AWPN_SMG_OneHand_C::FirstPersonParticleSystem' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, TP_SMG_MAG) == 0x000828, "Member 'AWPN_SMG_OneHand_C::TP_SMG_MAG' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, SMG_Mag_Full) == 0x000830, "Member 'AWPN_SMG_OneHand_C::SMG_Mag_Full' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, FirstPersonWidget) == 0x000838, "Member 'AWPN_SMG_OneHand_C::FirstPersonWidget' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, Damage) == 0x000840, "Member 'AWPN_SMG_OneHand_C::Damage' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, MuzzleLight) == 0x000848, "Member 'AWPN_SMG_OneHand_C::MuzzleLight' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, HitScan) == 0x000850, "Member 'AWPN_SMG_OneHand_C::HitScan' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, CrosshairAggregator) == 0x000858, "Member 'AWPN_SMG_OneHand_C::CrosshairAggregator' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, SalineConductorScale) == 0x000860, "Member 'AWPN_SMG_OneHand_C::SalineConductorScale' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, EMPDischargeIndicators) == 0x000870, "Member 'AWPN_SMG_OneHand_C::EMPDischargeIndicators' has a wrong offset!");
static_assert(offsetof(AWPN_SMG_OneHand_C, EMPIndicatorUpdateTimer) == 0x000880, "Member 'AWPN_SMG_OneHand_C::EMPIndicatorUpdateTimer' has a wrong offset!");

}

