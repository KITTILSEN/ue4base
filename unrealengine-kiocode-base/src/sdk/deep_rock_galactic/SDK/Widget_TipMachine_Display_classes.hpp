#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_TipMachine_Display

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_TipMachine_Display.Widget_TipMachine_Display_C
// 0x0028 (0x0288 - 0x0260)
class UWidget_TipMachine_Display_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Smile;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Smile1;                                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Smile2;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_Widget_TipMachine_Display(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_TipMachine_Display_C">();
	}
	static class UWidget_TipMachine_Display_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_TipMachine_Display_C>();
	}
};
static_assert(alignof(UWidget_TipMachine_Display_C) == 0x000008, "Wrong alignment on UWidget_TipMachine_Display_C");
static_assert(sizeof(UWidget_TipMachine_Display_C) == 0x000288, "Wrong size on UWidget_TipMachine_Display_C");
static_assert(offsetof(UWidget_TipMachine_Display_C, UberGraphFrame) == 0x000260, "Member 'UWidget_TipMachine_Display_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_TipMachine_Display_C, Smile) == 0x000268, "Member 'UWidget_TipMachine_Display_C::Smile' has a wrong offset!");
static_assert(offsetof(UWidget_TipMachine_Display_C, Smile1) == 0x000270, "Member 'UWidget_TipMachine_Display_C::Smile1' has a wrong offset!");
static_assert(offsetof(UWidget_TipMachine_Display_C, Smile2) == 0x000278, "Member 'UWidget_TipMachine_Display_C::Smile2' has a wrong offset!");
static_assert(offsetof(UWidget_TipMachine_Display_C, WidgetSwitcher_0) == 0x000280, "Member 'UWidget_TipMachine_Display_C::WidgetSwitcher_0' has a wrong offset!");

}

