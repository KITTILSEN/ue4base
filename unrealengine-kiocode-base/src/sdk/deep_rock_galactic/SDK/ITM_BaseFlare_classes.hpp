#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_BaseFlare

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ITM_BaseFlare.ITM_BaseFlare_C
// 0x0070 (0x0330 - 0x02C0)
class AITM_BaseFlare_C : public AFlare
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   Light_AfterGlow;                                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Light_NoShadow;                                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight_Shadow_3;                                // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight_Shadow_2;                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight_Shadow_1;                                // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUpgradableGearComponent*               UpgradableGear;                                    // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_BrightnessShadows_14DB2CD947ED9EE06017768CF842D625; // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Brightness_14DB2CD947ED9EE06017768CF842D625; // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_14DB2CD947ED9EE06017768CF842D625; // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3631[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseIntensity;                                     // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InfiniteLight;                                     // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UpdateShadowRadius();
	void StartFadeOut(float* Time);
	void UserConstructionScript();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void OnFlareIgnite();
	void OnFlareExtinguish();
	void ReceiveBeginPlay();
	void OnUpdateShadowRadius();
	void ActivateFlare();
	void ExecuteUbergraph_ITM_BaseFlare(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_BaseFlare_C">();
	}
	static class AITM_BaseFlare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AITM_BaseFlare_C>();
	}
};
static_assert(alignof(AITM_BaseFlare_C) == 0x000008, "Wrong alignment on AITM_BaseFlare_C");
static_assert(sizeof(AITM_BaseFlare_C) == 0x000330, "Wrong size on AITM_BaseFlare_C");
static_assert(offsetof(AITM_BaseFlare_C, UberGraphFrame) == 0x0002C0, "Member 'AITM_BaseFlare_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, Light_AfterGlow) == 0x0002C8, "Member 'AITM_BaseFlare_C::Light_AfterGlow' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, Light_NoShadow) == 0x0002D0, "Member 'AITM_BaseFlare_C::Light_NoShadow' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, SpotLight_Shadow_3) == 0x0002D8, "Member 'AITM_BaseFlare_C::SpotLight_Shadow_3' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, SpotLight_Shadow_2) == 0x0002E0, "Member 'AITM_BaseFlare_C::SpotLight_Shadow_2' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, SpotLight_Shadow_1) == 0x0002E8, "Member 'AITM_BaseFlare_C::SpotLight_Shadow_1' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, UpgradableGear) == 0x0002F0, "Member 'AITM_BaseFlare_C::UpgradableGear' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, ParticleSystem) == 0x0002F8, "Member 'AITM_BaseFlare_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, StaticMesh) == 0x000300, "Member 'AITM_BaseFlare_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, Box) == 0x000308, "Member 'AITM_BaseFlare_C::Box' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, Timeline_0_BrightnessShadows_14DB2CD947ED9EE06017768CF842D625) == 0x000310, "Member 'AITM_BaseFlare_C::Timeline_0_BrightnessShadows_14DB2CD947ED9EE06017768CF842D625' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, Timeline_0_Brightness_14DB2CD947ED9EE06017768CF842D625) == 0x000314, "Member 'AITM_BaseFlare_C::Timeline_0_Brightness_14DB2CD947ED9EE06017768CF842D625' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, Timeline_0__Direction_14DB2CD947ED9EE06017768CF842D625) == 0x000318, "Member 'AITM_BaseFlare_C::Timeline_0__Direction_14DB2CD947ED9EE06017768CF842D625' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, Timeline_0) == 0x000320, "Member 'AITM_BaseFlare_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, BaseIntensity) == 0x000328, "Member 'AITM_BaseFlare_C::BaseIntensity' has a wrong offset!");
static_assert(offsetof(AITM_BaseFlare_C, InfiniteLight) == 0x00032C, "Member 'AITM_BaseFlare_C::InfiniteLight' has a wrong offset!");

}

