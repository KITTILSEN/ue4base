#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ClusterFragment_MicroMissileLauncher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ClusterFragment_MicroMissileLauncher.BP_ClusterFragment_MicroMissileLauncher_C.OnImpacted
// 0x008C (0x008C - 0x0000)
struct BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted final
{
public:
	bool                                          PredictedImpact;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5395[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted) == 0x000004, "Wrong alignment on BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted");
static_assert(sizeof(BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted) == 0x00008C, "Wrong size on BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted, PredictedImpact) == 0x000000, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted::PredictedImpact' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted, HitResult) == 0x000004, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_OnImpacted::HitResult' has a wrong offset!");

// Function BP_ClusterFragment_MicroMissileLauncher.BP_ClusterFragment_MicroMissileLauncher_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ClusterFragment_MicroMissileLauncher_C_ReceiveTick final
{
public:
	float                                         Param_DeltaSeconds;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ClusterFragment_MicroMissileLauncher_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ClusterFragment_MicroMissileLauncher_C_ReceiveTick");
static_assert(sizeof(BP_ClusterFragment_MicroMissileLauncher_C_ReceiveTick) == 0x000004, "Wrong size on BP_ClusterFragment_MicroMissileLauncher_C_ReceiveTick");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ReceiveTick, Param_DeltaSeconds) == 0x000000, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ReceiveTick::Param_DeltaSeconds' has a wrong offset!");

// Function BP_ClusterFragment_MicroMissileLauncher.BP_ClusterFragment_MicroMissileLauncher_C.ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher
// 0x0148 (0x0148 - 0x0000)
struct BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PredictedImpact;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5396[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0008(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher) == 0x000004, "Wrong alignment on BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher");
static_assert(sizeof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher) == 0x000148, "Wrong size on BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, EntryPoint) == 0x000000, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, K2Node_Event_PredictedImpact) == 0x000004, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::K2Node_Event_PredictedImpact' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, K2Node_Event_HitResult) == 0x000008, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, K2Node_Event_DeltaSeconds) == 0x000090, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, CallFunc_GetVelocity_ReturnValue) == 0x000098, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, CallFunc_BreakVector_X) == 0x0000A4, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, CallFunc_MakeRotator_ReturnValue) == 0x0000B4, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x0000C0, "Member 'BP_ClusterFragment_MicroMissileLauncher_C_ExecuteUbergraph_BP_ClusterFragment_MicroMissileLauncher::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");

}

