#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SupplyPod_Beacon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SupplyPod_Beacon.BP_SupplyPod_Beacon_C
// 0x0080 (0x02A0 - 0x0220)
class ABP_SupplyPod_Beacon_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Mesh_Hologram3;                                    // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Hologram2;                                    // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget1;                                           // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Hologram1;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingSceneComponent*                RotatingScene;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULightStrobingComponent*                LightStrobing;                                     // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       FindCollision;                                     // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh_Beacon;                                       // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USimpleObjectInfoComponent*             SimpleObjectInfo;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightIntensity;                                    // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColor;                                        // 0x028C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SupplyPod_Beacon(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetBlinkIntensity(float BlinkIntensity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SupplyPod_Beacon_C">();
	}
	static class ABP_SupplyPod_Beacon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SupplyPod_Beacon_C>();
	}
};
static_assert(alignof(ABP_SupplyPod_Beacon_C) == 0x000008, "Wrong alignment on ABP_SupplyPod_Beacon_C");
static_assert(sizeof(ABP_SupplyPod_Beacon_C) == 0x0002A0, "Wrong size on ABP_SupplyPod_Beacon_C");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, UberGraphFrame) == 0x000220, "Member 'ABP_SupplyPod_Beacon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, Mesh_Hologram3) == 0x000228, "Member 'ABP_SupplyPod_Beacon_C::Mesh_Hologram3' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, Mesh_Hologram2) == 0x000230, "Member 'ABP_SupplyPod_Beacon_C::Mesh_Hologram2' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, Widget1) == 0x000238, "Member 'ABP_SupplyPod_Beacon_C::Widget1' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, Mesh_Hologram1) == 0x000240, "Member 'ABP_SupplyPod_Beacon_C::Mesh_Hologram1' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, Widget) == 0x000248, "Member 'ABP_SupplyPod_Beacon_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, RotatingScene) == 0x000250, "Member 'ABP_SupplyPod_Beacon_C::RotatingScene' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, LightStrobing) == 0x000258, "Member 'ABP_SupplyPod_Beacon_C::LightStrobing' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, FindCollision) == 0x000260, "Member 'ABP_SupplyPod_Beacon_C::FindCollision' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, PointLight) == 0x000268, "Member 'ABP_SupplyPod_Beacon_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, Mesh_Beacon) == 0x000270, "Member 'ABP_SupplyPod_Beacon_C::Mesh_Beacon' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, SimpleObjectInfo) == 0x000278, "Member 'ABP_SupplyPod_Beacon_C::SimpleObjectInfo' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, Scene) == 0x000280, "Member 'ABP_SupplyPod_Beacon_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, LightIntensity) == 0x000288, "Member 'ABP_SupplyPod_Beacon_C::LightIntensity' has a wrong offset!");
static_assert(offsetof(ABP_SupplyPod_Beacon_C, LightColor) == 0x00028C, "Member 'ABP_SupplyPod_Beacon_C::LightColor' has a wrong offset!");

}

