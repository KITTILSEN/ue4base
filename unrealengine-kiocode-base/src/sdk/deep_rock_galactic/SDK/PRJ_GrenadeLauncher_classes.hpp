#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PRJ_GrenadeLauncher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PRJ_GrenadeLauncher.PRJ_GrenadeLauncher_C
// 0x0120 (0x0460 - 0x0340)
class APRJ_GrenadeLauncher_C final : public AProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProjectileExplosion*                   ProjectileExplosionHyper;                          // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosionMiniNuke;                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GrenadeTrail;                                    // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileExplosion*                   ProjectileExplosion;                               // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Front;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ForcePush;                                         // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lit;                                               // 0x038C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_53F9[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53FA[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     KnockBackCurve;                                    // 0x0398(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsHyper;                                           // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53FB[0x3];                                     // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitWorldLocation;                                  // 0x0424(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBoneName;                                       // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      HitPMat;                                           // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0450(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void LaunchPlayer(class APlayerCharacter* Player);
	void OnRep_Lit();
	void UserConstructionScript();
	void OnImpacted(bool PredictedImpact, const struct FHitResult& HitResult);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void MakeBouncy();
	void Trigger(const struct FHitResult& HitResult);
	void DoOnSpawn();
	void ExecuteUbergraph_PRJ_GrenadeLauncher(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PRJ_GrenadeLauncher_C">();
	}
	static class APRJ_GrenadeLauncher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APRJ_GrenadeLauncher_C>();
	}
};
static_assert(alignof(APRJ_GrenadeLauncher_C) == 0x000008, "Wrong alignment on APRJ_GrenadeLauncher_C");
static_assert(sizeof(APRJ_GrenadeLauncher_C) == 0x000460, "Wrong size on APRJ_GrenadeLauncher_C");
static_assert(offsetof(APRJ_GrenadeLauncher_C, UberGraphFrame) == 0x000340, "Member 'APRJ_GrenadeLauncher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, ProjectileExplosionHyper) == 0x000348, "Member 'APRJ_GrenadeLauncher_C::ProjectileExplosionHyper' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, PointLight) == 0x000350, "Member 'APRJ_GrenadeLauncher_C::PointLight' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, ProjectileExplosionMiniNuke) == 0x000358, "Member 'APRJ_GrenadeLauncher_C::ProjectileExplosionMiniNuke' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, P_GrenadeTrail) == 0x000360, "Member 'APRJ_GrenadeLauncher_C::P_GrenadeTrail' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, Sphere) == 0x000368, "Member 'APRJ_GrenadeLauncher_C::Sphere' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, Damage) == 0x000370, "Member 'APRJ_GrenadeLauncher_C::Damage' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, ProjectileExplosion) == 0x000378, "Member 'APRJ_GrenadeLauncher_C::ProjectileExplosion' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, Mesh_Front) == 0x000380, "Member 'APRJ_GrenadeLauncher_C::Mesh_Front' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, ForcePush) == 0x000388, "Member 'APRJ_GrenadeLauncher_C::ForcePush' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, Lit) == 0x00038C, "Member 'APRJ_GrenadeLauncher_C::Lit' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, Speed) == 0x000390, "Member 'APRJ_GrenadeLauncher_C::Speed' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, KnockBackCurve) == 0x000398, "Member 'APRJ_GrenadeLauncher_C::KnockBackCurve' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, IsHyper) == 0x000420, "Member 'APRJ_GrenadeLauncher_C::IsHyper' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, HitWorldLocation) == 0x000424, "Member 'APRJ_GrenadeLauncher_C::HitWorldLocation' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, HitBoneName) == 0x000430, "Member 'APRJ_GrenadeLauncher_C::HitBoneName' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, HitActor) == 0x000438, "Member 'APRJ_GrenadeLauncher_C::HitActor' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, HitComponent) == 0x000440, "Member 'APRJ_GrenadeLauncher_C::HitComponent' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, HitPMat) == 0x000448, "Member 'APRJ_GrenadeLauncher_C::HitPMat' has a wrong offset!");
static_assert(offsetof(APRJ_GrenadeLauncher_C, HitNormal) == 0x000450, "Member 'APRJ_GrenadeLauncher_C::HitNormal' has a wrong offset!");

}

