#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WND_Trading_DailyDeal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WND_Trading_DailyDeal.WND_Trading_DailyDeal_C
// 0x00A0 (0x0300 - 0x0260)
class UWND_Trading_DailyDeal_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_ButtonCutCorner_C*               B_Trade;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBlurBackground_C*                      BlurBackground;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DailyDealHeadline_BG;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 I_PosterOutline;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Refresh;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_Trading_DailyDeal_C*               ITM_DailyDeal2;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MineralTraderHeadline_Outline;                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_DealHolder;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_SoldOut;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_;                                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_TimeToNext;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           V_DailyDeal;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FRandomStream                          RandomStream;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           Timer;                                             // 0x02D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDailyDeal                             CurrDeal;                                          // 0x02D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	FMulticastInlineDelegateProperty_             OnDealBought;                                      // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void FormatDailyDealResources(TMap<class UResourceData*, int32>* Resources);
	void No_D21FAC5A44FF696C3525F18876AC316A();
	void Yes_D21FAC5A44FF696C3525F18876AC316A();
	void PreConstruct(bool IsDesignTime);
	void Refresh();
	void UpdateTime();
	void BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(class UBasic_ButtonCutCorner_C* Button);
	void Construct();
	void OnResourceAmountChanged(class UResourceData* Resource, float CurrentAmount);
	void OnCreditsChanged(int32 Credits);
	void ExecuteUbergraph_WND_Trading_DailyDeal(int32 EntryPoint);
	void OnDealBought__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WND_Trading_DailyDeal_C">();
	}
	static class UWND_Trading_DailyDeal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWND_Trading_DailyDeal_C>();
	}
};
static_assert(alignof(UWND_Trading_DailyDeal_C) == 0x000008, "Wrong alignment on UWND_Trading_DailyDeal_C");
static_assert(sizeof(UWND_Trading_DailyDeal_C) == 0x000300, "Wrong size on UWND_Trading_DailyDeal_C");
static_assert(offsetof(UWND_Trading_DailyDeal_C, UberGraphFrame) == 0x000260, "Member 'UWND_Trading_DailyDeal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, B_Trade) == 0x000268, "Member 'UWND_Trading_DailyDeal_C::B_Trade' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, BlurBackground) == 0x000270, "Member 'UWND_Trading_DailyDeal_C::BlurBackground' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, DailyDealHeadline_BG) == 0x000278, "Member 'UWND_Trading_DailyDeal_C::DailyDealHeadline_BG' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, I_PosterOutline) == 0x000280, "Member 'UWND_Trading_DailyDeal_C::I_PosterOutline' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, Icon_Refresh) == 0x000288, "Member 'UWND_Trading_DailyDeal_C::Icon_Refresh' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, ITM_DailyDeal2) == 0x000290, "Member 'UWND_Trading_DailyDeal_C::ITM_DailyDeal2' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, MineralTraderHeadline_Outline) == 0x000298, "Member 'UWND_Trading_DailyDeal_C::MineralTraderHeadline_Outline' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, Overlay_DealHolder) == 0x0002A0, "Member 'UWND_Trading_DailyDeal_C::Overlay_DealHolder' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, Overlay_SoldOut) == 0x0002A8, "Member 'UWND_Trading_DailyDeal_C::Overlay_SoldOut' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, Text_) == 0x0002B0, "Member 'UWND_Trading_DailyDeal_C::Text_' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, Text_TimeToNext) == 0x0002B8, "Member 'UWND_Trading_DailyDeal_C::Text_TimeToNext' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, V_DailyDeal) == 0x0002C0, "Member 'UWND_Trading_DailyDeal_C::V_DailyDeal' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, RandomStream) == 0x0002C8, "Member 'UWND_Trading_DailyDeal_C::RandomStream' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, Timer) == 0x0002D0, "Member 'UWND_Trading_DailyDeal_C::Timer' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, CurrDeal) == 0x0002D8, "Member 'UWND_Trading_DailyDeal_C::CurrDeal' has a wrong offset!");
static_assert(offsetof(UWND_Trading_DailyDeal_C, OnDealBought) == 0x0002F0, "Member 'UWND_Trading_DailyDeal_C::OnDealBought' has a wrong offset!");

}

