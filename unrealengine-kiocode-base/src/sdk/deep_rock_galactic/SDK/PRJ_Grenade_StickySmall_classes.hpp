#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PRJ_Grenade_StickySmall

#include "Basic.hpp"

#include "StickeyAttach_structs.hpp"
#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PRJ_Grenade_StickySmall.PRJ_Grenade_StickySmall_C
// 0x00A8 (0x03E8 - 0x0340)
class APRJ_Grenade_StickySmall_C final : public AProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UExplosionComponent*                    Explosion;                                         // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       BoomDamage;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       SpikeDamage;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Trail;                                             // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Front;                                        // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionDelay;                                    // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534D[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             ExplosionSound;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ExplosionParticles;                                // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           BeepTimer;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 StickyTarget;                                      // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    StickyTargetHitComponent;                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              ExplosionMixModifier;                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionDuckingTime;                              // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionDuckMinDistance;                          // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionDuckMaxDistance;                          // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534E[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStickeyAttach                         StickyAttach;                                      // 0x03C0(0x0028)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void OnRep_Stick();
	void OnImpacted(bool PredictedImpact, const struct FHitResult& HitResult);
	void ReceiveBeginPlay();
	void Boom();
	void Beep();
	void ExecuteUbergraph_PRJ_Grenade_StickySmall(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PRJ_Grenade_StickySmall_C">();
	}
	static class APRJ_Grenade_StickySmall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APRJ_Grenade_StickySmall_C>();
	}
};
static_assert(alignof(APRJ_Grenade_StickySmall_C) == 0x000008, "Wrong alignment on APRJ_Grenade_StickySmall_C");
static_assert(sizeof(APRJ_Grenade_StickySmall_C) == 0x0003E8, "Wrong size on APRJ_Grenade_StickySmall_C");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, UberGraphFrame) == 0x000340, "Member 'APRJ_Grenade_StickySmall_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, Explosion) == 0x000348, "Member 'APRJ_Grenade_StickySmall_C::Explosion' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, BoomDamage) == 0x000350, "Member 'APRJ_Grenade_StickySmall_C::BoomDamage' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, SpikeDamage) == 0x000358, "Member 'APRJ_Grenade_StickySmall_C::SpikeDamage' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, RotatingMovement) == 0x000360, "Member 'APRJ_Grenade_StickySmall_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, Trail) == 0x000368, "Member 'APRJ_Grenade_StickySmall_C::Trail' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, Mesh_Front) == 0x000370, "Member 'APRJ_Grenade_StickySmall_C::Mesh_Front' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, ExplosionDelay) == 0x000378, "Member 'APRJ_Grenade_StickySmall_C::ExplosionDelay' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, ExplosionSound) == 0x000380, "Member 'APRJ_Grenade_StickySmall_C::ExplosionSound' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, ExplosionParticles) == 0x000388, "Member 'APRJ_Grenade_StickySmall_C::ExplosionParticles' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, BeepTimer) == 0x000390, "Member 'APRJ_Grenade_StickySmall_C::BeepTimer' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, StickyTarget) == 0x000398, "Member 'APRJ_Grenade_StickySmall_C::StickyTarget' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, StickyTargetHitComponent) == 0x0003A0, "Member 'APRJ_Grenade_StickySmall_C::StickyTargetHitComponent' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, ExplosionMixModifier) == 0x0003A8, "Member 'APRJ_Grenade_StickySmall_C::ExplosionMixModifier' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, ExplosionDuckingTime) == 0x0003B0, "Member 'APRJ_Grenade_StickySmall_C::ExplosionDuckingTime' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, ExplosionDuckMinDistance) == 0x0003B4, "Member 'APRJ_Grenade_StickySmall_C::ExplosionDuckMinDistance' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, ExplosionDuckMaxDistance) == 0x0003B8, "Member 'APRJ_Grenade_StickySmall_C::ExplosionDuckMaxDistance' has a wrong offset!");
static_assert(offsetof(APRJ_Grenade_StickySmall_C, StickyAttach) == 0x0003C0, "Member 'APRJ_Grenade_StickySmall_C::StickyAttach' has a wrong offset!");

}

