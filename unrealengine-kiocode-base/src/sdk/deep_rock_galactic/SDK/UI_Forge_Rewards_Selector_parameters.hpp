#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Forge_Rewards_Selector

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function UI_Forge_Rewards_Selector.UI_Forge_Rewards_Selector_C.EndPickReward
// 0x0008 (0x0008 - 0x0000)
struct UI_Forge_Rewards_Selector_C_EndPickReward final
{
public:
	class USchematic*                             InReward;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Forge_Rewards_Selector_C_EndPickReward) == 0x000008, "Wrong alignment on UI_Forge_Rewards_Selector_C_EndPickReward");
static_assert(sizeof(UI_Forge_Rewards_Selector_C_EndPickReward) == 0x000008, "Wrong size on UI_Forge_Rewards_Selector_C_EndPickReward");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_EndPickReward, InReward) == 0x000000, "Member 'UI_Forge_Rewards_Selector_C_EndPickReward::InReward' has a wrong offset!");

// Function UI_Forge_Rewards_Selector.UI_Forge_Rewards_Selector_C.PopRandomReward
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Forge_Rewards_Selector_C_PopRandomReward final
{
public:
	TMap<class UPlayerCharacterID*, class USchematic*> Rewards;                                           // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FRandomStream                          Random;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor)
	class UPlayerCharacterID*                     OutCharacter;                                      // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematic*                             OutReward;                                         // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematic*                             Reward;                                            // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     Character;                                         // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPlayerCharacterID*>             CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4393[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             CallFunc_Map_Find_Value;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4394[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerFromStream_ReturnValue;      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Forge_Rewards_Selector_C_PopRandomReward) == 0x000008, "Wrong alignment on UI_Forge_Rewards_Selector_C_PopRandomReward");
static_assert(sizeof(UI_Forge_Rewards_Selector_C_PopRandomReward) == 0x0000A8, "Wrong size on UI_Forge_Rewards_Selector_C_PopRandomReward");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, Rewards) == 0x000000, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::Rewards' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, Random) == 0x000050, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::Random' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, OutCharacter) == 0x000058, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::OutCharacter' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, OutReward) == 0x000060, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::OutReward' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, Reward) == 0x000068, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::Reward' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, Character) == 0x000070, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::Character' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, CallFunc_Map_Remove_ReturnValue) == 0x00008C, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, CallFunc_Map_Find_Value) == 0x000090, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, CallFunc_RandomIntegerFromStream_ReturnValue) == 0x00009C, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::CallFunc_RandomIntegerFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PopRandomReward, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'UI_Forge_Rewards_Selector_C_PopRandomReward::CallFunc_Array_Get_Item' has a wrong offset!");

// Function UI_Forge_Rewards_Selector.UI_Forge_Rewards_Selector_C.Begin Pick Reward
// 0x0130 (0x0130 - 0x0000)
struct UI_Forge_Rewards_Selector_C_Begin_Pick_Reward final
{
public:
	int32                                         InLevel;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSeed;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESchematicType                                RewardType;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4395[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          Random;                                            // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	uint8                                         Pad_4396[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             Reward;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     Character;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UPlayerCharacterID*, class USchematic*> AvailableRewards;                                  // 0x0028(0x0050)(Edit, BlueprintVisible)
	TArray<class UPlayerCharacterID*>             Characters;                                        // 0x0078(0x0010)(Edit, BlueprintVisible)
	TArray<class UPlayerCharacterID*>             K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4397[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             CallFunc_PickForgingMasteryDefaultReward_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESchematicType                                CallFunc_GetForgingMasteryRewardType_ReturnValue;  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4398[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_PopRandomReward_OutCharacter;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematic*                             CallFunc_PopRandomReward_OutReward;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetData_OutValidReward;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4399[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USchematic*>                     CallFunc_Map_Values_Values;                        // 0x00D8(0x0010)(ReferenceParm)
	class USchematic*                             CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439A[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_PopRandomReward_OutCharacter_1;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematic*                             CallFunc_PopRandomReward_OutReward_1;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetData_OutValidReward_1;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439B[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x010C(0x0008)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_439C[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             CallFunc_FindRandomSchematicForCharacter_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward) == 0x000008, "Wrong alignment on UI_Forge_Rewards_Selector_C_Begin_Pick_Reward");
static_assert(sizeof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward) == 0x000130, "Wrong size on UI_Forge_Rewards_Selector_C_Begin_Pick_Reward");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, InLevel) == 0x000000, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::InLevel' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, InSeed) == 0x000004, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::InSeed' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, RewardType) == 0x000008, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::RewardType' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, Random) == 0x00000C, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::Random' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, Reward) == 0x000018, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::Reward' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, Character) == 0x000020, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::Character' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, AvailableRewards) == 0x000028, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::AvailableRewards' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, Characters) == 0x000078, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::Characters' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, K2Node_MakeArray_Array) == 0x000088, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, Temp_int_Array_Index_Variable) == 0x000098, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_PickForgingMasteryDefaultReward_ReturnValue) == 0x0000A8, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_PickForgingMasteryDefaultReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_GetForgingMasteryRewardType_ReturnValue) == 0x0000B0, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_GetForgingMasteryRewardType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_PlayAnimation_ReturnValue) == 0x0000B8, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_PopRandomReward_OutCharacter) == 0x0000C0, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_PopRandomReward_OutCharacter' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_PopRandomReward_OutReward) == 0x0000C8, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_PopRandomReward_OutReward' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_SetData_OutValidReward) == 0x0000D0, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_SetData_OutValidReward' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_Map_Values_Values) == 0x0000D8, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_Map_Length_ReturnValue) == 0x0000F0, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, K2Node_SwitchInteger_CmpSuccess) == 0x0000F4, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_PopRandomReward_OutCharacter_1) == 0x0000F8, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_PopRandomReward_OutCharacter_1' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_PopRandomReward_OutReward_1) == 0x000100, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_PopRandomReward_OutReward_1' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_SetData_OutValidReward_1) == 0x000108, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_SetData_OutValidReward_1' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_MakeRandomStream_ReturnValue) == 0x00010C, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_FindRandomSchematicForCharacter_ReturnValue) == 0x000118, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_FindRandomSchematicForCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_Begin_Pick_Reward, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'UI_Forge_Rewards_Selector_C_Begin_Pick_Reward::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UI_Forge_Rewards_Selector.UI_Forge_Rewards_Selector_C.OnClicked
// 0x0008 (0x0008 - 0x0000)
struct UI_Forge_Rewards_Selector_C_OnClicked final
{
public:
	class USchematic*                             InSchematic;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Forge_Rewards_Selector_C_OnClicked) == 0x000008, "Wrong alignment on UI_Forge_Rewards_Selector_C_OnClicked");
static_assert(sizeof(UI_Forge_Rewards_Selector_C_OnClicked) == 0x000008, "Wrong size on UI_Forge_Rewards_Selector_C_OnClicked");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_OnClicked, InSchematic) == 0x000000, "Member 'UI_Forge_Rewards_Selector_C_OnClicked::InSchematic' has a wrong offset!");

// Function UI_Forge_Rewards_Selector.UI_Forge_Rewards_Selector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Forge_Rewards_Selector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Forge_Rewards_Selector_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Forge_Rewards_Selector_C_PreConstruct");
static_assert(sizeof(UI_Forge_Rewards_Selector_C_PreConstruct) == 0x000001, "Wrong size on UI_Forge_Rewards_Selector_C_PreConstruct");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Forge_Rewards_Selector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Forge_Rewards_Selector.UI_Forge_Rewards_Selector_C.ExecuteUbergraph_UI_Forge_Rewards_Selector
// 0x0070 (0x0070 - 0x0000)
struct UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USchematic* InSchematic)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_439D[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematic*                             K2Node_CustomEvent_InSchematic;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439E[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439F[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector) == 0x000008, "Wrong alignment on UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector");
static_assert(sizeof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector) == 0x000070, "Wrong size on UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, EntryPoint) == 0x000000, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, K2Node_CustomEvent_InSchematic) == 0x000048, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::K2Node_CustomEvent_InSchematic' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, CallFunc_IsHovered_ReturnValue) == 0x000050, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, CallFunc_IsHovered_ReturnValue_1) == 0x000051, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000053, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, CallFunc_BooleanOR_ReturnValue_1) == 0x000054, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, K2Node_Event_IsDesignTime) == 0x000061, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000068, "Member 'UI_Forge_Rewards_Selector_C_ExecuteUbergraph_UI_Forge_Rewards_Selector::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function UI_Forge_Rewards_Selector.UI_Forge_Rewards_Selector_C.OnRewardSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_Forge_Rewards_Selector_C_OnRewardSelected__DelegateSignature final
{
public:
	class USchematic*                             InReward;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Forge_Rewards_Selector_C_OnRewardSelected__DelegateSignature) == 0x000008, "Wrong alignment on UI_Forge_Rewards_Selector_C_OnRewardSelected__DelegateSignature");
static_assert(sizeof(UI_Forge_Rewards_Selector_C_OnRewardSelected__DelegateSignature) == 0x000008, "Wrong size on UI_Forge_Rewards_Selector_C_OnRewardSelected__DelegateSignature");
static_assert(offsetof(UI_Forge_Rewards_Selector_C_OnRewardSelected__DelegateSignature, InReward) == 0x000000, "Member 'UI_Forge_Rewards_Selector_C_OnRewardSelected__DelegateSignature::InReward' has a wrong offset!");

}

