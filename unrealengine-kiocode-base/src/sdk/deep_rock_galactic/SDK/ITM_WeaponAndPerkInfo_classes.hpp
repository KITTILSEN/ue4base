#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_WeaponAndPerkInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_WeaponAndPerkInfo.ITM_WeaponAndPerkInfo_C
// 0x0068 (0x02C8 - 0x0260)
class UITM_WeaponAndPerkInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Enter;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBasic_Window_CutCorner_Gradient_C*     Basic_Window_CutCorner_Gradient;                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             GridPanel_LoadoutsOuter;                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Randomizer;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_PerkInfoBox_C*                     ITM_PerkInfoBox;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_WeaponInfo_C*                      ITM_WeaponInfo_Armor;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_WeaponInfo_C*                      ITM_WeaponInfo_ClassTool;                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_WeaponInfo_C*                      ITM_WeaponInfo_Grenade;                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_WeaponInfo_C*                      ITM_WeaponInfo_Mining;                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_WeaponInfo_C*                      ITM_WeaponInfo_Prim;                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_WeaponInfo_C*                      ITM_WeaponInfo_Secondary;                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_WeaponInfo_C*                      ITM_WeaponInfo_Traversal;                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ITM_WeaponAndPerkInfo(int32 EntryPoint);
	void EnterFinished();
	void PlayLeave();
	void PlayEnter();
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_WeaponAndPerkInfo_C">();
	}
	static class UITM_WeaponAndPerkInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_WeaponAndPerkInfo_C>();
	}
};
static_assert(alignof(UITM_WeaponAndPerkInfo_C) == 0x000008, "Wrong alignment on UITM_WeaponAndPerkInfo_C");
static_assert(sizeof(UITM_WeaponAndPerkInfo_C) == 0x0002C8, "Wrong size on UITM_WeaponAndPerkInfo_C");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, UberGraphFrame) == 0x000260, "Member 'UITM_WeaponAndPerkInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, Enter) == 0x000268, "Member 'UITM_WeaponAndPerkInfo_C::Enter' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, Basic_Window_CutCorner_Gradient) == 0x000270, "Member 'UITM_WeaponAndPerkInfo_C::Basic_Window_CutCorner_Gradient' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, GridPanel_LoadoutsOuter) == 0x000278, "Member 'UITM_WeaponAndPerkInfo_C::GridPanel_LoadoutsOuter' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, Image_Randomizer) == 0x000280, "Member 'UITM_WeaponAndPerkInfo_C::Image_Randomizer' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, ITM_PerkInfoBox) == 0x000288, "Member 'UITM_WeaponAndPerkInfo_C::ITM_PerkInfoBox' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, ITM_WeaponInfo_Armor) == 0x000290, "Member 'UITM_WeaponAndPerkInfo_C::ITM_WeaponInfo_Armor' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, ITM_WeaponInfo_ClassTool) == 0x000298, "Member 'UITM_WeaponAndPerkInfo_C::ITM_WeaponInfo_ClassTool' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, ITM_WeaponInfo_Grenade) == 0x0002A0, "Member 'UITM_WeaponAndPerkInfo_C::ITM_WeaponInfo_Grenade' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, ITM_WeaponInfo_Mining) == 0x0002A8, "Member 'UITM_WeaponAndPerkInfo_C::ITM_WeaponInfo_Mining' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, ITM_WeaponInfo_Prim) == 0x0002B0, "Member 'UITM_WeaponAndPerkInfo_C::ITM_WeaponInfo_Prim' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, ITM_WeaponInfo_Secondary) == 0x0002B8, "Member 'UITM_WeaponAndPerkInfo_C::ITM_WeaponInfo_Secondary' has a wrong offset!");
static_assert(offsetof(UITM_WeaponAndPerkInfo_C, ITM_WeaponInfo_Traversal) == 0x0002C0, "Member 'UITM_WeaponAndPerkInfo_C::ITM_WeaponInfo_Traversal' has a wrong offset!");

}

