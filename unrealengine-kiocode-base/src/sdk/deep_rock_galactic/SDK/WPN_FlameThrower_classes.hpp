#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_FlameThrower

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_FlameThrower.WPN_FlameThrower_C
// 0x0078 (0x0AC0 - 0x0A48)
class AWPN_FlameThrower_C final : public AFlameThrowerItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A48(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   TP_Mag;                                            // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonStaticMeshComponent*        FP_Mag;                                            // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponImpactComponent*                 WeaponImpact;                                      // 0x0A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemR;                                   // 0x0A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemL;                                   // 0x0A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x0A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonPointLightComponent*        FirstPersonPointLight;                             // 0x0A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonParticleSystemComponent*    FirstPersonParticleSystemR;                        // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonParticleSystemComponent*    FirstPersonParticleSystemL;                        // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonStaticMeshComponent*        FirstPerson_Gauge;                                 // 0x0AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonWidgetComponent*            FirstPersonWidget;                                 // 0x0AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   MuzzleLight;                                       // 0x0AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x0AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WPN_FlameThrower(int32 EntryPoint);
	void OnChargeEnd();
	void OnChargeBegin();
	void CustomEvent1(const class UItemUpgrade* Event);
	void ReceiveBeginPlay();
	void BndEvt__WPN_FlameThrower_ProjectileLancher_K2Node_ComponentBoundEvent_0_WeaponFiredDelegate__DelegateSignature(const struct FVector& Location);
	void OnSkinChanged(class USkinEffect* Skin);
	void BndEvt__WeaponImpact_K2Node_ComponentBoundEvent_1_HightAccelerationSignature__DelegateSignature();
	void AddedToInventory(class APlayerCharacter* ItemOwner);
	void Recieve_UpdateMeshses(bool Param_IsFirstPerson);
	void Receive_ReloadEnd();
	void Receive_ReloadBegin();
	void RecieveUnequipped();
	void RecieveEquipped();
	void UserConstructionScript();
	void SetTorchTimeoutHack();

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;
	class UFirstPersonStaticMeshComponent* Receive_GetFPAnimationEventMesh() const;
	class UStaticMeshComponent* Receive_GetTPAnimationEventMesh() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_FlameThrower_C">();
	}
	static class AWPN_FlameThrower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_FlameThrower_C>();
	}
};
static_assert(alignof(AWPN_FlameThrower_C) == 0x000008, "Wrong alignment on AWPN_FlameThrower_C");
static_assert(sizeof(AWPN_FlameThrower_C) == 0x000AC0, "Wrong size on AWPN_FlameThrower_C");
static_assert(offsetof(AWPN_FlameThrower_C, UberGraphFrame) == 0x000A48, "Member 'AWPN_FlameThrower_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, TP_Mag) == 0x000A50, "Member 'AWPN_FlameThrower_C::TP_Mag' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, FP_Mag) == 0x000A58, "Member 'AWPN_FlameThrower_C::FP_Mag' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, WeaponImpact) == 0x000A60, "Member 'AWPN_FlameThrower_C::WeaponImpact' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, ParticleSystemR) == 0x000A68, "Member 'AWPN_FlameThrower_C::ParticleSystemR' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, ParticleSystemL) == 0x000A70, "Member 'AWPN_FlameThrower_C::ParticleSystemL' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, PointLight1) == 0x000A78, "Member 'AWPN_FlameThrower_C::PointLight1' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, PointLight) == 0x000A80, "Member 'AWPN_FlameThrower_C::PointLight' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, FirstPersonPointLight) == 0x000A88, "Member 'AWPN_FlameThrower_C::FirstPersonPointLight' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, FirstPersonParticleSystemR) == 0x000A90, "Member 'AWPN_FlameThrower_C::FirstPersonParticleSystemR' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, FirstPersonParticleSystemL) == 0x000A98, "Member 'AWPN_FlameThrower_C::FirstPersonParticleSystemL' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, FirstPerson_Gauge) == 0x000AA0, "Member 'AWPN_FlameThrower_C::FirstPerson_Gauge' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, FirstPersonWidget) == 0x000AA8, "Member 'AWPN_FlameThrower_C::FirstPersonWidget' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, MuzzleLight) == 0x000AB0, "Member 'AWPN_FlameThrower_C::MuzzleLight' has a wrong offset!");
static_assert(offsetof(AWPN_FlameThrower_C, CrosshairAggregator) == 0x000AB8, "Member 'AWPN_FlameThrower_C::CrosshairAggregator' has a wrong offset!");

}

