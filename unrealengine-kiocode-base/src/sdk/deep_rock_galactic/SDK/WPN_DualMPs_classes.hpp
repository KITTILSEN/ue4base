#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_DualMPs

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_DualMPs.WPN_DualMPs_C
// 0x0048 (0x0818 - 0x07D0)
class AWPN_DualMPs_C final : public ADualMachinePistols
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFirstPersonWidgetComponent*            FirstPersonWidgetLeft;                             // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonStaticMeshComponent*        FirstPersonStaticMesh1;                            // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonWidgetComponent*            FirstPersonWidget;                                 // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonStaticMeshComponent*        FirstPersonStaticMesh;                             // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitscanComponent*                      HitScan;                                           // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   MuzzleFlash;                                       // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_WPN_DualMPs(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_DualMPs_C">();
	}
	static class AWPN_DualMPs_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_DualMPs_C>();
	}
};
static_assert(alignof(AWPN_DualMPs_C) == 0x000008, "Wrong alignment on AWPN_DualMPs_C");
static_assert(sizeof(AWPN_DualMPs_C) == 0x000818, "Wrong size on AWPN_DualMPs_C");
static_assert(offsetof(AWPN_DualMPs_C, UberGraphFrame) == 0x0007D0, "Member 'AWPN_DualMPs_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_DualMPs_C, FirstPersonWidgetLeft) == 0x0007D8, "Member 'AWPN_DualMPs_C::FirstPersonWidgetLeft' has a wrong offset!");
static_assert(offsetof(AWPN_DualMPs_C, FirstPersonStaticMesh1) == 0x0007E0, "Member 'AWPN_DualMPs_C::FirstPersonStaticMesh1' has a wrong offset!");
static_assert(offsetof(AWPN_DualMPs_C, FirstPersonWidget) == 0x0007E8, "Member 'AWPN_DualMPs_C::FirstPersonWidget' has a wrong offset!");
static_assert(offsetof(AWPN_DualMPs_C, FirstPersonStaticMesh) == 0x0007F0, "Member 'AWPN_DualMPs_C::FirstPersonStaticMesh' has a wrong offset!");
static_assert(offsetof(AWPN_DualMPs_C, HitScan) == 0x0007F8, "Member 'AWPN_DualMPs_C::HitScan' has a wrong offset!");
static_assert(offsetof(AWPN_DualMPs_C, CrosshairAggregator) == 0x000800, "Member 'AWPN_DualMPs_C::CrosshairAggregator' has a wrong offset!");
static_assert(offsetof(AWPN_DualMPs_C, Damage) == 0x000808, "Member 'AWPN_DualMPs_C::Damage' has a wrong offset!");
static_assert(offsetof(AWPN_DualMPs_C, MuzzleFlash) == 0x000810, "Member 'AWPN_DualMPs_C::MuzzleFlash' has a wrong offset!");

}

