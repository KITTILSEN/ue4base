#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SentryGun_MoveMarker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SentryGun_MoveMarker.BP_SentryGun_MoveMarker_C
// 0x0028 (0x0248 - 0x0220)
class ABP_SentryGun_MoveMarker_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       DistanceWidget;                                    // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ShowDamageEffects(class UParticleSystem* Particles, const struct FVector& Location, const struct FRotator& Orientation);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_SentryGun_MoveMarker(int32 EntryPoint);

	bool GetIsTargetable() const;
	struct FVector GetTargetCenterMass() const;
	class UHealthComponentBase* GetTargetHealthComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SentryGun_MoveMarker_C">();
	}
	static class ABP_SentryGun_MoveMarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SentryGun_MoveMarker_C>();
	}
};
static_assert(alignof(ABP_SentryGun_MoveMarker_C) == 0x000008, "Wrong alignment on ABP_SentryGun_MoveMarker_C");
static_assert(sizeof(ABP_SentryGun_MoveMarker_C) == 0x000248, "Wrong size on ABP_SentryGun_MoveMarker_C");
static_assert(offsetof(ABP_SentryGun_MoveMarker_C, UberGraphFrame) == 0x000220, "Member 'ABP_SentryGun_MoveMarker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_MoveMarker_C, SkeletalMesh) == 0x000228, "Member 'ABP_SentryGun_MoveMarker_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_MoveMarker_C, DistanceWidget) == 0x000230, "Member 'ABP_SentryGun_MoveMarker_C::DistanceWidget' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_MoveMarker_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_SentryGun_MoveMarker_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_MoveMarker_C, Material) == 0x000240, "Member 'ABP_SentryGun_MoveMarker_C::Material' has a wrong offset!");

}

