#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ConsoleMemorialLine

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_ConsoleMemorialLine.UI_ConsoleMemorialLine_C.ExecuteUbergraph_UI_ConsoleMemorialLine
// 0x0020 (0x0020 - 0x0000)
struct UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_37CB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine) == 0x000008, "Wrong alignment on UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine");
static_assert(sizeof(UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine) == 0x000020, "Wrong size on UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine");
static_assert(offsetof(UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine, EntryPoint) == 0x000000, "Member 'UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'UI_ConsoleMemorialLine_C_ExecuteUbergraph_UI_ConsoleMemorialLine::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_ConsoleMemorialLine.UI_ConsoleMemorialLine_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct UI_ConsoleMemorialLine_C_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_ConsoleMemorialLine_C_SetText) == 0x000008, "Wrong alignment on UI_ConsoleMemorialLine_C_SetText");
static_assert(sizeof(UI_ConsoleMemorialLine_C_SetText) == 0x000018, "Wrong size on UI_ConsoleMemorialLine_C_SetText");
static_assert(offsetof(UI_ConsoleMemorialLine_C_SetText, Text) == 0x000000, "Member 'UI_ConsoleMemorialLine_C_SetText::Text' has a wrong offset!");

// Function UI_ConsoleMemorialLine.UI_ConsoleMemorialLine_C.SetSpeed
// 0x0004 (0x0004 - 0x0000)
struct UI_ConsoleMemorialLine_C_SetSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsoleMemorialLine_C_SetSpeed) == 0x000004, "Wrong alignment on UI_ConsoleMemorialLine_C_SetSpeed");
static_assert(sizeof(UI_ConsoleMemorialLine_C_SetSpeed) == 0x000004, "Wrong size on UI_ConsoleMemorialLine_C_SetSpeed");
static_assert(offsetof(UI_ConsoleMemorialLine_C_SetSpeed, Speed) == 0x000000, "Member 'UI_ConsoleMemorialLine_C_SetSpeed::Speed' has a wrong offset!");

// Function UI_ConsoleMemorialLine.UI_ConsoleMemorialLine_C.AddBoard
// 0x0008 (0x0008 - 0x0000)
struct UI_ConsoleMemorialLine_C_AddBoard final
{
public:
	class UConsoleScreenMemorialWall_C*           NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsoleMemorialLine_C_AddBoard) == 0x000008, "Wrong alignment on UI_ConsoleMemorialLine_C_AddBoard");
static_assert(sizeof(UI_ConsoleMemorialLine_C_AddBoard) == 0x000008, "Wrong size on UI_ConsoleMemorialLine_C_AddBoard");
static_assert(offsetof(UI_ConsoleMemorialLine_C_AddBoard, NewParam) == 0x000000, "Member 'UI_ConsoleMemorialLine_C_AddBoard::NewParam' has a wrong offset!");

}

