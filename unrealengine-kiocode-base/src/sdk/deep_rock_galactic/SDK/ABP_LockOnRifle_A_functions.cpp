#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_LockOnRifle_A

#include "Basic.hpp"

#include "ABP_LockOnRifle_A_classes.hpp"
#include "ABP_LockOnRifle_A_parameters.hpp"


namespace SDK
{

// Function ABP_LockOnRifle_A.ABP_LockOnRifle_A_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UABP_LockOnRifle_A_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_LockOnRifle_A_C", "AnimGraph");

	Params::ABP_LockOnRifle_A_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function ABP_LockOnRifle_A.ABP_LockOnRifle_A_C.SetHasLockedTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_HasLockedTarget                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_LockOnRifle_A_C::SetHasLockedTarget(bool Param_HasLockedTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_LockOnRifle_A_C", "SetHasLockedTarget");

	Params::ABP_LockOnRifle_A_C_SetHasLockedTarget Parms{};

	Parms.Param_HasLockedTarget = Param_HasLockedTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_LockOnRifle_A.ABP_LockOnRifle_A_C.SetRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         WorldRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_LockOnRifle_A_C::SetRotation(const struct FRotator& WorldRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_LockOnRifle_A_C", "SetRotation");

	Params::ABP_LockOnRifle_A_C_SetRotation Parms{};

	Parms.WorldRotation = std::move(WorldRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_LockOnRifle_A.ABP_LockOnRifle_A_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LockOnRifle_A_AnimGraphNode_ModifyBone_74E00D924E9336DBFBD36EA357389206
// (BlueprintEvent)

void UABP_LockOnRifle_A_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LockOnRifle_A_AnimGraphNode_ModifyBone_74E00D924E9336DBFBD36EA357389206()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_LockOnRifle_A_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LockOnRifle_A_AnimGraphNode_ModifyBone_74E00D924E9336DBFBD36EA357389206");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_LockOnRifle_A.ABP_LockOnRifle_A_C.BlueprintBeginPlay
// (Event, Public, BlueprintEvent)

void UABP_LockOnRifle_A_C::BlueprintBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_LockOnRifle_A_C", "BlueprintBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_LockOnRifle_A.ABP_LockOnRifle_A_C.OnRotationUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasTargetLockon                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         SocketRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_LockOnRifle_A_C::OnRotationUpdated(bool HasTargetLockon, const struct FRotator& SocketRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_LockOnRifle_A_C", "OnRotationUpdated");

	Params::ABP_LockOnRifle_A_C_OnRotationUpdated Parms{};

	Parms.HasTargetLockon = HasTargetLockon;
	Parms.SocketRotation = std::move(SocketRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_LockOnRifle_A.ABP_LockOnRifle_A_C.ExecuteUbergraph_ABP_LockOnRifle_A
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_LockOnRifle_A_C::ExecuteUbergraph_ABP_LockOnRifle_A(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_LockOnRifle_A_C", "ExecuteUbergraph_ABP_LockOnRifle_A");

	Params::ABP_LockOnRifle_A_C_ExecuteUbergraph_ABP_LockOnRifle_A Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

