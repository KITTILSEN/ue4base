#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lore_List_Element

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "E_MM_ButtonStyle_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function Lore_List_Element.Lore_List_Element_C.OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Lore_List_Element_C_OnClicked__DelegateSignature final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_List_Element_C_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on Lore_List_Element_C_OnClicked__DelegateSignature");
static_assert(sizeof(Lore_List_Element_C_OnClicked__DelegateSignature) == 0x000004, "Wrong size on Lore_List_Element_C_OnClicked__DelegateSignature");
static_assert(offsetof(Lore_List_Element_C_OnClicked__DelegateSignature, Param_Index) == 0x000000, "Member 'Lore_List_Element_C_OnClicked__DelegateSignature::Param_Index' has a wrong offset!");

// Function Lore_List_Element.Lore_List_Element_C.ExecuteUbergraph_Lore_List_Element
// 0x0190 (0x0190 - 0x0000)
struct Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Header;                         // 0x0040(0x0018)()
	class FText                                   K2Node_CustomEvent_SubText;                        // 0x0058(0x0018)()
	class UTexture2D*                             K2Node_CustomEvent_BackgroundImage;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_BackgroundColor;                // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_FrontImage;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_index;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE1[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjectiveMissionIcon                  K2Node_CustomEvent_MissionIcon;                    // 0x0098(0x0018)(NoDestructor)
	bool                                          K2Node_CustomEvent_ShowArrow;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MM_ButtonStyle                              K2Node_CustomEvent_IsEnabled;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE2[0x1];                                     // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSelected;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE3[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFSDInputSource InputSource)>  K2Node_CreateDelegate_OutputDelegate;              // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x00F0(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE4[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0110(0x0018)()
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE5[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE6[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE7[0x2];                                     // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE8[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDInputSource                               K2Node_CustomEvent_InputSource;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE9[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDInputSource                               CallFunc_GetInputSource_ReturnValue;               // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue;            // 0x0187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_5;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element) == 0x000008, "Wrong alignment on Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element");
static_assert(sizeof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element) == 0x000190, "Wrong size on Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, EntryPoint) == 0x000000, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_float_Variable) == 0x000008, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_float_Variable_1) == 0x00000C, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_byte_Variable) == 0x000010, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_object_Variable) == 0x000018, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_object_Variable_1) == 0x000020, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_object_Variable_2) == 0x000028, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_object_Variable_3) == 0x000030, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_object_Variable_4) == 0x000038, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_Header) == 0x000040, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_Header' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_SubText) == 0x000058, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_SubText' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_BackgroundImage) == 0x000070, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_BackgroundImage' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_BackgroundColor) == 0x000078, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_BackgroundColor' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_FrontImage) == 0x000088, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_FrontImage' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_index) == 0x000090, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_index' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_MissionIcon) == 0x000098, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_MissionIcon' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_ShowArrow) == 0x0000B0, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_ShowArrow' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_IsEnabled) == 0x0000B1, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B2, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_SwitchEnum_CmpSuccess) == 0x0000B3, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_IsValid_ReturnValue) == 0x0000B4, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_TextIsEmpty_ReturnValue) == 0x0000B5, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_bool_Variable) == 0x0000B6, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_MenuColors_OutputColor) == 0x0000B8, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_MenuColors_OutputColor_1) == 0x0000C8, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_IsSelected) == 0x0000D8, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_IsSelected' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_Select_Default) == 0x0000DC, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CreateDelegate_OutputDelegate) == 0x0000E0, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_text_Variable) == 0x0000F0, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_bool_Variable_1) == 0x000108, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_Select_Default_1) == 0x000110, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_IsHovered_ReturnValue) == 0x000128, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_MenuColors_OutputColor_2) == 0x00012C, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_byte_Variable_1) == 0x00013C, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_byte_Variable_2) == 0x00013D, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_bool_Variable_2) == 0x00013E, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_bool_Variable_3) == 0x00013F, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_Select_Default_2) == 0x000140, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_Select_Default_3) == 0x000144, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_byte_Variable_3) == 0x000154, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_byte_Variable_4) == 0x000155, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_PlayAnimation_ReturnValue) == 0x000158, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, Temp_bool_Variable_4) == 0x000160, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_Select_Default_4) == 0x000161, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000168, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_CustomEvent_InputSource) == 0x000170, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_CustomEvent_InputSource' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_PlayAnimation_ReturnValue_1) == 0x000178, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_GetRenderOpacity_ReturnValue) == 0x000180, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_GetInputSource_ReturnValue) == 0x000184, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_GetInputSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000185, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_SwitchEnum_CmpSuccess_1) == 0x000186, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, CallFunc_FSDTargetPlatform_ReturnValue) == 0x000187, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::CallFunc_FSDTargetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element, K2Node_Select_Default_5) == 0x000188, "Member 'Lore_List_Element_C_ExecuteUbergraph_Lore_List_Element::K2Node_Select_Default_5' has a wrong offset!");

// Function Lore_List_Element.Lore_List_Element_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Lore_List_Element_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_List_Element_C_PreConstruct) == 0x000001, "Wrong alignment on Lore_List_Element_C_PreConstruct");
static_assert(sizeof(Lore_List_Element_C_PreConstruct) == 0x000001, "Wrong size on Lore_List_Element_C_PreConstruct");
static_assert(offsetof(Lore_List_Element_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Lore_List_Element_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Lore_List_Element.Lore_List_Element_C.InputSourceChanged
// 0x0001 (0x0001 - 0x0000)
struct Lore_List_Element_C_InputSourceChanged final
{
public:
	EFSDInputSource                               InputSource;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_List_Element_C_InputSourceChanged) == 0x000001, "Wrong alignment on Lore_List_Element_C_InputSourceChanged");
static_assert(sizeof(Lore_List_Element_C_InputSourceChanged) == 0x000001, "Wrong size on Lore_List_Element_C_InputSourceChanged");
static_assert(offsetof(Lore_List_Element_C_InputSourceChanged, InputSource) == 0x000000, "Member 'Lore_List_Element_C_InputSourceChanged::InputSource' has a wrong offset!");

// Function Lore_List_Element.Lore_List_Element_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct Lore_List_Element_C_SetSelected final
{
public:
	bool                                          Param_IsSelected;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_List_Element_C_SetSelected) == 0x000001, "Wrong alignment on Lore_List_Element_C_SetSelected");
static_assert(sizeof(Lore_List_Element_C_SetSelected) == 0x000001, "Wrong size on Lore_List_Element_C_SetSelected");
static_assert(offsetof(Lore_List_Element_C_SetSelected, Param_IsSelected) == 0x000000, "Member 'Lore_List_Element_C_SetSelected::Param_IsSelected' has a wrong offset!");

// Function Lore_List_Element.Lore_List_Element_C.SetData
// 0x0078 (0x0078 - 0x0000)
struct Lore_List_Element_C_SetData final
{
public:
	class FText                                   Param_Header;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Param_SubText;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             BackgroundImage;                                   // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_BackgroundColor;                             // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Param_FrontImage;                                  // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BEA[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjectiveMissionIcon                  Param_MissionIcon;                                 // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Param_ShowArrow;                                   // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MM_ButtonStyle                              Param_IsEnabled;                                   // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_List_Element_C_SetData) == 0x000008, "Wrong alignment on Lore_List_Element_C_SetData");
static_assert(sizeof(Lore_List_Element_C_SetData) == 0x000078, "Wrong size on Lore_List_Element_C_SetData");
static_assert(offsetof(Lore_List_Element_C_SetData, Param_Header) == 0x000000, "Member 'Lore_List_Element_C_SetData::Param_Header' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_SetData, Param_SubText) == 0x000018, "Member 'Lore_List_Element_C_SetData::Param_SubText' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_SetData, BackgroundImage) == 0x000030, "Member 'Lore_List_Element_C_SetData::BackgroundImage' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_SetData, Param_BackgroundColor) == 0x000038, "Member 'Lore_List_Element_C_SetData::Param_BackgroundColor' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_SetData, Param_FrontImage) == 0x000048, "Member 'Lore_List_Element_C_SetData::Param_FrontImage' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_SetData, Param_Index) == 0x000050, "Member 'Lore_List_Element_C_SetData::Param_Index' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_SetData, Param_MissionIcon) == 0x000058, "Member 'Lore_List_Element_C_SetData::Param_MissionIcon' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_SetData, Param_ShowArrow) == 0x000070, "Member 'Lore_List_Element_C_SetData::Param_ShowArrow' has a wrong offset!");
static_assert(offsetof(Lore_List_Element_C_SetData, Param_IsEnabled) == 0x000071, "Member 'Lore_List_Element_C_SetData::Param_IsEnabled' has a wrong offset!");

}

