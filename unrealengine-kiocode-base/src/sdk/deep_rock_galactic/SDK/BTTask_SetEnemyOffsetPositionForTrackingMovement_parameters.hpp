#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_SetEnemyOffsetPositionForTrackingMovement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTTask_SetEnemyOffsetPositionForTrackingMovement.BTTask_SetEnemyOffsetPositionForTrackingMovement_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTTask_SetEnemyOffsetPositionForTrackingMovement.BTTask_SetEnemyOffsetPositionForTrackingMovement_C.ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement
// 0x0048 (0x0048 - 0x0000)
struct BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement) == 0x000008, "Wrong alignment on BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement");
static_assert(sizeof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement) == 0x000048, "Wrong size on BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement, EntryPoint) == 0x000000, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement, K2Node_Event_OwnerController) == 0x000010, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement, K2Node_Event_ControlledPawn) == 0x000018, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement, CallFunc_RandomUnitVector_ReturnValue) == 0x000030, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'BTTask_SetEnemyOffsetPositionForTrackingMovement_C_ExecuteUbergraph_BTTask_SetEnemyOffsetPositionForTrackingMovement::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

}

