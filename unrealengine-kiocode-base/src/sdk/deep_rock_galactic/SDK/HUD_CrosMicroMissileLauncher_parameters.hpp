#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_CrosMicroMissileLauncher

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function HUD_CrosMicroMissileLauncher.HUD_CrosMicroMissileLauncher_C.SetData
// 0x0008 (0x0008 - 0x0000)
struct HUD_CrosMicroMissileLauncher_C_SetData final
{
public:
	class AItem*                                  Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_CrosMicroMissileLauncher_C_SetData) == 0x000008, "Wrong alignment on HUD_CrosMicroMissileLauncher_C_SetData");
static_assert(sizeof(HUD_CrosMicroMissileLauncher_C_SetData) == 0x000008, "Wrong size on HUD_CrosMicroMissileLauncher_C_SetData");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_SetData, Item) == 0x000000, "Member 'HUD_CrosMicroMissileLauncher_C_SetData::Item' has a wrong offset!");

// Function HUD_CrosMicroMissileLauncher.HUD_CrosMicroMissileLauncher_C.OnSpreadChanged
// 0x000C (0x000C - 0x0000)
struct HUD_CrosMicroMissileLauncher_C_OnSpreadChanged final
{
public:
	float                                         HorizontalSpread;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VerticalSpread;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAtRest;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_CrosMicroMissileLauncher_C_OnSpreadChanged) == 0x000004, "Wrong alignment on HUD_CrosMicroMissileLauncher_C_OnSpreadChanged");
static_assert(sizeof(HUD_CrosMicroMissileLauncher_C_OnSpreadChanged) == 0x00000C, "Wrong size on HUD_CrosMicroMissileLauncher_C_OnSpreadChanged");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnSpreadChanged, HorizontalSpread) == 0x000000, "Member 'HUD_CrosMicroMissileLauncher_C_OnSpreadChanged::HorizontalSpread' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnSpreadChanged, VerticalSpread) == 0x000004, "Member 'HUD_CrosMicroMissileLauncher_C_OnSpreadChanged::VerticalSpread' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnSpreadChanged, IsAtRest) == 0x000008, "Member 'HUD_CrosMicroMissileLauncher_C_OnSpreadChanged::IsAtRest' has a wrong offset!");

// Function HUD_CrosMicroMissileLauncher.HUD_CrosMicroMissileLauncher_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_CrosMicroMissileLauncher_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_CrosMicroMissileLauncher_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_CrosMicroMissileLauncher_C_PreConstruct");
static_assert(sizeof(HUD_CrosMicroMissileLauncher_C_PreConstruct) == 0x000001, "Wrong size on HUD_CrosMicroMissileLauncher_C_PreConstruct");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_CrosMicroMissileLauncher_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_CrosMicroMissileLauncher.HUD_CrosMicroMissileLauncher_C.OnDamagedEnemy_Event
// 0x0020 (0x0020 - 0x0000)
struct HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event final
{
public:
	TScriptInterface<class IHealth>               EnemyHealth;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper)
	float                                         Damage;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageModifier;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthRemaining;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWeakPoint;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRadial;                                          // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event) == 0x000008, "Wrong alignment on HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event");
static_assert(sizeof(HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event) == 0x000020, "Wrong size on HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event, EnemyHealth) == 0x000000, "Member 'HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event::EnemyHealth' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event, Damage) == 0x000010, "Member 'HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event::Damage' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event, DamageModifier) == 0x000014, "Member 'HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event::DamageModifier' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event, HealthRemaining) == 0x000018, "Member 'HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event::HealthRemaining' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event, IsWeakPoint) == 0x00001C, "Member 'HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event::IsWeakPoint' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event, IsRadial) == 0x00001D, "Member 'HUD_CrosMicroMissileLauncher_C_OnDamagedEnemy_Event::IsRadial' has a wrong offset!");

// Function HUD_CrosMicroMissileLauncher.HUD_CrosMicroMissileLauncher_C.ToggleBuckShotCrosshair
// 0x0004 (0x0004 - 0x0000)
struct HUD_CrosMicroMissileLauncher_C_ToggleBuckShotCrosshair final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_CrosMicroMissileLauncher_C_ToggleBuckShotCrosshair) == 0x000004, "Wrong alignment on HUD_CrosMicroMissileLauncher_C_ToggleBuckShotCrosshair");
static_assert(sizeof(HUD_CrosMicroMissileLauncher_C_ToggleBuckShotCrosshair) == 0x000004, "Wrong size on HUD_CrosMicroMissileLauncher_C_ToggleBuckShotCrosshair");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ToggleBuckShotCrosshair, Spread) == 0x000000, "Member 'HUD_CrosMicroMissileLauncher_C_ToggleBuckShotCrosshair::Spread' has a wrong offset!");

// Function HUD_CrosMicroMissileLauncher.HUD_CrosMicroMissileLauncher_C.ExecuteUbergraph_HUD_CrosMicroMissileLauncher
// 0x0198 (0x0198 - 0x0000)
struct HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AItem*                                  K2Node_Event_item;                                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWPN_MicroMissileLauncher_C*            K2Node_DynamicCast_AsWPN_Micro_Missile_Launcher;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3572[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChargeCurrentFireCount_ReturnValue;    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3573[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_HorizontalSpread;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_VerticalSpread;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isAtRest;                       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3574[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3575[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3576[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IHealth>               K2Node_CustomEvent_EnemyHealth;                    // 0x0070(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DamageModifier;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_HealthRemaining;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsWeakpoint;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsRadial;                       // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3577[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TScriptInterface<class IHealth>& EnemyHealth, float Damage, float DamageModifier, float HealthRemaining, bool IsWeakPoint, bool IsRadial)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3578[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Spread;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3579[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357A[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_3;                         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher) == 0x000008, "Wrong alignment on HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher");
static_assert(sizeof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher) == 0x000198, "Wrong size on HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, EntryPoint) == 0x000000, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_Event_item) == 0x000030, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_Event_item' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_DynamicCast_AsWPN_Micro_Missile_Launcher) == 0x000038, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_DynamicCast_AsWPN_Micro_Missile_Launcher' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_GetChargeCurrentFireCount_ReturnValue) == 0x000044, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_GetChargeCurrentFireCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004C, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, Temp_int_Array_Index_Variable) == 0x000050, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_HorizontalSpread) == 0x000054, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_HorizontalSpread' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_VerticalSpread) == 0x000058, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_VerticalSpread' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_isAtRest) == 0x00005C, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_isAtRest' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_Event_IsDesignTime) == 0x00006C, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_EnemyHealth) == 0x000070, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_EnemyHealth' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_Damage) == 0x000080, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_DamageModifier) == 0x000084, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_DamageModifier' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_HealthRemaining) == 0x000088, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_HealthRemaining' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_IsWeakpoint) == 0x00008C, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_IsWeakpoint' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_IsRadial) == 0x00008D, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_IsRadial' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, Temp_int_Loop_Counter_Variable_1) == 0x000090, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CreateDelegate_OutputDelegate_2) == 0x000094, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x0000A8, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_DynamicCast_AsPlayer_Character) == 0x0000B0, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000BC, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, Temp_int_Array_Index_Variable_1) == 0x0000CC, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_MenuColors_OutputColor) == 0x0000D0, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_MakeStruct_LinearColor) == 0x0000E0, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, Temp_int_Loop_Counter_Variable_2) == 0x0000F0, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F4, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000F8, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000100, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000108, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000110, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_CustomEvent_Spread) == 0x000118, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_CustomEvent_Spread' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00011C, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000120, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x000124, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000128, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00012C, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_MakeVector2D_ReturnValue) == 0x000130, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_MakeVector2D_ReturnValue_1) == 0x000138, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_MakeVector2D_ReturnValue_2) == 0x000140, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_MakeVector2D_ReturnValue_3) == 0x000148, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, Temp_int_Array_Index_Variable_2) == 0x000150, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Array_Get_Item) == 0x000158, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, K2Node_MakeArray_Array) == 0x000160, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Array_Get_Item_2) == 0x000178, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Array_Get_Item_3) == 0x000188, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Array_Length_ReturnValue_2) == 0x000190, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher, CallFunc_Less_IntInt_ReturnValue_2) == 0x000194, "Member 'HUD_CrosMicroMissileLauncher_C_ExecuteUbergraph_HUD_CrosMicroMissileLauncher::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

}

