#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponDisplay_Coilgun_Charge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WeaponDisplay_Coilgun_Charge.WeaponDisplay_Coilgun_Charge_C.SetChargeValue
// 0x0008 (0x0008 - 0x0000)
struct WeaponDisplay_Coilgun_Charge_C_SetChargeValue final
{
public:
	float                                         ChargeValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overheated;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Ready;                                             // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FullCharge;                                        // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponDisplay_Coilgun_Charge_C_SetChargeValue) == 0x000004, "Wrong alignment on WeaponDisplay_Coilgun_Charge_C_SetChargeValue");
static_assert(sizeof(WeaponDisplay_Coilgun_Charge_C_SetChargeValue) == 0x000008, "Wrong size on WeaponDisplay_Coilgun_Charge_C_SetChargeValue");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_SetChargeValue, ChargeValue) == 0x000000, "Member 'WeaponDisplay_Coilgun_Charge_C_SetChargeValue::ChargeValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_SetChargeValue, Overheated) == 0x000004, "Member 'WeaponDisplay_Coilgun_Charge_C_SetChargeValue::Overheated' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_SetChargeValue, Ready) == 0x000005, "Member 'WeaponDisplay_Coilgun_Charge_C_SetChargeValue::Ready' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_SetChargeValue, FullCharge) == 0x000006, "Member 'WeaponDisplay_Coilgun_Charge_C_SetChargeValue::FullCharge' has a wrong offset!");

// Function WeaponDisplay_Coilgun_Charge.WeaponDisplay_Coilgun_Charge_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WeaponDisplay_Coilgun_Charge_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponDisplay_Coilgun_Charge_C_PreConstruct) == 0x000001, "Wrong alignment on WeaponDisplay_Coilgun_Charge_C_PreConstruct");
static_assert(sizeof(WeaponDisplay_Coilgun_Charge_C_PreConstruct) == 0x000001, "Wrong size on WeaponDisplay_Coilgun_Charge_C_PreConstruct");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WeaponDisplay_Coilgun_Charge_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WeaponDisplay_Coilgun_Charge.WeaponDisplay_Coilgun_Charge_C.Total Ammo left changed
// 0x0004 (0x0004 - 0x0000)
struct WeaponDisplay_Coilgun_Charge_C_Total_Ammo_left_changed final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_Coilgun_Charge_C_Total_Ammo_left_changed) == 0x000004, "Wrong alignment on WeaponDisplay_Coilgun_Charge_C_Total_Ammo_left_changed");
static_assert(sizeof(WeaponDisplay_Coilgun_Charge_C_Total_Ammo_left_changed) == 0x000004, "Wrong size on WeaponDisplay_Coilgun_Charge_C_Total_Ammo_left_changed");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_Total_Ammo_left_changed, Amount) == 0x000000, "Member 'WeaponDisplay_Coilgun_Charge_C_Total_Ammo_left_changed::Amount' has a wrong offset!");

// Function WeaponDisplay_Coilgun_Charge.WeaponDisplay_Coilgun_Charge_C.ExecuteUbergraph_WeaponDisplay_Coilgun_Charge
// 0x0118 (0x0118 - 0x0000)
struct WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ChargeValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_overHeated;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Ready;                          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_FullCharge;                     // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_amount;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0088(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventParticipant>     K2Node_DynamicCast_AsEvent_Participant;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x3];                                       // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge) == 0x000008, "Wrong alignment on WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge");
static_assert(sizeof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge) == 0x000118, "Wrong size on WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, EntryPoint) == 0x000000, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, Temp_bool_Variable) == 0x000004, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_FFloor_ReturnValue) == 0x00000C, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000011, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000012, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000013, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_GetEndTime_ReturnValue) == 0x000018, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00001C, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000028, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_CustomEvent_ChargeValue) == 0x000030, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_CustomEvent_ChargeValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_CustomEvent_overHeated) == 0x000034, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_CustomEvent_overHeated' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_CustomEvent_Ready) == 0x000035, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_CustomEvent_Ready' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_CustomEvent_FullCharge) == 0x000036, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_CustomEvent_FullCharge' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Round_ReturnValue) == 0x00003C, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_Event_IsDesignTime) == 0x000058, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_Select_Default) == 0x00005C, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, Temp_bool_Variable_1) == 0x00006C, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_Select_Default_1) == 0x000070, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_Event_amount) == 0x000080, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_Event_amount' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000088, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000A0, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0000A8, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0000B0, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000B8, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_PlayAnimation_ReturnValue) == 0x0000C0, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_DynamicCast_AsEvent_Participant) == 0x0000D0, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_DynamicCast_AsEvent_Participant' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, Temp_bool_Variable_2) == 0x0000E1, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_Select_Default_2) == 0x0000E4, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000F8, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, Temp_bool_Variable_3) == 0x000100, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge, K2Node_Select_Default_3) == 0x000104, "Member 'WeaponDisplay_Coilgun_Charge_C_ExecuteUbergraph_WeaponDisplay_Coilgun_Charge::K2Node_Select_Default_3' has a wrong offset!");

}

