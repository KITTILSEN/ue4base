#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_PendingMod

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_ModPendingStatus_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ITM_PendingMod.ITM_PendingMod_C
// 0x0070 (0x02D0 - 0x0260)
class UITM_PendingMod_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_separator;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                MainBorder;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ModdingProgressBar_C*               ModdingProgressBar;                                // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ModNameTextBox;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PendingLongText;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PendingShortText;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        StateSwitcher;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 ModName;                                           // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnActivationChanged;                               // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ENUM_ModPendingStatus                         PendingStatus;                                     // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void OnActivationChanged__DelegateSignature();
	void ExecuteUbergraph_ITM_PendingMod(int32 EntryPoint);
	void Destruct();
	void PreConstruct(bool IsDesignTime);
	void SetData(const class FString& InModName, ENUM_ModPendingStatus InPendingStatus);
	void SetColors();
	void OnDownloadExtractProgress(const class FString& Param_Name, const TArray<class FString>& ModsPendingDownload, bool Downloading, int32 Progress, int32 Total);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_PendingMod_C">();
	}
	static class UITM_PendingMod_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_PendingMod_C>();
	}
};
static_assert(alignof(UITM_PendingMod_C) == 0x000008, "Wrong alignment on UITM_PendingMod_C");
static_assert(sizeof(UITM_PendingMod_C) == 0x0002D0, "Wrong size on UITM_PendingMod_C");
static_assert(offsetof(UITM_PendingMod_C, UberGraphFrame) == 0x000260, "Member 'UITM_PendingMod_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, Background) == 0x000268, "Member 'UITM_PendingMod_C::Background' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, Image_separator) == 0x000270, "Member 'UITM_PendingMod_C::Image_separator' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, MainBorder) == 0x000278, "Member 'UITM_PendingMod_C::MainBorder' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, ModdingProgressBar) == 0x000280, "Member 'UITM_PendingMod_C::ModdingProgressBar' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, ModNameTextBox) == 0x000288, "Member 'UITM_PendingMod_C::ModNameTextBox' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, PendingLongText) == 0x000290, "Member 'UITM_PendingMod_C::PendingLongText' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, PendingShortText) == 0x000298, "Member 'UITM_PendingMod_C::PendingShortText' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, StateSwitcher) == 0x0002A0, "Member 'UITM_PendingMod_C::StateSwitcher' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, ModName) == 0x0002A8, "Member 'UITM_PendingMod_C::ModName' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, OnActivationChanged) == 0x0002B8, "Member 'UITM_PendingMod_C::OnActivationChanged' has a wrong offset!");
static_assert(offsetof(UITM_PendingMod_C, PendingStatus) == 0x0002C8, "Member 'UITM_PendingMod_C::PendingStatus' has a wrong offset!");

}

