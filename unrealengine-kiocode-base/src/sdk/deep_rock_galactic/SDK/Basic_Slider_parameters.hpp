#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_Slider

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Basic_Slider.Basic_Slider_C.OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Basic_Slider_C_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Slider_C_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on Basic_Slider_C_OnValueChanged__DelegateSignature");
static_assert(sizeof(Basic_Slider_C_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on Basic_Slider_C_OnValueChanged__DelegateSignature");
static_assert(offsetof(Basic_Slider_C_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Basic_Slider_C_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.OnPercentChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Basic_Slider_C_OnPercentChanged__DelegateSignature final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Slider_C_OnPercentChanged__DelegateSignature) == 0x000004, "Wrong alignment on Basic_Slider_C_OnPercentChanged__DelegateSignature");
static_assert(sizeof(Basic_Slider_C_OnPercentChanged__DelegateSignature) == 0x000004, "Wrong size on Basic_Slider_C_OnPercentChanged__DelegateSignature");
static_assert(offsetof(Basic_Slider_C_OnPercentChanged__DelegateSignature, Percent) == 0x000000, "Member 'Basic_Slider_C_OnPercentChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.ExecuteUbergraph_Basic_Slider
// 0x01D8 (0x01D8 - 0x0000)
struct Basic_Slider_C_ExecuteUbergraph_Basic_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9D[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Value_Value;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Percent_Percent;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0048(0x0018)()
	float                                         CallFunc_Get_Percent_Percent_1;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9E[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Get_Percent_Percent_2;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Value_Value_1;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9F[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x00F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Get_Value_Value_2;                        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0158(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0170(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0018)()
};
static_assert(alignof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider) == 0x000008, "Wrong alignment on Basic_Slider_C_ExecuteUbergraph_Basic_Slider");
static_assert(sizeof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider) == 0x0001D8, "Wrong size on Basic_Slider_C_ExecuteUbergraph_Basic_Slider");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, EntryPoint) == 0x000000, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, K2Node_ComponentBoundEvent_Value) == 0x000004, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_MenuColors_OutputColor) == 0x000008, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_MenuColors_OutputColor_1) == 0x000018, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, K2Node_Event_IsDesignTime) == 0x000028, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_MenuColors_OutputColor_2) == 0x00002C, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Get_Value_Value) == 0x00003C, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Get_Value_Value' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Get_Percent_Percent) == 0x000040, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Get_Percent_Percent' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Conv_FloatToText_ReturnValue) == 0x000048, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Get_Percent_Percent_1) == 0x000060, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Get_Percent_Percent_1' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Get_Percent_Percent_2) == 0x0000A8, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Get_Percent_Percent_2' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Get_Value_Value_1) == 0x0000AC, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Get_Value_Value_1' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_FFloor_ReturnValue) == 0x0000B0, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x0000F8, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Get_Value_Value_2) == 0x000150, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Get_Value_Value_2' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_MapRangeClamped_ReturnValue) == 0x000154, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000158, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, K2Node_MakeStruct_FormatArgumentData_3) == 0x000170, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, K2Node_MakeArray_Array) == 0x0001B0, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_ExecuteUbergraph_Basic_Slider, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'Basic_Slider_C_ExecuteUbergraph_Basic_Slider::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_Slider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_Slider_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_Slider_C_PreConstruct");
static_assert(sizeof(Basic_Slider_C_PreConstruct) == 0x000001, "Wrong size on Basic_Slider_C_PreConstruct");
static_assert(offsetof(Basic_Slider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_Slider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.BndEvt__Slider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Basic_Slider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Slider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on Basic_Slider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(Basic_Slider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on Basic_Slider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(Basic_Slider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'Basic_Slider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.Set Percent
// 0x0004 (0x0004 - 0x0000)
struct Basic_Slider_C_Set_Percent final
{
public:
	float                                         New_Percent;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Slider_C_Set_Percent) == 0x000004, "Wrong alignment on Basic_Slider_C_Set_Percent");
static_assert(sizeof(Basic_Slider_C_Set_Percent) == 0x000004, "Wrong size on Basic_Slider_C_Set_Percent");
static_assert(offsetof(Basic_Slider_C_Set_Percent, New_Percent) == 0x000000, "Member 'Basic_Slider_C_Set_Percent::New_Percent' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.Set Value
// 0x0008 (0x0008 - 0x0000)
struct Basic_Slider_C_Set_Value final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Slider_C_Set_Value) == 0x000004, "Wrong alignment on Basic_Slider_C_Set_Value");
static_assert(sizeof(Basic_Slider_C_Set_Value) == 0x000008, "Wrong size on Basic_Slider_C_Set_Value");
static_assert(offsetof(Basic_Slider_C_Set_Value, Value) == 0x000000, "Member 'Basic_Slider_C_Set_Value::Value' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_Set_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Basic_Slider_C_Set_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.Get Percent
// 0x0008 (0x0008 - 0x0000)
struct Basic_Slider_C_Get_Percent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Slider_C_Get_Percent) == 0x000004, "Wrong alignment on Basic_Slider_C_Get_Percent");
static_assert(sizeof(Basic_Slider_C_Get_Percent) == 0x000008, "Wrong size on Basic_Slider_C_Get_Percent");
static_assert(offsetof(Basic_Slider_C_Get_Percent, Percent) == 0x000000, "Member 'Basic_Slider_C_Get_Percent::Percent' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_Get_Percent, CallFunc_GetValue_ReturnValue) == 0x000004, "Member 'Basic_Slider_C_Get_Percent::CallFunc_GetValue_ReturnValue' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.Get Value
// 0x000C (0x000C - 0x0000)
struct Basic_Slider_C_Get_Value final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Percent_Percent;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Slider_C_Get_Value) == 0x000004, "Wrong alignment on Basic_Slider_C_Get_Value");
static_assert(sizeof(Basic_Slider_C_Get_Value) == 0x00000C, "Wrong size on Basic_Slider_C_Get_Value");
static_assert(offsetof(Basic_Slider_C_Get_Value, Value) == 0x000000, "Member 'Basic_Slider_C_Get_Value::Value' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_Get_Value, CallFunc_Get_Percent_Percent) == 0x000004, "Member 'Basic_Slider_C_Get_Value::CallFunc_Get_Percent_Percent' has a wrong offset!");
static_assert(offsetof(Basic_Slider_C_Get_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Basic_Slider_C_Get_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.Set Text
// 0x0018 (0x0018 - 0x0000)
struct Basic_Slider_C_Set_Text final
{
public:
	class FText                                   New_Text;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Basic_Slider_C_Set_Text) == 0x000008, "Wrong alignment on Basic_Slider_C_Set_Text");
static_assert(sizeof(Basic_Slider_C_Set_Text) == 0x000018, "Wrong size on Basic_Slider_C_Set_Text");
static_assert(offsetof(Basic_Slider_C_Set_Text, New_Text) == 0x000000, "Member 'Basic_Slider_C_Set_Text::New_Text' has a wrong offset!");

// Function Basic_Slider.Basic_Slider_C.SetMinTextWidth
// 0x0004 (0x0004 - 0x0000)
struct Basic_Slider_C_SetMinTextWidth final
{
public:
	float                                         InMinDesiredWidth;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Slider_C_SetMinTextWidth) == 0x000004, "Wrong alignment on Basic_Slider_C_SetMinTextWidth");
static_assert(sizeof(Basic_Slider_C_SetMinTextWidth) == 0x000004, "Wrong size on Basic_Slider_C_SetMinTextWidth");
static_assert(offsetof(Basic_Slider_C_SetMinTextWidth, InMinDesiredWidth) == 0x000000, "Member 'Basic_Slider_C_SetMinTextWidth::InMinDesiredWidth' has a wrong offset!");

}

