#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lore_Content_ProgressBar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Lore_Content_ProgressBar.Lore_Content_ProgressBar_C.ExecuteUbergraph_Lore_Content_ProgressBar
// 0x0088 (0x0088 - 0x0000)
struct Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Progress;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B2[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue_1;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar) == 0x000008, "Wrong alignment on Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar");
static_assert(sizeof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar) == 0x000088, "Wrong size on Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, EntryPoint) == 0x000000, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, K2Node_CustomEvent_Progress) == 0x000004, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::K2Node_CustomEvent_Progress' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, K2Node_Event_IsDesignTime) == 0x000008, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, K2Node_Event_MyGeometry) == 0x000030, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, K2Node_Event_InDeltaTime) == 0x000068, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x00006C, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_GetRealTimeSeconds_ReturnValue_1) == 0x000070, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_GetRealTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000074, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000078, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_FClamp_ReturnValue) == 0x00007C, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar, CallFunc_Lerp_ReturnValue) == 0x000080, "Member 'Lore_Content_ProgressBar_C_ExecuteUbergraph_Lore_Content_ProgressBar::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Lore_Content_ProgressBar.Lore_Content_ProgressBar_C.Tick
// 0x003C (0x003C - 0x0000)
struct Lore_Content_ProgressBar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_Content_ProgressBar_C_Tick) == 0x000004, "Wrong alignment on Lore_Content_ProgressBar_C_Tick");
static_assert(sizeof(Lore_Content_ProgressBar_C_Tick) == 0x00003C, "Wrong size on Lore_Content_ProgressBar_C_Tick");
static_assert(offsetof(Lore_Content_ProgressBar_C_Tick, MyGeometry) == 0x000000, "Member 'Lore_Content_ProgressBar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Lore_Content_ProgressBar_C_Tick, InDeltaTime) == 0x000038, "Member 'Lore_Content_ProgressBar_C_Tick::InDeltaTime' has a wrong offset!");

// Function Lore_Content_ProgressBar.Lore_Content_ProgressBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Lore_Content_ProgressBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_Content_ProgressBar_C_PreConstruct) == 0x000001, "Wrong alignment on Lore_Content_ProgressBar_C_PreConstruct");
static_assert(sizeof(Lore_Content_ProgressBar_C_PreConstruct) == 0x000001, "Wrong size on Lore_Content_ProgressBar_C_PreConstruct");
static_assert(offsetof(Lore_Content_ProgressBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Lore_Content_ProgressBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Lore_Content_ProgressBar.Lore_Content_ProgressBar_C.SetProgress
// 0x0004 (0x0004 - 0x0000)
struct Lore_Content_ProgressBar_C_SetProgress final
{
public:
	int32                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lore_Content_ProgressBar_C_SetProgress) == 0x000004, "Wrong alignment on Lore_Content_ProgressBar_C_SetProgress");
static_assert(sizeof(Lore_Content_ProgressBar_C_SetProgress) == 0x000004, "Wrong size on Lore_Content_ProgressBar_C_SetProgress");
static_assert(offsetof(Lore_Content_ProgressBar_C_SetProgress, Progress) == 0x000000, "Member 'Lore_Content_ProgressBar_C_SetProgress::Progress' has a wrong offset!");

}

