#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HazPlus_Icon

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_HazPlus_Icon.UI_HazPlus_Icon_C.ExecuteUbergraph_UI_HazPlus_Icon
// 0x0008 (0x0008 - 0x0000)
struct UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon) == 0x000004, "Wrong alignment on UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon");
static_assert(sizeof(UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon) == 0x000008, "Wrong size on UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon");
static_assert(offsetof(UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon, EntryPoint) == 0x000000, "Member 'UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_HazPlus_Icon_C_ExecuteUbergraph_UI_HazPlus_Icon::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_HazPlus_Icon.UI_HazPlus_Icon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HazPlus_Icon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HazPlus_Icon_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HazPlus_Icon_C_PreConstruct");
static_assert(sizeof(UI_HazPlus_Icon_C_PreConstruct) == 0x000001, "Wrong size on UI_HazPlus_Icon_C_PreConstruct");
static_assert(offsetof(UI_HazPlus_Icon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HazPlus_Icon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HazPlus_Icon.UI_HazPlus_Icon_C.SetMutator
// 0x0018 (0x0018 - 0x0000)
struct UI_HazPlus_Icon_C_SetMutator final
{
public:
	struct FDifficultyMutatorItem                 InMutator;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HazPlus_Icon_C_SetMutator) == 0x000008, "Wrong alignment on UI_HazPlus_Icon_C_SetMutator");
static_assert(sizeof(UI_HazPlus_Icon_C_SetMutator) == 0x000018, "Wrong size on UI_HazPlus_Icon_C_SetMutator");
static_assert(offsetof(UI_HazPlus_Icon_C_SetMutator, InMutator) == 0x000000, "Member 'UI_HazPlus_Icon_C_SetMutator::InMutator' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetMutator, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UI_HazPlus_Icon_C_SetMutator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetMutator, CallFunc_SelectVisibility_IsVisible) == 0x000011, "Member 'UI_HazPlus_Icon_C_SetMutator::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetMutator, CallFunc_SelectVisibility_VisibilityChanged) == 0x000012, "Member 'UI_HazPlus_Icon_C_SetMutator::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetMutator, CallFunc_SelectVisibility_New_Visibility) == 0x000013, "Member 'UI_HazPlus_Icon_C_SetMutator::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function UI_HazPlus_Icon.UI_HazPlus_Icon_C.SetCount
// 0x0048 (0x0048 - 0x0000)
struct UI_HazPlus_Icon_C_SetCount final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_410F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_IntToRomanNumeral_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	struct FDifficultyMutatorItem                 K2Node_MakeStruct_DifficultyMutatorItem;           // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HazPlus_Icon_C_SetCount) == 0x000008, "Wrong alignment on UI_HazPlus_Icon_C_SetCount");
static_assert(sizeof(UI_HazPlus_Icon_C_SetCount) == 0x000048, "Wrong size on UI_HazPlus_Icon_C_SetCount");
static_assert(offsetof(UI_HazPlus_Icon_C_SetCount, InCount) == 0x000000, "Member 'UI_HazPlus_Icon_C_SetCount::InCount' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'UI_HazPlus_Icon_C_SetCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetCount, CallFunc_IntToRomanNumeral_ReturnValue) == 0x000008, "Member 'UI_HazPlus_Icon_C_SetCount::CallFunc_IntToRomanNumeral_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetCount, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'UI_HazPlus_Icon_C_SetCount::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetCount, K2Node_MakeStruct_DifficultyMutatorItem) == 0x000030, "Member 'UI_HazPlus_Icon_C_SetCount::K2Node_MakeStruct_DifficultyMutatorItem' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetCount, CallFunc_SelectVisibility_IsVisible) == 0x000040, "Member 'UI_HazPlus_Icon_C_SetCount::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetCount, CallFunc_SelectVisibility_VisibilityChanged) == 0x000041, "Member 'UI_HazPlus_Icon_C_SetCount::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetCount, CallFunc_SelectVisibility_New_Visibility) == 0x000042, "Member 'UI_HazPlus_Icon_C_SetCount::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function UI_HazPlus_Icon.UI_HazPlus_Icon_C.SetSize
// 0x003C (0x003C - 0x0000)
struct UI_HazPlus_Icon_C_SetSize final
{
public:
	int32                                         InIconSize;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InFontSize;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InTextOffset;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSizeBoxSettings                       K2Node_MakeStruct_SizeBoxSettings;                 // 0x001C(0x0020)(NoDestructor)
};
static_assert(alignof(UI_HazPlus_Icon_C_SetSize) == 0x000004, "Wrong alignment on UI_HazPlus_Icon_C_SetSize");
static_assert(sizeof(UI_HazPlus_Icon_C_SetSize) == 0x00003C, "Wrong size on UI_HazPlus_Icon_C_SetSize");
static_assert(offsetof(UI_HazPlus_Icon_C_SetSize, InIconSize) == 0x000000, "Member 'UI_HazPlus_Icon_C_SetSize::InIconSize' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetSize, InFontSize) == 0x000004, "Member 'UI_HazPlus_Icon_C_SetSize::InFontSize' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetSize, InTextOffset) == 0x000008, "Member 'UI_HazPlus_Icon_C_SetSize::InTextOffset' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetSize, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'UI_HazPlus_Icon_C_SetSize::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetSize, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'UI_HazPlus_Icon_C_SetSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetSize, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000018, "Member 'UI_HazPlus_Icon_C_SetSize::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_SetSize, K2Node_MakeStruct_SizeBoxSettings) == 0x00001C, "Member 'UI_HazPlus_Icon_C_SetSize::K2Node_MakeStruct_SizeBoxSettings' has a wrong offset!");

// Function UI_HazPlus_Icon.UI_HazPlus_Icon_C.IsMutatorType
// 0x0018 (0x0018 - 0x0000)
struct UI_HazPlus_Icon_C_IsMutatorType final
{
public:
	struct FDifficultyMutatorItem                 InMutator;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HazPlus_Icon_C_IsMutatorType) == 0x000008, "Wrong alignment on UI_HazPlus_Icon_C_IsMutatorType");
static_assert(sizeof(UI_HazPlus_Icon_C_IsMutatorType) == 0x000018, "Wrong size on UI_HazPlus_Icon_C_IsMutatorType");
static_assert(offsetof(UI_HazPlus_Icon_C_IsMutatorType, InMutator) == 0x000000, "Member 'UI_HazPlus_Icon_C_IsMutatorType::InMutator' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_IsMutatorType, ReturnValue) == 0x000010, "Member 'UI_HazPlus_Icon_C_IsMutatorType::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_IsMutatorType, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'UI_HazPlus_Icon_C_IsMutatorType::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UI_HazPlus_Icon.UI_HazPlus_Icon_C.Set Icon Active
// 0x0014 (0x0014 - 0x0000)
struct UI_HazPlus_Icon_C_Set_Icon_Active final
{
public:
	bool                                          InIconActive;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4110[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectMenuColor_OutputColor;              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HazPlus_Icon_C_Set_Icon_Active) == 0x000004, "Wrong alignment on UI_HazPlus_Icon_C_Set_Icon_Active");
static_assert(sizeof(UI_HazPlus_Icon_C_Set_Icon_Active) == 0x000014, "Wrong size on UI_HazPlus_Icon_C_Set_Icon_Active");
static_assert(offsetof(UI_HazPlus_Icon_C_Set_Icon_Active, InIconActive) == 0x000000, "Member 'UI_HazPlus_Icon_C_Set_Icon_Active::InIconActive' has a wrong offset!");
static_assert(offsetof(UI_HazPlus_Icon_C_Set_Icon_Active, CallFunc_SelectMenuColor_OutputColor) == 0x000004, "Member 'UI_HazPlus_Icon_C_Set_Icon_Active::CallFunc_SelectMenuColor_OutputColor' has a wrong offset!");

// Function UI_HazPlus_Icon.UI_HazPlus_Icon_C.GetMutator
// 0x0010 (0x0010 - 0x0000)
struct UI_HazPlus_Icon_C_GetMutator final
{
public:
	struct FDifficultyMutatorItem                 OutMutator;                                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(UI_HazPlus_Icon_C_GetMutator) == 0x000008, "Wrong alignment on UI_HazPlus_Icon_C_GetMutator");
static_assert(sizeof(UI_HazPlus_Icon_C_GetMutator) == 0x000010, "Wrong size on UI_HazPlus_Icon_C_GetMutator");
static_assert(offsetof(UI_HazPlus_Icon_C_GetMutator, OutMutator) == 0x000000, "Member 'UI_HazPlus_Icon_C_GetMutator::OutMutator' has a wrong offset!");

}

