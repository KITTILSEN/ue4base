#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Elevator2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Elevator2.Elevator2_C
// 0x0068 (0x0288 - 0x0220)
class AElevator2_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMotionAudioController*                 MotionAudioController;                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Engine_noise_Cue;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Collider_Floor;                                    // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Elevator;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ElevatorScale;                                     // 0x0260(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElevatorHeight;                                    // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LiftTime;                                          // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTime;                                          // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timer;                                             // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GoingUp;                                           // 0x027C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_3DC2[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElevatorSpeed;                                     // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Elevator2(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void OnRep_GoingUp();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Elevator2_C">();
	}
	static class AElevator2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElevator2_C>();
	}
};
static_assert(alignof(AElevator2_C) == 0x000008, "Wrong alignment on AElevator2_C");
static_assert(sizeof(AElevator2_C) == 0x000288, "Wrong size on AElevator2_C");
static_assert(offsetof(AElevator2_C, UberGraphFrame) == 0x000220, "Member 'AElevator2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AElevator2_C, PointLight) == 0x000228, "Member 'AElevator2_C::PointLight' has a wrong offset!");
static_assert(offsetof(AElevator2_C, StaticMesh) == 0x000230, "Member 'AElevator2_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AElevator2_C, MotionAudioController) == 0x000238, "Member 'AElevator2_C::MotionAudioController' has a wrong offset!");
static_assert(offsetof(AElevator2_C, Engine_noise_Cue) == 0x000240, "Member 'AElevator2_C::Engine_noise_Cue' has a wrong offset!");
static_assert(offsetof(AElevator2_C, Collider_Floor) == 0x000248, "Member 'AElevator2_C::Collider_Floor' has a wrong offset!");
static_assert(offsetof(AElevator2_C, Mesh_Elevator) == 0x000250, "Member 'AElevator2_C::Mesh_Elevator' has a wrong offset!");
static_assert(offsetof(AElevator2_C, DefaultSceneRoot) == 0x000258, "Member 'AElevator2_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AElevator2_C, ElevatorScale) == 0x000260, "Member 'AElevator2_C::ElevatorScale' has a wrong offset!");
static_assert(offsetof(AElevator2_C, ElevatorHeight) == 0x00026C, "Member 'AElevator2_C::ElevatorHeight' has a wrong offset!");
static_assert(offsetof(AElevator2_C, LiftTime) == 0x000270, "Member 'AElevator2_C::LiftTime' has a wrong offset!");
static_assert(offsetof(AElevator2_C, WaitTime) == 0x000274, "Member 'AElevator2_C::WaitTime' has a wrong offset!");
static_assert(offsetof(AElevator2_C, Timer) == 0x000278, "Member 'AElevator2_C::Timer' has a wrong offset!");
static_assert(offsetof(AElevator2_C, GoingUp) == 0x00027C, "Member 'AElevator2_C::GoingUp' has a wrong offset!");
static_assert(offsetof(AElevator2_C, DeltaTime) == 0x000280, "Member 'AElevator2_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(AElevator2_C, ElevatorSpeed) == 0x000284, "Member 'AElevator2_C::ElevatorSpeed' has a wrong offset!");

}

