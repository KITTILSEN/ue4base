#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoopsScore_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HoopsScore_Widget.HoopsScore_Widget_C
// 0x0018 (0x0278 - 0x0260)
class UHoopsScore_Widget_C final : public UHoopScoreWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UConsoleScreen_Empty_C*                 ConsoleScreen_Empty;                               // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ScoreText;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void SetScore(int32 Score);
	void ExecuteUbergraph_HoopsScore_Widget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HoopsScore_Widget_C">();
	}
	static class UHoopsScore_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoopsScore_Widget_C>();
	}
};
static_assert(alignof(UHoopsScore_Widget_C) == 0x000008, "Wrong alignment on UHoopsScore_Widget_C");
static_assert(sizeof(UHoopsScore_Widget_C) == 0x000278, "Wrong size on UHoopsScore_Widget_C");
static_assert(offsetof(UHoopsScore_Widget_C, UberGraphFrame) == 0x000260, "Member 'UHoopsScore_Widget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHoopsScore_Widget_C, ConsoleScreen_Empty) == 0x000268, "Member 'UHoopsScore_Widget_C::ConsoleScreen_Empty' has a wrong offset!");
static_assert(offsetof(UHoopsScore_Widget_C, ScoreText) == 0x000270, "Member 'UHoopsScore_Widget_C::ScoreText' has a wrong offset!");

}

