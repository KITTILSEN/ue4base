#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ENE_Shredder_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ENE_Shredder_Base.ENE_Shredder_Base_C
// 0x0068 (0x0430 - 0x03C8)
class AENE_Shredder_Base_C : public AShredder
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FacilityShredderDeath2nd_Cue;                      // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FacilityShredderDeath1st_Cue;                      // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      SpawnParticles;                                    // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TMP_Shredder_Trail;                              // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPawnStatsComponent*                    PawnStats;                                         // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Trail;                                          // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMeleeAttackComponent*                  MeleeAttack;                                       // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPawnAlertComponent*                    PawnAlert;                                         // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        IdleSound;                                         // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOutlineComponent*                      Outline;                                           // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPawnSensingComponent*                  PawnSensing;                                       // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__HealthComponent_K2Node_ComponentBoundEvent_0_DeathSig__DelegateSignature(class UHealthComponentBase* Param_HealthComponent);
	void OnFrozen(class AActor* Source);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_ENE_Shredder_Base(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ENE_Shredder_Base_C">();
	}
	static class AENE_Shredder_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AENE_Shredder_Base_C>();
	}
};
static_assert(alignof(AENE_Shredder_Base_C) == 0x000008, "Wrong alignment on AENE_Shredder_Base_C");
static_assert(sizeof(AENE_Shredder_Base_C) == 0x000430, "Wrong size on AENE_Shredder_Base_C");
static_assert(offsetof(AENE_Shredder_Base_C, UberGraphFrame) == 0x0003C8, "Member 'AENE_Shredder_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, FacilityShredderDeath2nd_Cue) == 0x0003D0, "Member 'AENE_Shredder_Base_C::FacilityShredderDeath2nd_Cue' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, FacilityShredderDeath1st_Cue) == 0x0003D8, "Member 'AENE_Shredder_Base_C::FacilityShredderDeath1st_Cue' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, SpawnParticles) == 0x0003E0, "Member 'AENE_Shredder_Base_C::SpawnParticles' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, P_TMP_Shredder_Trail) == 0x0003E8, "Member 'AENE_Shredder_Base_C::P_TMP_Shredder_Trail' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, PawnStats) == 0x0003F0, "Member 'AENE_Shredder_Base_C::PawnStats' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, NS_Trail) == 0x0003F8, "Member 'AENE_Shredder_Base_C::NS_Trail' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, MeleeAttack) == 0x000400, "Member 'AENE_Shredder_Base_C::MeleeAttack' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, PawnAlert) == 0x000408, "Member 'AENE_Shredder_Base_C::PawnAlert' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, IdleSound) == 0x000410, "Member 'AENE_Shredder_Base_C::IdleSound' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, Outline) == 0x000418, "Member 'AENE_Shredder_Base_C::Outline' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, PawnSensing) == 0x000420, "Member 'AENE_Shredder_Base_C::PawnSensing' has a wrong offset!");
static_assert(offsetof(AENE_Shredder_Base_C, Sphere) == 0x000428, "Member 'AENE_Shredder_Base_C::Sphere' has a wrong offset!");

}

