#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_News_Monitor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_News_Monitor.BP_News_Monitor_C
// 0x0020 (0x0240 - 0x0220)
class ABP_News_Monitor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_News_Monitor_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_News_Monitor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_News_Monitor_C">();
	}
	static class ABP_News_Monitor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_News_Monitor_C>();
	}
};
static_assert(alignof(ABP_News_Monitor_C) == 0x000008, "Wrong alignment on ABP_News_Monitor_C");
static_assert(sizeof(ABP_News_Monitor_C) == 0x000240, "Wrong size on ABP_News_Monitor_C");
static_assert(offsetof(ABP_News_Monitor_C, UberGraphFrame) == 0x000220, "Member 'ABP_News_Monitor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_News_Monitor_C, Mesh) == 0x000228, "Member 'ABP_News_Monitor_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_News_Monitor_C, Widget) == 0x000230, "Member 'ABP_News_Monitor_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_News_Monitor_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_News_Monitor_C::DefaultSceneRoot' has a wrong offset!");

}

