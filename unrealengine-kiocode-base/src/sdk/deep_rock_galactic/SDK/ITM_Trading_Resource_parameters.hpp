#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Trading_Resource

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ITM_Trading_Resource.ITM_Trading_Resource_C.UpdateChangeAmount
// 0x0040 (0x0040 - 0x0000)
struct ITM_Trading_Resource_C_UpdateChangeAmount final
{
public:
	int32                                         IncrementAmount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DidUpdate;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55FC[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55FD[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55FE[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Trading_Resource_C_UpdateChangeAmount) == 0x000004, "Wrong alignment on ITM_Trading_Resource_C_UpdateChangeAmount");
static_assert(sizeof(ITM_Trading_Resource_C_UpdateChangeAmount) == 0x000040, "Wrong size on ITM_Trading_Resource_C_UpdateChangeAmount");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, IncrementAmount) == 0x000000, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::IncrementAmount' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, DidUpdate) == 0x000004, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::DidUpdate' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00000C, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_FFloor_ReturnValue) == 0x000014, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001C, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Multiply_IntInt_ReturnValue) == 0x000020, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Clamp_ReturnValue_1) == 0x00002C, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Add_IntInt_ReturnValue_3) == 0x000034, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateChangeAmount, CallFunc_Add_IntInt_ReturnValue_4) == 0x00003C, "Member 'ITM_Trading_Resource_C_UpdateChangeAmount::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");

// Function ITM_Trading_Resource.ITM_Trading_Resource_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_Trading_Resource_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Trading_Resource_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_Trading_Resource_C_PreConstruct");
static_assert(sizeof(ITM_Trading_Resource_C_PreConstruct) == 0x000001, "Wrong size on ITM_Trading_Resource_C_PreConstruct");
static_assert(offsetof(ITM_Trading_Resource_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_Trading_Resource_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_Trading_Resource.ITM_Trading_Resource_C.SetData
// 0x0010 (0x0010 - 0x0000)
struct ITM_Trading_Resource_C_SetData final
{
public:
	class UResourceData*                          Param_Resource;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_Trading_BasketItem_C*              Param_TradeBasket;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Trading_Resource_C_SetData) == 0x000008, "Wrong alignment on ITM_Trading_Resource_C_SetData");
static_assert(sizeof(ITM_Trading_Resource_C_SetData) == 0x000010, "Wrong size on ITM_Trading_Resource_C_SetData");
static_assert(offsetof(ITM_Trading_Resource_C_SetData, Param_Resource) == 0x000000, "Member 'ITM_Trading_Resource_C_SetData::Param_Resource' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_SetData, Param_TradeBasket) == 0x000008, "Member 'ITM_Trading_Resource_C_SetData::Param_TradeBasket' has a wrong offset!");

// Function ITM_Trading_Resource.ITM_Trading_Resource_C.UpdateNumber
// 0x0008 (0x0008 - 0x0000)
struct ITM_Trading_Resource_C_UpdateNumber final
{
public:
	bool                                          Param_DoClearAnim;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_DoTradeAnim;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55FF[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitialDelay;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Trading_Resource_C_UpdateNumber) == 0x000004, "Wrong alignment on ITM_Trading_Resource_C_UpdateNumber");
static_assert(sizeof(ITM_Trading_Resource_C_UpdateNumber) == 0x000008, "Wrong size on ITM_Trading_Resource_C_UpdateNumber");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateNumber, Param_DoClearAnim) == 0x000000, "Member 'ITM_Trading_Resource_C_UpdateNumber::Param_DoClearAnim' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateNumber, Param_DoTradeAnim) == 0x000001, "Member 'ITM_Trading_Resource_C_UpdateNumber::Param_DoTradeAnim' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_UpdateNumber, InitialDelay) == 0x000004, "Member 'ITM_Trading_Resource_C_UpdateNumber::InitialDelay' has a wrong offset!");

// Function ITM_Trading_Resource.ITM_Trading_Resource_C.SetAvailableBalance
// 0x0004 (0x0004 - 0x0000)
struct ITM_Trading_Resource_C_SetAvailableBalance final
{
public:
	int32                                         Param_CreditsLeft;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Trading_Resource_C_SetAvailableBalance) == 0x000004, "Wrong alignment on ITM_Trading_Resource_C_SetAvailableBalance");
static_assert(sizeof(ITM_Trading_Resource_C_SetAvailableBalance) == 0x000004, "Wrong size on ITM_Trading_Resource_C_SetAvailableBalance");
static_assert(offsetof(ITM_Trading_Resource_C_SetAvailableBalance, Param_CreditsLeft) == 0x000000, "Member 'ITM_Trading_Resource_C_SetAvailableBalance::Param_CreditsLeft' has a wrong offset!");

// Function ITM_Trading_Resource.ITM_Trading_Resource_C.ResourceUpdated
// 0x0010 (0x0010 - 0x0000)
struct ITM_Trading_Resource_C_ResourceUpdated final
{
public:
	class UResourceData*                          Param_Resource;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentAmount;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Trading_Resource_C_ResourceUpdated) == 0x000008, "Wrong alignment on ITM_Trading_Resource_C_ResourceUpdated");
static_assert(sizeof(ITM_Trading_Resource_C_ResourceUpdated) == 0x000010, "Wrong size on ITM_Trading_Resource_C_ResourceUpdated");
static_assert(offsetof(ITM_Trading_Resource_C_ResourceUpdated, Param_Resource) == 0x000000, "Member 'ITM_Trading_Resource_C_ResourceUpdated::Param_Resource' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ResourceUpdated, CurrentAmount) == 0x000008, "Member 'ITM_Trading_Resource_C_ResourceUpdated::CurrentAmount' has a wrong offset!");

// Function ITM_Trading_Resource.ITM_Trading_Resource_C.ExecuteUbergraph_ITM_Trading_Resource
// 0x0210 (0x0210 - 0x0000)
struct ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5600[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
	class UResourceData*                          K2Node_CustomEvent_resource_1;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_Trading_BasketItem_C*              K2Node_CustomEvent_TradeBasket;                    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DoClearAnim;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_DoTradeAnim;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5601[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_InitialDelay;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0058(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5602[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
	int32                                         K2Node_CustomEvent_CreditsLeft;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5603[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOwnedAmount_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5604[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5605[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_3;                 // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00E0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x00F8(0x0018)()
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_4;                 // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_5;                 // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_6;                 // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UResourceData* Resource, float CurrentAmount)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x016C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetOwnedAmount_ReturnValue_1;             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5606[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateChangeAmount_DidUpdate;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateChangeAmount_DidUpdate_1;           // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5607[0x2];                                     // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateChangeAmount_DidUpdate_2;           // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5608[0x2];                                     // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5609[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_560A[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x01D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_560B[0x6];                                     // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_7;                 // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue_1;             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UResourceData*                          K2Node_CustomEvent_resource;                       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_currentAmount;                  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource) == 0x000008, "Wrong alignment on ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource");
static_assert(sizeof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource) == 0x000210, "Wrong size on ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, EntryPoint) == 0x000000, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_MenuColors_OutputColor) == 0x000008, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CustomEvent_resource_1) == 0x000040, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CustomEvent_resource_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CustomEvent_TradeBasket) == 0x000048, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CustomEvent_TradeBasket' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CustomEvent_DoClearAnim) == 0x000050, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CustomEvent_DoClearAnim' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CustomEvent_DoTradeAnim) == 0x000051, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CustomEvent_DoTradeAnim' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CustomEvent_InitialDelay) == 0x000054, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CustomEvent_InitialDelay' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_TextToUpper_ReturnValue) == 0x000058, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CustomEvent_CreditsLeft) == 0x000090, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CustomEvent_CreditsLeft' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_GetFSDSaveGame_ReturnValue) == 0x000098, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_GetOwnedAmount_ReturnValue) == 0x0000A0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_GetOwnedAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Round_ReturnValue) == 0x0000A8, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_MenuColors_OutputColor_1) == 0x0000B0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_MenuColors_OutputColor_2) == 0x0000C0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_MenuColors_OutputColor_3) == 0x0000D0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_MenuColors_OutputColor_3' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000E0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0000F8, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_MenuColors_OutputColor_4) == 0x000110, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_MenuColors_OutputColor_4' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_PlayAnimationForward_ReturnValue) == 0x000120, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000128, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CreateDelegate_OutputDelegate) == 0x000130, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000140, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000141, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_IsVisible_ReturnValue) == 0x000142, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Not_PreBool_ReturnValue) == 0x000143, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, Temp_int_Variable) == 0x000144, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_IsVisible_ReturnValue_1) == 0x000148, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_SelectVisibility_IsVisible) == 0x000149, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_SelectVisibility_VisibilityChanged) == 0x00014A, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_SelectVisibility_New_Visibility) == 0x00014B, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_MenuColors_OutputColor_5) == 0x00014C, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_MenuColors_OutputColor_5' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_MenuColors_OutputColor_6) == 0x00015C, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_MenuColors_OutputColor_6' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CreateDelegate_OutputDelegate_1) == 0x00016C, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_GetOwnedAmount_ReturnValue_1) == 0x00017C, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_GetOwnedAmount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_FFloor_ReturnValue) == 0x000180, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, Temp_object_Variable) == 0x000188, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Add_IntInt_ReturnValue_1) == 0x000190, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_UpdateChangeAmount_DidUpdate) == 0x000194, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_UpdateChangeAmount_DidUpdate' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_UpdateChangeAmount_DidUpdate_1) == 0x000195, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_UpdateChangeAmount_DidUpdate_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, Temp_object_Variable_1) == 0x000198, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_UpdateChangeAmount_DidUpdate_2) == 0x0001A0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_UpdateChangeAmount_DidUpdate_2' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0001A1, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001A4, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0001A8, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0001AC, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001B0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, Temp_bool_Variable) == 0x0001C0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001C8, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0001D0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001D8, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_BooleanOR_ReturnValue) == 0x0001D9, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_Select_Default) == 0x0001E0, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_MenuColors_OutputColor_7) == 0x0001E8, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_MenuColors_OutputColor_7' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_GetFSDSaveGame_ReturnValue_1) == 0x0001F8, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_GetFSDSaveGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CustomEvent_resource) == 0x000200, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CustomEvent_resource' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, K2Node_CustomEvent_currentAmount) == 0x000208, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::K2Node_CustomEvent_currentAmount' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00020C, "Member 'ITM_Trading_Resource_C_ExecuteUbergraph_ITM_Trading_Resource::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ITM_Trading_Resource.ITM_Trading_Resource_C.AmoutUpdated__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature final
{
public:
	bool                                          Param_DoClearAnim;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_DoTradeAnim;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature) == 0x000001, "Wrong alignment on ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature");
static_assert(sizeof(ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature) == 0x000002, "Wrong size on ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature");
static_assert(offsetof(ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature, Param_DoClearAnim) == 0x000000, "Member 'ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature::Param_DoClearAnim' has a wrong offset!");
static_assert(offsetof(ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature, Param_DoTradeAnim) == 0x000001, "Member 'ITM_Trading_Resource_C_AmoutUpdated__DelegateSignature::Param_DoTradeAnim' has a wrong offset!");

}

