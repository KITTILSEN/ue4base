#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TOOLTIP_ServerEntry_Mods

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TOOLTIP_ServerEntry_Mods.TOOLTIP_ServerEntry_Mods_C
// 0x0120 (0x0380 - 0x0260)
class UTOOLTIP_ServerEntry_Mods_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_Menu_MinimalWindow_C*            Basic_Menu_MinimalWindow;                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BiomeImage;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BiomeName;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ContentBox;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ModsBox;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ModsInstalledBox;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ModsPendingBox;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlanetZoneImage;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextSizable*                       ShowProfileText;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         ResourceFont;                                      // 0x02B0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UBiome*                                 Biome;                                             // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGeneratedMission*                      Mission;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class FString>                         ModNames;                                          // 0x0318(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateFontInfo                         ModNameFont;                                       // 0x0328(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void SplitByInstalled(TArray<class FString>& InNames, TArray<class FString>* OutPending, TArray<class FString>* OutInstalled);
	void SetModNames(class UVerticalBox*& InBox, TArray<class FString>& InNames, bool InInstalled);
	void SetData(TArray<class FString>& InModNames, class UGeneratedMission* InMission);
	void PreConstruct(bool IsDesignTime);
	void Destruct();
	void ExecuteUbergraph_TOOLTIP_ServerEntry_Mods(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TOOLTIP_ServerEntry_Mods_C">();
	}
	static class UTOOLTIP_ServerEntry_Mods_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTOOLTIP_ServerEntry_Mods_C>();
	}
};
static_assert(alignof(UTOOLTIP_ServerEntry_Mods_C) == 0x000008, "Wrong alignment on UTOOLTIP_ServerEntry_Mods_C");
static_assert(sizeof(UTOOLTIP_ServerEntry_Mods_C) == 0x000380, "Wrong size on UTOOLTIP_ServerEntry_Mods_C");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, UberGraphFrame) == 0x000260, "Member 'UTOOLTIP_ServerEntry_Mods_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, Basic_Menu_MinimalWindow) == 0x000268, "Member 'UTOOLTIP_ServerEntry_Mods_C::Basic_Menu_MinimalWindow' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, BiomeImage) == 0x000270, "Member 'UTOOLTIP_ServerEntry_Mods_C::BiomeImage' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, BiomeName) == 0x000278, "Member 'UTOOLTIP_ServerEntry_Mods_C::BiomeName' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, ContentBox) == 0x000280, "Member 'UTOOLTIP_ServerEntry_Mods_C::ContentBox' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, ModsBox) == 0x000288, "Member 'UTOOLTIP_ServerEntry_Mods_C::ModsBox' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, ModsInstalledBox) == 0x000290, "Member 'UTOOLTIP_ServerEntry_Mods_C::ModsInstalledBox' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, ModsPendingBox) == 0x000298, "Member 'UTOOLTIP_ServerEntry_Mods_C::ModsPendingBox' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, PlanetZoneImage) == 0x0002A0, "Member 'UTOOLTIP_ServerEntry_Mods_C::PlanetZoneImage' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, ShowProfileText) == 0x0002A8, "Member 'UTOOLTIP_ServerEntry_Mods_C::ShowProfileText' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, ResourceFont) == 0x0002B0, "Member 'UTOOLTIP_ServerEntry_Mods_C::ResourceFont' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, Biome) == 0x000308, "Member 'UTOOLTIP_ServerEntry_Mods_C::Biome' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, Mission) == 0x000310, "Member 'UTOOLTIP_ServerEntry_Mods_C::Mission' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, ModNames) == 0x000318, "Member 'UTOOLTIP_ServerEntry_Mods_C::ModNames' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Mods_C, ModNameFont) == 0x000328, "Member 'UTOOLTIP_ServerEntry_Mods_C::ModNameFont' has a wrong offset!");

}

