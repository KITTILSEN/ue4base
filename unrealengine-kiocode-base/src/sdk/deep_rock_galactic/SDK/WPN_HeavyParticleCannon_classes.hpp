#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_HeavyParticleCannon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_HeavyParticleCannon.WPN_HeavyParticleCannon_C
// 0x00A0 (0x0A08 - 0x0968)
class AWPN_HeavyParticleCannon_C final : public AHeavyParticleCannon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0968(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDamageComponent*                       ExplosionDamage;                                   // 0x0970(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UExplosionComponent*                    Explosion;                                         // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WidgetChargeFinished_Cue;                          // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WidgetCharge_Cue;                                  // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFSDAudioComponent*                     FireStartAndLoop;                                  // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonStaticMeshComponent*        FirstPersonStaticMesh;                             // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonPointLightComponent*        MuzzleLight;                                       // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight2;                                       // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FireStop_Cue;                                      // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonWidgetComponent*            FPwidget_Ammo;                                     // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponImpactComponent*                 WeaponImpact;                                      // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x09D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_HeavyParticleCannon_AmmoCount_C* AmmoWidget;                                        // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       ReflectedBeams;                                    // 0x09E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FTimerHandle                           AudioFadeTimerHandle;                              // 0x09F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         BeamStartTime;                                     // 0x09F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeamTotalTime;                                     // 0x09FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeamTimeAlpha;                                     // 0x0A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void RecieveEquipped();
	void RecieveUnequipped();
	void BndEvt__WeaponImpact_K2Node_ComponentBoundEvent_1_HightAccelerationSignature__DelegateSignature();
	void UpdateBeamsVisibility(bool IsBeamVisible);
	void Upgraded(const TArray<class UItemUpgrade*>& Upgrades);
	void UpdateReload(float Alpha);
	void IsHittngEnemyChanged(bool IsHittingEnemy);
	void ChargeChanged(bool IsCharging);
	void Server_ExplodePlatform(const struct FVector& Location);
	void All_ExplodePlatform(const struct FVector& Location);
	void ExecuteUbergraph_WPN_HeavyParticleCannon(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_HeavyParticleCannon_C">();
	}
	static class AWPN_HeavyParticleCannon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_HeavyParticleCannon_C>();
	}
};
static_assert(alignof(AWPN_HeavyParticleCannon_C) == 0x000008, "Wrong alignment on AWPN_HeavyParticleCannon_C");
static_assert(sizeof(AWPN_HeavyParticleCannon_C) == 0x000A08, "Wrong size on AWPN_HeavyParticleCannon_C");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, UberGraphFrame) == 0x000968, "Member 'AWPN_HeavyParticleCannon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, ExplosionDamage) == 0x000970, "Member 'AWPN_HeavyParticleCannon_C::ExplosionDamage' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, Explosion) == 0x000978, "Member 'AWPN_HeavyParticleCannon_C::Explosion' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, WidgetChargeFinished_Cue) == 0x000980, "Member 'AWPN_HeavyParticleCannon_C::WidgetChargeFinished_Cue' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, WidgetCharge_Cue) == 0x000988, "Member 'AWPN_HeavyParticleCannon_C::WidgetCharge_Cue' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, FireStartAndLoop) == 0x000990, "Member 'AWPN_HeavyParticleCannon_C::FireStartAndLoop' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, FirstPersonStaticMesh) == 0x000998, "Member 'AWPN_HeavyParticleCannon_C::FirstPersonStaticMesh' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, MuzzleLight) == 0x0009A0, "Member 'AWPN_HeavyParticleCannon_C::MuzzleLight' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, PointLight2) == 0x0009A8, "Member 'AWPN_HeavyParticleCannon_C::PointLight2' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, PointLight1) == 0x0009B0, "Member 'AWPN_HeavyParticleCannon_C::PointLight1' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, FireStop_Cue) == 0x0009B8, "Member 'AWPN_HeavyParticleCannon_C::FireStop_Cue' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, FPwidget_Ammo) == 0x0009C0, "Member 'AWPN_HeavyParticleCannon_C::FPwidget_Ammo' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, WeaponImpact) == 0x0009C8, "Member 'AWPN_HeavyParticleCannon_C::WeaponImpact' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, CrosshairAggregator) == 0x0009D0, "Member 'AWPN_HeavyParticleCannon_C::CrosshairAggregator' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, AmmoWidget) == 0x0009D8, "Member 'AWPN_HeavyParticleCannon_C::AmmoWidget' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, ReflectedBeams) == 0x0009E0, "Member 'AWPN_HeavyParticleCannon_C::ReflectedBeams' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, AudioFadeTimerHandle) == 0x0009F0, "Member 'AWPN_HeavyParticleCannon_C::AudioFadeTimerHandle' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, BeamStartTime) == 0x0009F8, "Member 'AWPN_HeavyParticleCannon_C::BeamStartTime' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, BeamTotalTime) == 0x0009FC, "Member 'AWPN_HeavyParticleCannon_C::BeamTotalTime' has a wrong offset!");
static_assert(offsetof(AWPN_HeavyParticleCannon_C, BeamTimeAlpha) == 0x000A00, "Member 'AWPN_HeavyParticleCannon_C::BeamTimeAlpha' has a wrong offset!");

}

