#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponDisplay_GatlingGun_AmmoCount

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WeaponDisplay_GatlingGun_AmmoCount.WeaponDisplay_GatlingGun_AmmoCount_C.AdjustPercentage
// 0x0088 (0x0088 - 0x0000)
struct WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage) == 0x000008, "Wrong alignment on WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage");
static_assert(sizeof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage) == 0x000088, "Wrong size on WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage, K2Node_MakeArray_Array) == 0x000060, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage, CallFunc_Format_ReturnValue) == 0x000070, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustPercentage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WeaponDisplay_GatlingGun_AmmoCount.WeaponDisplay_GatlingGun_AmmoCount_C.AnimateClipCount
// 0x0060 (0x0060 - 0x0000)
struct WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B5[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B6[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B7[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount) == 0x000008, "Wrong alignment on WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount");
static_assert(sizeof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount) == 0x000060, "Wrong size on WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, Temp_bool_Variable) == 0x000000, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, Temp_float_Variable) == 0x000004, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, Temp_float_Variable_1) == 0x000008, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, Temp_bool_Variable_1) == 0x00000C, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000029, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, K2Node_Select_Default) == 0x00002C, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000050, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_Min_ReturnValue) == 0x000054, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount, K2Node_Select_Default_1) == 0x00005C, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AnimateClipCount::K2Node_Select_Default_1' has a wrong offset!");

// Function WeaponDisplay_GatlingGun_AmmoCount.WeaponDisplay_GatlingGun_AmmoCount_C.AdjustProgressBar
// 0x0010 (0x0010 - 0x0000)
struct WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar) == 0x000004, "Wrong alignment on WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar");
static_assert(sizeof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar) == 0x000010, "Wrong size on WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar, CallFunc_Max_ReturnValue) == 0x000004, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000008, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_AdjustProgressBar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function WeaponDisplay_GatlingGun_AmmoCount.WeaponDisplay_GatlingGun_AmmoCount_C.SetTotalCount
// 0x0004 (0x0004 - 0x0000)
struct WeaponDisplay_GatlingGun_AmmoCount_C_SetTotalCount final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_GatlingGun_AmmoCount_C_SetTotalCount) == 0x000004, "Wrong alignment on WeaponDisplay_GatlingGun_AmmoCount_C_SetTotalCount");
static_assert(sizeof(WeaponDisplay_GatlingGun_AmmoCount_C_SetTotalCount) == 0x000004, "Wrong size on WeaponDisplay_GatlingGun_AmmoCount_C_SetTotalCount");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_SetTotalCount, Value) == 0x000000, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_SetTotalCount::Value' has a wrong offset!");

// Function WeaponDisplay_GatlingGun_AmmoCount.WeaponDisplay_GatlingGun_AmmoCount_C.SetMaxAmmo
// 0x0004 (0x0004 - 0x0000)
struct WeaponDisplay_GatlingGun_AmmoCount_C_SetMaxAmmo final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_GatlingGun_AmmoCount_C_SetMaxAmmo) == 0x000004, "Wrong alignment on WeaponDisplay_GatlingGun_AmmoCount_C_SetMaxAmmo");
static_assert(sizeof(WeaponDisplay_GatlingGun_AmmoCount_C_SetMaxAmmo) == 0x000004, "Wrong size on WeaponDisplay_GatlingGun_AmmoCount_C_SetMaxAmmo");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_SetMaxAmmo, Value) == 0x000000, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_SetMaxAmmo::Value' has a wrong offset!");

// Function WeaponDisplay_GatlingGun_AmmoCount.WeaponDisplay_GatlingGun_AmmoCount_C.InitializeAmmoWidget
// 0x0010 (0x0010 - 0x0000)
struct WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget final
{
public:
	class AItem*                                  OwningItem;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       WidgetComp;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget) == 0x000008, "Wrong alignment on WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget");
static_assert(sizeof(WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget) == 0x000010, "Wrong size on WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget, OwningItem) == 0x000000, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget::OwningItem' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget, WidgetComp) == 0x000008, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_InitializeAmmoWidget::WidgetComp' has a wrong offset!");

// Function WeaponDisplay_GatlingGun_AmmoCount.WeaponDisplay_GatlingGun_AmmoCount_C.SetClipCount
// 0x0004 (0x0004 - 0x0000)
struct WeaponDisplay_GatlingGun_AmmoCount_C_SetClipCount final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponDisplay_GatlingGun_AmmoCount_C_SetClipCount) == 0x000004, "Wrong alignment on WeaponDisplay_GatlingGun_AmmoCount_C_SetClipCount");
static_assert(sizeof(WeaponDisplay_GatlingGun_AmmoCount_C_SetClipCount) == 0x000004, "Wrong size on WeaponDisplay_GatlingGun_AmmoCount_C_SetClipCount");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_SetClipCount, Value) == 0x000000, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_SetClipCount::Value' has a wrong offset!");

// Function WeaponDisplay_GatlingGun_AmmoCount.WeaponDisplay_GatlingGun_AmmoCount_C.ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount
// 0x0060 (0x0060 - 0x0000)
struct WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Value_2;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B9[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Value_1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53BA[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAmmoDrivenWeapon*                      K2Node_DynamicCast_AsAmmo_Driven_Weapon;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53BB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  K2Node_Event_OwningItem;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       K2Node_Event_WidgetComp;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Value;                                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount) == 0x000008, "Wrong alignment on WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount");
static_assert(sizeof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount) == 0x000060, "Wrong size on WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, EntryPoint) == 0x000000, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, K2Node_Event_Value_2) == 0x000010, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000014, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, K2Node_Event_Value_1) == 0x000018, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001D, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_Less_IntInt_ReturnValue) == 0x00001E, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_BooleanAND_ReturnValue) == 0x00001F, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, K2Node_DynamicCast_AsAmmo_Driven_Weapon) == 0x000028, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::K2Node_DynamicCast_AsAmmo_Driven_Weapon' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, K2Node_Event_OwningItem) == 0x000038, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::K2Node_Event_OwningItem' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, K2Node_Event_WidgetComp) == 0x000040, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::K2Node_Event_WidgetComp' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, K2Node_Event_Value) == 0x000048, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'WeaponDisplay_GatlingGun_AmmoCount_C_ExecuteUbergraph_WeaponDisplay_GatlingGun_AmmoCount::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

