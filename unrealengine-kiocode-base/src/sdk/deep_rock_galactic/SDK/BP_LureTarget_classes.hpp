#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LureTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LureTarget.BP_LureTarget_C
// 0x0158 (0x03D8 - 0x0280)
class ABP_LureTarget_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFriendlyHealthComponent*               FriendlyHealth;                                    // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFakeFallComponent*                     FakeFall;                                          // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget1;                                           // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh_Hologram;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_Projector;                                    // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Grenade_Lure_HolloStreaks;                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObjectAttackerPositioning*             ObjectAttackerPositioning;                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         GlitchAnimationRate_Visibility_C039C82E4E9A2669384696BB798667AF; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlitchAnimationRate_Animation_Rate_C039C82E4E9A2669384696BB798667AF; // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GlitchAnimationRate__Direction_C039C82E4E9A2669384696BB798667AF; // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CB[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GlitchAnimationRate;                               // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Glitch2_Y_6D7D66B2467FD3C0288C8BA13855B201;        // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Glitch2_X_6D7D66B2467FD3C0288C8BA13855B201;        // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Glitch2_Z_6D7D66B2467FD3C0288C8BA13855B201;        // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Glitch2__Direction_6D7D66B2467FD3C0288C8BA13855B201; // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CC[0x3];                                     // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Glitch2;                                           // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Glitch_Y_96E18DAF461D1987E60A9D86D3431FCD;         // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Glitch_X_96E18DAF461D1987E60A9D86D3431FCD;         // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Glitch_Z_96E18DAF461D1987E60A9D86D3431FCD;         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Glitch__Direction_96E18DAF461D1987E60A9D86D3431FCD; // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CD[0x3];                                     // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Glitch;                                            // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disappear_Y_B748642F45FA83EEDB7F8DB0E524EFA5;      // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disappear_X_B748642F45FA83EEDB7F8DB0E524EFA5;      // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disappear_Z_B748642F45FA83EEDB7F8DB0E524EFA5;      // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Disappear__Direction_B748642F45FA83EEDB7F8DB0E524EFA5; // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CE[0x3];                                     // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Disappear;                                         // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowHologramZ_Y_F6411B824C449290031E39820C54F8D0;  // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowHologramZ_X_F6411B824C449290031E39820C54F8D0;  // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowHologramZ_Z_F6411B824C449290031E39820C54F8D0;  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GrowHologramZ__Direction_F6411B824C449290031E39820C54F8D0; // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CF[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GrowHologramZ;                                     // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D0[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Dynamic_Material;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FinalColour;                                       // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InitialColour;                                     // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Animation;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequence*>                  Anim;                                              // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Base_Dynamic_Material;                             // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomZ;                                           // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomY;                                           // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomX;                                           // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D1[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          MainAnimation;                                     // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasGlitched;                                       // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D2[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               LureFX;                                            // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Attach_to_Valid_Surface();
	void SetScaleDownLerp(float Z, float Y, float X);
	void SetScaleUpLerp(float Z, float Y, float X);
	void SetScaleLerpFromRandom(float ZRandomConnection, float YRandomConnection, float XRandomConnection);
	void UserConstructionScript();
	void GrowHologramZ__FinishedFunc();
	void GrowHologramZ__UpdateFunc();
	void Disappear__FinishedFunc();
	void Disappear__UpdateFunc();
	void Glitch__FinishedFunc();
	void Glitch__UpdateFunc();
	void Glitch2__FinishedFunc();
	void Glitch2__UpdateFunc();
	void GlitchAnimationRate__FinishedFunc();
	void GlitchAnimationRate__UpdateFunc();
	void BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_2_DeathSig__DelegateSignature(class UHealthComponentBase* HealthComponent);
	void BndEvt__FriendlyHealth_K2Node_ComponentBoundEvent_3_HealthChangedSig__DelegateSignature(float Health);
	void ReceiveBeginPlay();
	void ShowDamageEffects(class UParticleSystem* Particles, const struct FVector& Location, const struct FRotator& Orientation);
	void BndEvt__BP_LureTarget_FakeFall_K2Node_ComponentBoundEvent_0_BoolDelegate__DelegateSignature(bool boolValue);
	void ExecuteUbergraph_BP_LureTarget(int32 EntryPoint);

	bool GetIsTargetable() const;
	struct FVector GetTargetCenterMass() const;
	class UHealthComponentBase* GetTargetHealthComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LureTarget_C">();
	}
	static class ABP_LureTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LureTarget_C>();
	}
};
static_assert(alignof(ABP_LureTarget_C) == 0x000008, "Wrong alignment on ABP_LureTarget_C");
static_assert(sizeof(ABP_LureTarget_C) == 0x0003D8, "Wrong size on ABP_LureTarget_C");
static_assert(offsetof(ABP_LureTarget_C, UberGraphFrame) == 0x000280, "Member 'ABP_LureTarget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, FriendlyHealth) == 0x000288, "Member 'ABP_LureTarget_C::FriendlyHealth' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, FakeFall) == 0x000290, "Member 'ABP_LureTarget_C::FakeFall' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Widget1) == 0x000298, "Member 'ABP_LureTarget_C::Widget1' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Widget) == 0x0002A0, "Member 'ABP_LureTarget_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Mesh_Hologram) == 0x0002A8, "Member 'ABP_LureTarget_C::Mesh_Hologram' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, PointLight) == 0x0002B0, "Member 'ABP_LureTarget_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Mesh_Projector) == 0x0002B8, "Member 'ABP_LureTarget_C::Mesh_Projector' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, P_Grenade_Lure_HolloStreaks) == 0x0002C0, "Member 'ABP_LureTarget_C::P_Grenade_Lure_HolloStreaks' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Capsule) == 0x0002C8, "Member 'ABP_LureTarget_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Damage) == 0x0002D0, "Member 'ABP_LureTarget_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, ObjectAttackerPositioning) == 0x0002D8, "Member 'ABP_LureTarget_C::ObjectAttackerPositioning' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_LureTarget_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GlitchAnimationRate_Visibility_C039C82E4E9A2669384696BB798667AF) == 0x0002E8, "Member 'ABP_LureTarget_C::GlitchAnimationRate_Visibility_C039C82E4E9A2669384696BB798667AF' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GlitchAnimationRate_Animation_Rate_C039C82E4E9A2669384696BB798667AF) == 0x0002EC, "Member 'ABP_LureTarget_C::GlitchAnimationRate_Animation_Rate_C039C82E4E9A2669384696BB798667AF' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GlitchAnimationRate__Direction_C039C82E4E9A2669384696BB798667AF) == 0x0002F0, "Member 'ABP_LureTarget_C::GlitchAnimationRate__Direction_C039C82E4E9A2669384696BB798667AF' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GlitchAnimationRate) == 0x0002F8, "Member 'ABP_LureTarget_C::GlitchAnimationRate' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch2_Y_6D7D66B2467FD3C0288C8BA13855B201) == 0x000300, "Member 'ABP_LureTarget_C::Glitch2_Y_6D7D66B2467FD3C0288C8BA13855B201' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch2_X_6D7D66B2467FD3C0288C8BA13855B201) == 0x000304, "Member 'ABP_LureTarget_C::Glitch2_X_6D7D66B2467FD3C0288C8BA13855B201' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch2_Z_6D7D66B2467FD3C0288C8BA13855B201) == 0x000308, "Member 'ABP_LureTarget_C::Glitch2_Z_6D7D66B2467FD3C0288C8BA13855B201' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch2__Direction_6D7D66B2467FD3C0288C8BA13855B201) == 0x00030C, "Member 'ABP_LureTarget_C::Glitch2__Direction_6D7D66B2467FD3C0288C8BA13855B201' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch2) == 0x000310, "Member 'ABP_LureTarget_C::Glitch2' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch_Y_96E18DAF461D1987E60A9D86D3431FCD) == 0x000318, "Member 'ABP_LureTarget_C::Glitch_Y_96E18DAF461D1987E60A9D86D3431FCD' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch_X_96E18DAF461D1987E60A9D86D3431FCD) == 0x00031C, "Member 'ABP_LureTarget_C::Glitch_X_96E18DAF461D1987E60A9D86D3431FCD' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch_Z_96E18DAF461D1987E60A9D86D3431FCD) == 0x000320, "Member 'ABP_LureTarget_C::Glitch_Z_96E18DAF461D1987E60A9D86D3431FCD' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch__Direction_96E18DAF461D1987E60A9D86D3431FCD) == 0x000324, "Member 'ABP_LureTarget_C::Glitch__Direction_96E18DAF461D1987E60A9D86D3431FCD' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Glitch) == 0x000328, "Member 'ABP_LureTarget_C::Glitch' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Disappear_Y_B748642F45FA83EEDB7F8DB0E524EFA5) == 0x000330, "Member 'ABP_LureTarget_C::Disappear_Y_B748642F45FA83EEDB7F8DB0E524EFA5' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Disappear_X_B748642F45FA83EEDB7F8DB0E524EFA5) == 0x000334, "Member 'ABP_LureTarget_C::Disappear_X_B748642F45FA83EEDB7F8DB0E524EFA5' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Disappear_Z_B748642F45FA83EEDB7F8DB0E524EFA5) == 0x000338, "Member 'ABP_LureTarget_C::Disappear_Z_B748642F45FA83EEDB7F8DB0E524EFA5' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Disappear__Direction_B748642F45FA83EEDB7F8DB0E524EFA5) == 0x00033C, "Member 'ABP_LureTarget_C::Disappear__Direction_B748642F45FA83EEDB7F8DB0E524EFA5' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Disappear) == 0x000340, "Member 'ABP_LureTarget_C::Disappear' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GrowHologramZ_Y_F6411B824C449290031E39820C54F8D0) == 0x000348, "Member 'ABP_LureTarget_C::GrowHologramZ_Y_F6411B824C449290031E39820C54F8D0' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GrowHologramZ_X_F6411B824C449290031E39820C54F8D0) == 0x00034C, "Member 'ABP_LureTarget_C::GrowHologramZ_X_F6411B824C449290031E39820C54F8D0' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GrowHologramZ_Z_F6411B824C449290031E39820C54F8D0) == 0x000350, "Member 'ABP_LureTarget_C::GrowHologramZ_Z_F6411B824C449290031E39820C54F8D0' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GrowHologramZ__Direction_F6411B824C449290031E39820C54F8D0) == 0x000354, "Member 'ABP_LureTarget_C::GrowHologramZ__Direction_F6411B824C449290031E39820C54F8D0' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, GrowHologramZ) == 0x000358, "Member 'ABP_LureTarget_C::GrowHologramZ' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, LifeTime) == 0x000360, "Member 'ABP_LureTarget_C::LifeTime' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Dynamic_Material) == 0x000368, "Member 'ABP_LureTarget_C::Dynamic_Material' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, FinalColour) == 0x000370, "Member 'ABP_LureTarget_C::FinalColour' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, InitialColour) == 0x000380, "Member 'ABP_LureTarget_C::InitialColour' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Animation) == 0x000390, "Member 'ABP_LureTarget_C::Animation' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Anim) == 0x000398, "Member 'ABP_LureTarget_C::Anim' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, Base_Dynamic_Material) == 0x0003A8, "Member 'ABP_LureTarget_C::Base_Dynamic_Material' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, RandomZ) == 0x0003B0, "Member 'ABP_LureTarget_C::RandomZ' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, RandomY) == 0x0003B4, "Member 'ABP_LureTarget_C::RandomY' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, RandomX) == 0x0003B8, "Member 'ABP_LureTarget_C::RandomX' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, MainAnimation) == 0x0003C0, "Member 'ABP_LureTarget_C::MainAnimation' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, HasGlitched) == 0x0003C8, "Member 'ABP_LureTarget_C::HasGlitched' has a wrong offset!");
static_assert(offsetof(ABP_LureTarget_C, LureFX) == 0x0003D0, "Member 'ABP_LureTarget_C::LureFX' has a wrong offset!");

}

