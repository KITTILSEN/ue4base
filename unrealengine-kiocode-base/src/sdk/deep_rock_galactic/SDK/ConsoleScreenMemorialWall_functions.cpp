#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConsoleScreenMemorialWall

#include "Basic.hpp"

#include "ConsoleScreenMemorialWall_classes.hpp"
#include "ConsoleScreenMemorialWall_parameters.hpp"


namespace SDK
{

// Function ConsoleScreenMemorialWall.ConsoleScreenMemorialWall_C.ExecuteUbergraph_ConsoleScreenMemorialWall
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UConsoleScreenMemorialWall_C::ExecuteUbergraph_ConsoleScreenMemorialWall(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConsoleScreenMemorialWall_C", "ExecuteUbergraph_ConsoleScreenMemorialWall");

	Params::ConsoleScreenMemorialWall_C_ExecuteUbergraph_ConsoleScreenMemorialWall Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ConsoleScreenMemorialWall.ConsoleScreenMemorialWall_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UConsoleScreenMemorialWall_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConsoleScreenMemorialWall_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ConsoleScreenMemorialWall.ConsoleScreenMemorialWall_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UConsoleScreenMemorialWall_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConsoleScreenMemorialWall_C", "Tick");

	Params::ConsoleScreenMemorialWall_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ConsoleScreenMemorialWall.ConsoleScreenMemorialWall_C.GetNameFromRow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Row                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UConsoleScreenMemorialWall_C::GetNameFromRow(int32 Row)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConsoleScreenMemorialWall_C", "GetNameFromRow");

	Params::ConsoleScreenMemorialWall_C_GetNameFromRow Parms{};

	Parms.Row = Row;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ConsoleScreenMemorialWall.ConsoleScreenMemorialWall_C.SpawnNewLine
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UConsoleScreenMemorialWall_C::SpawnNewLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConsoleScreenMemorialWall_C", "SpawnNewLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ConsoleScreenMemorialWall.ConsoleScreenMemorialWall_C.SetAnimationSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsFast                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UConsoleScreenMemorialWall_C::SetAnimationSpeed(bool Param_IsFast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConsoleScreenMemorialWall_C", "SetAnimationSpeed");

	Params::ConsoleScreenMemorialWall_C_SetAnimationSpeed Parms{};

	Parms.Param_IsFast = Param_IsFast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ConsoleScreenMemorialWall.ConsoleScreenMemorialWall_C.RemoveLine
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_ConsoleMemorialLine_C*        NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UConsoleScreenMemorialWall_C::RemoveLine(class UUI_ConsoleMemorialLine_C* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConsoleScreenMemorialWall_C", "RemoveLine");

	Params::ConsoleScreenMemorialWall_C_RemoveLine Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ConsoleScreenMemorialWall.ConsoleScreenMemorialWall_C.SetLinesSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UConsoleScreenMemorialWall_C::SetLinesSpeed(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConsoleScreenMemorialWall_C", "SetLinesSpeed");

	Params::ConsoleScreenMemorialWall_C_SetLinesSpeed Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}

}

