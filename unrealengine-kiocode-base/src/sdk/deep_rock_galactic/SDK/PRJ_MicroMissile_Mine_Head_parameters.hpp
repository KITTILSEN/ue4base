#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PRJ_MicroMissile_Mine_Head

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PRJ_MicroMissile_Mine_Head.PRJ_MicroMissile_Mine_Head_C.BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D1[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'PRJ_MicroMissile_Mine_Head_C_BndEvt__Trigger_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function PRJ_MicroMissile_Mine_Head.PRJ_MicroMissile_Mine_Head_C.BndEvt__HealthComponent_K2Node_ComponentBoundEvent_1_DeathSig__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PRJ_MicroMissile_Mine_Head_C_BndEvt__HealthComponent_K2Node_ComponentBoundEvent_1_DeathSig__DelegateSignature final
{
public:
	class UHealthComponentBase*                   Param_HealthComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PRJ_MicroMissile_Mine_Head_C_BndEvt__HealthComponent_K2Node_ComponentBoundEvent_1_DeathSig__DelegateSignature) == 0x000008, "Wrong alignment on PRJ_MicroMissile_Mine_Head_C_BndEvt__HealthComponent_K2Node_ComponentBoundEvent_1_DeathSig__DelegateSignature");
static_assert(sizeof(PRJ_MicroMissile_Mine_Head_C_BndEvt__HealthComponent_K2Node_ComponentBoundEvent_1_DeathSig__DelegateSignature) == 0x000008, "Wrong size on PRJ_MicroMissile_Mine_Head_C_BndEvt__HealthComponent_K2Node_ComponentBoundEvent_1_DeathSig__DelegateSignature");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_BndEvt__HealthComponent_K2Node_ComponentBoundEvent_1_DeathSig__DelegateSignature, Param_HealthComponent) == 0x000000, "Member 'PRJ_MicroMissile_Mine_Head_C_BndEvt__HealthComponent_K2Node_ComponentBoundEvent_1_DeathSig__DelegateSignature::Param_HealthComponent' has a wrong offset!");

// Function PRJ_MicroMissile_Mine_Head.PRJ_MicroMissile_Mine_Head_C.OnImpacted
// 0x008C (0x008C - 0x0000)
struct PRJ_MicroMissile_Mine_Head_C_OnImpacted final
{
public:
	bool                                          PredictedImpact;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PRJ_MicroMissile_Mine_Head_C_OnImpacted) == 0x000004, "Wrong alignment on PRJ_MicroMissile_Mine_Head_C_OnImpacted");
static_assert(sizeof(PRJ_MicroMissile_Mine_Head_C_OnImpacted) == 0x00008C, "Wrong size on PRJ_MicroMissile_Mine_Head_C_OnImpacted");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_OnImpacted, PredictedImpact) == 0x000000, "Member 'PRJ_MicroMissile_Mine_Head_C_OnImpacted::PredictedImpact' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_OnImpacted, HitResult) == 0x000004, "Member 'PRJ_MicroMissile_Mine_Head_C_OnImpacted::HitResult' has a wrong offset!");

// Function PRJ_MicroMissile_Mine_Head.PRJ_MicroMissile_Mine_Head_C.ExecuteUbergraph_PRJ_MicroMissile_Mine_Head
// 0x0260 (0x0260 - 0x0000)
struct PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D4[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFSDPawn*                               K2Node_DynamicCast_AsFSDPawn;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPawnAttitude                                 CallFunc_GetAttitude_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D5[0x5];                                     // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D6[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponentBase*                   K2Node_ComponentBoundEvent_HealthComponent;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PredictedImpact;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D7[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0138(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D8[0x2];                                     // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D9[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DA[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head) == 0x000010, "Wrong alignment on PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head");
static_assert(sizeof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head) == 0x000260, "Wrong size on PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, EntryPoint) == 0x000000, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::EntryPoint' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_DynamicCast_AsFSDPawn) == 0x0000B0, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_DynamicCast_AsFSDPawn' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_GetAttitude_ReturnValue) == 0x0000B9, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_GetAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BA, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_GetInstigator_ReturnValue) == 0x0000C0, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_DynamicCast_AsPlayer_Character) == 0x0000C8, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_ComponentBoundEvent_HealthComponent) == 0x0000D8, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_ComponentBoundEvent_HealthComponent' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_GetTransform_ReturnValue) == 0x0000E0, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakTransform_Location) == 0x000110, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakTransform_Rotation) == 0x00011C, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_Event_PredictedImpact) == 0x000134, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_Event_PredictedImpact' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, K2Node_Event_HitResult) == 0x000138, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C0, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001C1, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_Time) == 0x0001C4, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_Distance) == 0x0001C8, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_Location) == 0x0001CC, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D8, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_Normal) == 0x0001E4, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F0, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_PhysMat) == 0x000200, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_HitActor) == 0x000208, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_HitComponent) == 0x000210, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_HitBoneName) == 0x000218, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_HitItem) == 0x000220, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_ElementIndex) == 0x000224, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_FaceIndex) == 0x000228, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_TraceStart) == 0x00022C, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BreakHitResult_TraceEnd) == 0x000238, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_GetObjectClass_ReturnValue) == 0x000248, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_HasAuthority_ReturnValue) == 0x000250, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_ClassIsChildOf_ReturnValue) == 0x000251, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000252, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_BooleanOR_ReturnValue) == 0x000253, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000254, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000258, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00025C, "Member 'PRJ_MicroMissile_Mine_Head_C_ExecuteUbergraph_PRJ_MicroMissile_Mine_Head::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

}

