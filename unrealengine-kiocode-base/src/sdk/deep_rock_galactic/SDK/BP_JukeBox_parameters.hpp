#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JukeBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_JukeBox.BP_JukeBox_C.ExecuteUbergraph_BP_JukeBox
// 0x0298 (0x0298 - 0x0000)
struct BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_456F[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4570[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4571[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_ComponentBoundEvent_user;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputKeys                                    K2Node_ComponentBoundEvent_key;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4572[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PayCredits_Purchased;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4573[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_SpaceRig_C*        K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4574[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4575[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4576[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00B8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4577[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4578[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_1;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4579[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_457A[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_457B[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_457C[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundBase>              K2Node_CustomEvent_Music;                          // 0x01B0(0x0028)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_457D[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_457E[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USoundBase>>      CallFunc_GetAvailableMusic_OutMusicList;           // 0x0200(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_457F[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4580[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0230(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4581[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4582[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_2;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSaluting_ReturnValue;                   // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasDrink_ReturnValue;                     // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4583[0x5];                                     // 0x0263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4584[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_3;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4585[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue_2;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox) == 0x000008, "Wrong alignment on BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox");
static_assert(sizeof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox) == 0x000298, "Wrong size on BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, EntryPoint) == 0x000000, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_HasAuthority_ReturnValue) == 0x000024, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, Temp_bool_Has_Been_Initd_Variable) == 0x000044, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_HasAuthority_ReturnValue_1) == 0x000045, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_HasAuthority_ReturnValue_2) == 0x000054, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_user) == 0x000058, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_user' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_key) == 0x000060, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_key' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_PayCredits_Purchased) == 0x000070, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_PayCredits_Purchased' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig) == 0x000078, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GetPlayerController_ReturnValue_1) == 0x000088, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000091, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000098, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000A0, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000A8, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0000B0, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000B4, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_SweepResult) == 0x0000B8, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000140, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_OtherActor) == 0x000148, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_OtherComp) == 0x000150, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000158, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_AsPlayer_Character) == 0x000160, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_AsPlayer_Character_1) == 0x000170, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_AsPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_bSuccess_2) == 0x000178, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000179, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00017C, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, Temp_bool_IsClosed_Variable) == 0x000180, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000181, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, Temp_object_Variable) == 0x000188, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_RandomFloatInRange_ReturnValue) == 0x000190, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_AsSound_Base) == 0x000198, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_CustomEvent_Loaded) == 0x0001A8, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_CustomEvent_Music) == 0x0001B0, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_CustomEvent_Music' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D8, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x0001E8, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_CustomEvent_NewValue) == 0x0001F0, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x0001F8, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GetAvailableMusic_OutMusicList) == 0x000200, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GetAvailableMusic_OutMusicList' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Array_LastIndex_ReturnValue) == 0x000210, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000214, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000218, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_IsPlaying_ReturnValue) == 0x00021C, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Greater_IntInt_ReturnValue) == 0x00021D, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_BooleanAND_ReturnValue) == 0x00021E, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_BooleanAND_ReturnValue_1) == 0x00021F, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Add_IntInt_ReturnValue_2) == 0x000220, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_HasAuthority_ReturnValue_3) == 0x000224, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000228, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x00022C, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000230, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Array_Length_ReturnValue) == 0x000240, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Array_Get_Item) == 0x000248, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Less_IntInt_ReturnValue) == 0x000250, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_AsPlayer_Character_2) == 0x000258, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_AsPlayer_Character_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_bSuccess_4) == 0x000260, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_IsSaluting_ReturnValue) == 0x000261, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_IsSaluting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_HasDrink_ReturnValue) == 0x000262, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_HasDrink_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Array_Get_Item_1) == 0x000268, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_BooleanAND_ReturnValue_2) == 0x000270, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_AsPlayer_Character_3) == 0x000278, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_AsPlayer_Character_3' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, K2Node_DynamicCast_bSuccess_5) == 0x000280, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_GetPlayerController_ReturnValue_2) == 0x000288, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Array_Length_ReturnValue_1) == 0x000290, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_Less_IntInt_ReturnValue_1) == 0x000294, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox, CallFunc_IsLocalController_ReturnValue) == 0x000295, "Member 'BP_JukeBox_C_ExecuteUbergraph_BP_JukeBox::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.OnStreamerModeChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_JukeBox_C_OnStreamerModeChanged final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JukeBox_C_OnStreamerModeChanged) == 0x000001, "Wrong alignment on BP_JukeBox_C_OnStreamerModeChanged");
static_assert(sizeof(BP_JukeBox_C_OnStreamerModeChanged) == 0x000001, "Wrong size on BP_JukeBox_C_OnStreamerModeChanged");
static_assert(offsetof(BP_JukeBox_C_OnStreamerModeChanged, NewValue) == 0x000000, "Member 'BP_JukeBox_C_OnStreamerModeChanged::NewValue' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.LoadAndPlay
// 0x0028 (0x0028 - 0x0000)
struct BP_JukeBox_C_LoadAndPlay final
{
public:
	TSoftObjectPtr<class USoundBase>              Music;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_JukeBox_C_LoadAndPlay) == 0x000008, "Wrong alignment on BP_JukeBox_C_LoadAndPlay");
static_assert(sizeof(BP_JukeBox_C_LoadAndPlay) == 0x000028, "Wrong size on BP_JukeBox_C_LoadAndPlay");
static_assert(offsetof(BP_JukeBox_C_LoadAndPlay, Music) == 0x000000, "Member 'BP_JukeBox_C_LoadAndPlay::Music' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4586[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_JukeBox_C_BndEvt__DanceSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature final
{
public:
	class APlayerCharacter*                       User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputKeys                                    Key;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature");
static_assert(sizeof(BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature) == 0x000010, "Wrong size on BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature");
static_assert(offsetof(BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature, User) == 0x000000, "Member 'BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature::User' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature, Key) == 0x000008, "Member 'BP_JukeBox_C_BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature::Key' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.OnLoaded_C15A19DC4718016F57823CA232EE5860
// 0x0008 (0x0008 - 0x0000)
struct BP_JukeBox_C_OnLoaded_C15A19DC4718016F57823CA232EE5860 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JukeBox_C_OnLoaded_C15A19DC4718016F57823CA232EE5860) == 0x000008, "Wrong alignment on BP_JukeBox_C_OnLoaded_C15A19DC4718016F57823CA232EE5860");
static_assert(sizeof(BP_JukeBox_C_OnLoaded_C15A19DC4718016F57823CA232EE5860) == 0x000008, "Wrong size on BP_JukeBox_C_OnLoaded_C15A19DC4718016F57823CA232EE5860");
static_assert(offsetof(BP_JukeBox_C_OnLoaded_C15A19DC4718016F57823CA232EE5860, Loaded) == 0x000000, "Member 'BP_JukeBox_C_OnLoaded_C15A19DC4718016F57823CA232EE5860::Loaded' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.OnRep_MusicIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_JukeBox_C_OnRep_MusicIndex final
{
public:
	TArray<TSoftObjectPtr<class USoundBase>>      AvailableMusic;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_JukeBox_C_OnRep_MusicIndex) == 0x000008, "Wrong alignment on BP_JukeBox_C_OnRep_MusicIndex");
static_assert(sizeof(BP_JukeBox_C_OnRep_MusicIndex) == 0x000010, "Wrong size on BP_JukeBox_C_OnRep_MusicIndex");
static_assert(offsetof(BP_JukeBox_C_OnRep_MusicIndex, AvailableMusic) == 0x000000, "Member 'BP_JukeBox_C_OnRep_MusicIndex::AvailableMusic' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.PayCredits
// 0x0030 (0x0030 - 0x0000)
struct BP_JukeBox_C_PayCredits final
{
public:
	class APlayerCharacter*                       User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Purchased;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4587[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetPlayerState_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_SpaceRig_C*        K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JukeBox_C_PayCredits) == 0x000008, "Wrong alignment on BP_JukeBox_C_PayCredits");
static_assert(sizeof(BP_JukeBox_C_PayCredits) == 0x000030, "Wrong size on BP_JukeBox_C_PayCredits");
static_assert(offsetof(BP_JukeBox_C_PayCredits, User) == 0x000000, "Member 'BP_JukeBox_C_PayCredits::User' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_PayCredits, Amount) == 0x000008, "Member 'BP_JukeBox_C_PayCredits::Amount' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_PayCredits, Purchased) == 0x00000C, "Member 'BP_JukeBox_C_PayCredits::Purchased' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_PayCredits, CallFunc_GetPlayerState_ReturnValue) == 0x000010, "Member 'BP_JukeBox_C_PayCredits::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_PayCredits, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_JukeBox_C_PayCredits::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_PayCredits, K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig) == 0x000020, "Member 'BP_JukeBox_C_PayCredits::K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_PayCredits, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_JukeBox_C_PayCredits::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_PayCredits, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_JukeBox_C_PayCredits::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.GetAvailableMusic
// 0x0028 (0x0028 - 0x0000)
struct BP_JukeBox_C_GetAvailableMusic final
{
public:
	TArray<TSoftObjectPtr<class USoundBase>>      OutMusicList;                                      // 0x0000(0x0010)(Parm, OutParm)
	TArray<TSoftObjectPtr<class USoundBase>>      CombinedList;                                      // 0x0010(0x0010)(Edit, BlueprintVisible)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JukeBox_C_GetAvailableMusic) == 0x000008, "Wrong alignment on BP_JukeBox_C_GetAvailableMusic");
static_assert(sizeof(BP_JukeBox_C_GetAvailableMusic) == 0x000028, "Wrong size on BP_JukeBox_C_GetAvailableMusic");
static_assert(offsetof(BP_JukeBox_C_GetAvailableMusic, OutMusicList) == 0x000000, "Member 'BP_JukeBox_C_GetAvailableMusic::OutMusicList' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_GetAvailableMusic, CombinedList) == 0x000010, "Member 'BP_JukeBox_C_GetAvailableMusic::CombinedList' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_GetAvailableMusic, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000020, "Member 'BP_JukeBox_C_GetAvailableMusic::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");

// Function BP_JukeBox.BP_JukeBox_C.UpdateCurrentMusic
// 0x00C0 (0x00C0 - 0x0000)
struct BP_JukeBox_C_UpdateCurrentMusic final
{
public:
	TArray<TSoftObjectPtr<class USoundBase>>      AvailableMusic;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4588[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4589[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_458A[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              CallFunc_Array_Get_Item;                           // 0x0068(0x0028)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USoundBase>>      CallFunc_GetAvailableMusic_OutMusicList;           // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_458B[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget_Jukebox02_C*                    K2Node_DynamicCast_AsWidget_Jukebox_02;            // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JukeBox_C_UpdateCurrentMusic) == 0x000008, "Wrong alignment on BP_JukeBox_C_UpdateCurrentMusic");
static_assert(sizeof(BP_JukeBox_C_UpdateCurrentMusic) == 0x0000C0, "Wrong size on BP_JukeBox_C_UpdateCurrentMusic");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, AvailableMusic) == 0x000000, "Member 'BP_JukeBox_C_UpdateCurrentMusic::AvailableMusic' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, Temp_byte_Variable) == 0x000010, "Member 'BP_JukeBox_C_UpdateCurrentMusic::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, Temp_byte_Variable_1) == 0x000011, "Member 'BP_JukeBox_C_UpdateCurrentMusic::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000028, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, Temp_bool_Variable) == 0x000058, "Member 'BP_JukeBox_C_UpdateCurrentMusic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Percent_IntInt_ReturnValue) == 0x000060, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_GetAvailableMusic_OutMusicList) == 0x000090, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_GetAvailableMusic_OutMusicList' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A1, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, K2Node_Select_Default) == 0x0000A2, "Member 'BP_JukeBox_C_UpdateCurrentMusic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A3, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_Not_PreBool_ReturnValue) == 0x0000A4, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, CallFunc_GetUserWidgetObject_ReturnValue) == 0x0000A8, "Member 'BP_JukeBox_C_UpdateCurrentMusic::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, K2Node_DynamicCast_AsWidget_Jukebox_02) == 0x0000B0, "Member 'BP_JukeBox_C_UpdateCurrentMusic::K2Node_DynamicCast_AsWidget_Jukebox_02' has a wrong offset!");
static_assert(offsetof(BP_JukeBox_C_UpdateCurrentMusic, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_JukeBox_C_UpdateCurrentMusic::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

