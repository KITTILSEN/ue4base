#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_SonyInputFloatOption

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Options_SonyInputFloatOption.Options_SonyInputFloatOption_C
// 0x0030 (0x0290 - 0x0260)
class UOptions_SonyInputFloatOption_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_Slider_C*                        Basic_Slider;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ESonyInputSettingsFloats                      Option;                                            // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B98[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             StateChanged;                                      // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         MaxValue;                                          // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void StateChanged__DelegateSignature(float NewValue);
	void ExecuteUbergraph_Options_SonyInputFloatOption(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Basic_Slider_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature(float Value);
	void ShowOptions();
	void UINeedsUpdate();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Options_SonyInputFloatOption_C">();
	}
	static class UOptions_SonyInputFloatOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptions_SonyInputFloatOption_C>();
	}
};
static_assert(alignof(UOptions_SonyInputFloatOption_C) == 0x000008, "Wrong alignment on UOptions_SonyInputFloatOption_C");
static_assert(sizeof(UOptions_SonyInputFloatOption_C) == 0x000290, "Wrong size on UOptions_SonyInputFloatOption_C");
static_assert(offsetof(UOptions_SonyInputFloatOption_C, UberGraphFrame) == 0x000260, "Member 'UOptions_SonyInputFloatOption_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOptions_SonyInputFloatOption_C, Basic_Slider) == 0x000268, "Member 'UOptions_SonyInputFloatOption_C::Basic_Slider' has a wrong offset!");
static_assert(offsetof(UOptions_SonyInputFloatOption_C, Option) == 0x000270, "Member 'UOptions_SonyInputFloatOption_C::Option' has a wrong offset!");
static_assert(offsetof(UOptions_SonyInputFloatOption_C, StateChanged) == 0x000278, "Member 'UOptions_SonyInputFloatOption_C::StateChanged' has a wrong offset!");
static_assert(offsetof(UOptions_SonyInputFloatOption_C, MaxValue) == 0x000288, "Member 'UOptions_SonyInputFloatOption_C::MaxValue' has a wrong offset!");

}

