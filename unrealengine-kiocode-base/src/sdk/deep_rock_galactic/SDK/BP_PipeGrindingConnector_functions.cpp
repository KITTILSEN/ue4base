#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PipeGrindingConnector

#include "Basic.hpp"

#include "BP_PipeGrindingConnector_classes.hpp"
#include "BP_PipeGrindingConnector_parameters.hpp"


namespace SDK
{

// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.ExecuteUbergraph_BP_PipeGrindingConnector
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PipeGrindingConnector_C::ExecuteUbergraph_BP_PipeGrindingConnector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PipeGrindingConnector_C", "ExecuteUbergraph_BP_PipeGrindingConnector");

	Params::BP_PipeGrindingConnector_C_ExecuteUbergraph_BP_PipeGrindingConnector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PipeGrindingConnector_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PipeGrindingConnector_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.UpdateLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PipeGrindingConnector_C::UpdateLocation(const struct FVector& Location, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PipeGrindingConnector_C", "UpdateLocation");

	Params::BP_PipeGrindingConnector_C_UpdateLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.ReceiveUpdateZipLinePoint
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WorldLocation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Directioy                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Speeding                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PipeGrindingConnector_C::ReceiveUpdateZipLinePoint(const struct FVector& WorldLocation, const struct FVector& Directioy, bool Speeding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PipeGrindingConnector_C", "ReceiveUpdateZipLinePoint");

	Params::BP_PipeGrindingConnector_C_ReceiveUpdateZipLinePoint Parms{};

	Parms.WorldLocation = std::move(WorldLocation);
	Parms.Directioy = std::move(Directioy);
	Parms.Speeding = Speeding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.ReceiveDisconnected
// (Event, Public, BlueprintEvent)

void ABP_PipeGrindingConnector_C::ReceiveDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PipeGrindingConnector_C", "ReceiveDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.ReceiveConnected
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WorldLocation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PipeGrindingConnector_C::ReceiveConnected(const struct FVector& WorldLocation, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PipeGrindingConnector_C", "ReceiveConnected");

	Params::BP_PipeGrindingConnector_C_ReceiveConnected Parms{};

	Parms.WorldLocation = std::move(WorldLocation);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PipeGrindingConnector.BP_PipeGrindingConnector_C.SetConnectorVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PipeGrindingConnector_C::SetConnectorVisible(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PipeGrindingConnector_C", "SetConnectorVisible");

	Params::BP_PipeGrindingConnector_C_SetConnectorVisible Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}

}

