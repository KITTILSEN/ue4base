#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WND_Trading_DailyDeal

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WND_Trading_DailyDeal.WND_Trading_DailyDeal_C.FormatDailyDealResources
// 0x00D8 (0x00D8 - 0x0000)
struct WND_Trading_DailyDeal_C_FormatDailyDealResources final
{
public:
	TMap<class UResourceData*, int32>             Resources;                                         // 0x0000(0x0050)(Parm, OutParm)
	TMap<class UResourceData*, int32>             Result;                                            // 0x0050(0x0050)(Edit, BlueprintVisible)
	const class UResourceData*                    Temp_object_Variable;                              // 0x00A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UResourceData*                    Temp_object_Variable_1;                            // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDailyDeal                             CallFunc_GetDailyDeal_outDeal;                     // 0x00B0(0x0018)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55CD[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_Trading_DailyDeal_C_FormatDailyDealResources) == 0x000008, "Wrong alignment on WND_Trading_DailyDeal_C_FormatDailyDealResources");
static_assert(sizeof(WND_Trading_DailyDeal_C_FormatDailyDealResources) == 0x0000D8, "Wrong size on WND_Trading_DailyDeal_C_FormatDailyDealResources");
static_assert(offsetof(WND_Trading_DailyDeal_C_FormatDailyDealResources, Resources) == 0x000000, "Member 'WND_Trading_DailyDeal_C_FormatDailyDealResources::Resources' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_FormatDailyDealResources, Result) == 0x000050, "Member 'WND_Trading_DailyDeal_C_FormatDailyDealResources::Result' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_FormatDailyDealResources, Temp_object_Variable) == 0x0000A0, "Member 'WND_Trading_DailyDeal_C_FormatDailyDealResources::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_FormatDailyDealResources, Temp_object_Variable_1) == 0x0000A8, "Member 'WND_Trading_DailyDeal_C_FormatDailyDealResources::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_FormatDailyDealResources, CallFunc_GetDailyDeal_outDeal) == 0x0000B0, "Member 'WND_Trading_DailyDeal_C_FormatDailyDealResources::CallFunc_GetDailyDeal_outDeal' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_FormatDailyDealResources, K2Node_SwitchEnum_CmpSuccess) == 0x0000C8, "Member 'WND_Trading_DailyDeal_C_FormatDailyDealResources::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_FormatDailyDealResources, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000CC, "Member 'WND_Trading_DailyDeal_C_FormatDailyDealResources::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_FormatDailyDealResources, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0000D0, "Member 'WND_Trading_DailyDeal_C_FormatDailyDealResources::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");

// Function WND_Trading_DailyDeal.WND_Trading_DailyDeal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WND_Trading_DailyDeal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_Trading_DailyDeal_C_PreConstruct) == 0x000001, "Wrong alignment on WND_Trading_DailyDeal_C_PreConstruct");
static_assert(sizeof(WND_Trading_DailyDeal_C_PreConstruct) == 0x000001, "Wrong size on WND_Trading_DailyDeal_C_PreConstruct");
static_assert(offsetof(WND_Trading_DailyDeal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WND_Trading_DailyDeal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WND_Trading_DailyDeal.WND_Trading_DailyDeal_C.BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WND_Trading_DailyDeal_C_BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	class UBasic_ButtonCutCorner_C*               Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_Trading_DailyDeal_C_BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WND_Trading_DailyDeal_C_BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(WND_Trading_DailyDeal_C_BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong size on WND_Trading_DailyDeal_C_BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(WND_Trading_DailyDeal_C_BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WND_Trading_DailyDeal_C_BndEvt__B_Trade_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function WND_Trading_DailyDeal.WND_Trading_DailyDeal_C.OnResourceAmountChanged
// 0x0010 (0x0010 - 0x0000)
struct WND_Trading_DailyDeal_C_OnResourceAmountChanged final
{
public:
	class UResourceData*                          Resource;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentAmount;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_Trading_DailyDeal_C_OnResourceAmountChanged) == 0x000008, "Wrong alignment on WND_Trading_DailyDeal_C_OnResourceAmountChanged");
static_assert(sizeof(WND_Trading_DailyDeal_C_OnResourceAmountChanged) == 0x000010, "Wrong size on WND_Trading_DailyDeal_C_OnResourceAmountChanged");
static_assert(offsetof(WND_Trading_DailyDeal_C_OnResourceAmountChanged, Resource) == 0x000000, "Member 'WND_Trading_DailyDeal_C_OnResourceAmountChanged::Resource' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_OnResourceAmountChanged, CurrentAmount) == 0x000008, "Member 'WND_Trading_DailyDeal_C_OnResourceAmountChanged::CurrentAmount' has a wrong offset!");

// Function WND_Trading_DailyDeal.WND_Trading_DailyDeal_C.OnCreditsChanged
// 0x0004 (0x0004 - 0x0000)
struct WND_Trading_DailyDeal_C_OnCreditsChanged final
{
public:
	int32                                         Credits;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_Trading_DailyDeal_C_OnCreditsChanged) == 0x000004, "Wrong alignment on WND_Trading_DailyDeal_C_OnCreditsChanged");
static_assert(sizeof(WND_Trading_DailyDeal_C_OnCreditsChanged) == 0x000004, "Wrong size on WND_Trading_DailyDeal_C_OnCreditsChanged");
static_assert(offsetof(WND_Trading_DailyDeal_C_OnCreditsChanged, Credits) == 0x000000, "Member 'WND_Trading_DailyDeal_C_OnCreditsChanged::Credits' has a wrong offset!");

// Function WND_Trading_DailyDeal.WND_Trading_DailyDeal_C.ExecuteUbergraph_WND_Trading_DailyDeal
// 0x0338 (0x0338 - 0x0000)
struct WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55CE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_Trading_DailyDeal_C*               CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FYesNoPromptSettings                   K2Node_MakeStruct_YesNoPromptSettings;             // 0x0030(0x0040)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55CF[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_55D0[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D1[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Credits)>                K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_55D2[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_ButtonCutCorner_C*               K2Node_ComponentBoundEvent_Button;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BuyDailyDeal_ReturnValue;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D3[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UResourceData*                          K2Node_CustomEvent_resource;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_currentAmount;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCredits_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Credits;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D4[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDailyDeal                             CallFunc_GetDailyDeal_outDeal;                     // 0x00F8(0x0018)(NoDestructor)
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue_1;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D5[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class UResourceData* Resource, float CurrentAmount)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetResourceAmount_ReturnValue;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDailyDealBought_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D6[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D7[0x1];                                     // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D8[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0178(0x0018)()
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D9[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0198(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x01D8(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DA[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01F8(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DB[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0240(0x0018)()
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0260(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B0(0x0018)()
	TMap<class UResourceData*, int32>             CallFunc_FormatDailyDealResources_Resources;       // 0x02C8(0x0050)()
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UYesNoPromptAction*                     CallFunc_PromptPurchase_ReturnValue;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal) == 0x000008, "Wrong alignment on WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal");
static_assert(sizeof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal) == 0x000338, "Wrong size on WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, EntryPoint) == 0x000000, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::EntryPoint' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_MakeStruct_YesNoPromptSettings) == 0x000030, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_MakeStruct_YesNoPromptSettings' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_Event_IsDesignTime) == 0x000070, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_MenuColors_OutputColor) == 0x000074, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_MenuColors_OutputColor_1) == 0x000084, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_CreateDelegate_OutputDelegate_2) == 0x000094, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A8, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0000B0, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B4, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_ComponentBoundEvent_Button) == 0x0000C8, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_BuyDailyDeal_ReturnValue) == 0x0000D0, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_BuyDailyDeal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_GetFSDSaveGame_ReturnValue) == 0x0000D8, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_CustomEvent_resource) == 0x0000E0, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_CustomEvent_resource' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_CustomEvent_currentAmount) == 0x0000E8, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_CustomEvent_currentAmount' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_GetCredits_ReturnValue) == 0x0000EC, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_GetCredits_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_CustomEvent_Credits) == 0x0000F0, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_CustomEvent_Credits' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_GetDailyDeal_outDeal) == 0x0000F8, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_GetDailyDeal_outDeal' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_GetFSDSaveGame_ReturnValue_1) == 0x000110, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_GetFSDSaveGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000118, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00011C, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_SwitchEnum_CmpSuccess) == 0x000120, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000121, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000122, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_SwitchEnum_CmpSuccess_1) == 0x000123, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_CreateDelegate_OutputDelegate_4) == 0x000124, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_GetResourceAmount_ReturnValue) == 0x000134, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_GetResourceAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_IsDailyDealBought_ReturnValue) == 0x000138, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_IsDailyDealBought_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_UtcNow_ReturnValue) == 0x000140, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_SelectVisibility_IsVisible) == 0x000148, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_SelectVisibility_VisibilityChanged) == 0x000149, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_SelectVisibility_New_Visibility) == 0x00014A, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_BreakDateTime_Year) == 0x00014C, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_BreakDateTime_Month) == 0x000150, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_BreakDateTime_Day) == 0x000154, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_BreakDateTime_Hour) == 0x000158, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_BreakDateTime_Minute) == 0x00015C, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_BreakDateTime_Second) == 0x000160, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_BreakDateTime_Millisecond) == 0x000164, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Subtract_IntInt_ReturnValue) == 0x000168, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Max_ReturnValue) == 0x00016C, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000170, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Conv_IntToText_ReturnValue) == 0x000178, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Max_ReturnValue_1) == 0x000190, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_MakeStruct_FormatArgumentData) == 0x000198, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0001D8, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0001F0, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001F8, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Max_ReturnValue_2) == 0x000238, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000240, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_AddChildToOverlay_ReturnValue) == 0x000258, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_MakeStruct_FormatArgumentData_2) == 0x000260, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_MakeArray_Array) == 0x0002A0, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_Format_ReturnValue) == 0x0002B0, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_FormatDailyDealResources_Resources) == 0x0002C8, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_FormatDailyDealResources_Resources' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000318, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_PromptPurchase_ReturnValue) == 0x000320, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_PromptPurchase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_DynamicCast_AsPlayer_Character) == 0x000328, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, K2Node_DynamicCast_bSuccess) == 0x000330, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal, CallFunc_IsValid_ReturnValue) == 0x000331, "Member 'WND_Trading_DailyDeal_C_ExecuteUbergraph_WND_Trading_DailyDeal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

