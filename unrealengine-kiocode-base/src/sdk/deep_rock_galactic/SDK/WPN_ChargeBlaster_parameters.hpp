#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_ChargeBlaster

#include "Basic.hpp"

#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.Fade Out if Valid
// 0x0010 (0x0010 - 0x0000)
struct WPN_ChargeBlaster_C_Fade_Out_if_Valid final
{
public:
	class UAudioComponent*                        AC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WPN_ChargeBlaster_C_Fade_Out_if_Valid) == 0x000008, "Wrong alignment on WPN_ChargeBlaster_C_Fade_Out_if_Valid");
static_assert(sizeof(WPN_ChargeBlaster_C_Fade_Out_if_Valid) == 0x000010, "Wrong size on WPN_ChargeBlaster_C_Fade_Out_if_Valid");
static_assert(offsetof(WPN_ChargeBlaster_C_Fade_Out_if_Valid, AC) == 0x000000, "Member 'WPN_ChargeBlaster_C_Fade_Out_if_Valid::AC' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_Fade_Out_if_Valid, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WPN_ChargeBlaster_C_Fade_Out_if_Valid::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.HandleHeatAudio
// 0x0002 (0x0002 - 0x0000)
struct WPN_ChargeBlaster_C_HandleHeatAudio final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WPN_ChargeBlaster_C_HandleHeatAudio) == 0x000001, "Wrong alignment on WPN_ChargeBlaster_C_HandleHeatAudio");
static_assert(sizeof(WPN_ChargeBlaster_C_HandleHeatAudio) == 0x000002, "Wrong size on WPN_ChargeBlaster_C_HandleHeatAudio");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleHeatAudio, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WPN_ChargeBlaster_C_HandleHeatAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleHeatAudio, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'WPN_ChargeBlaster_C_HandleHeatAudio::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.HandleChargeAudio
// 0x0044 (0x0044 - 0x0000)
struct WPN_ChargeBlaster_C_HandleChargeAudio final
{
public:
	float                                         Charge;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentLevel;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxLevel;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WPN_ChargeBlaster_C_HandleChargeAudio) == 0x000004, "Wrong alignment on WPN_ChargeBlaster_C_HandleChargeAudio");
static_assert(sizeof(WPN_ChargeBlaster_C_HandleChargeAudio) == 0x000044, "Wrong size on WPN_ChargeBlaster_C_HandleChargeAudio");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, Charge) == 0x000000, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::Charge' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CurrentLevel) == 0x000004, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CurrentLevel' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, MaxLevel) == 0x000008, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::MaxLevel' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, Temp_int_Variable) == 0x00000C, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, Temp_float_Variable) == 0x000014, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, Temp_float_Variable_1) == 0x000018, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, Temp_float_Variable_2) == 0x00001C, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, Temp_float_Variable_3) == 0x000020, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CallFunc_IsPlaying_ReturnValue) == 0x000024, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, K2Node_Select_Default) == 0x00002C, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CallFunc_FTrunc_ReturnValue) == 0x00003C, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_HandleChargeAudio, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WPN_ChargeBlaster_C_HandleChargeAudio::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct WPN_ChargeBlaster_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_ChargeBlaster_C_UserConstructionScript) == 0x000008, "Wrong alignment on WPN_ChargeBlaster_C_UserConstructionScript");
static_assert(sizeof(WPN_ChargeBlaster_C_UserConstructionScript) == 0x000008, "Wrong size on WPN_ChargeBlaster_C_UserConstructionScript");
static_assert(offsetof(WPN_ChargeBlaster_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'WPN_ChargeBlaster_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.OnHeatChanged_Event_0
// 0x0004 (0x0004 - 0x0000)
struct WPN_ChargeBlaster_C_OnHeatChanged_Event_0 final
{
public:
	float                                         Charge;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_ChargeBlaster_C_OnHeatChanged_Event_0) == 0x000004, "Wrong alignment on WPN_ChargeBlaster_C_OnHeatChanged_Event_0");
static_assert(sizeof(WPN_ChargeBlaster_C_OnHeatChanged_Event_0) == 0x000004, "Wrong size on WPN_ChargeBlaster_C_OnHeatChanged_Event_0");
static_assert(offsetof(WPN_ChargeBlaster_C_OnHeatChanged_Event_0, Charge) == 0x000000, "Member 'WPN_ChargeBlaster_C_OnHeatChanged_Event_0::Charge' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.ChargeChanged
// 0x0004 (0x0004 - 0x0000)
struct WPN_ChargeBlaster_C_ChargeChanged final
{
public:
	float                                         Charge;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_ChargeBlaster_C_ChargeChanged) == 0x000004, "Wrong alignment on WPN_ChargeBlaster_C_ChargeChanged");
static_assert(sizeof(WPN_ChargeBlaster_C_ChargeChanged) == 0x000004, "Wrong size on WPN_ChargeBlaster_C_ChargeChanged");
static_assert(offsetof(WPN_ChargeBlaster_C_ChargeChanged, Charge) == 0x000000, "Member 'WPN_ChargeBlaster_C_ChargeChanged::Charge' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.ReceiveOverheatedChanged
// 0x0001 (0x0001 - 0x0000)
struct WPN_ChargeBlaster_C_ReceiveOverheatedChanged final
{
public:
	bool                                          IsOverheated;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WPN_ChargeBlaster_C_ReceiveOverheatedChanged) == 0x000001, "Wrong alignment on WPN_ChargeBlaster_C_ReceiveOverheatedChanged");
static_assert(sizeof(WPN_ChargeBlaster_C_ReceiveOverheatedChanged) == 0x000001, "Wrong size on WPN_ChargeBlaster_C_ReceiveOverheatedChanged");
static_assert(offsetof(WPN_ChargeBlaster_C_ReceiveOverheatedChanged, IsOverheated) == 0x000000, "Member 'WPN_ChargeBlaster_C_ReceiveOverheatedChanged::IsOverheated' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.OnSkinChanged
// 0x0008 (0x0008 - 0x0000)
struct WPN_ChargeBlaster_C_OnSkinChanged final
{
public:
	class USkinEffect*                            Skin;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_ChargeBlaster_C_OnSkinChanged) == 0x000008, "Wrong alignment on WPN_ChargeBlaster_C_OnSkinChanged");
static_assert(sizeof(WPN_ChargeBlaster_C_OnSkinChanged) == 0x000008, "Wrong size on WPN_ChargeBlaster_C_OnSkinChanged");
static_assert(offsetof(WPN_ChargeBlaster_C_OnSkinChanged, Skin) == 0x000000, "Member 'WPN_ChargeBlaster_C_OnSkinChanged::Skin' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.AddedToInventory
// 0x0008 (0x0008 - 0x0000)
struct WPN_ChargeBlaster_C_AddedToInventory final
{
public:
	class APlayerCharacter*                       ItemOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_ChargeBlaster_C_AddedToInventory) == 0x000008, "Wrong alignment on WPN_ChargeBlaster_C_AddedToInventory");
static_assert(sizeof(WPN_ChargeBlaster_C_AddedToInventory) == 0x000008, "Wrong size on WPN_ChargeBlaster_C_AddedToInventory");
static_assert(offsetof(WPN_ChargeBlaster_C_AddedToInventory, ItemOwner) == 0x000000, "Member 'WPN_ChargeBlaster_C_AddedToInventory::ItemOwner' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.ExecuteUbergraph_WPN_ChargeBlaster
// 0x00C0 (0x00C0 - 0x0000)
struct WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Charge)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_charge_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_charge;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501D[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_ChargeBlaster_Heat_C*    K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Heat; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_ChargeBlaster_Charge_C*  K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Charge; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_ChargeBlaster_AmmoCounter_C* K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Ammo_Counter; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsOverheated;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5020[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnFirstPersonEmitterAttached_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5021[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinEffect*                            K2Node_Event_skin;                                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5022[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_Event_ItemOwner;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5023[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_3;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5024[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float Charge)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster) == 0x000008, "Wrong alignment on WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster");
static_assert(sizeof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster) == 0x0000C0, "Wrong size on WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, EntryPoint) == 0x000000, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_CustomEvent_charge_1) == 0x000014, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_CustomEvent_charge_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_CustomEvent_charge) == 0x000018, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_CustomEvent_charge' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000020, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Heat) == 0x000028, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Heat' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000038, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Charge) == 0x000040, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Charge' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x000050, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Ammo_Counter) == 0x000058, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_DynamicCast_AsWeapon_Display_Charge_Blaster_Ammo_Counter' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_Event_IsOverheated) == 0x000061, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_Event_IsOverheated' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_SpawnFirstPersonEmitterAttached_ReturnValue) == 0x000068, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_SpawnFirstPersonEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_IsLocallyControlled_ReturnValue) == 0x000071, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_Event_skin) == 0x000078, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_Event_skin' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000080, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_Event_ItemOwner) == 0x000090, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_Event_ItemOwner' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000098, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_GetUserWidgetObject_ReturnValue_3) == 0x0000A0, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_GetUserWidgetObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000AC, "Member 'WPN_ChargeBlaster_C_ExecuteUbergraph_WPN_ChargeBlaster::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WPN_ChargeBlaster.WPN_ChargeBlaster_C.GetGearStatEntry
// 0x0978 (0x0978 - 0x0000)
struct WPN_ChargeBlaster_C_GetGearStatEntry final
{
public:
	class AFSDPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGearStatEntry>                 Stats;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CallFunc_GetUpgradeName_ReturnValue;               // 0x0018(0x0018)()
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry;            // 0x0038(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5025[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetUpgradeName_ReturnValue_1;             // 0x00A8(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5026[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry_1;          // 0x00D0(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue_1;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5027[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0140(0x0018)()
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry;             // 0x0160(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5028[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_1;           // 0x01D0(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_1;        // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5029[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_502A[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Generic_GearStatEntry_2;          // 0x0248(0x0068)()
	bool                                          CallFunc_UPGDESC_Generic_HasUpgradedValue_2;       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502B[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Projectile_GearStatEntry;         // 0x02B8(0x0068)()
	bool                                          CallFunc_UPGDESC_Projectile_HasUpgradedValue;      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502C[0x3];                                     // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_ChargedWeapon_GearStatEntry;      // 0x0328(0x0068)()
	bool                                          CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue;   // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502D[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Projectile_GearStatEntry_1;       // 0x0398(0x0068)()
	bool                                          CallFunc_UPGDESC_Projectile_HasUpgradedValue_1;    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502E[0x3];                                     // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_502F[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_ChargedProjectile_GearStatEntry;  // 0x0410(0x0068)()
	bool                                          CallFunc_UPGDESC_ChargedProjectile_HasUpgradedValue; // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5030[0x7];                                     // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_ChargedProjectile_GearStatEntry_1; // 0x0480(0x0068)()
	bool                                          CallFunc_UPGDESC_ChargedProjectile_HasUpgradedValue_1; // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5031[0x3];                                     // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5032[0x4];                                     // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_1;    // 0x04F8(0x0068)()
	bool                                          CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_1; // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5033[0x7];                                     // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_2;    // 0x0568(0x0068)()
	bool                                          CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_2; // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5034[0x3];                                     // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5035[0x4];                                     // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_3;    // 0x05E0(0x0068)()
	bool                                          CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_3; // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5036[0x7];                                     // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_4;    // 0x0650(0x0068)()
	bool                                          CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_4; // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5037[0x3];                                     // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5038[0x4];                                     // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_5;    // 0x06C8(0x0068)()
	bool                                          CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_5; // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5039[0x7];                                     // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_2;           // 0x0738(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_2;        // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_503A[0x3];                                     // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_13;                 // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_14;                 // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_503B[0x4];                                     // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_3;           // 0x07B0(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_3;        // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_503C[0x7];                                     // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         K2Node_MakeStruct_GearStatEntry;                   // 0x0820(0x0068)()
	int32                                         CallFunc_Array_Add_ReturnValue_15;                 // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_16;                 // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGearStatEntry                         CallFunc_UPGDESC_Damage_GearStatEntry_4;           // 0x0890(0x0068)()
	bool                                          CallFunc_UPGDESC_Damage_HasUpgradedValue_4;        // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_503D[0x7];                                     // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGearStatEntry                         CallFunc_UPGDESC_AmmoDriven_GearStatEntry;         // 0x0900(0x0068)()
	bool                                          CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades;        // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_503E[0x3];                                     // 0x0969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_17;                 // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_18;                 // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_ChargeBlaster_C_GetGearStatEntry) == 0x000008, "Wrong alignment on WPN_ChargeBlaster_C_GetGearStatEntry");
static_assert(sizeof(WPN_ChargeBlaster_C_GetGearStatEntry) == 0x000978, "Wrong size on WPN_ChargeBlaster_C_GetGearStatEntry");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, PlayerState) == 0x000000, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::PlayerState' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, Stats) == 0x000008, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::Stats' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_GetUpgradeName_ReturnValue) == 0x000018, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_GetUpgradeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry) == 0x000038, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue) == 0x0000A0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_GetUpgradeName_ReturnValue_1) == 0x0000A8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_GetUpgradeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_1) == 0x0000C8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry_1) == 0x0000D0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue_1) == 0x000138, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_1) == 0x00013C, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_MakeLiteralText_ReturnValue) == 0x000140, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_GetObjectClass_ReturnValue_2) == 0x000158, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry) == 0x000160, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue) == 0x0001C8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_1) == 0x0001D0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_1) == 0x000238, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_2) == 0x00023C, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_3) == 0x000240, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_GearStatEntry_2) == 0x000248, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Generic_HasUpgradedValue_2) == 0x0002B0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Generic_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_GearStatEntry) == 0x0002B8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_HasUpgradedValue) == 0x000320, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_4) == 0x000324, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_GearStatEntry) == 0x000328, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue) == 0x000390, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_GearStatEntry_1) == 0x000398, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Projectile_HasUpgradedValue_1) == 0x000400, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Projectile_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_5) == 0x000404, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_6) == 0x000408, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedProjectile_GearStatEntry) == 0x000410, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedProjectile_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedProjectile_HasUpgradedValue) == 0x000478, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedProjectile_HasUpgradedValue' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedProjectile_GearStatEntry_1) == 0x000480, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedProjectile_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedProjectile_HasUpgradedValue_1) == 0x0004E8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedProjectile_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_7) == 0x0004EC, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_8) == 0x0004F0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_1) == 0x0004F8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_1) == 0x000560, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_1' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_2) == 0x000568, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_2) == 0x0005D0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_9) == 0x0005D4, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_10) == 0x0005D8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_3) == 0x0005E0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_3) == 0x000648, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_3' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_4) == 0x000650, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_4' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_4) == 0x0006B8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_4' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_11) == 0x0006BC, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_12) == 0x0006C0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_5) == 0x0006C8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_GearStatEntry_5' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_5) == 0x000730, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_ChargedWeapon_HasUpgradedValue_5' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_2) == 0x000738, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_2) == 0x0007A0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_2' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_13) == 0x0007A4, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_14) == 0x0007A8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_3) == 0x0007B0, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_3' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_3) == 0x000818, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_3' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, K2Node_MakeStruct_GearStatEntry) == 0x000820, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::K2Node_MakeStruct_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_15) == 0x000888, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_16) == 0x00088C, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_GearStatEntry_4) == 0x000890, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_GearStatEntry_4' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_Damage_HasUpgradedValue_4) == 0x0008F8, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_Damage_HasUpgradedValue_4' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_GearStatEntry) == 0x000900, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_GearStatEntry' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades) == 0x000968, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_UPGDESC_AmmoDriven_HasAnyUpgrades' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_17) == 0x00096C, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WPN_ChargeBlaster_C_GetGearStatEntry, CallFunc_Array_Add_ReturnValue_18) == 0x000970, "Member 'WPN_ChargeBlaster_C_GetGearStatEntry::CallFunc_Array_Add_ReturnValue_18' has a wrong offset!");

}

