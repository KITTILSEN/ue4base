#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_DoubleDrills

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_DoubleDrills.WPN_DoubleDrills_C
// 0x0060 (0x0570 - 0x0510)
class AWPN_DoubleDrills_C final : public ADoubleDrillItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0510(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFirstPersonWidgetComponent*            Widget_Heat;                                       // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonWidgetComponent*            Widget_Fuel;                                       // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonStaticMeshComponent*        FirstPersonStaticMesh1;                            // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonStaticMeshComponent*        FirstPersonStaticMesh;                             // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OverheatingAudioScene;                             // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHeatMaterialComponent*                 HeatMaterial;                                      // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         NextSplatTime;                                     // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultFOV;                                        // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_Overheat_C*              OverheatWidget1;                                   // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_Overheat_C*              OverheaWidget2;                                    // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponDisplay_Drill_Heat_C*            OverheatWidget;                                    // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class USceneComponent* GetHeatingAudioSceneComponent();
	void OnTemperatureChanged(float Temperature, bool Param_Overheated);
	void Increase_FOV();
	void Decrease_FOV();
	void AddedToInventory(class APlayerCharacter* ItemOwner);
	void BP_OnDrillDamage();
	void OnStartDrilling();
	void OnStopDrilling();
	void Receive_Overheated();
	void ReceiveBeginPlay();
	void Gunsling();
	void RecieveCycledItem();
	void ExecuteUbergraph_WPN_DoubleDrills(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_DoubleDrills_C">();
	}
	static class AWPN_DoubleDrills_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_DoubleDrills_C>();
	}
};
static_assert(alignof(AWPN_DoubleDrills_C) == 0x000008, "Wrong alignment on AWPN_DoubleDrills_C");
static_assert(sizeof(AWPN_DoubleDrills_C) == 0x000570, "Wrong size on AWPN_DoubleDrills_C");
static_assert(offsetof(AWPN_DoubleDrills_C, UberGraphFrame) == 0x000510, "Member 'AWPN_DoubleDrills_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, Widget_Heat) == 0x000518, "Member 'AWPN_DoubleDrills_C::Widget_Heat' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, Widget_Fuel) == 0x000520, "Member 'AWPN_DoubleDrills_C::Widget_Fuel' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, FirstPersonStaticMesh1) == 0x000528, "Member 'AWPN_DoubleDrills_C::FirstPersonStaticMesh1' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, FirstPersonStaticMesh) == 0x000530, "Member 'AWPN_DoubleDrills_C::FirstPersonStaticMesh' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, OverheatingAudioScene) == 0x000538, "Member 'AWPN_DoubleDrills_C::OverheatingAudioScene' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, HeatMaterial) == 0x000540, "Member 'AWPN_DoubleDrills_C::HeatMaterial' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, CrosshairAggregator) == 0x000548, "Member 'AWPN_DoubleDrills_C::CrosshairAggregator' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, NextSplatTime) == 0x000550, "Member 'AWPN_DoubleDrills_C::NextSplatTime' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, DefaultFOV) == 0x000554, "Member 'AWPN_DoubleDrills_C::DefaultFOV' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, OverheatWidget1) == 0x000558, "Member 'AWPN_DoubleDrills_C::OverheatWidget1' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, OverheaWidget2) == 0x000560, "Member 'AWPN_DoubleDrills_C::OverheaWidget2' has a wrong offset!");
static_assert(offsetof(AWPN_DoubleDrills_C, OverheatWidget) == 0x000568, "Member 'AWPN_DoubleDrills_C::OverheatWidget' has a wrong offset!");

}

