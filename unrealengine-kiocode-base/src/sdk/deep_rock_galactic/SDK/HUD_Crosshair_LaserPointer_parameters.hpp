#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Crosshair_LaserPointer

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function HUD_Crosshair_LaserPointer.HUD_Crosshair_LaserPointer_C.SetDotVisible
// 0x0004 (0x0004 - 0x0000)
struct HUD_Crosshair_LaserPointer_C_SetDotVisible final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Crosshair_LaserPointer_C_SetDotVisible) == 0x000001, "Wrong alignment on HUD_Crosshair_LaserPointer_C_SetDotVisible");
static_assert(sizeof(HUD_Crosshair_LaserPointer_C_SetDotVisible) == 0x000004, "Wrong size on HUD_Crosshair_LaserPointer_C_SetDotVisible");
static_assert(offsetof(HUD_Crosshair_LaserPointer_C_SetDotVisible, Param_IsVisible) == 0x000000, "Member 'HUD_Crosshair_LaserPointer_C_SetDotVisible::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_LaserPointer_C_SetDotVisible, CallFunc_SelectVisibility_IsVisible) == 0x000001, "Member 'HUD_Crosshair_LaserPointer_C_SetDotVisible::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_LaserPointer_C_SetDotVisible, CallFunc_SelectVisibility_VisibilityChanged) == 0x000002, "Member 'HUD_Crosshair_LaserPointer_C_SetDotVisible::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_Crosshair_LaserPointer_C_SetDotVisible, CallFunc_SelectVisibility_New_Visibility) == 0x000003, "Member 'HUD_Crosshair_LaserPointer_C_SetDotVisible::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function HUD_Crosshair_LaserPointer.HUD_Crosshair_LaserPointer_C.ExecuteUbergraph_HUD_Crosshair_LaserPointer
// 0x0004 (0x0004 - 0x0000)
struct HUD_Crosshair_LaserPointer_C_ExecuteUbergraph_HUD_Crosshair_LaserPointer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Crosshair_LaserPointer_C_ExecuteUbergraph_HUD_Crosshair_LaserPointer) == 0x000004, "Wrong alignment on HUD_Crosshair_LaserPointer_C_ExecuteUbergraph_HUD_Crosshair_LaserPointer");
static_assert(sizeof(HUD_Crosshair_LaserPointer_C_ExecuteUbergraph_HUD_Crosshair_LaserPointer) == 0x000004, "Wrong size on HUD_Crosshair_LaserPointer_C_ExecuteUbergraph_HUD_Crosshair_LaserPointer");
static_assert(offsetof(HUD_Crosshair_LaserPointer_C_ExecuteUbergraph_HUD_Crosshair_LaserPointer, EntryPoint) == 0x000000, "Member 'HUD_Crosshair_LaserPointer_C_ExecuteUbergraph_HUD_Crosshair_LaserPointer::EntryPoint' has a wrong offset!");

}

