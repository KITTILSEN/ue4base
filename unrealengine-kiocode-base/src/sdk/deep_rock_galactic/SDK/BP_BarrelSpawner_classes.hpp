#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BarrelSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BarrelSpawner.BP_BarrelSpawner_C
// 0x0060 (0x0288 - 0x0228)
class ABP_BarrelSpawner_C final : public ABarrelSpawner
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Mesh_Screen;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget_Barrel_Counter;                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_Phys_Barrel01_C*                    LastBarrel;                                        // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BarrelsSpawned;                                    // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnCicle;                                        // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnFrequency;                                    // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReadyToReset;                                      // 0x0274(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52D4[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSpawnBarrelKicked;                               // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ReceiveBeginPlay();
	void SpawnBarrel();
	void BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnBarrelKicked(class APlayerCharacter* User, EInputKeys Key);
	void Reset();
	void OnRep_BarrelCount();
	void ExecuteUbergraph_BP_BarrelSpawner(int32 EntryPoint);
	void OnSpawnBarrelKicked__DelegateSignature(class APlayerCharacter* Kicked_by);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BarrelSpawner_C">();
	}
	static class ABP_BarrelSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BarrelSpawner_C>();
	}
};
static_assert(alignof(ABP_BarrelSpawner_C) == 0x000008, "Wrong alignment on ABP_BarrelSpawner_C");
static_assert(sizeof(ABP_BarrelSpawner_C) == 0x000288, "Wrong size on ABP_BarrelSpawner_C");
static_assert(offsetof(ABP_BarrelSpawner_C, UberGraphFrame) == 0x000228, "Member 'ABP_BarrelSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, Mesh_Screen) == 0x000230, "Member 'ABP_BarrelSpawner_C::Mesh_Screen' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, Widget_Barrel_Counter) == 0x000238, "Member 'ABP_BarrelSpawner_C::Widget_Barrel_Counter' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, Decal) == 0x000240, "Member 'ABP_BarrelSpawner_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, Box) == 0x000248, "Member 'ABP_BarrelSpawner_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, Billboard) == 0x000250, "Member 'ABP_BarrelSpawner_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, DefaultSceneRoot) == 0x000258, "Member 'ABP_BarrelSpawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, LastBarrel) == 0x000260, "Member 'ABP_BarrelSpawner_C::LastBarrel' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, BarrelsSpawned) == 0x000268, "Member 'ABP_BarrelSpawner_C::BarrelsSpawned' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, SpawnCicle) == 0x00026C, "Member 'ABP_BarrelSpawner_C::SpawnCicle' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, SpawnFrequency) == 0x000270, "Member 'ABP_BarrelSpawner_C::SpawnFrequency' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, ReadyToReset) == 0x000274, "Member 'ABP_BarrelSpawner_C::ReadyToReset' has a wrong offset!");
static_assert(offsetof(ABP_BarrelSpawner_C, OnSpawnBarrelKicked) == 0x000278, "Member 'ABP_BarrelSpawner_C::OnSpawnBarrelKicked' has a wrong offset!");

}

