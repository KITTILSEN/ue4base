#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_Option

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Basic_Option.Basic_Option_C.ExecuteUbergraph_Basic_Option
// 0x00D0 (0x00D0 - 0x0000)
struct Basic_Option_C_ExecuteUbergraph_Basic_Option final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C64[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C65[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_3;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0028)()
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor;         // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor_1;       // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Option_C_ExecuteUbergraph_Basic_Option) == 0x000008, "Wrong alignment on Basic_Option_C_ExecuteUbergraph_Basic_Option");
static_assert(sizeof(Basic_Option_C_ExecuteUbergraph_Basic_Option) == 0x0000D0, "Wrong size on Basic_Option_C_ExecuteUbergraph_Basic_Option");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, EntryPoint) == 0x000000, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, K2Node_Event_MyGeometry) == 0x000008, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, K2Node_Event_InDeltaTime) == 0x000040, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, CallFunc_IsHovered_ReturnValue) == 0x000044, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000045, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, CallFunc_MenuColors_OutputColor) == 0x000048, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, CallFunc_MenuColors_OutputColor_1) == 0x000058, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, CallFunc_MenuColors_OutputColor_2) == 0x000068, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, CallFunc_MenuColors_OutputColor_3) == 0x000078, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::CallFunc_MenuColors_OutputColor_3' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, CallFunc_MenuColorsAndOpacity_OutputColor) == 0x0000B0, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::CallFunc_MenuColorsAndOpacity_OutputColor' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_ExecuteUbergraph_Basic_Option, CallFunc_MenuColorsAndOpacity_OutputColor_1) == 0x0000C0, "Member 'Basic_Option_C_ExecuteUbergraph_Basic_Option::CallFunc_MenuColorsAndOpacity_OutputColor_1' has a wrong offset!");

// Function Basic_Option.Basic_Option_C.Tick
// 0x003C (0x003C - 0x0000)
struct Basic_Option_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Option_C_Tick) == 0x000004, "Wrong alignment on Basic_Option_C_Tick");
static_assert(sizeof(Basic_Option_C_Tick) == 0x00003C, "Wrong size on Basic_Option_C_Tick");
static_assert(offsetof(Basic_Option_C_Tick, MyGeometry) == 0x000000, "Member 'Basic_Option_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_Tick, InDeltaTime) == 0x000038, "Member 'Basic_Option_C_Tick::InDeltaTime' has a wrong offset!");

// Function Basic_Option.Basic_Option_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_Option_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_Option_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_Option_C_PreConstruct");
static_assert(sizeof(Basic_Option_C_PreConstruct) == 0x000001, "Wrong size on Basic_Option_C_PreConstruct");
static_assert(offsetof(Basic_Option_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_Option_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Basic_Option.Basic_Option_C.SetOptionText
// 0x0030 (0x0030 - 0x0000)
struct Basic_Option_C_SetOptionText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
};
static_assert(alignof(Basic_Option_C_SetOptionText) == 0x000008, "Wrong alignment on Basic_Option_C_SetOptionText");
static_assert(sizeof(Basic_Option_C_SetOptionText) == 0x000030, "Wrong size on Basic_Option_C_SetOptionText");
static_assert(offsetof(Basic_Option_C_SetOptionText, InText) == 0x000000, "Member 'Basic_Option_C_SetOptionText::InText' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_SetOptionText, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'Basic_Option_C_SetOptionText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function Basic_Option.Basic_Option_C.SetIndent
// 0x0020 (0x0020 - 0x0000)
struct Basic_Option_C_SetIndent final
{
public:
	int32                                         InIndent;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Option_C_SetIndent) == 0x000008, "Wrong alignment on Basic_Option_C_SetIndent");
static_assert(sizeof(Basic_Option_C_SetIndent) == 0x000020, "Wrong size on Basic_Option_C_SetIndent");
static_assert(offsetof(Basic_Option_C_SetIndent, InIndent) == 0x000000, "Member 'Basic_Option_C_SetIndent::InIndent' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_SetIndent, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'Basic_Option_C_SetIndent::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_SetIndent, K2Node_MakeStruct_Margin) == 0x000008, "Member 'Basic_Option_C_SetIndent::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_SetIndent, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000018, "Member 'Basic_Option_C_SetIndent::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");

// Function Basic_Option.Basic_Option_C.SetContentLayout
// 0x0028 (0x0028 - 0x0000)
struct Basic_Option_C_SetContentLayout final
{
public:
	float                                         InLeftPadding;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          InHorizontalAlignment;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C66[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Option_C_SetContentLayout) == 0x000008, "Wrong alignment on Basic_Option_C_SetContentLayout");
static_assert(sizeof(Basic_Option_C_SetContentLayout) == 0x000028, "Wrong size on Basic_Option_C_SetContentLayout");
static_assert(offsetof(Basic_Option_C_SetContentLayout, InLeftPadding) == 0x000000, "Member 'Basic_Option_C_SetContentLayout::InLeftPadding' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_SetContentLayout, InHorizontalAlignment) == 0x000004, "Member 'Basic_Option_C_SetContentLayout::InHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_SetContentLayout, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'Basic_Option_C_SetContentLayout::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_SetContentLayout, K2Node_MakeStruct_Margin) == 0x000010, "Member 'Basic_Option_C_SetContentLayout::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(Basic_Option_C_SetContentLayout, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000020, "Member 'Basic_Option_C_SetContentLayout::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");

}

