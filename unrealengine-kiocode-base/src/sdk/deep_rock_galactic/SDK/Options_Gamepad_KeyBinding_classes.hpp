#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_Gamepad_KeyBinding

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Options_Gamepad_KeyBinding.Options_Gamepad_KeyBinding_C
// 0x0060 (0x02C0 - 0x0260)
class UOptions_Gamepad_KeyBinding_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Error;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBasic_Option_C*                        Basic_Option;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_AdvancedLabel_C*                    LabelInfo;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOptions_Gamepad_KeyCapture_C*          UI_KeyCapture_Primary;                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FCustomKeySetting                      ButtonSettings;                                    // 0x0288(0x0038)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_Options_Gamepad_KeyBinding(int32 EntryPoint);
	void BndEvt__UI_KeyCapture_Primary_K2Node_ComponentBoundEvent_0_OnCapturingChanged__DelegateSignature(bool InCapturing);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Options_Gamepad_KeyBinding_C">();
	}
	static class UOptions_Gamepad_KeyBinding_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptions_Gamepad_KeyBinding_C>();
	}
};
static_assert(alignof(UOptions_Gamepad_KeyBinding_C) == 0x000008, "Wrong alignment on UOptions_Gamepad_KeyBinding_C");
static_assert(sizeof(UOptions_Gamepad_KeyBinding_C) == 0x0002C0, "Wrong size on UOptions_Gamepad_KeyBinding_C");
static_assert(offsetof(UOptions_Gamepad_KeyBinding_C, UberGraphFrame) == 0x000260, "Member 'UOptions_Gamepad_KeyBinding_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOptions_Gamepad_KeyBinding_C, Error) == 0x000268, "Member 'UOptions_Gamepad_KeyBinding_C::Error' has a wrong offset!");
static_assert(offsetof(UOptions_Gamepad_KeyBinding_C, Basic_Option) == 0x000270, "Member 'UOptions_Gamepad_KeyBinding_C::Basic_Option' has a wrong offset!");
static_assert(offsetof(UOptions_Gamepad_KeyBinding_C, LabelInfo) == 0x000278, "Member 'UOptions_Gamepad_KeyBinding_C::LabelInfo' has a wrong offset!");
static_assert(offsetof(UOptions_Gamepad_KeyBinding_C, UI_KeyCapture_Primary) == 0x000280, "Member 'UOptions_Gamepad_KeyBinding_C::UI_KeyCapture_Primary' has a wrong offset!");
static_assert(offsetof(UOptions_Gamepad_KeyBinding_C, ButtonSettings) == 0x000288, "Member 'UOptions_Gamepad_KeyBinding_C::ButtonSettings' has a wrong offset!");

}

