#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BoscoStateDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BoscoStateDisplay.BP_BoscoStateDisplay_C
// 0x0060 (0x0280 - 0x0220)
class ABP_BoscoStateDisplay_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   BackPlane;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FrontPlane;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MiningMaterial;                                    // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      FightingMaterial;                                  // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      LightingMaterial;                                  // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      RepairingMaterial;                                 // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      FollowTargetMaterial;                              // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      RevivingMaterial;                                  // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CleaningMaterial;                                  // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetMaterial(class UMaterialInstance* NewParam);
	void SetState(EDroneAIState State);
	void ReceiveBeginPlay();
	void FollowTargetChanged(class AActor* FollowTarget);
	void SetupFollowtargetDelegate(class ABoscoController* NewParam);
	void ExecuteUbergraph_BP_BoscoStateDisplay(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BoscoStateDisplay_C">();
	}
	static class ABP_BoscoStateDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BoscoStateDisplay_C>();
	}
};
static_assert(alignof(ABP_BoscoStateDisplay_C) == 0x000008, "Wrong alignment on ABP_BoscoStateDisplay_C");
static_assert(sizeof(ABP_BoscoStateDisplay_C) == 0x000280, "Wrong size on ABP_BoscoStateDisplay_C");
static_assert(offsetof(ABP_BoscoStateDisplay_C, UberGraphFrame) == 0x000220, "Member 'ABP_BoscoStateDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, BackPlane) == 0x000228, "Member 'ABP_BoscoStateDisplay_C::BackPlane' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, FrontPlane) == 0x000230, "Member 'ABP_BoscoStateDisplay_C::FrontPlane' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, Plane) == 0x000238, "Member 'ABP_BoscoStateDisplay_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_BoscoStateDisplay_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, MiningMaterial) == 0x000248, "Member 'ABP_BoscoStateDisplay_C::MiningMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, FightingMaterial) == 0x000250, "Member 'ABP_BoscoStateDisplay_C::FightingMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, LightingMaterial) == 0x000258, "Member 'ABP_BoscoStateDisplay_C::LightingMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, RepairingMaterial) == 0x000260, "Member 'ABP_BoscoStateDisplay_C::RepairingMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, FollowTargetMaterial) == 0x000268, "Member 'ABP_BoscoStateDisplay_C::FollowTargetMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, RevivingMaterial) == 0x000270, "Member 'ABP_BoscoStateDisplay_C::RevivingMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BoscoStateDisplay_C, CleaningMaterial) == 0x000278, "Member 'ABP_BoscoStateDisplay_C::CleaningMaterial' has a wrong offset!");

}

