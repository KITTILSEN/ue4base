#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataCell_SpaceRig

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_DataCell_SpaceRig.BP_DataCell_SpaceRig_C.Receive_OnDeposited
// 0x0010 (0x0010 - 0x0000)
struct BP_DataCell_SpaceRig_C_Receive_OnDeposited final
{
public:
	class APlayerCharacter*                       FromPlayer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ToActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DataCell_SpaceRig_C_Receive_OnDeposited) == 0x000008, "Wrong alignment on BP_DataCell_SpaceRig_C_Receive_OnDeposited");
static_assert(sizeof(BP_DataCell_SpaceRig_C_Receive_OnDeposited) == 0x000010, "Wrong size on BP_DataCell_SpaceRig_C_Receive_OnDeposited");
static_assert(offsetof(BP_DataCell_SpaceRig_C_Receive_OnDeposited, FromPlayer) == 0x000000, "Member 'BP_DataCell_SpaceRig_C_Receive_OnDeposited::FromPlayer' has a wrong offset!");
static_assert(offsetof(BP_DataCell_SpaceRig_C_Receive_OnDeposited, ToActor) == 0x000008, "Member 'BP_DataCell_SpaceRig_C_Receive_OnDeposited::ToActor' has a wrong offset!");

// Function BP_DataCell_SpaceRig.BP_DataCell_SpaceRig_C.UpdateAttachState
// 0x0001 (0x0001 - 0x0000)
struct BP_DataCell_SpaceRig_C_UpdateAttachState final
{
public:
	bool                                          Attached;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DataCell_SpaceRig_C_UpdateAttachState) == 0x000001, "Wrong alignment on BP_DataCell_SpaceRig_C_UpdateAttachState");
static_assert(sizeof(BP_DataCell_SpaceRig_C_UpdateAttachState) == 0x000001, "Wrong size on BP_DataCell_SpaceRig_C_UpdateAttachState");
static_assert(offsetof(BP_DataCell_SpaceRig_C_UpdateAttachState, Attached) == 0x000000, "Member 'BP_DataCell_SpaceRig_C_UpdateAttachState::Attached' has a wrong offset!");

// Function BP_DataCell_SpaceRig.BP_DataCell_SpaceRig_C.ExecuteUbergraph_BP_DataCell_SpaceRig
// 0x0028 (0x0028 - 0x0000)
struct BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47BB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_Event_fromPlayer;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_toActor;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Attached;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47BC[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonsSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig) == 0x000008, "Wrong alignment on BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig");
static_assert(sizeof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig) == 0x000028, "Wrong size on BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig");
static_assert(offsetof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig, EntryPoint) == 0x000000, "Member 'BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig, K2Node_Event_fromPlayer) == 0x000008, "Member 'BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig::K2Node_Event_fromPlayer' has a wrong offset!");
static_assert(offsetof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig, K2Node_Event_toActor) == 0x000010, "Member 'BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig::K2Node_Event_toActor' has a wrong offset!");
static_assert(offsetof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig, CallFunc_HasAuthority_ReturnValue_1) == 0x000018, "Member 'BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig, K2Node_Event_Attached) == 0x000019, "Member 'BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig::K2Node_Event_Attached' has a wrong offset!");
static_assert(offsetof(BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_DataCell_SpaceRig_C_ExecuteUbergraph_BP_DataCell_SpaceRig::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

}

