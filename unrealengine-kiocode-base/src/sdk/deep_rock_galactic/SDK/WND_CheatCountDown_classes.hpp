#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WND_CheatCountDown

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WND_CheatCountDown.WND_CheatCountDown_C
// 0x0018 (0x02B8 - 0x02A0)
class UWND_CheatCountDown_C final : public UWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             CountdownText;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CountDownTimer;                                    // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WND_CheatCountDown(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WND_CheatCountDown_C">();
	}
	static class UWND_CheatCountDown_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWND_CheatCountDown_C>();
	}
};
static_assert(alignof(UWND_CheatCountDown_C) == 0x000008, "Wrong alignment on UWND_CheatCountDown_C");
static_assert(sizeof(UWND_CheatCountDown_C) == 0x0002B8, "Wrong size on UWND_CheatCountDown_C");
static_assert(offsetof(UWND_CheatCountDown_C, UberGraphFrame) == 0x0002A0, "Member 'UWND_CheatCountDown_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWND_CheatCountDown_C, CountdownText) == 0x0002A8, "Member 'UWND_CheatCountDown_C::CountdownText' has a wrong offset!");
static_assert(offsetof(UWND_CheatCountDown_C, CountDownTimer) == 0x0002B0, "Member 'UWND_CheatCountDown_C::CountDownTimer' has a wrong offset!");

}

