#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TSK_FindRandomPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "FSD_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TSK_FindRandomPoint.TSK_FindRandomPoint_C
// 0x0040 (0x00E8 - 0x00A8)
class UTSK_FindRandomPoint_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 LocationKey;                                       // 0x00B0(0x0028)(Edit, BlueprintVisible)
	float                                         Distance;                                          // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SnapToCeiling;                                     // 0x00DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EOffsetFrom                                   OffsetFrom;                                        // 0x00DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9B[0x2];                                     // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OffsetFromDistance;                                // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Snap(bool Param_SnapToCeiling, class UDeepPathfinderMovement* Pathfinder, struct FVector& Location);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_TSK_FindRandomPoint(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TSK_FindRandomPoint_C">();
	}
	static class UTSK_FindRandomPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTSK_FindRandomPoint_C>();
	}
};
static_assert(alignof(UTSK_FindRandomPoint_C) == 0x000008, "Wrong alignment on UTSK_FindRandomPoint_C");
static_assert(sizeof(UTSK_FindRandomPoint_C) == 0x0000E8, "Wrong size on UTSK_FindRandomPoint_C");
static_assert(offsetof(UTSK_FindRandomPoint_C, UberGraphFrame) == 0x0000A8, "Member 'UTSK_FindRandomPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPoint_C, LocationKey) == 0x0000B0, "Member 'UTSK_FindRandomPoint_C::LocationKey' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPoint_C, Distance) == 0x0000D8, "Member 'UTSK_FindRandomPoint_C::Distance' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPoint_C, SnapToCeiling) == 0x0000DC, "Member 'UTSK_FindRandomPoint_C::SnapToCeiling' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPoint_C, OffsetFrom) == 0x0000DD, "Member 'UTSK_FindRandomPoint_C::OffsetFrom' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPoint_C, OffsetFromDistance) == 0x0000E0, "Member 'UTSK_FindRandomPoint_C::OffsetFromDistance' has a wrong offset!");

}

