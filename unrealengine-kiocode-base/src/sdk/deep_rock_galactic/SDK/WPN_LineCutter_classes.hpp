#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WPN_LineCutter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WPN_LineCutter.WPN_LineCutter_C
// 0x00A0 (0x0848 - 0x07A8)
class AWPN_LineCutter_C final : public ALineCutter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        HomingTarget;                                      // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonWidgetComponent*            Widget_TotalAmmo;                                  // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonWidgetComponent*            Widget_CurrentClip;                                // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonParticleSystemComponent*    FP_P_Plasma_Beam_Right;                            // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   MuzzleLight;                                       // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Line_Light;                                        // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFirstPersonParticleSystemComponent*    FP_P_Plasma_Beam;                                  // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   CrosshairAggregator;                               // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileLauncherComponent*           ProjectileLauncher;                                // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Flicker_Brightness_Intensity_E04C79F0493C5086E3B612961CA53D93; // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Flicker_Brightness__Direction_E04C79F0493C5086E3B612961CA53D93; // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B4[0x3];                                     // 0x07FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Flicker_Brightness;                                // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageFrequency;                                   // 0x0808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B5[0x4];                                     // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APRJ_LineCutter2_C*                     CurrentProjectile;                                 // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HomingTraceDistance;                               // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HomingSteeringStrength;                            // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HomingTimer;                                       // 0x0820(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APRJ_LineCutter2_C*                     HomingProjectile;                                  // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HomingTargetHit;                                   // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HomingLastRotation;                                // 0x0838(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Get_Homing_Target_Location(struct FVector* OutLocation);
	void GetHomingIgnoreList(TArray<class AActor*>* OutTargets);
	void UserConstructionScript();
	void Flicker_Brightness__FinishedFunc();
	void Flicker_Brightness__UpdateFunc();
	void OnFireWhileLastProjectileAlive(class ALineCutterProjectile* Projectile);
	void BndEvt__WPN_LineCutter_ProjectileLauncher_K2Node_ComponentBoundEvent_0_ProjectileSpawned__DelegateSignature(class AProjectileBase* Projectile);
	void UpdateHomingTarget();
	void StopHoming();
	void Server_SetHomingLocation(const struct FVector_NetQuantize& HomingLocation);
	void OnHomingHit(const struct FHitResult& Result);
	void RecieveStopUsing();
	void ReceiveBeginPlay();
	void Server_StopHoming(class AProjectile* InProjectile);
	void All_SetHomingLocation(const struct FVector_NetQuantize& InLocation);
	void All_StopHoming(class AProjectile* InProjectile);
	void ExecuteUbergraph_WPN_LineCutter(int32 EntryPoint);

	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WPN_LineCutter_C">();
	}
	static class AWPN_LineCutter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWPN_LineCutter_C>();
	}
};
static_assert(alignof(AWPN_LineCutter_C) == 0x000008, "Wrong alignment on AWPN_LineCutter_C");
static_assert(sizeof(AWPN_LineCutter_C) == 0x000848, "Wrong size on AWPN_LineCutter_C");
static_assert(offsetof(AWPN_LineCutter_C, UberGraphFrame) == 0x0007A8, "Member 'AWPN_LineCutter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, HomingTarget) == 0x0007B0, "Member 'AWPN_LineCutter_C::HomingTarget' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, Widget_TotalAmmo) == 0x0007B8, "Member 'AWPN_LineCutter_C::Widget_TotalAmmo' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, Widget_CurrentClip) == 0x0007C0, "Member 'AWPN_LineCutter_C::Widget_CurrentClip' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, FP_P_Plasma_Beam_Right) == 0x0007C8, "Member 'AWPN_LineCutter_C::FP_P_Plasma_Beam_Right' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, MuzzleLight) == 0x0007D0, "Member 'AWPN_LineCutter_C::MuzzleLight' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, Line_Light) == 0x0007D8, "Member 'AWPN_LineCutter_C::Line_Light' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, FP_P_Plasma_Beam) == 0x0007E0, "Member 'AWPN_LineCutter_C::FP_P_Plasma_Beam' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, CrosshairAggregator) == 0x0007E8, "Member 'AWPN_LineCutter_C::CrosshairAggregator' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, ProjectileLauncher) == 0x0007F0, "Member 'AWPN_LineCutter_C::ProjectileLauncher' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, Flicker_Brightness_Intensity_E04C79F0493C5086E3B612961CA53D93) == 0x0007F8, "Member 'AWPN_LineCutter_C::Flicker_Brightness_Intensity_E04C79F0493C5086E3B612961CA53D93' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, Flicker_Brightness__Direction_E04C79F0493C5086E3B612961CA53D93) == 0x0007FC, "Member 'AWPN_LineCutter_C::Flicker_Brightness__Direction_E04C79F0493C5086E3B612961CA53D93' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, Flicker_Brightness) == 0x000800, "Member 'AWPN_LineCutter_C::Flicker_Brightness' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, DamageFrequency) == 0x000808, "Member 'AWPN_LineCutter_C::DamageFrequency' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, CurrentProjectile) == 0x000810, "Member 'AWPN_LineCutter_C::CurrentProjectile' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, HomingTraceDistance) == 0x000818, "Member 'AWPN_LineCutter_C::HomingTraceDistance' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, HomingSteeringStrength) == 0x00081C, "Member 'AWPN_LineCutter_C::HomingSteeringStrength' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, HomingTimer) == 0x000820, "Member 'AWPN_LineCutter_C::HomingTimer' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, HomingProjectile) == 0x000828, "Member 'AWPN_LineCutter_C::HomingProjectile' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, HomingTargetHit) == 0x000830, "Member 'AWPN_LineCutter_C::HomingTargetHit' has a wrong offset!");
static_assert(offsetof(AWPN_LineCutter_C, HomingLastRotation) == 0x000838, "Member 'AWPN_LineCutter_C::HomingLastRotation' has a wrong offset!");

}

