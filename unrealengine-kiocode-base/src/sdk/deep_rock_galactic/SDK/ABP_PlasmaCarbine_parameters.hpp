#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlasmaCarbine

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_PlasmaCarbine.ABP_PlasmaCarbine_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_PlasmaCarbine_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PlasmaCarbine_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_PlasmaCarbine_C_AnimGraph");
static_assert(sizeof(ABP_PlasmaCarbine_C_AnimGraph) == 0x000010, "Wrong size on ABP_PlasmaCarbine_C_AnimGraph");
static_assert(offsetof(ABP_PlasmaCarbine_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_PlasmaCarbine_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_PlasmaCarbine.ABP_PlasmaCarbine_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_PlasmaCarbine_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlasmaCarbine_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_PlasmaCarbine_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_PlasmaCarbine_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_PlasmaCarbine_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_PlasmaCarbine_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_PlasmaCarbine_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_PlasmaCarbine.ABP_PlasmaCarbine_C.ExecuteUbergraph_ABP_PlasmaCarbine
// 0x0020 (0x0020 - 0x0000)
struct ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5337[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine) == 0x000004, "Wrong alignment on ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine");
static_assert(sizeof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine) == 0x000020, "Wrong size on ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine");
static_assert(offsetof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine, EntryPoint) == 0x000000, "Member 'ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine, Temp_float_Variable) == 0x000004, "Member 'ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine, Temp_bool_Variable) == 0x00000C, "Member 'ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine, K2Node_Event_DeltaTimeX) == 0x000010, "Member 'ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine, Temp_float_Variable_1) == 0x000014, "Member 'ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine, K2Node_Select_Default) == 0x000018, "Member 'ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine, CallFunc_FInterpTo_ReturnValue) == 0x00001C, "Member 'ABP_PlasmaCarbine_C_ExecuteUbergraph_ABP_PlasmaCarbine::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

}

