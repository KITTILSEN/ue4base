#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Check_ServerGameType

#include "Basic.hpp"

#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function Check_ServerGameType.Check_ServerGameType_C.Verify
// 0x0018 (0x0018 - 0x0000)
struct Check_ServerGameType_C_Verify final
{
public:
	TArray<EGameType>                             InSelectedGameTypes;                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Check_ServerGameType_C_Verify) == 0x000008, "Wrong alignment on Check_ServerGameType_C_Verify");
static_assert(sizeof(Check_ServerGameType_C_Verify) == 0x000018, "Wrong size on Check_ServerGameType_C_Verify");
static_assert(offsetof(Check_ServerGameType_C_Verify, InSelectedGameTypes) == 0x000000, "Member 'Check_ServerGameType_C_Verify::InSelectedGameTypes' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_Verify, CallFunc_Array_Contains_ReturnValue) == 0x000010, "Member 'Check_ServerGameType_C_Verify::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Check_ServerGameType.Check_ServerGameType_C.Reset
// 0x0030 (0x0030 - 0x0000)
struct Check_ServerGameType_C_Reset final
{
public:
	bool                                          InSandbox;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4182[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUGCRegistry*                           CallFunc_GetUGCRegistry_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUGCRegistry*                           CallFunc_GetUGCRegistry_ReturnValue_1;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4183[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetModdingServerFilterEnabled_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Check_ServerGameType_C_Reset) == 0x000008, "Wrong alignment on Check_ServerGameType_C_Reset");
static_assert(sizeof(Check_ServerGameType_C_Reset) == 0x000030, "Wrong size on Check_ServerGameType_C_Reset");
static_assert(offsetof(Check_ServerGameType_C_Reset, InSandbox) == 0x000000, "Member 'Check_ServerGameType_C_Reset::InSandbox' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_Reset, CallFunc_GetUGCRegistry_ReturnValue) == 0x000008, "Member 'Check_ServerGameType_C_Reset::CallFunc_GetUGCRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_Reset, CallFunc_GetUGCRegistry_ReturnValue_1) == 0x000010, "Member 'Check_ServerGameType_C_Reset::CallFunc_GetUGCRegistry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_Reset, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Check_ServerGameType_C_Reset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_Reset, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'Check_ServerGameType_C_Reset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_Reset, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000020, "Member 'Check_ServerGameType_C_Reset::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_Reset, CallFunc_GetModdingServerFilterEnabled_ReturnValue) == 0x000028, "Member 'Check_ServerGameType_C_Reset::CallFunc_GetModdingServerFilterEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_Reset, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'Check_ServerGameType_C_Reset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Check_ServerGameType.Check_ServerGameType_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Check_ServerGameType_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Check_ServerGameType_C_PreConstruct) == 0x000001, "Wrong alignment on Check_ServerGameType_C_PreConstruct");
static_assert(sizeof(Check_ServerGameType_C_PreConstruct) == 0x000001, "Wrong size on Check_ServerGameType_C_PreConstruct");
static_assert(offsetof(Check_ServerGameType_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Check_ServerGameType_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Check_ServerGameType.Check_ServerGameType_C.BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Check_ServerGameType_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Check_ServerGameType_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on Check_ServerGameType_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(Check_ServerGameType_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on Check_ServerGameType_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(Check_ServerGameType_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'Check_ServerGameType_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function Check_ServerGameType.Check_ServerGameType_C.ExecuteUbergraph_Check_ServerGameType
// 0x0128 (0x0128 - 0x0000)
struct Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameType                                     Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsChecked_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4184[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	EGameType                                     Temp_byte_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4185[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B8(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_IsChecked;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4186[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00F0(0x0018)()
	class UBasic_ToolTip_C*                       CallFunc_CreateBasicToolTip_ToolTipWidget;         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsChecked_ReturnValue_1;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType) == 0x000008, "Wrong alignment on Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType");
static_assert(sizeof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType) == 0x000128, "Wrong size on Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, EntryPoint) == 0x000000, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::EntryPoint' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_byte_Variable) == 0x000004, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, CallFunc_GetIsChecked_ReturnValue) == 0x000005, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::CallFunc_GetIsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_text_Variable) == 0x000008, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_text_Variable_1) == 0x000020, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_text_Variable_2) == 0x000038, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_text_Variable_3) == 0x000050, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_byte_Variable_1) == 0x000068, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_text_Variable_4) == 0x000070, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_text_Variable_5) == 0x000088, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_text_Variable_6) == 0x0000A0, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, Temp_text_Variable_7) == 0x0000B8, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, K2Node_Event_IsDesignTime) == 0x0000D0, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, K2Node_ComponentBoundEvent_IsChecked) == 0x0000D1, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::K2Node_ComponentBoundEvent_IsChecked' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, K2Node_Select_Default) == 0x0000D8, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, K2Node_Select_Default_1) == 0x0000F0, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, CallFunc_CreateBasicToolTip_ToolTipWidget) == 0x000108, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::CallFunc_CreateBasicToolTip_ToolTipWidget' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000110, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x000118, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType, CallFunc_GetIsChecked_ReturnValue_1) == 0x000120, "Member 'Check_ServerGameType_C_ExecuteUbergraph_Check_ServerGameType::CallFunc_GetIsChecked_ReturnValue_1' has a wrong offset!");

// Function Check_ServerGameType.Check_ServerGameType_C.OnCheckedChanged__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct Check_ServerGameType_C_OnCheckedChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameType                                     Param_Gametype;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Check_ServerGameType_C_OnCheckedChanged__DelegateSignature) == 0x000001, "Wrong alignment on Check_ServerGameType_C_OnCheckedChanged__DelegateSignature");
static_assert(sizeof(Check_ServerGameType_C_OnCheckedChanged__DelegateSignature) == 0x000002, "Wrong size on Check_ServerGameType_C_OnCheckedChanged__DelegateSignature");
static_assert(offsetof(Check_ServerGameType_C_OnCheckedChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'Check_ServerGameType_C_OnCheckedChanged__DelegateSignature::IsChecked' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_OnCheckedChanged__DelegateSignature, Param_Gametype) == 0x000001, "Member 'Check_ServerGameType_C_OnCheckedChanged__DelegateSignature::Param_Gametype' has a wrong offset!");

// Function Check_ServerGameType.Check_ServerGameType_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct Check_ServerGameType_C_IsInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Check_ServerGameType_C_IsInteractable) == 0x000001, "Wrong alignment on Check_ServerGameType_C_IsInteractable");
static_assert(sizeof(Check_ServerGameType_C_IsInteractable) == 0x000001, "Wrong size on Check_ServerGameType_C_IsInteractable");
static_assert(offsetof(Check_ServerGameType_C_IsInteractable, ReturnValue) == 0x000000, "Member 'Check_ServerGameType_C_IsInteractable::ReturnValue' has a wrong offset!");

// Function Check_ServerGameType.Check_ServerGameType_C.GetIsChecked
// 0x0002 (0x0002 - 0x0000)
struct Check_ServerGameType_C_GetIsChecked final
{
public:
	bool                                          Checked;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsChecked_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Check_ServerGameType_C_GetIsChecked) == 0x000001, "Wrong alignment on Check_ServerGameType_C_GetIsChecked");
static_assert(sizeof(Check_ServerGameType_C_GetIsChecked) == 0x000002, "Wrong size on Check_ServerGameType_C_GetIsChecked");
static_assert(offsetof(Check_ServerGameType_C_GetIsChecked, Checked) == 0x000000, "Member 'Check_ServerGameType_C_GetIsChecked::Checked' has a wrong offset!");
static_assert(offsetof(Check_ServerGameType_C_GetIsChecked, CallFunc_GetIsChecked_ReturnValue) == 0x000001, "Member 'Check_ServerGameType_C_GetIsChecked::CallFunc_GetIsChecked_ReturnValue' has a wrong offset!");

}

