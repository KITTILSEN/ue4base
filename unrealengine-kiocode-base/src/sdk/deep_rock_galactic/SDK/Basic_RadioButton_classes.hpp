#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_RadioButton

#include "Basic.hpp"

#include "ENUM_MenuColors_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Basic_RadioButton.Basic_RadioButton_C
// 0x0090 (0x02F0 - 0x0260)
class UBasic_RadioButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimTickShow;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimClick;                                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BorderInner;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BorderOuter;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Button_SizeBox;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Checkbox_Button;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horizontal;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RadioText;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Tick;                                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCheckStateChanged;                               // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Size;                                              // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanUncheck;                                        // 0x02C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A4[0x2];                                     // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x02C8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          UpperCase;                                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A5[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_Basic_RadioButton_C;                         // 0x02E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ENUM_MenuColors                               TextColor;                                         // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void GetText(class FText* Param_Text);
	void SetTextColor(ENUM_MenuColors Color);
	void SetText(const class FText& InText, bool InUpperCase);
	void SetIsChecked(bool InIsChecked);
	bool GetIsChecked();
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void ExecuteUbergraph_Basic_RadioButton(int32 EntryPoint);
	void OnCheckStateChanged__DelegateSignature(bool Param_IsChecked);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Basic_RadioButton_C">();
	}
	static class UBasic_RadioButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasic_RadioButton_C>();
	}
};
static_assert(alignof(UBasic_RadioButton_C) == 0x000008, "Wrong alignment on UBasic_RadioButton_C");
static_assert(sizeof(UBasic_RadioButton_C) == 0x0002F0, "Wrong size on UBasic_RadioButton_C");
static_assert(offsetof(UBasic_RadioButton_C, UberGraphFrame) == 0x000260, "Member 'UBasic_RadioButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, AnimTickShow) == 0x000268, "Member 'UBasic_RadioButton_C::AnimTickShow' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, AnimClick) == 0x000270, "Member 'UBasic_RadioButton_C::AnimClick' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, BorderInner) == 0x000278, "Member 'UBasic_RadioButton_C::BorderInner' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, BorderOuter) == 0x000280, "Member 'UBasic_RadioButton_C::BorderOuter' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, Button_SizeBox) == 0x000288, "Member 'UBasic_RadioButton_C::Button_SizeBox' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, Checkbox_Button) == 0x000290, "Member 'UBasic_RadioButton_C::Checkbox_Button' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, Horizontal) == 0x000298, "Member 'UBasic_RadioButton_C::Horizontal' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, RadioText) == 0x0002A0, "Member 'UBasic_RadioButton_C::RadioText' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, Tick) == 0x0002A8, "Member 'UBasic_RadioButton_C::Tick' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, OnCheckStateChanged) == 0x0002B0, "Member 'UBasic_RadioButton_C::OnCheckStateChanged' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, Size) == 0x0002C0, "Member 'UBasic_RadioButton_C::Size' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, IsChecked) == 0x0002C4, "Member 'UBasic_RadioButton_C::IsChecked' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, CanUncheck) == 0x0002C5, "Member 'UBasic_RadioButton_C::CanUncheck' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, Text) == 0x0002C8, "Member 'UBasic_RadioButton_C::Text' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, UpperCase) == 0x0002E0, "Member 'UBasic_RadioButton_C::UpperCase' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, Index_Basic_RadioButton_C) == 0x0002E4, "Member 'UBasic_RadioButton_C::Index_Basic_RadioButton_C' has a wrong offset!");
static_assert(offsetof(UBasic_RadioButton_C, TextColor) == 0x0002E8, "Member 'UBasic_RadioButton_C::TextColor' has a wrong offset!");

}

