#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_HUD_Element

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function Options_HUD_Element.Options_HUD_Element_C.ExecuteUbergraph_Options_HUD_Element
// 0x0060 (0x0060 - 0x0000)
struct Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D4F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0018)()
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUDVisibilityMode                            CallFunc_Array_Get_Item;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D50[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UHUDVisibilityGroup* Group, EHUDVisibilityMode Mode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0038(0x0018)()
	class UHUDVisibilityGroup*                    K2Node_CustomEvent_Group;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUDVisibilityMode                            K2Node_CustomEvent_Mode;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D51[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element) == 0x000008, "Wrong alignment on Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element");
static_assert(sizeof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element) == 0x000060, "Wrong size on Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, EntryPoint) == 0x000000, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::EntryPoint' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, K2Node_ComponentBoundEvent_Index) == 0x000020, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, CallFunc_Array_Get_Item) == 0x000024, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, CallFunc_TextToUpper_ReturnValue) == 0x000038, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, K2Node_CustomEvent_Group) == 0x000050, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::K2Node_CustomEvent_Group' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, K2Node_CustomEvent_Mode) == 0x000058, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::K2Node_CustomEvent_Mode' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element, CallFunc_Array_Find_ReturnValue) == 0x00005C, "Member 'Options_HUD_Element_C_ExecuteUbergraph_Options_HUD_Element::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function Options_HUD_Element.Options_HUD_Element_C.OnModeChanged_Event
// 0x0010 (0x0010 - 0x0000)
struct Options_HUD_Element_C_OnModeChanged_Event final
{
public:
	class UHUDVisibilityGroup*                    Group;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUDVisibilityMode                            Mode;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_HUD_Element_C_OnModeChanged_Event) == 0x000008, "Wrong alignment on Options_HUD_Element_C_OnModeChanged_Event");
static_assert(sizeof(Options_HUD_Element_C_OnModeChanged_Event) == 0x000010, "Wrong size on Options_HUD_Element_C_OnModeChanged_Event");
static_assert(offsetof(Options_HUD_Element_C_OnModeChanged_Event, Group) == 0x000000, "Member 'Options_HUD_Element_C_OnModeChanged_Event::Group' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_OnModeChanged_Event, Mode) == 0x000008, "Member 'Options_HUD_Element_C_OnModeChanged_Event::Mode' has a wrong offset!");

// Function Options_HUD_Element.Options_HUD_Element_C.BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Param_Index;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature) == 0x000020, "Wrong size on Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature, Value) == 0x000000, "Member 'Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature, Param_Index) == 0x000018, "Member 'Options_HUD_Element_C_BndEvt__Basic_OptionSwitcher_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function Options_HUD_Element.Options_HUD_Element_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Options_HUD_Element_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_HUD_Element_C_PreConstruct) == 0x000001, "Wrong alignment on Options_HUD_Element_C_PreConstruct");
static_assert(sizeof(Options_HUD_Element_C_PreConstruct) == 0x000001, "Wrong size on Options_HUD_Element_C_PreConstruct");
static_assert(offsetof(Options_HUD_Element_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Options_HUD_Element_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Options_HUD_Element.Options_HUD_Element_C.SetupOptions
// 0x0138 (0x0138 - 0x0000)
struct Options_HUD_Element_C_SetupOptions final
{
public:
	TSet<uint8>                                   DynamicElements;                                   // 0x0000(0x0050)(Edit, BlueprintVisible)
	class FText                                   Temp_text_Variable;                                // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0080(0x0018)()
	TSet<uint8>                                   K2Node_MakeVariable_MakeVariableOutput;            // 0x0098(0x0050)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUDVisibilityMode                            Temp_byte_Variable;                                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUDVisibilityMode                            CallFunc_GetMode_ReturnValue;                      // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D52[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHUDVisibilityMode>                    CallFunc_GetAllowedModes_ReturnValue;              // 0x00F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUDVisibilityMode                            CallFunc_Array_Get_Item;                           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D53[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0118(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D54[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_Option_Index;                         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_HUD_Element_C_SetupOptions) == 0x000008, "Wrong alignment on Options_HUD_Element_C_SetupOptions");
static_assert(sizeof(Options_HUD_Element_C_SetupOptions) == 0x000138, "Wrong size on Options_HUD_Element_C_SetupOptions");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, DynamicElements) == 0x000000, "Member 'Options_HUD_Element_C_SetupOptions::DynamicElements' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, Temp_text_Variable) == 0x000050, "Member 'Options_HUD_Element_C_SetupOptions::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, Temp_text_Variable_1) == 0x000068, "Member 'Options_HUD_Element_C_SetupOptions::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, Temp_text_Variable_2) == 0x000080, "Member 'Options_HUD_Element_C_SetupOptions::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, K2Node_MakeVariable_MakeVariableOutput) == 0x000098, "Member 'Options_HUD_Element_C_SetupOptions::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'Options_HUD_Element_C_SetupOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'Options_HUD_Element_C_SetupOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, Temp_byte_Variable) == 0x0000F4, "Member 'Options_HUD_Element_C_SetupOptions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_GetMode_ReturnValue) == 0x0000F5, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_GetMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_GetAllowedModes_ReturnValue) == 0x0000F8, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_GetAllowedModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_Array_Find_ReturnValue) == 0x000108, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_Max_ReturnValue) == 0x00010C, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_Array_Get_Item) == 0x000110, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, K2Node_Select_Default) == 0x000118, "Member 'Options_HUD_Element_C_SetupOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_SetupOptions, CallFunc_Add_Option_Index) == 0x000134, "Member 'Options_HUD_Element_C_SetupOptions::CallFunc_Add_Option_Index' has a wrong offset!");

// Function Options_HUD_Element.Options_HUD_Element_C.UpdateDots
// 0x0060 (0x0060 - 0x0000)
struct Options_HUD_Element_C_UpdateDots final
{
public:
	int32                                         DotIndex;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D55[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Dot;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D56[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectMenuColor_OutputColor;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D57[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_Index;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_HUD_Element_C_UpdateDots) == 0x000008, "Wrong alignment on Options_HUD_Element_C_UpdateDots");
static_assert(sizeof(Options_HUD_Element_C_UpdateDots) == 0x000060, "Wrong size on Options_HUD_Element_C_UpdateDots");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, DotIndex) == 0x000000, "Member 'Options_HUD_Element_C_UpdateDots::DotIndex' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, Dot) == 0x000008, "Member 'Options_HUD_Element_C_UpdateDots::Dot' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, SelectedIndex) == 0x000010, "Member 'Options_HUD_Element_C_UpdateDots::SelectedIndex' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, Temp_int_Variable) == 0x000014, "Member 'Options_HUD_Element_C_UpdateDots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_SelectMenuColor_OutputColor) == 0x000020, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_SelectMenuColor_OutputColor' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_SelectVisibility_IsVisible) == 0x000035, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_SelectVisibility_VisibilityChanged) == 0x000036, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_SelectVisibility_New_Visibility) == 0x000037, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_GetChildAt_ReturnValue) == 0x000038, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, K2Node_DynamicCast_AsImage) == 0x000040, "Member 'Options_HUD_Element_C_UpdateDots::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Options_HUD_Element_C_UpdateDots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_GetChildrenCount_ReturnValue) == 0x00004C, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_GetSelectedIndex_Index) == 0x000054, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_GetSelectedIndex_Index' has a wrong offset!");
static_assert(offsetof(Options_HUD_Element_C_UpdateDots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'Options_HUD_Element_C_UpdateDots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

}

