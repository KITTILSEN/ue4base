#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grenade_BouncyPlasma

#include "Basic.hpp"

#include "ITM_Grenade_Base_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Grenade_BouncyPlasma.Grenade_BouncyPlasma_C
// 0x0028 (0x0388 - 0x0360)
class AGrenade_BouncyPlasma_C final : public AITM_Grenade_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Grenade_BouncyPlasma_C;             // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       Damage;                                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         ExplosionCount;                                    // 0x0378(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxExplosions;                                     // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConcecutiveExplosionsDelay;                        // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exploded;                                          // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnRep_ExplosionCount();
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void TriggerExplosion();
	void HideGrenade();
	void ReceiveBeginPlay();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_Grenade_BouncyPlasma(int32 EntryPoint);

	void AddGearStateEntries(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>& Stats) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Grenade_BouncyPlasma_C">();
	}
	static class AGrenade_BouncyPlasma_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenade_BouncyPlasma_C>();
	}
};
static_assert(alignof(AGrenade_BouncyPlasma_C) == 0x000008, "Wrong alignment on AGrenade_BouncyPlasma_C");
static_assert(sizeof(AGrenade_BouncyPlasma_C) == 0x000388, "Wrong size on AGrenade_BouncyPlasma_C");
static_assert(offsetof(AGrenade_BouncyPlasma_C, UberGraphFrame_Grenade_BouncyPlasma_C) == 0x000360, "Member 'AGrenade_BouncyPlasma_C::UberGraphFrame_Grenade_BouncyPlasma_C' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyPlasma_C, Sphere) == 0x000368, "Member 'AGrenade_BouncyPlasma_C::Sphere' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyPlasma_C, Damage) == 0x000370, "Member 'AGrenade_BouncyPlasma_C::Damage' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyPlasma_C, ExplosionCount) == 0x000378, "Member 'AGrenade_BouncyPlasma_C::ExplosionCount' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyPlasma_C, MaxExplosions) == 0x00037C, "Member 'AGrenade_BouncyPlasma_C::MaxExplosions' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyPlasma_C, ConcecutiveExplosionsDelay) == 0x000380, "Member 'AGrenade_BouncyPlasma_C::ConcecutiveExplosionsDelay' has a wrong offset!");
static_assert(offsetof(AGrenade_BouncyPlasma_C, Exploded) == 0x000384, "Member 'AGrenade_BouncyPlasma_C::Exploded' has a wrong offset!");

}

