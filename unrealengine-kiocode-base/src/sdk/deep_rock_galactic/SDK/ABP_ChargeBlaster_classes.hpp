#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ChargeBlaster

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_ChargeBlaster.ABP_ChargeBlaster_C
// 0x0300 (0x05E0 - 0x02E0)
class UABP_ChargeBlaster_C final : public UChargedWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02E8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0318(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0360(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x03E0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x04A8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0548(0x0080)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x05C8(0x0018)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_ChargeBlaster(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_ChargeBlaster_C">();
	}
	static class UABP_ChargeBlaster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_ChargeBlaster_C>();
	}
};
static_assert(alignof(UABP_ChargeBlaster_C) == 0x000010, "Wrong alignment on UABP_ChargeBlaster_C");
static_assert(sizeof(UABP_ChargeBlaster_C) == 0x0005E0, "Wrong size on UABP_ChargeBlaster_C");
static_assert(offsetof(UABP_ChargeBlaster_C, UberGraphFrame) == 0x0002E0, "Member 'UABP_ChargeBlaster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_ChargeBlaster_C, AnimGraphNode_Root) == 0x0002E8, "Member 'UABP_ChargeBlaster_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_ChargeBlaster_C, AnimGraphNode_Slot) == 0x000318, "Member 'UABP_ChargeBlaster_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_ChargeBlaster_C, AnimGraphNode_SequencePlayer_1) == 0x000360, "Member 'UABP_ChargeBlaster_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ChargeBlaster_C, AnimGraphNode_ApplyAdditive) == 0x0003E0, "Member 'UABP_ChargeBlaster_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_ChargeBlaster_C, AnimGraphNode_BlendListByBool) == 0x0004A8, "Member 'UABP_ChargeBlaster_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_ChargeBlaster_C, AnimGraphNode_SequencePlayer) == 0x000548, "Member 'UABP_ChargeBlaster_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ChargeBlaster_C, AnimGraphNode_IdentityPose) == 0x0005C8, "Member 'UABP_ChargeBlaster_C::AnimGraphNode_IdentityPose' has a wrong offset!");

}

