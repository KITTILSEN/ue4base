#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WND_KPI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WND_KPI.WND_KPI_C.OnKeyDown
// 0x0420 (0x0420 - 0x0000)
struct WND_KPI_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelectNext_ReturnValue;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4261[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	bool                                          CallFunc_HandleKeyEvent_OutHandled;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4262[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x01F0(0x00B8)()
	bool                                          CallFunc_IsSelectPrevious_ReturnValue;             // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4263[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x02B0(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x0368(0x00B8)()
};
static_assert(alignof(WND_KPI_C_OnKeyDown) == 0x000008, "Wrong alignment on WND_KPI_C_OnKeyDown");
static_assert(sizeof(WND_KPI_C_OnKeyDown) == 0x000420, "Wrong size on WND_KPI_C_OnKeyDown");
static_assert(offsetof(WND_KPI_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WND_KPI_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WND_KPI_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'WND_KPI_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'WND_KPI_C_OnKeyDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, CallFunc_IsSelectNext_ReturnValue) == 0x000129, "Member 'WND_KPI_C_OnKeyDown::CallFunc_IsSelectNext_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'WND_KPI_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, CallFunc_HandleKeyEvent_OutHandled) == 0x0001E8, "Member 'WND_KPI_C_OnKeyDown::CallFunc_HandleKeyEvent_OutHandled' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x0001F0, "Member 'WND_KPI_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, CallFunc_IsSelectPrevious_ReturnValue) == 0x0002A8, "Member 'WND_KPI_C_OnKeyDown::CallFunc_IsSelectPrevious_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, CallFunc_Handled_ReturnValue_1) == 0x0002B0, "Member 'WND_KPI_C_OnKeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyDown, CallFunc_Handled_ReturnValue_2) == 0x000368, "Member 'WND_KPI_C_OnKeyDown::CallFunc_Handled_ReturnValue_2' has a wrong offset!");

// Function WND_KPI.WND_KPI_C.SelectNextTab
// 0x0038 (0x0038 - 0x0000)
struct WND_KPI_C_SelectNextTab final
{
public:
	int32                                         Direction;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumWidgets_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_KPI_Tab_C*                          K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBasic_ButtonTab_C*                     K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WND_KPI_C_SelectNextTab) == 0x000008, "Wrong alignment on WND_KPI_C_SelectNextTab");
static_assert(sizeof(WND_KPI_C_SelectNextTab) == 0x000038, "Wrong size on WND_KPI_C_SelectNextTab");
static_assert(offsetof(WND_KPI_C_SelectNextTab, Direction) == 0x000000, "Member 'WND_KPI_C_SelectNextTab::Direction' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, Param_Index) == 0x000004, "Member 'WND_KPI_C_SelectNextTab::Param_Index' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, Temp_int_Variable) == 0x000008, "Member 'WND_KPI_C_SelectNextTab::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, Temp_int_Variable_1) == 0x00000C, "Member 'WND_KPI_C_SelectNextTab::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, CallFunc_GetNumWidgets_ReturnValue) == 0x000010, "Member 'WND_KPI_C_SelectNextTab::CallFunc_GetNumWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, CallFunc_SignOfInteger_ReturnValue) == 0x000014, "Member 'WND_KPI_C_SelectNextTab::CallFunc_SignOfInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WND_KPI_C_SelectNextTab::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x00001C, "Member 'WND_KPI_C_SelectNextTab::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WND_KPI_C_SelectNextTab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'WND_KPI_C_SelectNextTab::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, K2Node_Select_Default) == 0x000028, "Member 'WND_KPI_C_SelectNextTab::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectNextTab, K2Node_Select_Default_1) == 0x000030, "Member 'WND_KPI_C_SelectNextTab::K2Node_Select_Default_1' has a wrong offset!");

// Function WND_KPI.WND_KPI_C.OnKeyUp
// 0x0360 (0x0360 - 0x0000)
struct WND_KPI_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleKeyEvent_OutHandled;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4264[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0130(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01E8(0x00B8)()
	bool                                          CallFunc_IsCloseOrBackMenu_ReturnValue;            // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4265[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x02A8(0x00B8)()
};
static_assert(alignof(WND_KPI_C_OnKeyUp) == 0x000008, "Wrong alignment on WND_KPI_C_OnKeyUp");
static_assert(sizeof(WND_KPI_C_OnKeyUp) == 0x000360, "Wrong size on WND_KPI_C_OnKeyUp");
static_assert(offsetof(WND_KPI_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WND_KPI_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WND_KPI_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'WND_KPI_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyUp, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'WND_KPI_C_OnKeyUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyUp, CallFunc_HandleKeyEvent_OutHandled) == 0x000129, "Member 'WND_KPI_C_OnKeyUp::CallFunc_HandleKeyEvent_OutHandled' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000130, "Member 'WND_KPI_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x0001E8, "Member 'WND_KPI_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyUp, CallFunc_IsCloseOrBackMenu_ReturnValue) == 0x0002A0, "Member 'WND_KPI_C_OnKeyUp::CallFunc_IsCloseOrBackMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_OnKeyUp, CallFunc_Handled_ReturnValue_1) == 0x0002A8, "Member 'WND_KPI_C_OnKeyUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

// Function WND_KPI.WND_KPI_C.SelectTab
// 0x0018 (0x0018 - 0x0000)
struct WND_KPI_C_SelectTab final
{
public:
	class UBasic_ButtonTab_C*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_KPI_Tab_C*                          Content;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_KPI_C_SelectTab) == 0x000008, "Wrong alignment on WND_KPI_C_SelectTab");
static_assert(sizeof(WND_KPI_C_SelectTab) == 0x000018, "Wrong size on WND_KPI_C_SelectTab");
static_assert(offsetof(WND_KPI_C_SelectTab, Button) == 0x000000, "Member 'WND_KPI_C_SelectTab::Button' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectTab, Content) == 0x000008, "Member 'WND_KPI_C_SelectTab::Content' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectTab, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WND_KPI_C_SelectTab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_SelectTab, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'WND_KPI_C_SelectTab::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WND_KPI.WND_KPI_C.BndEvt__KPIView_K2Node_ComponentBoundEvent_3_OnHasClaimableChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WND_KPI_C_BndEvt__KPIView_K2Node_ComponentBoundEvent_3_OnHasClaimableChanged__DelegateSignature final
{
public:
	bool                                          HasClaimable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_KPI_C_BndEvt__KPIView_K2Node_ComponentBoundEvent_3_OnHasClaimableChanged__DelegateSignature) == 0x000001, "Wrong alignment on WND_KPI_C_BndEvt__KPIView_K2Node_ComponentBoundEvent_3_OnHasClaimableChanged__DelegateSignature");
static_assert(sizeof(WND_KPI_C_BndEvt__KPIView_K2Node_ComponentBoundEvent_3_OnHasClaimableChanged__DelegateSignature) == 0x000001, "Wrong size on WND_KPI_C_BndEvt__KPIView_K2Node_ComponentBoundEvent_3_OnHasClaimableChanged__DelegateSignature");
static_assert(offsetof(WND_KPI_C_BndEvt__KPIView_K2Node_ComponentBoundEvent_3_OnHasClaimableChanged__DelegateSignature, HasClaimable) == 0x000000, "Member 'WND_KPI_C_BndEvt__KPIView_K2Node_ComponentBoundEvent_3_OnHasClaimableChanged__DelegateSignature::HasClaimable' has a wrong offset!");

// Function WND_KPI.WND_KPI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WND_KPI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_KPI_C_PreConstruct) == 0x000001, "Wrong alignment on WND_KPI_C_PreConstruct");
static_assert(sizeof(WND_KPI_C_PreConstruct) == 0x000001, "Wrong size on WND_KPI_C_PreConstruct");
static_assert(offsetof(WND_KPI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WND_KPI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WND_KPI.WND_KPI_C.ExecuteUbergraph_WND_KPI
// 0x0038 (0x0038 - 0x0000)
struct WND_KPI_C_ExecuteUbergraph_WND_KPI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmountOfPurchasedPerks_ReturnValue;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_HasClaimable;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4266[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameData*                              CallFunc_GetFSDGameData_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WND_KPI_C_ExecuteUbergraph_WND_KPI) == 0x000008, "Wrong alignment on WND_KPI_C_ExecuteUbergraph_WND_KPI");
static_assert(sizeof(WND_KPI_C_ExecuteUbergraph_WND_KPI) == 0x000038, "Wrong size on WND_KPI_C_ExecuteUbergraph_WND_KPI");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, EntryPoint) == 0x000000, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::EntryPoint' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, CallFunc_GetAmountOfPurchasedPerks_ReturnValue) == 0x000004, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::CallFunc_GetAmountOfPurchasedPerks_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, CallFunc_GetWindowManager_ReturnValue) == 0x000008, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::CallFunc_GetWindowManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, K2Node_ComponentBoundEvent_HasClaimable) == 0x000014, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::K2Node_ComponentBoundEvent_HasClaimable' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, CallFunc_GetFSDGameData_ReturnValue) == 0x000018, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::CallFunc_GetFSDGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000020, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WND_KPI_C_ExecuteUbergraph_WND_KPI, K2Node_Event_IsDesignTime) == 0x000030, "Member 'WND_KPI_C_ExecuteUbergraph_WND_KPI::K2Node_Event_IsDesignTime' has a wrong offset!");

}

