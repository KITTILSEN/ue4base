#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lore_Container_CombatTip

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Lore_Container_CombatTip.Lore_Container_CombatTip_C.ExecuteUbergraph_Lore_Container_CombatTip
// 0x0080 (0x0080 - 0x0000)
struct Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Headline;                       // 0x0008(0x0018)()
	class FText                                   K2Node_CustomEvent_Body;                           // 0x0020(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A0[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0058(0x0028)()
};
static_assert(alignof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip) == 0x000008, "Wrong alignment on Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip");
static_assert(sizeof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip) == 0x000080, "Wrong size on Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip");
static_assert(offsetof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip, EntryPoint) == 0x000000, "Member 'Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip, K2Node_CustomEvent_Headline) == 0x000008, "Member 'Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip::K2Node_CustomEvent_Headline' has a wrong offset!");
static_assert(offsetof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip, K2Node_CustomEvent_Body) == 0x000020, "Member 'Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip::K2Node_CustomEvent_Body' has a wrong offset!");
static_assert(offsetof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip, K2Node_Event_IsDesignTime) == 0x000038, "Member 'Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip, CallFunc_MenuColors_OutputColor) == 0x00003C, "Member 'Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip, CallFunc_PlayAnimationForward_ReturnValue) == 0x000050, "Member 'Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip, K2Node_MakeStruct_SlateColor) == 0x000058, "Member 'Lore_Container_CombatTip_C_ExecuteUbergraph_Lore_Container_CombatTip::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function Lore_Container_CombatTip.Lore_Container_CombatTip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Lore_Container_CombatTip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lore_Container_CombatTip_C_PreConstruct) == 0x000001, "Wrong alignment on Lore_Container_CombatTip_C_PreConstruct");
static_assert(sizeof(Lore_Container_CombatTip_C_PreConstruct) == 0x000001, "Wrong size on Lore_Container_CombatTip_C_PreConstruct");
static_assert(offsetof(Lore_Container_CombatTip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Lore_Container_CombatTip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Lore_Container_CombatTip.Lore_Container_CombatTip_C.SetText
// 0x0030 (0x0030 - 0x0000)
struct Lore_Container_CombatTip_C_SetText final
{
public:
	class FText                                   Param_Headline;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Body;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Lore_Container_CombatTip_C_SetText) == 0x000008, "Wrong alignment on Lore_Container_CombatTip_C_SetText");
static_assert(sizeof(Lore_Container_CombatTip_C_SetText) == 0x000030, "Wrong size on Lore_Container_CombatTip_C_SetText");
static_assert(offsetof(Lore_Container_CombatTip_C_SetText, Param_Headline) == 0x000000, "Member 'Lore_Container_CombatTip_C_SetText::Param_Headline' has a wrong offset!");
static_assert(offsetof(Lore_Container_CombatTip_C_SetText, Body) == 0x000018, "Member 'Lore_Container_CombatTip_C_SetText::Body' has a wrong offset!");

}

