#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_CreditsEntry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ITM_CreditsEntry.ITM_CreditsEntry_C.ExecuteUbergraph_ITM_CreditsEntry
// 0x0090 (0x0090 - 0x0000)
struct ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4912[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0078(0x0018)()
};
static_assert(alignof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry) == 0x000008, "Wrong alignment on ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry");
static_assert(sizeof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry) == 0x000090, "Wrong size on ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry");
static_assert(offsetof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry, EntryPoint) == 0x000000, "Member 'ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry, CallFunc_MenuColors_OutputColor) == 0x000008, "Member 'ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry, CallFunc_MenuColors_OutputColor_1) == 0x000018, "Member 'ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry, CallFunc_TextToUpper_ReturnValue) == 0x000078, "Member 'ITM_CreditsEntry_C_ExecuteUbergraph_ITM_CreditsEntry::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function ITM_CreditsEntry.ITM_CreditsEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_CreditsEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_CreditsEntry_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_CreditsEntry_C_PreConstruct");
static_assert(sizeof(ITM_CreditsEntry_C_PreConstruct) == 0x000001, "Wrong size on ITM_CreditsEntry_C_PreConstruct");
static_assert(offsetof(ITM_CreditsEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_CreditsEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

