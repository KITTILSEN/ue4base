#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sign_MemorialUnlock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Sign_MemorialUnlock.Sign_MemorialUnlock_C
// 0x0078 (0x0298 - 0x0220)
class ASign_MemorialUnlock_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TEXT_Main;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0248(0x0018)(Edit, BlueprintVisible)
	bool                                          Single_Line;                                       // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CB6[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text2;                                             // 0x0268(0x0018)(Edit, BlueprintVisible)
	float                                         Text_Size;                                         // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Text_Color;                                        // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Capitals;                                          // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CB7[0x3];                                     // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              BoxScale;                                          // 0x028C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0294(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_Sign_MemorialUnlock(int32 EntryPoint);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Sign_MemorialUnlock_C">();
	}
	static class ASign_MemorialUnlock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASign_MemorialUnlock_C>();
	}
};
static_assert(alignof(ASign_MemorialUnlock_C) == 0x000008, "Wrong alignment on ASign_MemorialUnlock_C");
static_assert(sizeof(ASign_MemorialUnlock_C) == 0x000298, "Wrong size on ASign_MemorialUnlock_C");
static_assert(offsetof(ASign_MemorialUnlock_C, UberGraphFrame) == 0x000220, "Member 'ASign_MemorialUnlock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Widget) == 0x000228, "Member 'ASign_MemorialUnlock_C::Widget' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, TEXT_Main) == 0x000230, "Member 'ASign_MemorialUnlock_C::TEXT_Main' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Cube) == 0x000238, "Member 'ASign_MemorialUnlock_C::Cube' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, DefaultSceneRoot) == 0x000240, "Member 'ASign_MemorialUnlock_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Text) == 0x000248, "Member 'ASign_MemorialUnlock_C::Text' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Single_Line) == 0x000260, "Member 'ASign_MemorialUnlock_C::Single_Line' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Text2) == 0x000268, "Member 'ASign_MemorialUnlock_C::Text2' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Text_Size) == 0x000280, "Member 'ASign_MemorialUnlock_C::Text_Size' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Text_Color) == 0x000284, "Member 'ASign_MemorialUnlock_C::Text_Color' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Capitals) == 0x000288, "Member 'ASign_MemorialUnlock_C::Capitals' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, BoxScale) == 0x00028C, "Member 'ASign_MemorialUnlock_C::BoxScale' has a wrong offset!");
static_assert(offsetof(ASign_MemorialUnlock_C, Visible) == 0x000294, "Member 'ASign_MemorialUnlock_C::Visible' has a wrong offset!");

}

