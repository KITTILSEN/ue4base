#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Options_Reflex

#include "Basic.hpp"

#include "FSD_structs.hpp"


namespace SDK::Params
{

// Function Options_Reflex.Options_Reflex_C.ExecuteUbergraph_Options_Reflex
// 0x0070 (0x0070 - 0x0000)
struct Options_Reflex_C_ExecuteUbergraph_Options_Reflex final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4B87[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENVidiaReflexMode                             CallFunc_GetReflexMode_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B88[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Value;                  // 0x0030(0x0018)()
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B89[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNvReflexAvailable_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex) == 0x000008, "Wrong alignment on Options_Reflex_C_ExecuteUbergraph_Options_Reflex");
static_assert(sizeof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex) == 0x000070, "Wrong size on Options_Reflex_C_ExecuteUbergraph_Options_Reflex");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, EntryPoint) == 0x000000, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::EntryPoint' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000018, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000020, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_GetReflexMode_ReturnValue) == 0x000028, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_GetReflexMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, K2Node_ComponentBoundEvent_Value) == 0x000030, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, K2Node_ComponentBoundEvent_Index) == 0x000048, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00004C, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_Conv_IntToByte_ReturnValue) == 0x000050, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_GetValidValue_ReturnValue) == 0x000051, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x000058, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x000060, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_ExecuteUbergraph_Options_Reflex, CallFunc_IsNvReflexAvailable_ReturnValue) == 0x000068, "Member 'Options_Reflex_C_ExecuteUbergraph_Options_Reflex::CallFunc_IsNvReflexAvailable_ReturnValue' has a wrong offset!");

// Function Options_Reflex.Options_Reflex_C.BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Param_Index;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature) == 0x000020, "Wrong size on Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature, Value) == 0x000000, "Member 'Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature, Param_Index) == 0x000018, "Member 'Options_Reflex_C_BndEvt__Options_UpscalingType_Basic_OptionSwitcher_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function Options_Reflex.Options_Reflex_C.IndexToId
// 0x0014 (0x0014 - 0x0000)
struct Options_Reflex_C_IndexToId final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_Reflex_C_IndexToId) == 0x000004, "Wrong alignment on Options_Reflex_C_IndexToId");
static_assert(sizeof(Options_Reflex_C_IndexToId) == 0x000014, "Wrong size on Options_Reflex_C_IndexToId");
static_assert(offsetof(Options_Reflex_C_IndexToId, Param_Index) == 0x000000, "Member 'Options_Reflex_C_IndexToId::Param_Index' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IndexToId, ID) == 0x000004, "Member 'Options_Reflex_C_IndexToId::ID' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IndexToId, CallFunc_Array_Get_Item) == 0x000008, "Member 'Options_Reflex_C_IndexToId::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IndexToId, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'Options_Reflex_C_IndexToId::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IndexToId, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'Options_Reflex_C_IndexToId::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Options_Reflex.Options_Reflex_C.IdToIndex
// 0x0020 (0x0020 - 0x0000)
struct Options_Reflex_C_IdToIndex final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Options_Reflex_C_IdToIndex) == 0x000004, "Wrong alignment on Options_Reflex_C_IdToIndex");
static_assert(sizeof(Options_Reflex_C_IdToIndex) == 0x000020, "Wrong size on Options_Reflex_C_IdToIndex");
static_assert(offsetof(Options_Reflex_C_IdToIndex, ID) == 0x000000, "Member 'Options_Reflex_C_IdToIndex::ID' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IdToIndex, Param_Index) == 0x000004, "Member 'Options_Reflex_C_IdToIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IdToIndex, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Options_Reflex_C_IdToIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IdToIndex, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Options_Reflex_C_IdToIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IdToIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Options_Reflex_C_IdToIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IdToIndex, CallFunc_Array_Get_Item) == 0x000014, "Member 'Options_Reflex_C_IdToIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IdToIndex, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Options_Reflex_C_IdToIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IdToIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'Options_Reflex_C_IdToIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_IdToIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'Options_Reflex_C_IdToIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Options_Reflex.Options_Reflex_C.AddIndex
// 0x0030 (0x0030 - 0x0000)
struct Options_Reflex_C_AddIndex final
{
public:
	class FText                                   Option;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         ID;                                                // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B8A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUpscalingTypeSupported_ReturnValue;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B8B[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_Option_Index;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Options_Reflex_C_AddIndex) == 0x000008, "Wrong alignment on Options_Reflex_C_AddIndex");
static_assert(sizeof(Options_Reflex_C_AddIndex) == 0x000030, "Wrong size on Options_Reflex_C_AddIndex");
static_assert(offsetof(Options_Reflex_C_AddIndex, Option) == 0x000000, "Member 'Options_Reflex_C_AddIndex::Option' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_AddIndex, ID) == 0x000018, "Member 'Options_Reflex_C_AddIndex::ID' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_AddIndex, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000020, "Member 'Options_Reflex_C_AddIndex::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_AddIndex, CallFunc_IsUpscalingTypeSupported_ReturnValue) == 0x000028, "Member 'Options_Reflex_C_AddIndex::CallFunc_IsUpscalingTypeSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(Options_Reflex_C_AddIndex, CallFunc_Add_Option_Index) == 0x00002C, "Member 'Options_Reflex_C_AddIndex::CallFunc_Add_Option_Index' has a wrong offset!");

}

