#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameState.BP_GameState_C
// 0x0080 (0x0748 - 0x06C8)
class ABP_GameState_C : public AFSDGameState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UPlayerCharacterID*>             InitialHeroes;                                     // 0x06D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UPlayerCharacterID*>             InitialHeroesLeft;                                 // 0x06E8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	TSoftObjectPtr<class UAnimationSharingSetup>  MaggotAnimationSharing;                            // 0x06F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Sjaromg;                                           // 0x0720(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GameState(int32 EntryPoint);
	void CustomEvent_0();
	void ReceiveTick(float DeltaSeconds);
	void HandleSeamlessTravelEvent();
	void StartGame();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void GetRandomIntialHero(class UPlayerCharacterID** HeroClass);
	TArray<class UPlayerCharacterID*> GetPlayableCharacterIDs();
	void GetAnimSharingAssets(TSoftObjectPtr<class UAnimationSharingSetup> AnimSharing, TArray<TSoftObjectPtr<class UObject>>* Assets);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameState_C">();
	}
	static class ABP_GameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GameState_C>();
	}
};
static_assert(alignof(ABP_GameState_C) == 0x000008, "Wrong alignment on ABP_GameState_C");
static_assert(sizeof(ABP_GameState_C) == 0x000748, "Wrong size on ABP_GameState_C");
static_assert(offsetof(ABP_GameState_C, UberGraphFrame) == 0x0006C8, "Member 'ABP_GameState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, DefaultSceneRoot) == 0x0006D0, "Member 'ABP_GameState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, InitialHeroes) == 0x0006D8, "Member 'ABP_GameState_C::InitialHeroes' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, InitialHeroesLeft) == 0x0006E8, "Member 'ABP_GameState_C::InitialHeroesLeft' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, MaggotAnimationSharing) == 0x0006F8, "Member 'ABP_GameState_C::MaggotAnimationSharing' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, Sjaromg) == 0x000720, "Member 'ABP_GameState_C::Sjaromg' has a wrong offset!");

}

