#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReferenceManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ReferenceManager.ReferenceManager_C.CreateHUD
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_CreateHUD final
{
public:
	class UHUDWIdget_C*                           CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_CreateHUD) == 0x000008, "Wrong alignment on ReferenceManager_C_CreateHUD");
static_assert(sizeof(ReferenceManager_C_CreateHUD) == 0x000008, "Wrong size on ReferenceManager_C_CreateHUD");
static_assert(offsetof(ReferenceManager_C_CreateHUD, CallFunc_Create_ReturnValue) == 0x000000, "Member 'ReferenceManager_C_CreateHUD::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.ExecuteUbergraph_ReferenceManager
// 0x0230 (0x0230 - 0x0000)
struct ReferenceManager_C_ExecuteUbergraph_ReferenceManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241D[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALanguageManager_C*                     CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Zero_ReturnValue;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241E[0x8];                                     // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x01A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager_C*                        CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATurnManager_C*                         CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241F[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_DT_ImplicitCast;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager) == 0x000010, "Wrong alignment on ReferenceManager_C_ExecuteUbergraph_ReferenceManager");
static_assert(sizeof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager) == 0x000230, "Wrong size on ReferenceManager_C_ExecuteUbergraph_ReferenceManager");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, EntryPoint) == 0x000000, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_MakeTransform_ReturnValue_1) == 0x000070, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D0, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000D8, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000E8, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_Vector_Zero_ReturnValue) == 0x0000F0, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_Vector_Zero_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000108, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000120, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_MakeTransform_ReturnValue_2) == 0x000140, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_MakeTransform_ReturnValue_3) == 0x0001A0, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000200, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000208, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000210, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000218, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, K2Node_Event_DeltaSeconds) == 0x000220, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ReferenceManager_C_ExecuteUbergraph_ReferenceManager, K2Node_VariableSet_DT_ImplicitCast) == 0x000228, "Member 'ReferenceManager_C_ExecuteUbergraph_ReferenceManager::K2Node_VariableSet_DT_ImplicitCast' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.GetDeltaTime
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_GetDeltaTime final
{
public:
	double                                        Param_DT;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_GetDeltaTime) == 0x000008, "Wrong alignment on ReferenceManager_C_GetDeltaTime");
static_assert(sizeof(ReferenceManager_C_GetDeltaTime) == 0x000008, "Wrong size on ReferenceManager_C_GetDeltaTime");
static_assert(offsetof(ReferenceManager_C_GetDeltaTime, Param_DT) == 0x000000, "Member 'ReferenceManager_C_GetDeltaTime::Param_DT' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.GetDisplayManager
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_GetDisplayManager final
{
public:
	class ADisplayManager_C*                      NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_GetDisplayManager) == 0x000008, "Wrong alignment on ReferenceManager_C_GetDisplayManager");
static_assert(sizeof(ReferenceManager_C_GetDisplayManager) == 0x000008, "Wrong size on ReferenceManager_C_GetDisplayManager");
static_assert(offsetof(ReferenceManager_C_GetDisplayManager, NewParam) == 0x000000, "Member 'ReferenceManager_C_GetDisplayManager::NewParam' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.GetEnemyManager
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_GetEnemyManager final
{
public:
	class AEnemyManager_C*                        Param_EnemyManager;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_GetEnemyManager) == 0x000008, "Wrong alignment on ReferenceManager_C_GetEnemyManager");
static_assert(sizeof(ReferenceManager_C_GetEnemyManager) == 0x000008, "Wrong size on ReferenceManager_C_GetEnemyManager");
static_assert(offsetof(ReferenceManager_C_GetEnemyManager, Param_EnemyManager) == 0x000000, "Member 'ReferenceManager_C_GetEnemyManager::Param_EnemyManager' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.GetGridManager
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_GetGridManager final
{
public:
	class AGridManagerBP_C*                       Param_Grid;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_GetGridManager) == 0x000008, "Wrong alignment on ReferenceManager_C_GetGridManager");
static_assert(sizeof(ReferenceManager_C_GetGridManager) == 0x000008, "Wrong size on ReferenceManager_C_GetGridManager");
static_assert(offsetof(ReferenceManager_C_GetGridManager, Param_Grid) == 0x000000, "Member 'ReferenceManager_C_GetGridManager::Param_Grid' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.GetHUD
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_GetHUD final
{
public:
	class UHUDWIdget_C*                           Param_HUD;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_GetHUD) == 0x000008, "Wrong alignment on ReferenceManager_C_GetHUD");
static_assert(sizeof(ReferenceManager_C_GetHUD) == 0x000008, "Wrong size on ReferenceManager_C_GetHUD");
static_assert(offsetof(ReferenceManager_C_GetHUD, Param_HUD) == 0x000000, "Member 'ReferenceManager_C_GetHUD::Param_HUD' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.GetImporter
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_GetImporter final
{
public:
	class AImporterBP_C*                          Param_Importer;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_GetImporter) == 0x000008, "Wrong alignment on ReferenceManager_C_GetImporter");
static_assert(sizeof(ReferenceManager_C_GetImporter) == 0x000008, "Wrong size on ReferenceManager_C_GetImporter");
static_assert(offsetof(ReferenceManager_C_GetImporter, Param_Importer) == 0x000000, "Member 'ReferenceManager_C_GetImporter::Param_Importer' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.GetPlayerController
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_GetPlayerController final
{
public:
	class APlayerControllerBP_C*                  PC;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_GetPlayerController) == 0x000008, "Wrong alignment on ReferenceManager_C_GetPlayerController");
static_assert(sizeof(ReferenceManager_C_GetPlayerController) == 0x000008, "Wrong size on ReferenceManager_C_GetPlayerController");
static_assert(offsetof(ReferenceManager_C_GetPlayerController, PC) == 0x000000, "Member 'ReferenceManager_C_GetPlayerController::PC' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.GetTurnMgr
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_GetTurnMgr final
{
public:
	class ATurnManager_C*                         Turn_Mg;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_GetTurnMgr) == 0x000008, "Wrong alignment on ReferenceManager_C_GetTurnMgr");
static_assert(sizeof(ReferenceManager_C_GetTurnMgr) == 0x000008, "Wrong size on ReferenceManager_C_GetTurnMgr");
static_assert(offsetof(ReferenceManager_C_GetTurnMgr, Turn_Mg) == 0x000000, "Member 'ReferenceManager_C_GetTurnMgr::Turn_Mg' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.ImPlayerController
// 0x0008 (0x0008 - 0x0000)
struct ReferenceManager_C_ImPlayerController final
{
public:
	class APlayerControllerBP_C*                  PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_ImPlayerController) == 0x000008, "Wrong alignment on ReferenceManager_C_ImPlayerController");
static_assert(sizeof(ReferenceManager_C_ImPlayerController) == 0x000008, "Wrong size on ReferenceManager_C_ImPlayerController");
static_assert(offsetof(ReferenceManager_C_ImPlayerController, PC) == 0x000000, "Member 'ReferenceManager_C_ImPlayerController::PC' has a wrong offset!");

// Function ReferenceManager.ReferenceManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ReferenceManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReferenceManager_C_ReceiveTick) == 0x000004, "Wrong alignment on ReferenceManager_C_ReceiveTick");
static_assert(sizeof(ReferenceManager_C_ReceiveTick) == 0x000004, "Wrong size on ReferenceManager_C_ReceiveTick");
static_assert(offsetof(ReferenceManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ReferenceManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

