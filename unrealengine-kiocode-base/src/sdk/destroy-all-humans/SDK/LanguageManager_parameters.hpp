#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LanguageManager

#include "Basic.hpp"

#include "LanguageListStruct_structs.hpp"
#include "LanguageListEnum_structs.hpp"


namespace SDK::Params
{

// Function LanguageManager.LanguageManager_C.ExecuteUbergraph_LanguageManager
// 0x0020 (0x0020 - 0x0000)
struct LanguageManager_C_ExecuteUbergraph_LanguageManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2505[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstanceBP_C*                      K2Node_DynamicCast_AsGame_Instance_BP;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LanguageManager_C_ExecuteUbergraph_LanguageManager) == 0x000008, "Wrong alignment on LanguageManager_C_ExecuteUbergraph_LanguageManager");
static_assert(sizeof(LanguageManager_C_ExecuteUbergraph_LanguageManager) == 0x000020, "Wrong size on LanguageManager_C_ExecuteUbergraph_LanguageManager");
static_assert(offsetof(LanguageManager_C_ExecuteUbergraph_LanguageManager, EntryPoint) == 0x000000, "Member 'LanguageManager_C_ExecuteUbergraph_LanguageManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_ExecuteUbergraph_LanguageManager, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'LanguageManager_C_ExecuteUbergraph_LanguageManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_ExecuteUbergraph_LanguageManager, K2Node_DynamicCast_AsGame_Instance_BP) == 0x000010, "Member 'LanguageManager_C_ExecuteUbergraph_LanguageManager::K2Node_DynamicCast_AsGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_ExecuteUbergraph_LanguageManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'LanguageManager_C_ExecuteUbergraph_LanguageManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LanguageManager.LanguageManager_C.GetLanguage
// 0x0001 (0x0001 - 0x0000)
struct LanguageManager_C_GetLanguage final
{
public:
	ELanguageListEnum                             Output;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LanguageManager_C_GetLanguage) == 0x000001, "Wrong alignment on LanguageManager_C_GetLanguage");
static_assert(sizeof(LanguageManager_C_GetLanguage) == 0x000001, "Wrong size on LanguageManager_C_GetLanguage");
static_assert(offsetof(LanguageManager_C_GetLanguage, Output) == 0x000000, "Member 'LanguageManager_C_GetLanguage::Output' has a wrong offset!");

// Function LanguageManager.LanguageManager_C.GetTextByKey
// 0x0078 (0x0078 - 0x0000)
struct LanguageManager_C_GetTextByKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Output;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2506[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2507[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLanguageListStruct                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0030)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LanguageManager_C_GetTextByKey) == 0x000008, "Wrong alignment on LanguageManager_C_GetTextByKey");
static_assert(sizeof(LanguageManager_C_GetTextByKey) == 0x000078, "Wrong size on LanguageManager_C_GetTextByKey");
static_assert(offsetof(LanguageManager_C_GetTextByKey, Key) == 0x000000, "Member 'LanguageManager_C_GetTextByKey::Key' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_GetTextByKey, Output) == 0x000010, "Member 'LanguageManager_C_GetTextByKey::Output' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_GetTextByKey, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'LanguageManager_C_GetTextByKey::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_GetTextByKey, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'LanguageManager_C_GetTextByKey::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_GetTextByKey, CallFunc_Conv_StringToName_ReturnValue) == 0x000034, "Member 'LanguageManager_C_GetTextByKey::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_GetTextByKey, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'LanguageManager_C_GetTextByKey::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(LanguageManager_C_GetTextByKey, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'LanguageManager_C_GetTextByKey::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function LanguageManager.LanguageManager_C.SetLanguage
// 0x0001 (0x0001 - 0x0000)
struct LanguageManager_C_SetLanguage final
{
public:
	ELanguageListEnum                             NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LanguageManager_C_SetLanguage) == 0x000001, "Wrong alignment on LanguageManager_C_SetLanguage");
static_assert(sizeof(LanguageManager_C_SetLanguage) == 0x000001, "Wrong size on LanguageManager_C_SetLanguage");
static_assert(offsetof(LanguageManager_C_SetLanguage, NewParam) == 0x000000, "Member 'LanguageManager_C_SetLanguage::NewParam' has a wrong offset!");

}

