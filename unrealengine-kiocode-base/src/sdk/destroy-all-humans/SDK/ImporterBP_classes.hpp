#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ImporterBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ImporterBP.ImporterBP_C
// 0x0060 (0x02F0 - 0x0290)
class AImporterBP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaying;                                         // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23F6[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridManagerBP_C*                       TMPGridMgrForEditor;                               // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Start0X;                                           // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Start0Y;                                           // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Start1X;                                           // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Start1Y;                                           // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Start2X;                                           // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Start2Y;                                           // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Start3X;                                           // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Start3Y;                                           // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LevelLoaded;                                       // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23F7[0x3];                                     // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Size;                                              // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MapSize;                                           // 0x02D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ImporterBP(int32 EntryPoint);
	void GetStart0(int32* X, int32* Y);
	void GetStart1(int32* X, int32* Y);
	void GetStart2(int32* X, int32* Y);
	void GetStart3(int32* X, int32* Y);
	void ImporterLoadLevel(const class FString& Level);
	void ImporterPlaceCharacters();
	void KillDisabled(class AAlliedCharacter_C* Character, int32 X, int32 Y, bool* Disabled);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void TellSpawnsToGridManager();
	void TileTypeToGridMGRENUM(const class FString& Property, class AGridManagerBP_C* Grid_manager, int32 X, int32 Y);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ImporterBP_C">();
	}
	static class AImporterBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AImporterBP_C>();
	}
};
static_assert(alignof(AImporterBP_C) == 0x000008, "Wrong alignment on AImporterBP_C");
static_assert(sizeof(AImporterBP_C) == 0x0002F0, "Wrong size on AImporterBP_C");
static_assert(offsetof(AImporterBP_C, UberGraphFrame) == 0x000290, "Member 'AImporterBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, DefaultSceneRoot) == 0x000298, "Member 'AImporterBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, IsPlaying) == 0x0002A0, "Member 'AImporterBP_C::IsPlaying' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, TMPGridMgrForEditor) == 0x0002A8, "Member 'AImporterBP_C::TMPGridMgrForEditor' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Start0X) == 0x0002B0, "Member 'AImporterBP_C::Start0X' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Start0Y) == 0x0002B4, "Member 'AImporterBP_C::Start0Y' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Start1X) == 0x0002B8, "Member 'AImporterBP_C::Start1X' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Start1Y) == 0x0002BC, "Member 'AImporterBP_C::Start1Y' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Start2X) == 0x0002C0, "Member 'AImporterBP_C::Start2X' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Start2Y) == 0x0002C4, "Member 'AImporterBP_C::Start2Y' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Start3X) == 0x0002C8, "Member 'AImporterBP_C::Start3X' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Start3Y) == 0x0002CC, "Member 'AImporterBP_C::Start3Y' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, LevelLoaded) == 0x0002D0, "Member 'AImporterBP_C::LevelLoaded' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, Size) == 0x0002D4, "Member 'AImporterBP_C::Size' has a wrong offset!");
static_assert(offsetof(AImporterBP_C, MapSize) == 0x0002D8, "Member 'AImporterBP_C::MapSize' has a wrong offset!");

}

