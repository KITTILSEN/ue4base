#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Minion1Knife

#include "Basic.hpp"

#include "Minion1Knife_classes.hpp"
#include "Minion1Knife_parameters.hpp"


namespace SDK
{

// Function Minion1Knife.Minion1Knife_C.CheckIfInEnemyCell
// (Public, BlueprintCallable, BlueprintEvent)

void AMinion1Knife_C::CheckIfInEnemyCell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Minion1Knife_C", "CheckIfInEnemyCell");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Minion1Knife.Minion1Knife_C.ExecuteUbergraph_Minion1Knife
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMinion1Knife_C::ExecuteUbergraph_Minion1Knife(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Minion1Knife_C", "ExecuteUbergraph_Minion1Knife");

	Params::Minion1Knife_C_ExecuteUbergraph_Minion1Knife Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Minion1Knife.Minion1Knife_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMinion1Knife_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Minion1Knife_C", "ReceiveTick");

	Params::Minion1Knife_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Minion1Knife.Minion1Knife_C.Rotate in Direction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMinion1Knife_C::Rotate_in_Direction(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Minion1Knife_C", "Rotate in Direction");

	Params::Minion1Knife_C_Rotate_in_Direction Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Minion1Knife.Minion1Knife_C.SetVariables
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Active                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_StartPos                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndPos                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_Timer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Damage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMinion1Knife_C::SetVariables(bool Param_Active, const struct FVector& Param_StartPos, const struct FVector& EndPos, double Param_Timer, int32 Param_Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Minion1Knife_C", "SetVariables");

	Params::Minion1Knife_C_SetVariables Parms{};

	Parms.Param_Active = Param_Active;
	Parms.Param_StartPos = std::move(Param_StartPos);
	Parms.EndPos = std::move(EndPos);
	Parms.Param_Timer = Param_Timer;
	Parms.Param_Damage = Param_Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Minion1Knife.Minion1Knife_C.Update
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FinishedMoving                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMinion1Knife_C::Update(bool* FinishedMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Minion1Knife_C", "Update");

	Params::Minion1Knife_C_Update Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FinishedMoving != nullptr)
		*FinishedMoving = Parms.FinishedMoving;
}

}

