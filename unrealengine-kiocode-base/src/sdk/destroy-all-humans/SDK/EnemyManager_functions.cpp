#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnemyManager

#include "Basic.hpp"

#include "EnemyManager_classes.hpp"
#include "EnemyManager_parameters.hpp"


namespace SDK
{

// Function EnemyManager.EnemyManager_C.AddSpawnerPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemyManager_C::AddSpawnerPosition(int32 X, int32 Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "AddSpawnerPosition");

	Params::EnemyManager_C_AddSpawnerPosition Parms{};

	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EnemyManager.EnemyManager_C.CreateExplosiveEnemy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   StartX                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   StartY                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AExplosiveEnemy_C*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AExplosiveEnemy_C* AEnemyManager_C::CreateExplosiveEnemy(const struct FVector& Pos, int32 StartX, int32 StartY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "CreateExplosiveEnemy");

	Params::EnemyManager_C_CreateExplosiveEnemy Parms{};

	Parms.Pos = std::move(Pos);
	Parms.StartX = StartX;
	Parms.StartY = StartY;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EnemyManager.EnemyManager_C.CreateRangedEnemy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Start0X                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Start0Y                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARangedEnemy_C*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class ARangedEnemy_C* AEnemyManager_C::CreateRangedEnemy(const struct FVector& Pos, int32 Start0X, int32 Start0Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "CreateRangedEnemy");

	Params::EnemyManager_C_CreateRangedEnemy Parms{};

	Parms.Pos = std::move(Pos);
	Parms.Start0X = Start0X;
	Parms.Start0Y = Start0Y;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EnemyManager.EnemyManager_C.CreateStandardEnemy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Start0X                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Start0Y                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStandardEnemy_C*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AStandardEnemy_C* AEnemyManager_C::CreateStandardEnemy(const struct FVector& Pos, int32 Start0X, int32 Start0Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "CreateStandardEnemy");

	Params::EnemyManager_C_CreateStandardEnemy Parms{};

	Parms.Pos = std::move(Pos);
	Parms.Start0X = Start0X;
	Parms.Start0Y = Start0Y;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EnemyManager.EnemyManager_C.EndEnemyTurn
// (Public, BlueprintCallable, BlueprintEvent)

void AEnemyManager_C::EndEnemyTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "EndEnemyTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EnemyManager.EnemyManager_C.ExecuteUbergraph_EnemyManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemyManager_C::ExecuteUbergraph_EnemyManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "ExecuteUbergraph_EnemyManager");

	Params::EnemyManager_C_ExecuteUbergraph_EnemyManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EnemyManager.EnemyManager_C.FinishedTheGame?
// (Public, BlueprintCallable, BlueprintEvent)

void AEnemyManager_C::FinishedTheGame_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "FinishedTheGame?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EnemyManager.EnemyManager_C.IsMissionComplete
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEnemyManager_C::IsMissionComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "IsMissionComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EnemyManager.EnemyManager_C.OnTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    End                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemyManager_C::OnTick(bool* End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "OnTick");

	Params::EnemyManager_C_OnTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (End != nullptr)
		*End = Parms.End;
}


// Function EnemyManager.EnemyManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AEnemyManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EnemyManager.EnemyManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemyManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "ReceiveTick");

	Params::EnemyManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EnemyManager.EnemyManager_C.RemoveSpawner
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemyManager_C::RemoveSpawner(const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "RemoveSpawner");

	Params::EnemyManager_C_RemoveSpawner Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EnemyManager.EnemyManager_C.Reset Enemies Already Acted
// (Public, BlueprintCallable, BlueprintEvent)

void AEnemyManager_C::Reset_Enemies_Already_Acted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "Reset Enemies Already Acted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EnemyManager.EnemyManager_C.SpawnNewEnemies
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEnemyManager_C::SpawnNewEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "SpawnNewEnemies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EnemyManager.EnemyManager_C.Start Of Enemy Turn
// (Public, BlueprintCallable, BlueprintEvent)

void AEnemyManager_C::Start_Of_Enemy_Turn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "Start Of Enemy Turn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EnemyManager.EnemyManager_C.UpdateSpawnerMaterials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEnemyManager_C::UpdateSpawnerMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyManager_C", "UpdateSpawnerMaterials");

	UObject::ProcessEvent(Func, nullptr);
}

}

