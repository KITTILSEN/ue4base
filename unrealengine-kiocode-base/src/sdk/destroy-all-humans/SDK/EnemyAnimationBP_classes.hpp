#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnemyAnimationBP

#include "Basic.hpp"

#include "EnemyTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass EnemyAnimationBP.EnemyAnimationBP_C
// 0x0F40 (0x1290 - 0x0350)
class UEnemyAnimationBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_23CB[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x0388(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x03B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x03D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0400(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0428(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0478(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x04A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x04C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x04F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0518(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0540(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0590(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x05B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x05E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0608(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0630(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0658(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0680(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x06A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x06D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x06F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0720(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0748(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0770(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0798(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x07C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x07E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0810(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0838(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0860(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0888(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x08B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x08D8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0900(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x0948(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x0968(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x09B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x09D0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x0A18(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x0A38(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x0A80(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0AA0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x0AE8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0B08(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x0B50(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0B70(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x0BB8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0BD8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0C20(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0C40(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0C88(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0CA8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0CF0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0D10(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0D58(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0D78(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0DC0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0DE0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0E28(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0E48(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0E90(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0EB0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0EF8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0F18(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0F60(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0F80(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0FA0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0FE8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1008(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1050(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1070(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x10B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x10D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1120(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1140(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1188(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x11A8(0x00C8)()
	class AMyCharacter_C*                         MyCharacter;                                       // 0x1270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasToPlayWalkAnimation;                            // 0x1278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasToPlayDieAnimation;                             // 0x1279(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasToPlayAttackAnimation;                          // 0x127A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasToPlayTakeDamageAnimation;                      // 0x127B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EnemyTypes                                    MyType;                                            // 0x127C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned;                                           // 0x127D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnedAlreadySet;                                 // 0x127E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstFrameSkipped;                                 // 0x127F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasToPlaySpawn;                                    // 0x1280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_AnticipationExplosion();
	void AnimNotify_Death();
	void AnimNotify_DeathAlt();
	void AnimNotify_Dessintegrate();
	void AnimNotify_enemy_damage();
	void AnimNotify_enemy_walk01();
	void AnimNotify_Enemy_walk02();
	void AnimNotify_EnemyIdle();
	void AnimNotify_enemyMeleeAttack();
	void AnimNotify_EnemyRangedAttack();
	void AnimNotify_Explosion();
	void AnimNotify_FirstFrame();
	void AnimNotify_Spawned();
	void AnimNotify_Spwaned();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_137A01C44D67B536696A5893DD6DC474();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_1525EFDE472CD364149288817F29B345();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_1AB6AFC6460AD9B8257DA19F6E1BB80B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_21E250394EFDC814D4678DB2659D8B47();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_3E262DB947F8BBE26F9E39ABF49D124D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_4E6C5CEB4F95D116E67D17BDB9878651();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_5966BD4B435927A9C671DDBA1F0696BD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_5D47EFB7414D1E22F1F2A8B709ECB533();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_5FB5C8F748F73AFBB680278E50883FFE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_681EDED14CAB781DB2269690001868AC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_6900CEB44E8F866D500D7DB9EB2373DF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_8CA36A854435A8F19963998FA924971F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_9B7D3D6040123520AD40C38A9B266EA9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_A10107EE4AFC87EE3CFF1AB65EC90806();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_AEA94D5140396FB23729D9BF69010BC5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_C715D2A44CB4624E0E552AA9157A470C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_CAB6757449908CAB7455AD9194880231();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_D081935044CCBCD509AD019FF3F51765();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_EnemyAnimationBP_AnimGraphNode_TransitionResult_DA21A618480D4F3BAE5443A2F2AB0F20();
	void ExecuteUbergraph_EnemyAnimationBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EnemyAnimationBP_C">();
	}
	static class UEnemyAnimationBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnemyAnimationBP_C>();
	}
};
static_assert(alignof(UEnemyAnimationBP_C) == 0x000010, "Wrong alignment on UEnemyAnimationBP_C");
static_assert(sizeof(UEnemyAnimationBP_C) == 0x001290, "Wrong size on UEnemyAnimationBP_C");
static_assert(offsetof(UEnemyAnimationBP_C, UberGraphFrame) == 0x000350, "Member 'UEnemyAnimationBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UEnemyAnimationBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UEnemyAnimationBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_Root) == 0x000368, "Member 'UEnemyAnimationBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_34) == 0x000388, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_33) == 0x0003B0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_32) == 0x0003D8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_31) == 0x000400, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_30) == 0x000428, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_29) == 0x000450, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_28) == 0x000478, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_27) == 0x0004A0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_26) == 0x0004C8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_25) == 0x0004F0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_24) == 0x000518, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_23) == 0x000540, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_22) == 0x000568, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_21) == 0x000590, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_20) == 0x0005B8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_19) == 0x0005E0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_18) == 0x000608, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_17) == 0x000630, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_16) == 0x000658, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_15) == 0x000680, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_14) == 0x0006A8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_13) == 0x0006D0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_12) == 0x0006F8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_11) == 0x000720, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_10) == 0x000748, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_9) == 0x000770, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_8) == 0x000798, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_7) == 0x0007C0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_6) == 0x0007E8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_5) == 0x000810, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_4) == 0x000838, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_3) == 0x000860, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_2) == 0x000888, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult_1) == 0x0008B0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_TransitionResult) == 0x0008D8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_20) == 0x000900, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_21) == 0x000948, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_19) == 0x000968, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_20) == 0x0009B0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_18) == 0x0009D0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_19) == 0x000A18, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_17) == 0x000A38, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_18) == 0x000A80, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_16) == 0x000AA0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_17) == 0x000AE8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_15) == 0x000B08, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_16) == 0x000B50, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_14) == 0x000B70, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_15) == 0x000BB8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_13) == 0x000BD8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_14) == 0x000C20, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_12) == 0x000C40, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_13) == 0x000C88, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_11) == 0x000CA8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_12) == 0x000CF0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_10) == 0x000D10, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_11) == 0x000D58, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_9) == 0x000D78, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_10) == 0x000DC0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_8) == 0x000DE0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_9) == 0x000E28, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_7) == 0x000E48, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_8) == 0x000E90, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_6) == 0x000EB0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_7) == 0x000EF8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_5) == 0x000F18, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_6) == 0x000F60, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_5) == 0x000F80, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_4) == 0x000FA0, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_4) == 0x000FE8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_3) == 0x001008, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_3) == 0x001050, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_2) == 0x001070, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_2) == 0x0010B8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer_1) == 0x0010D8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult_1) == 0x001120, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_SequencePlayer) == 0x001140, "Member 'UEnemyAnimationBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateResult) == 0x001188, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, AnimGraphNode_StateMachine) == 0x0011A8, "Member 'UEnemyAnimationBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, MyCharacter) == 0x001270, "Member 'UEnemyAnimationBP_C::MyCharacter' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, HasToPlayWalkAnimation) == 0x001278, "Member 'UEnemyAnimationBP_C::HasToPlayWalkAnimation' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, HasToPlayDieAnimation) == 0x001279, "Member 'UEnemyAnimationBP_C::HasToPlayDieAnimation' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, HasToPlayAttackAnimation) == 0x00127A, "Member 'UEnemyAnimationBP_C::HasToPlayAttackAnimation' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, HasToPlayTakeDamageAnimation) == 0x00127B, "Member 'UEnemyAnimationBP_C::HasToPlayTakeDamageAnimation' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, MyType) == 0x00127C, "Member 'UEnemyAnimationBP_C::MyType' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, Spawned) == 0x00127D, "Member 'UEnemyAnimationBP_C::Spawned' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, SpawnedAlreadySet) == 0x00127E, "Member 'UEnemyAnimationBP_C::SpawnedAlreadySet' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, FirstFrameSkipped) == 0x00127F, "Member 'UEnemyAnimationBP_C::FirstFrameSkipped' has a wrong offset!");
static_assert(offsetof(UEnemyAnimationBP_C, HasToPlaySpawn) == 0x001280, "Member 'UEnemyAnimationBP_C::HasToPlaySpawn' has a wrong offset!");

}

