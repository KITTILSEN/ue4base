#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KnifeThrowAbility

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function KnifeThrowAbility.KnifeThrowAbility_C.ContinueAction
// 0x0010 (0x0010 - 0x0000)
struct KnifeThrowAbility_C_ContinueAction final
{
public:
	bool                                          CallFunc_Update_FinishedMoving;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_ContinueAction) == 0x000008, "Wrong alignment on KnifeThrowAbility_C_ContinueAction");
static_assert(sizeof(KnifeThrowAbility_C_ContinueAction) == 0x000010, "Wrong size on KnifeThrowAbility_C_ContinueAction");
static_assert(offsetof(KnifeThrowAbility_C_ContinueAction, CallFunc_Update_FinishedMoving) == 0x000000, "Member 'KnifeThrowAbility_C_ContinueAction::CallFunc_Update_FinishedMoving' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ContinueAction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'KnifeThrowAbility_C_ContinueAction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.ExecuteUbergraph_KnifeThrowAbility
// 0x0080 (0x0080 - 0x0000)
struct KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E8[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMinion1Knife_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility) == 0x000010, "Wrong alignment on KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility");
static_assert(sizeof(KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility) == 0x000080, "Wrong size on KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility");
static_assert(offsetof(KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility, EntryPoint) == 0x000000, "Member 'KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'KnifeThrowAbility_C_ExecuteUbergraph_KnifeThrowAbility::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.FirstUse
// 0x0128 (0x0128 - 0x0000)
struct KnifeThrowAbility_C_FirstUse final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0038(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_FirstUse) == 0x000008, "Wrong alignment on KnifeThrowAbility_C_FirstUse");
static_assert(sizeof(KnifeThrowAbility_C_FirstUse) == 0x000128, "Wrong size on KnifeThrowAbility_C_FirstUse");
static_assert(offsetof(KnifeThrowAbility_C_FirstUse, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'KnifeThrowAbility_C_FirstUse::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_FirstUse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'KnifeThrowAbility_C_FirstUse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_FirstUse, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'KnifeThrowAbility_C_FirstUse::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_FirstUse, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000038, "Member 'KnifeThrowAbility_C_FirstUse::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_FirstUse, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000120, "Member 'KnifeThrowAbility_C_FirstUse::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_FirstUse, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000121, "Member 'KnifeThrowAbility_C_FirstUse::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.OnAbilityDeselected
// 0x0001 (0x0001 - 0x0000)
struct KnifeThrowAbility_C_OnAbilityDeselected final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_OnAbilityDeselected) == 0x000001, "Wrong alignment on KnifeThrowAbility_C_OnAbilityDeselected");
static_assert(sizeof(KnifeThrowAbility_C_OnAbilityDeselected) == 0x000001, "Wrong size on KnifeThrowAbility_C_OnAbilityDeselected");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilityDeselected, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'KnifeThrowAbility_C_OnAbilityDeselected::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.OnAbilitySelected
// 0x0078 (0x0078 - 0x0000)
struct KnifeThrowAbility_C_OnAbilitySelected final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam_1;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_OnAbilitySelected) == 0x000008, "Wrong alignment on KnifeThrowAbility_C_OnAbilitySelected");
static_assert(sizeof(KnifeThrowAbility_C_OnAbilitySelected) == 0x000078, "Wrong size on KnifeThrowAbility_C_OnAbilitySelected");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_GetRefMgr_RefMgr) == 0x000038, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_GetDisplayManager_NewParam) == 0x000040, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_GetDisplayManager_NewParam' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_GetRefMgr_RefMgr_1) == 0x000048, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_GetOwner_ReturnValue_1) == 0x000050, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_GetDisplayManager_NewParam_1) == 0x000058, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_GetDisplayManager_NewParam_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnAbilitySelected, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'KnifeThrowAbility_C_OnAbilitySelected::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.OnEnd
// 0x0028 (0x0028 - 0x0000)
struct KnifeThrowAbility_C_OnEnd final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMinion1_C*                             K2Node_DynamicCast_AsMinion_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_OnEnd) == 0x000008, "Wrong alignment on KnifeThrowAbility_C_OnEnd");
static_assert(sizeof(KnifeThrowAbility_C_OnEnd) == 0x000028, "Wrong size on KnifeThrowAbility_C_OnEnd");
static_assert(offsetof(KnifeThrowAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'KnifeThrowAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnEnd, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'KnifeThrowAbility_C_OnEnd::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnEnd, K2Node_DynamicCast_AsMinion_1) == 0x000010, "Member 'KnifeThrowAbility_C_OnEnd::K2Node_DynamicCast_AsMinion_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnEnd, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KnifeThrowAbility_C_OnEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_OnEnd, CallFunc_GetPlayerController_PC) == 0x000020, "Member 'KnifeThrowAbility_C_OnEnd::CallFunc_GetPlayerController_PC' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.PreDisplayTarget
// 0x0020 (0x0020 - 0x0000)
struct KnifeThrowAbility_C_PreDisplayTarget final
{
public:
	struct FVector                                Param_Target;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_PreDisplayTarget) == 0x000008, "Wrong alignment on KnifeThrowAbility_C_PreDisplayTarget");
static_assert(sizeof(KnifeThrowAbility_C_PreDisplayTarget) == 0x000020, "Wrong size on KnifeThrowAbility_C_PreDisplayTarget");
static_assert(offsetof(KnifeThrowAbility_C_PreDisplayTarget, Param_Target) == 0x000000, "Member 'KnifeThrowAbility_C_PreDisplayTarget::Param_Target' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr) == 0x000018, "Member 'KnifeThrowAbility_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.SecondUse
// 0x0038 (0x0038 - 0x0000)
struct KnifeThrowAbility_C_SecondUse final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_SecondUse) == 0x000008, "Wrong alignment on KnifeThrowAbility_C_SecondUse");
static_assert(sizeof(KnifeThrowAbility_C_SecondUse) == 0x000038, "Wrong size on KnifeThrowAbility_C_SecondUse");
static_assert(offsetof(KnifeThrowAbility_C_SecondUse, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'KnifeThrowAbility_C_SecondUse::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_SecondUse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'KnifeThrowAbility_C_SecondUse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_SecondUse, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'KnifeThrowAbility_C_SecondUse::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.Use
// 0x0080 (0x0080 - 0x0000)
struct KnifeThrowAbility_C_Use final
{
public:
	struct FVector                                AbilityTarget;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldPosFromCellXY_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMinion1_C*                             K2Node_DynamicCast_AsMinion_1;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25EA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_Use) == 0x000008, "Wrong alignment on KnifeThrowAbility_C_Use");
static_assert(sizeof(KnifeThrowAbility_C_Use) == 0x000080, "Wrong size on KnifeThrowAbility_C_Use");
static_assert(offsetof(KnifeThrowAbility_C_Use, AbilityTarget) == 0x000000, "Member 'KnifeThrowAbility_C_Use::AbilityTarget' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_Use, CallFunc_GetGridMgr_GM) == 0x000018, "Member 'KnifeThrowAbility_C_Use::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_Use, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000020, "Member 'KnifeThrowAbility_C_Use::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_Use, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'KnifeThrowAbility_C_Use::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_Use, CallFunc_GetWorldPosFromCellXY_ReturnValue) == 0x000040, "Member 'KnifeThrowAbility_C_Use::CallFunc_GetWorldPosFromCellXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_Use, K2Node_DynamicCast_AsMinion_1) == 0x000058, "Member 'KnifeThrowAbility_C_Use::K2Node_DynamicCast_AsMinion_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_Use, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'KnifeThrowAbility_C_Use::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_Use, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'KnifeThrowAbility_C_Use::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function KnifeThrowAbility.KnifeThrowAbility_C.ValidateTarget
// 0x0108 (0x0108 - 0x0000)
struct KnifeThrowAbility_C_ValidateTarget final
{
public:
	struct FVector                                Param_Target;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25EB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Path;                                              // 0x0020(0x0010)(Edit, BlueprintVisible)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25EC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25ED[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_FindFullPath_ReturnValue;                 // 0x0068(0x0010)(ReferenceParm)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM_1;                          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCellDistanceVec_ReturnValue;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25EE[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25EF[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue_1;      // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClearPath_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KnifeThrowAbility_C_ValidateTarget) == 0x000008, "Wrong alignment on KnifeThrowAbility_C_ValidateTarget");
static_assert(sizeof(KnifeThrowAbility_C_ValidateTarget) == 0x000108, "Wrong size on KnifeThrowAbility_C_ValidateTarget");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, Param_Target) == 0x000000, "Member 'KnifeThrowAbility_C_ValidateTarget::Param_Target' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, Valid_) == 0x000018, "Member 'KnifeThrowAbility_C_ValidateTarget::Valid_' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, Path) == 0x000020, "Member 'KnifeThrowAbility_C_ValidateTarget::Path' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_GetGridMgr_GM) == 0x000030, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_Array_IsEmpty_ReturnValue) == 0x000040, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_FindFullPath_ReturnValue) == 0x000068, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_FindFullPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_GetGridMgr_GM_1) == 0x000078, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_GetGridMgr_GM_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_GetCellDistanceVec_ReturnValue) == 0x000080, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_GetCellDistanceVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000088, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_BreakVector_X) == 0x0000A8, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_FTrunc_ReturnValue) == 0x0000C0, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_FTrunc_ReturnValue_1) == 0x0000C4, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_GetCellXYFromWorldPos_ReturnValue_1) == 0x0000C8, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_GetCellXYFromWorldPos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_BreakVector_X_1) == 0x0000E0, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_BreakVector_Y_1) == 0x0000E8, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_BreakVector_Z_1) == 0x0000F0, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_FTrunc_ReturnValue_2) == 0x0000F8, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_FTrunc_ReturnValue_3) == 0x0000FC, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KnifeThrowAbility_C_ValidateTarget, CallFunc_IsClearPath_ReturnValue) == 0x000100, "Member 'KnifeThrowAbility_C_ValidateTarget::CallFunc_IsClearPath_ReturnValue' has a wrong offset!");

}

