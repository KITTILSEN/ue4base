#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DialogueWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DialogueWidget.DialogueWidget_C
// 0x0098 (0x0318 - 0x0280)
class UDialogueWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowDialogueWidget;                                // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_53;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_142;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichText;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_0;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Whostalking;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FString>                         TextToDisplay;                                     // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         LetterIndex;                                       // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D4[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LetterTimer;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeBetweenLetters;                                // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PhraseFinished;                                    // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D5[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SentenceIndex;                                     // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SentenceTimer;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SentenceTimerMax;                                  // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoAdvance;                                       // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D6[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterial*>                      Gifs;                                              // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ChangeGifWithSentence;                             // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Advance_to_Next_Sentence();
	void ChangeName(int32 Who);
	void Construct();
	void Display_This_Text_Array(double DeltaTime);
	void ExecuteUbergraph_DialogueWidget(int32 EntryPoint);
	void InpActEvt_Action_Spacebar_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Action_Spacebar_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void Set_Gif(class UMaterial* Gif);
	void ShowThisText(TArray<class FString>& Text, double TextSpeed, double TimeBetweenSentences, bool Param_AutoAdvance, TArray<class UMaterial*>& Gif, bool TextCentered, bool Show_Image);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DialogueWidget_C">();
	}
	static class UDialogueWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDialogueWidget_C>();
	}
};
static_assert(alignof(UDialogueWidget_C) == 0x000008, "Wrong alignment on UDialogueWidget_C");
static_assert(sizeof(UDialogueWidget_C) == 0x000318, "Wrong size on UDialogueWidget_C");
static_assert(offsetof(UDialogueWidget_C, UberGraphFrame) == 0x000280, "Member 'UDialogueWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, ShowDialogueWidget) == 0x000288, "Member 'UDialogueWidget_C::ShowDialogueWidget' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, CanvasPanel_53) == 0x000290, "Member 'UDialogueWidget_C::CanvasPanel_53' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, Image_142) == 0x000298, "Member 'UDialogueWidget_C::Image_142' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, RichText) == 0x0002A0, "Member 'UDialogueWidget_C::RichText' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, TextBlock_0) == 0x0002A8, "Member 'UDialogueWidget_C::TextBlock_0' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, Whostalking) == 0x0002B0, "Member 'UDialogueWidget_C::Whostalking' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, TextToDisplay) == 0x0002B8, "Member 'UDialogueWidget_C::TextToDisplay' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, LetterIndex) == 0x0002C8, "Member 'UDialogueWidget_C::LetterIndex' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, Enabled) == 0x0002CC, "Member 'UDialogueWidget_C::Enabled' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, LetterTimer) == 0x0002D0, "Member 'UDialogueWidget_C::LetterTimer' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, TimeBetweenLetters) == 0x0002D8, "Member 'UDialogueWidget_C::TimeBetweenLetters' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, PhraseFinished) == 0x0002E0, "Member 'UDialogueWidget_C::PhraseFinished' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, SentenceIndex) == 0x0002E4, "Member 'UDialogueWidget_C::SentenceIndex' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, SentenceTimer) == 0x0002E8, "Member 'UDialogueWidget_C::SentenceTimer' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, SentenceTimerMax) == 0x0002F0, "Member 'UDialogueWidget_C::SentenceTimerMax' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, AutoAdvance) == 0x0002F8, "Member 'UDialogueWidget_C::AutoAdvance' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, Gifs) == 0x000300, "Member 'UDialogueWidget_C::Gifs' has a wrong offset!");
static_assert(offsetof(UDialogueWidget_C, ChangeGifWithSentence) == 0x000310, "Member 'UDialogueWidget_C::ChangeGifWithSentence' has a wrong offset!");

}

