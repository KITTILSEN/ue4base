#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TurnManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TurnManager.TurnManager_C.ActualEndEnemyTurn
// 0x0050 (0x0050 - 0x0000)
struct TurnManager_C_ActualEndEnemyTurn final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2423[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager_C*                        CallFunc_GetEnemyManager_EnemyManager;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2424[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_2;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_3;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHUDWIdget_C*                           CallFunc_GetHUD_HUD;                               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC_1;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_ActualEndEnemyTurn) == 0x000008, "Wrong alignment on TurnManager_C_ActualEndEnemyTurn");
static_assert(sizeof(TurnManager_C_ActualEndEnemyTurn) == 0x000050, "Wrong size on TurnManager_C_ActualEndEnemyTurn");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, Temp_int_Variable) == 0x000000, "Member 'TurnManager_C_ActualEndEnemyTurn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_GetRefMgr_RefMgr_1) == 0x000010, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_GetEnemyManager_EnemyManager) == 0x000018, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_GetPlayerController_PC) == 0x000020, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_GetRefMgr_RefMgr_2) == 0x000030, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_GetRefMgr_RefMgr_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_GetRefMgr_RefMgr_3) == 0x000038, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_GetRefMgr_RefMgr_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_GetHUD_HUD) == 0x000040, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndEnemyTurn, CallFunc_GetPlayerController_PC_1) == 0x000048, "Member 'TurnManager_C_ActualEndEnemyTurn::CallFunc_GetPlayerController_PC_1' has a wrong offset!");

// Function TurnManager.TurnManager_C.ActualEndPlayerTurn
// 0x0160 (0x0160 - 0x0000)
struct TurnManager_C_ActualEndPlayerTurn final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2425[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager_C*                        CallFunc_GetEnemyManager_EnemyManager;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHUDWIdget_C*                           CallFunc_GetHUD_HUD;                               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_2;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_3;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC_1;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAlliedCharacter_C*                     CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2426[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMinion1_C*                             K2Node_DynamicCast_AsMinion_1;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2427[0xE];                                     // 0x0072(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_ActualEndPlayerTurn) == 0x000010, "Wrong alignment on TurnManager_C_ActualEndPlayerTurn");
static_assert(sizeof(TurnManager_C_ActualEndPlayerTurn) == 0x000160, "Wrong size on TurnManager_C_ActualEndPlayerTurn");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, Temp_int_Array_Index_Variable) == 0x000000, "Member 'TurnManager_C_ActualEndPlayerTurn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TurnManager_C_ActualEndPlayerTurn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetRefMgr_RefMgr) == 0x000010, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetRefMgr_RefMgr_1) == 0x000018, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetEnemyManager_EnemyManager) == 0x000020, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetHUD_HUD) == 0x000028, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetGridMgr_GM) == 0x000030, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetRefMgr_RefMgr_2) == 0x000038, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetRefMgr_RefMgr_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetRefMgr_RefMgr_3) == 0x000040, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetRefMgr_RefMgr_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetPlayerController_PC) == 0x000048, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetPlayerController_PC_1) == 0x000050, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetPlayerController_PC_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_Array_Get_Item) == 0x000058, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, K2Node_DynamicCast_AsMinion_1) == 0x000068, "Member 'TurnManager_C_ActualEndPlayerTurn::K2Node_DynamicCast_AsMinion_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'TurnManager_C_ActualEndPlayerTurn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_BreakTransform_Rotation) == 0x0000F8, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_BreakTransform_Scale) == 0x000110, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000128, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_BreakVector_X) == 0x000140, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_BreakVector_Y) == 0x000148, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_BreakVector_Z) == 0x000150, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_FTrunc_ReturnValue) == 0x000158, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ActualEndPlayerTurn, CallFunc_FTrunc_ReturnValue_1) == 0x00015C, "Member 'TurnManager_C_ActualEndPlayerTurn::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");

// Function TurnManager.TurnManager_C.CanPlayerPassTurn
// 0x0002 (0x0002 - 0x0000)
struct TurnManager_C_CanPlayerPassTurn final
{
public:
	bool                                          Can_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_CanPlayerPassTurn) == 0x000001, "Wrong alignment on TurnManager_C_CanPlayerPassTurn");
static_assert(sizeof(TurnManager_C_CanPlayerPassTurn) == 0x000002, "Wrong size on TurnManager_C_CanPlayerPassTurn");
static_assert(offsetof(TurnManager_C_CanPlayerPassTurn, Can_) == 0x000000, "Member 'TurnManager_C_CanPlayerPassTurn::Can_' has a wrong offset!");
static_assert(offsetof(TurnManager_C_CanPlayerPassTurn, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'TurnManager_C_CanPlayerPassTurn::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function TurnManager.TurnManager_C.EndPlayerTurn
// 0x0010 (0x0010 - 0x0000)
struct TurnManager_C_EndPlayerTurn final
{
public:
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager_C*                        CallFunc_GetEnemyManager_EnemyManager;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_EndPlayerTurn) == 0x000008, "Wrong alignment on TurnManager_C_EndPlayerTurn");
static_assert(sizeof(TurnManager_C_EndPlayerTurn) == 0x000010, "Wrong size on TurnManager_C_EndPlayerTurn");
static_assert(offsetof(TurnManager_C_EndPlayerTurn, CallFunc_GetRefMgr_RefMgr) == 0x000000, "Member 'TurnManager_C_EndPlayerTurn::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(TurnManager_C_EndPlayerTurn, CallFunc_GetEnemyManager_EnemyManager) == 0x000008, "Member 'TurnManager_C_EndPlayerTurn::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");

// Function TurnManager.TurnManager_C.ExecuteUbergraph_TurnManager
// 0x00A0 (0x00A0 - 0x0000)
struct TurnManager_C_ExecuteUbergraph_TurnManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2428[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2429[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALevelID_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class ALevelID_C*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ALevelSequenceActor*>            CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242A[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242B[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ALevelID_C*>                     CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0060(0x0010)(ReferenceParm)
	class ALevelID_C*                             CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242C[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_ExecuteUbergraph_TurnManager) == 0x000008, "Wrong alignment on TurnManager_C_ExecuteUbergraph_TurnManager");
static_assert(sizeof(TurnManager_C_ExecuteUbergraph_TurnManager) == 0x0000A0, "Wrong size on TurnManager_C_ExecuteUbergraph_TurnManager");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, EntryPoint) == 0x000000, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_IsPlaying_ReturnValue) == 0x000019, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_Array_Get_Item) == 0x000030, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000038, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_Array_IsEmpty_ReturnValue) == 0x000048, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_Conv_StringToName_ReturnValue) == 0x00004C, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000060, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000078, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000080, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_IsValid_ReturnValue_2) == 0x000089, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000090, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ExecuteUbergraph_TurnManager, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000098, "Member 'TurnManager_C_ExecuteUbergraph_TurnManager::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function TurnManager.TurnManager_C.HideAllHUDs
// 0x00C0 (0x00C0 - 0x0000)
struct TurnManager_C_HideAllHUDs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242D[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APostProcessVolume*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APostProcessVolume*                     CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHUDWIdget_C*                           CallFunc_GetHUD_HUD;                               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager_C*                        CallFunc_GetEnemyManager_EnemyManager;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAlliedCharacter_C*                     CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AExplosiveEnemy_C*                      CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242E[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARangedEnemy_C*                         CallFunc_Array_Get_Item_3;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AStandardEnemy_C*                       CallFunc_Array_Get_Item_4;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242F[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_HideAllHUDs) == 0x000008, "Wrong alignment on TurnManager_C_HideAllHUDs");
static_assert(sizeof(TurnManager_C_HideAllHUDs) == 0x0000C0, "Wrong size on TurnManager_C_HideAllHUDs");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Loop_Counter_Variable_4) == 0x00002C, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Add_IntInt_ReturnValue_4) == 0x000030, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Array_Index_Variable_3) == 0x000034, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, Temp_int_Array_Index_Variable_4) == 0x000038, "Member 'TurnManager_C_HideAllHUDs::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'TurnManager_C_HideAllHUDs::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_GetRefMgr_RefMgr) == 0x000050, "Member 'TurnManager_C_HideAllHUDs::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Get_Item) == 0x000058, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_GetHUD_HUD) == 0x000060, "Member 'TurnManager_C_HideAllHUDs::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_GetPlayerController_PC) == 0x000068, "Member 'TurnManager_C_HideAllHUDs::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_GetEnemyManager_EnemyManager) == 0x000070, "Member 'TurnManager_C_HideAllHUDs::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Less_IntInt_ReturnValue_1) == 0x000091, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Get_Item_4) == 0x0000A0, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Length_ReturnValue_3) == 0x0000AC, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B0, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B1, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Array_Length_ReturnValue_4) == 0x0000B4, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_HideAllHUDs, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000B8, "Member 'TurnManager_C_HideAllHUDs::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");

// Function TurnManager.TurnManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TurnManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_ReceiveTick) == 0x000004, "Wrong alignment on TurnManager_C_ReceiveTick");
static_assert(sizeof(TurnManager_C_ReceiveTick) == 0x000004, "Wrong size on TurnManager_C_ReceiveTick");
static_assert(offsetof(TurnManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TurnManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TurnManager.TurnManager_C.SetLevelSequencePlayer
// 0x0008 (0x0008 - 0x0000)
struct TurnManager_C_SetLevelSequencePlayer final
{
public:
	class ULevelSequencePlayer*                   Which;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_SetLevelSequencePlayer) == 0x000008, "Wrong alignment on TurnManager_C_SetLevelSequencePlayer");
static_assert(sizeof(TurnManager_C_SetLevelSequencePlayer) == 0x000008, "Wrong size on TurnManager_C_SetLevelSequencePlayer");
static_assert(offsetof(TurnManager_C_SetLevelSequencePlayer, Which) == 0x000000, "Member 'TurnManager_C_SetLevelSequencePlayer::Which' has a wrong offset!");

// Function TurnManager.TurnManager_C.ShowAllHUDs
// 0x00B8 (0x00B8 - 0x0000)
struct TurnManager_C_ShowAllHUDs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2430[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APostProcessVolume*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class APostProcessVolume*                     CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2431[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager_C*                        CallFunc_GetEnemyManager_EnemyManager;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAlliedCharacter_C*                     CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AExplosiveEnemy_C*                      CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2432[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARangedEnemy_C*                         CallFunc_Array_Get_Item_3;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AStandardEnemy_C*                       CallFunc_Array_Get_Item_4;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_ShowAllHUDs) == 0x000008, "Wrong alignment on TurnManager_C_ShowAllHUDs");
static_assert(sizeof(TurnManager_C_ShowAllHUDs) == 0x0000B8, "Wrong size on TurnManager_C_ShowAllHUDs");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Array_Index_Variable_3) == 0x00002C, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Loop_Counter_Variable_4) == 0x000030, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Add_IntInt_ReturnValue_4) == 0x000034, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, Temp_int_Array_Index_Variable_4) == 0x000038, "Member 'TurnManager_C_ShowAllHUDs::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Get_Item) == 0x000050, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_GetRefMgr_RefMgr) == 0x000060, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_GetPlayerController_PC) == 0x000068, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_GetEnemyManager_EnemyManager) == 0x000070, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Length_ReturnValue_2) == 0x00008C, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Less_IntInt_ReturnValue_2) == 0x000091, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Get_Item_4) == 0x0000A0, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Length_ReturnValue_3) == 0x0000A8, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Array_Length_ReturnValue_4) == 0x0000AC, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B0, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TurnManager_C_ShowAllHUDs, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000B1, "Member 'TurnManager_C_ShowAllHUDs::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");

// Function TurnManager.TurnManager_C.SwitchTurn
// 0x0001 (0x0001 - 0x0000)
struct TurnManager_C_SwitchTurn final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TurnManager_C_SwitchTurn) == 0x000001, "Wrong alignment on TurnManager_C_SwitchTurn");
static_assert(sizeof(TurnManager_C_SwitchTurn) == 0x000001, "Wrong size on TurnManager_C_SwitchTurn");
static_assert(offsetof(TurnManager_C_SwitchTurn, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'TurnManager_C_SwitchTurn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

