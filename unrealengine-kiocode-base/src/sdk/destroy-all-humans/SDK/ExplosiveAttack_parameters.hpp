#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExplosiveAttack

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ExplosiveAttack.ExplosiveAttack_C.ActuallyDamage
// 0x0080 (0x0080 - 0x0000)
struct ExplosiveAttack_C_ActuallyDamage final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2690[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2691[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character_1;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2692[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUDWIdget_C*                           CallFunc_GetHUD_HUD;                               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveAttack_C_ActuallyDamage) == 0x000008, "Wrong alignment on ExplosiveAttack_C_ActuallyDamage");
static_assert(sizeof(ExplosiveAttack_C_ActuallyDamage) == 0x000080, "Wrong size on ExplosiveAttack_C_ActuallyDamage");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ExplosiveAttack_C_ActuallyDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ExplosiveAttack_C_ActuallyDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_Array_Get_Item) == 0x000010, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, K2Node_DynamicCast_AsMy_Character) == 0x000020, "Member 'ExplosiveAttack_C_ActuallyDamage::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ExplosiveAttack_C_ActuallyDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_Greater_IntInt_ReturnValue) == 0x00002A, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_GetRefMgr_RefMgr) == 0x000038, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_GetPlayerController_PC) == 0x000040, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_Multiply_IntInt_ReturnValue) == 0x000048, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_GetOwner_ReturnValue_1) == 0x000050, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_GetRefMgr_RefMgr_1) == 0x000058, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, K2Node_DynamicCast_AsMy_Character_1) == 0x000060, "Member 'ExplosiveAttack_C_ActuallyDamage::K2Node_DynamicCast_AsMy_Character_1' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'ExplosiveAttack_C_ActuallyDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_GetHUD_HUD) == 0x000070, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ActuallyDamage, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000078, "Member 'ExplosiveAttack_C_ActuallyDamage::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function ExplosiveAttack.ExplosiveAttack_C.IsACharacter
// 0x0040 (0x0040 - 0x0000)
struct ExplosiveAttack_C_IsACharacter final
{
public:
	struct FVector                                WorldPos;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2693[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEntityFromWorldPos_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveAttack_C_IsACharacter) == 0x000008, "Wrong alignment on ExplosiveAttack_C_IsACharacter");
static_assert(sizeof(ExplosiveAttack_C_IsACharacter) == 0x000040, "Wrong size on ExplosiveAttack_C_IsACharacter");
static_assert(offsetof(ExplosiveAttack_C_IsACharacter, WorldPos) == 0x000000, "Member 'ExplosiveAttack_C_IsACharacter::WorldPos' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_IsACharacter, ReturnValue) == 0x000018, "Member 'ExplosiveAttack_C_IsACharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_IsACharacter, CallFunc_GetGridMgr_GM) == 0x000020, "Member 'ExplosiveAttack_C_IsACharacter::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_IsACharacter, CallFunc_GetEntityFromWorldPos_ReturnValue) == 0x000028, "Member 'ExplosiveAttack_C_IsACharacter::CallFunc_GetEntityFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_IsACharacter, K2Node_DynamicCast_AsMy_Character) == 0x000030, "Member 'ExplosiveAttack_C_IsACharacter::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_IsACharacter, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ExplosiveAttack_C_IsACharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ExplosiveAttack.ExplosiveAttack_C.Use
// 0x0048 (0x0048 - 0x0000)
struct ExplosiveAttack_C_Use final
{
public:
	struct FVector                                AbilityTarget;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AExplosiveEnemy_C*                      K2Node_DynamicCast_AsExplosive_Enemy;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2694[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetEntitiesAroundWordPos_ReturnValue;     // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(ExplosiveAttack_C_Use) == 0x000008, "Wrong alignment on ExplosiveAttack_C_Use");
static_assert(sizeof(ExplosiveAttack_C_Use) == 0x000048, "Wrong size on ExplosiveAttack_C_Use");
static_assert(offsetof(ExplosiveAttack_C_Use, AbilityTarget) == 0x000000, "Member 'ExplosiveAttack_C_Use::AbilityTarget' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_Use, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'ExplosiveAttack_C_Use::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_Use, K2Node_DynamicCast_AsExplosive_Enemy) == 0x000020, "Member 'ExplosiveAttack_C_Use::K2Node_DynamicCast_AsExplosive_Enemy' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_Use, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ExplosiveAttack_C_Use::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_Use, CallFunc_GetGridMgr_GM) == 0x000030, "Member 'ExplosiveAttack_C_Use::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_Use, CallFunc_GetEntitiesAroundWordPos_ReturnValue) == 0x000038, "Member 'ExplosiveAttack_C_Use::CallFunc_GetEntitiesAroundWordPos_ReturnValue' has a wrong offset!");

// Function ExplosiveAttack.ExplosiveAttack_C.ValidateTarget
// 0x0078 (0x0078 - 0x0000)
struct ExplosiveAttack_C_ValidateTarget final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsACharacter_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2695[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEntityFromWorldPos_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCellDistanceActor_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2696[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2697[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveAttack_C_ValidateTarget) == 0x000008, "Wrong alignment on ExplosiveAttack_C_ValidateTarget");
static_assert(sizeof(ExplosiveAttack_C_ValidateTarget) == 0x000078, "Wrong size on ExplosiveAttack_C_ValidateTarget");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, Target) == 0x000000, "Member 'ExplosiveAttack_C_ValidateTarget::Target' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, Valid_) == 0x000018, "Member 'ExplosiveAttack_C_ValidateTarget::Valid_' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_IsACharacter_ReturnValue) == 0x000019, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_IsACharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_GetGridMgr_GM) == 0x000028, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_GetEntityFromWorldPos_ReturnValue) == 0x000030, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_GetEntityFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_GetCellDistanceActor_ReturnValue) == 0x000038, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_GetCellDistanceActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_GetObjectName_ReturnValue) == 0x000040, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveAttack_C_ValidateTarget, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'ExplosiveAttack_C_ValidateTarget::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

}

