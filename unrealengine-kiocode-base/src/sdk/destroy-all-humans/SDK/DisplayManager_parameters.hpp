#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DisplayManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DisplayManager.DisplayManager_C.ExecuteUbergraph_DisplayManager
// 0x0004 (0x0004 - 0x0000)
struct DisplayManager_C_ExecuteUbergraph_DisplayManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplayManager_C_ExecuteUbergraph_DisplayManager) == 0x000004, "Wrong alignment on DisplayManager_C_ExecuteUbergraph_DisplayManager");
static_assert(sizeof(DisplayManager_C_ExecuteUbergraph_DisplayManager) == 0x000004, "Wrong size on DisplayManager_C_ExecuteUbergraph_DisplayManager");
static_assert(offsetof(DisplayManager_C_ExecuteUbergraph_DisplayManager, EntryPoint) == 0x000000, "Member 'DisplayManager_C_ExecuteUbergraph_DisplayManager::EntryPoint' has a wrong offset!");

// Function DisplayManager.DisplayManager_C.HideCells
// 0x0048 (0x0048 - 0x0000)
struct DisplayManager_C_HideCells final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridCellDisplayer_C*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridCellDisplayer_C*                   CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2445[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_2;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplayManager_C_HideCells) == 0x000008, "Wrong alignment on DisplayManager_C_HideCells");
static_assert(sizeof(DisplayManager_C_HideCells) == 0x000048, "Wrong size on DisplayManager_C_HideCells");
static_assert(offsetof(DisplayManager_C_HideCells, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DisplayManager_C_HideCells::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DisplayManager_C_HideCells::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DisplayManager_C_HideCells::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'DisplayManager_C_HideCells::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, Temp_int_Variable) == 0x000010, "Member 'DisplayManager_C_HideCells::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'DisplayManager_C_HideCells::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Array_Get_Item) == 0x000018, "Member 'DisplayManager_C_HideCells::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'DisplayManager_C_HideCells::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DisplayManager_C_HideCells::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'DisplayManager_C_HideCells::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'DisplayManager_C_HideCells::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Array_Get_Item_2) == 0x000038, "Member 'DisplayManager_C_HideCells::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'DisplayManager_C_HideCells::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HideCells, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'DisplayManager_C_HideCells::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function DisplayManager.DisplayManager_C.Highlight Cell WP
// 0x00C0 (0x00C0 - 0x0000)
struct DisplayManager_C_Highlight_Cell_WP final
{
public:
	struct FVector                                Cell;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Mat;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridCellDisplayer_C*                   CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplayManager_C_Highlight_Cell_WP) == 0x000008, "Wrong alignment on DisplayManager_C_Highlight_Cell_WP");
static_assert(sizeof(DisplayManager_C_Highlight_Cell_WP) == 0x0000C0, "Wrong size on DisplayManager_C_Highlight_Cell_WP");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, Cell) == 0x000000, "Member 'DisplayManager_C_Highlight_Cell_WP::Cell' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, Mat) == 0x000018, "Member 'DisplayManager_C_Highlight_Cell_WP::Mat' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_X) == 0x000020, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_Y) == 0x000028, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_Z) == 0x000030, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_GetGridMgr_GM) == 0x000038, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000058, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_X_1) == 0x000070, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_X_2) == 0x000088, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_Y_2) == 0x000090, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_BreakVector_Z_2) == 0x000098, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_FTrunc_ReturnValue) == 0x0000B0, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_Highlight_Cell_WP, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'DisplayManager_C_Highlight_Cell_WP::CallFunc_Array_Get_Item' has a wrong offset!");

// Function DisplayManager.DisplayManager_C.HighlightFireballCellWP
// 0x0178 (0x0178 - 0x0000)
struct DisplayManager_C_HighlightFireballCellWP final
{
public:
	struct FVector                                Cell;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2446[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEntityFromWorldPos_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2447[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridCellDisplayer_C*                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0088(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplayManager_C_HighlightFireballCellWP) == 0x000008, "Wrong alignment on DisplayManager_C_HighlightFireballCellWP");
static_assert(sizeof(DisplayManager_C_HighlightFireballCellWP) == 0x000178, "Wrong size on DisplayManager_C_HighlightFireballCellWP");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, Cell) == 0x000000, "Member 'DisplayManager_C_HighlightFireballCellWP::Cell' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, Temp_int_Variable) == 0x000018, "Member 'DisplayManager_C_HighlightFireballCellWP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_BreakVector_X) == 0x000020, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_BreakVector_Y) == 0x000028, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_BreakVector_Z) == 0x000030, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_GetGridMgr_GM) == 0x000038, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_MakeVector_ReturnValue_1) == 0x000058, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_GetEntityFromWorldPos_ReturnValue) == 0x000070, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_GetEntityFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_Array_Get_Item) == 0x000080, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000088, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HighlightFireballCellWP, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000170, "Member 'DisplayManager_C_HighlightFireballCellWP::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function DisplayManager.DisplayManager_C.HiglightEnemy
// 0x0068 (0x0068 - 0x0000)
struct DisplayManager_C_HiglightEnemy final
{
public:
	bool                                          Param_HiglightEnemy;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2448[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CellXY;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CellPlane;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        NewLocalVar;                                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEntityFromXY_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2449[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplayManager_C_HiglightEnemy) == 0x000008, "Wrong alignment on DisplayManager_C_HiglightEnemy");
static_assert(sizeof(DisplayManager_C_HiglightEnemy) == 0x000068, "Wrong size on DisplayManager_C_HiglightEnemy");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, Param_HiglightEnemy) == 0x000000, "Member 'DisplayManager_C_HiglightEnemy::Param_HiglightEnemy' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CellXY) == 0x000008, "Member 'DisplayManager_C_HiglightEnemy::CellXY' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CellPlane) == 0x000020, "Member 'DisplayManager_C_HiglightEnemy::CellPlane' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, NewLocalVar) == 0x000028, "Member 'DisplayManager_C_HiglightEnemy::NewLocalVar' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CallFunc_GetRefMgr_RefMgr) == 0x000038, "Member 'DisplayManager_C_HiglightEnemy::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CallFunc_GetGridManager_grid) == 0x000040, "Member 'DisplayManager_C_HiglightEnemy::CallFunc_GetGridManager_grid' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CallFunc_GetEntityFromXY_ReturnValue) == 0x000048, "Member 'DisplayManager_C_HiglightEnemy::CallFunc_GetEntityFromXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'DisplayManager_C_HiglightEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'DisplayManager_C_HiglightEnemy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'DisplayManager_C_HiglightEnemy::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_HiglightEnemy, CallFunc_ActorHasTag_ReturnValue) == 0x000064, "Member 'DisplayManager_C_HiglightEnemy::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

// Function DisplayManager.DisplayManager_C.InitializeArray
// 0x0230 (0x0230 - 0x0000)
struct DisplayManager_C_InitializeArray final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AImporterBP_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class AImporterBP_C*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244C[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244D[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244E[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244F[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWorldPosFromCellXY_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2450[0x8];                                     // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2451[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridCellDisplayer_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM_1;                          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2452[0x8];                                     // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2453[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridCellDisplayer_C*                   CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplayManager_C_InitializeArray) == 0x000010, "Wrong alignment on DisplayManager_C_InitializeArray");
static_assert(sizeof(DisplayManager_C_InitializeArray) == 0x000230, "Wrong size on DisplayManager_C_InitializeArray");
static_assert(offsetof(DisplayManager_C_InitializeArray, Temp_int_Variable) == 0x000000, "Member 'DisplayManager_C_InitializeArray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'DisplayManager_C_InitializeArray::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'DisplayManager_C_InitializeArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'DisplayManager_C_InitializeArray::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Array_Get_Item) == 0x000028, "Member 'DisplayManager_C_InitializeArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_BreakVector_X) == 0x000030, "Member 'DisplayManager_C_InitializeArray::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_BreakVector_Y) == 0x000038, "Member 'DisplayManager_C_InitializeArray::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_BreakVector_Z) == 0x000040, "Member 'DisplayManager_C_InitializeArray::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'DisplayManager_C_InitializeArray::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_BreakVector_X_1) == 0x000050, "Member 'DisplayManager_C_InitializeArray::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'DisplayManager_C_InitializeArray::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_BreakVector_Z_1) == 0x000060, "Member 'DisplayManager_C_InitializeArray::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_FTrunc_ReturnValue) == 0x000068, "Member 'DisplayManager_C_InitializeArray::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'DisplayManager_C_InitializeArray::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'DisplayManager_C_InitializeArray::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_FTrunc_ReturnValue_1) == 0x00007C, "Member 'DisplayManager_C_InitializeArray::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'DisplayManager_C_InitializeArray::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000088, "Member 'DisplayManager_C_InitializeArray::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_FTrunc_ReturnValue_2) == 0x000090, "Member 'DisplayManager_C_InitializeArray::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_GetGridMgr_GM) == 0x000098, "Member 'DisplayManager_C_InitializeArray::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Percent_IntInt_ReturnValue) == 0x0000A0, "Member 'DisplayManager_C_InitializeArray::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, Temp_int_Variable_1) == 0x0000A4, "Member 'DisplayManager_C_InitializeArray::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000A8, "Member 'DisplayManager_C_InitializeArray::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'DisplayManager_C_InitializeArray::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000C8, "Member 'DisplayManager_C_InitializeArray::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_GetWorldPosFromCellXY_ReturnValue) == 0x0000D0, "Member 'DisplayManager_C_InitializeArray::CallFunc_GetWorldPosFromCellXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'DisplayManager_C_InitializeArray::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x000150, "Member 'DisplayManager_C_InitializeArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000158, "Member 'DisplayManager_C_InitializeArray::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_FinishSpawningActor_ReturnValue) == 0x000160, "Member 'DisplayManager_C_InitializeArray::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_GetGridMgr_GM_1) == 0x000168, "Member 'DisplayManager_C_InitializeArray::CallFunc_GetGridMgr_GM_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000170, "Member 'DisplayManager_C_InitializeArray::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000188, "Member 'DisplayManager_C_InitializeArray::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_GetRefMgr_RefMgr) == 0x0001A0, "Member 'DisplayManager_C_InitializeArray::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_MakeTransform_ReturnValue_1) == 0x0001B0, "Member 'DisplayManager_C_InitializeArray::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Array_Add_ReturnValue) == 0x000210, "Member 'DisplayManager_C_InitializeArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000218, "Member 'DisplayManager_C_InitializeArray::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000220, "Member 'DisplayManager_C_InitializeArray::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_InitializeArray, CallFunc_Array_Add_ReturnValue_1) == 0x000228, "Member 'DisplayManager_C_InitializeArray::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function DisplayManager.DisplayManager_C.ShowCellArea
// 0x0050 (0x0050 - 0x0000)
struct DisplayManager_C_ShowCellArea final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Radius;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithVision;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HighlightEnemies;                                  // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2454[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Material;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreNotWalkable;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2455[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridManager_grid;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GetCellArea_ReturnValue;                  // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(DisplayManager_C_ShowCellArea) == 0x000008, "Wrong alignment on DisplayManager_C_ShowCellArea");
static_assert(sizeof(DisplayManager_C_ShowCellArea) == 0x000050, "Wrong size on DisplayManager_C_ShowCellArea");
static_assert(offsetof(DisplayManager_C_ShowCellArea, Center) == 0x000000, "Member 'DisplayManager_C_ShowCellArea::Center' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCellArea, Radius) == 0x000018, "Member 'DisplayManager_C_ShowCellArea::Radius' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCellArea, WithVision) == 0x00001C, "Member 'DisplayManager_C_ShowCellArea::WithVision' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCellArea, HighlightEnemies) == 0x00001D, "Member 'DisplayManager_C_ShowCellArea::HighlightEnemies' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCellArea, Material) == 0x000020, "Member 'DisplayManager_C_ShowCellArea::Material' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCellArea, IgnoreNotWalkable) == 0x000028, "Member 'DisplayManager_C_ShowCellArea::IgnoreNotWalkable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCellArea, CallFunc_GetRefMgr_RefMgr) == 0x000030, "Member 'DisplayManager_C_ShowCellArea::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCellArea, CallFunc_GetGridManager_grid) == 0x000038, "Member 'DisplayManager_C_ShowCellArea::CallFunc_GetGridManager_grid' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCellArea, CallFunc_GetCellArea_ReturnValue) == 0x000040, "Member 'DisplayManager_C_ShowCellArea::CallFunc_GetCellArea_ReturnValue' has a wrong offset!");

// Function DisplayManager.DisplayManager_C.ShowCells
// 0x00E0 (0x00E0 - 0x0000)
struct DisplayManager_C_ShowCells final
{
public:
	TArray<struct FVector>                        Param_ShowCells;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMaterialInstance*                      Material;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HiglightEnemy;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2456[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PrevDisplayCells;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2457[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2458[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCellXYFromWorldPos_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2459[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridCellDisplayer_C*                   CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplayManager_C_ShowCells) == 0x000008, "Wrong alignment on DisplayManager_C_ShowCells");
static_assert(sizeof(DisplayManager_C_ShowCells) == 0x0000E0, "Wrong size on DisplayManager_C_ShowCells");
static_assert(offsetof(DisplayManager_C_ShowCells, Param_ShowCells) == 0x000000, "Member 'DisplayManager_C_ShowCells::Param_ShowCells' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, Material) == 0x000010, "Member 'DisplayManager_C_ShowCells::Material' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, HiglightEnemy) == 0x000018, "Member 'DisplayManager_C_ShowCells::HiglightEnemy' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, PrevDisplayCells) == 0x00001C, "Member 'DisplayManager_C_ShowCells::PrevDisplayCells' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'DisplayManager_C_ShowCells::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, Temp_int_Array_Index_Variable) == 0x000024, "Member 'DisplayManager_C_ShowCells::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_Array_Get_Item) == 0x000028, "Member 'DisplayManager_C_ShowCells::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'DisplayManager_C_ShowCells::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'DisplayManager_C_ShowCells::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_BreakVector_X) == 0x000048, "Member 'DisplayManager_C_ShowCells::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_BreakVector_Y) == 0x000050, "Member 'DisplayManager_C_ShowCells::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_BreakVector_Z) == 0x000058, "Member 'DisplayManager_C_ShowCells::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'DisplayManager_C_ShowCells::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'DisplayManager_C_ShowCells::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, Temp_int_Variable) == 0x000068, "Member 'DisplayManager_C_ShowCells::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_GetGridMgr_GM) == 0x000070, "Member 'DisplayManager_C_ShowCells::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_GetCellXYFromWorldPos_ReturnValue) == 0x000078, "Member 'DisplayManager_C_ShowCells::CallFunc_GetCellXYFromWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_BreakVector_X_1) == 0x000090, "Member 'DisplayManager_C_ShowCells::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_BreakVector_Y_1) == 0x000098, "Member 'DisplayManager_C_ShowCells::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'DisplayManager_C_ShowCells::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'DisplayManager_C_ShowCells::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'DisplayManager_C_ShowCells::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'DisplayManager_C_ShowCells::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_FTrunc_ReturnValue) == 0x0000D0, "Member 'DisplayManager_C_ShowCells::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_ShowCells, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'DisplayManager_C_ShowCells::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function DisplayManager.DisplayManager_C.UnHighlightCells
// 0x0038 (0x0038 - 0x0000)
struct DisplayManager_C_UnHighlightCells final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGridCellDisplayer_C*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGridCellDisplayer_C*                   CallFunc_Array_Get_Item_2;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplayManager_C_UnHighlightCells) == 0x000008, "Wrong alignment on DisplayManager_C_UnHighlightCells");
static_assert(sizeof(DisplayManager_C_UnHighlightCells) == 0x000038, "Wrong size on DisplayManager_C_UnHighlightCells");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'DisplayManager_C_UnHighlightCells::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'DisplayManager_C_UnHighlightCells::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, Temp_int_Array_Index_Variable) == 0x000008, "Member 'DisplayManager_C_UnHighlightCells::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, Temp_int_Variable) == 0x00000C, "Member 'DisplayManager_C_UnHighlightCells::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'DisplayManager_C_UnHighlightCells::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'DisplayManager_C_UnHighlightCells::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, CallFunc_Array_Get_Item) == 0x000018, "Member 'DisplayManager_C_UnHighlightCells::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'DisplayManager_C_UnHighlightCells::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, CallFunc_Array_Get_Item_2) == 0x000028, "Member 'DisplayManager_C_UnHighlightCells::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'DisplayManager_C_UnHighlightCells::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplayManager_C_UnHighlightCells, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'DisplayManager_C_UnHighlightCells::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

