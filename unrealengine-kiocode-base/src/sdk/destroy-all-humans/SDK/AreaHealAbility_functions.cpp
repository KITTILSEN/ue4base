#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AreaHealAbility

#include "Basic.hpp"

#include "AreaHealAbility_classes.hpp"
#include "AreaHealAbility_parameters.hpp"


namespace SDK
{

// Function AreaHealAbility.AreaHealAbility_C.ContinueAction
// (Public, BlueprintCallable, BlueprintEvent)

void UAreaHealAbility_C::ContinueAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AreaHealAbility_C", "ContinueAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AreaHealAbility.AreaHealAbility_C.OnAbilitySelected
// (Public, BlueprintCallable, BlueprintEvent)

void UAreaHealAbility_C::OnAbilitySelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AreaHealAbility_C", "OnAbilitySelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AreaHealAbility.AreaHealAbility_C.OnEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAreaHealAbility_C::OnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AreaHealAbility_C", "OnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AreaHealAbility.AreaHealAbility_C.Use
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          AbilityTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAreaHealAbility_C::Use(const struct FVector& AbilityTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AreaHealAbility_C", "Use");

	Params::AreaHealAbility_C_Use Parms{};

	Parms.AbilityTarget = std::move(AbilityTarget);

	UObject::ProcessEvent(Func, &Parms);
}

}

