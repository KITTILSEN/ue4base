#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TauntAbility

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TauntAbility.TauntAbility_C.ContinueAction
// 0x0010 (0x0010 - 0x0000)
struct TauntAbility_C_ContinueAction final
{
public:
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2710[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TauntAbility_C_ContinueAction) == 0x000008, "Wrong alignment on TauntAbility_C_ContinueAction");
static_assert(sizeof(TauntAbility_C_ContinueAction) == 0x000010, "Wrong size on TauntAbility_C_ContinueAction");
static_assert(offsetof(TauntAbility_C_ContinueAction, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'TauntAbility_C_ContinueAction::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_ContinueAction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'TauntAbility_C_ContinueAction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function TauntAbility.TauntAbility_C.OnEnd
// 0x0108 (0x0108 - 0x0000)
struct TauntAbility_C_OnEnd final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2711[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2_1;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2712[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2_2;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2713[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2_3;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2714[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2_4;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2715[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGridManagerBP_C*                       CallFunc_GetGridMgr_GM;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetEntitiesAroundWordPos_ReturnValue;     // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2716[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2717[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AExplosiveEnemy_C*                      K2Node_DynamicCast_AsExplosive_Enemy;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2718[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARangedEnemy_C*                         K2Node_DynamicCast_AsRanged_Enemy;                 // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2719[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStandardEnemy_C*                       K2Node_DynamicCast_AsStandard_Enemy;               // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TauntAbility_C_OnEnd) == 0x000008, "Wrong alignment on TauntAbility_C_OnEnd");
static_assert(sizeof(TauntAbility_C_OnEnd) == 0x000108, "Wrong size on TauntAbility_C_OnEnd");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'TauntAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_AsMinion_2) == 0x000008, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_AsMinion_2' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, Temp_int_Array_Index_Variable) == 0x000014, "Member 'TauntAbility_C_OnEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'TauntAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue_2) == 0x000020, "Member 'TauntAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_AsMinion_2_1) == 0x000028, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_AsMinion_2_1' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_AsMinion_2_2) == 0x000038, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_AsMinion_2_2' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'TauntAbility_C_OnEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue_3) == 0x000048, "Member 'TauntAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_AsMinion_2_3) == 0x000050, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_AsMinion_2_3' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'TauntAbility_C_OnEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue_4) == 0x000060, "Member 'TauntAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetRefMgr_RefMgr) == 0x000068, "Member 'TauntAbility_C_OnEnd::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_AsMinion_2_4) == 0x000070, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_AsMinion_2_4' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_4) == 0x000078, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetPlayerController_PC) == 0x000080, "Member 'TauntAbility_C_OnEnd::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetOwner_ReturnValue_5) == 0x000088, "Member 'TauntAbility_C_OnEnd::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetGridMgr_GM) == 0x000090, "Member 'TauntAbility_C_OnEnd::CallFunc_GetGridMgr_GM' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'TauntAbility_C_OnEnd::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_GetEntitiesAroundWordPos_ReturnValue) == 0x0000B0, "Member 'TauntAbility_C_OnEnd::CallFunc_GetEntitiesAroundWordPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'TauntAbility_C_OnEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'TauntAbility_C_OnEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'TauntAbility_C_OnEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_AsExplosive_Enemy) == 0x0000D8, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_AsExplosive_Enemy' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_5) == 0x0000E0, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_AsRanged_Enemy) == 0x0000E8, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_AsRanged_Enemy' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_6) == 0x0000F0, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_AsStandard_Enemy) == 0x0000F8, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_AsStandard_Enemy' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_OnEnd, K2Node_DynamicCast_bSuccess_7) == 0x000100, "Member 'TauntAbility_C_OnEnd::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

// Function TauntAbility.TauntAbility_C.PreDisplayTarget
// 0x0058 (0x0058 - 0x0000)
struct TauntAbility_C_PreDisplayTarget final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADisplayManager_C*                      CallFunc_GetDisplayManager_NewParam_1;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TauntAbility_C_PreDisplayTarget) == 0x000008, "Wrong alignment on TauntAbility_C_PreDisplayTarget");
static_assert(sizeof(TauntAbility_C_PreDisplayTarget) == 0x000058, "Wrong size on TauntAbility_C_PreDisplayTarget");
static_assert(offsetof(TauntAbility_C_PreDisplayTarget, Target) == 0x000000, "Member 'TauntAbility_C_PreDisplayTarget::Target' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr) == 0x000018, "Member 'TauntAbility_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_PreDisplayTarget, CallFunc_GetDisplayManager_NewParam) == 0x000020, "Member 'TauntAbility_C_PreDisplayTarget::CallFunc_GetDisplayManager_NewParam' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_PreDisplayTarget, CallFunc_GetRefMgr_RefMgr_1) == 0x000028, "Member 'TauntAbility_C_PreDisplayTarget::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_PreDisplayTarget, CallFunc_GetDisplayManager_NewParam_1) == 0x000030, "Member 'TauntAbility_C_PreDisplayTarget::CallFunc_GetDisplayManager_NewParam_1' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_PreDisplayTarget, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'TauntAbility_C_PreDisplayTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_PreDisplayTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'TauntAbility_C_PreDisplayTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function TauntAbility.TauntAbility_C.Use
// 0x0030 (0x0030 - 0x0000)
struct TauntAbility_C_Use final
{
public:
	struct FVector                                AbilityTarget;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMinion2_C*                             K2Node_DynamicCast_AsMinion_2;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TauntAbility_C_Use) == 0x000008, "Wrong alignment on TauntAbility_C_Use");
static_assert(sizeof(TauntAbility_C_Use) == 0x000030, "Wrong size on TauntAbility_C_Use");
static_assert(offsetof(TauntAbility_C_Use, AbilityTarget) == 0x000000, "Member 'TauntAbility_C_Use::AbilityTarget' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_Use, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'TauntAbility_C_Use::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_Use, K2Node_DynamicCast_AsMinion_2) == 0x000020, "Member 'TauntAbility_C_Use::K2Node_DynamicCast_AsMinion_2' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_Use, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'TauntAbility_C_Use::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TauntAbility.TauntAbility_C.ValidateTarget
// 0x0020 (0x0020 - 0x0000)
struct TauntAbility_C_ValidateTarget final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateTarget_valid_;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TauntAbility_C_ValidateTarget) == 0x000008, "Wrong alignment on TauntAbility_C_ValidateTarget");
static_assert(sizeof(TauntAbility_C_ValidateTarget) == 0x000020, "Wrong size on TauntAbility_C_ValidateTarget");
static_assert(offsetof(TauntAbility_C_ValidateTarget, Target) == 0x000000, "Member 'TauntAbility_C_ValidateTarget::Target' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_ValidateTarget, Valid_) == 0x000018, "Member 'TauntAbility_C_ValidateTarget::Valid_' has a wrong offset!");
static_assert(offsetof(TauntAbility_C_ValidateTarget, CallFunc_ValidateTarget_valid_) == 0x000019, "Member 'TauntAbility_C_ValidateTarget::CallFunc_ValidateTarget_valid_' has a wrong offset!");

}

