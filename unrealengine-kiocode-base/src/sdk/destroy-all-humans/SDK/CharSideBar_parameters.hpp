#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharSideBar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "PlayerStates_structs.hpp"


namespace SDK::Params
{

// Function CharSideBar.CharSideBar_C.ExecuteUbergraph_CharSideBar
// 0x0030 (0x0030 - 0x0000)
struct CharSideBar_C_ExecuteUbergraph_CharSideBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2578[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC_1;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanISelectACharacter_YesOrNo;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharSideBar_C_ExecuteUbergraph_CharSideBar) == 0x000008, "Wrong alignment on CharSideBar_C_ExecuteUbergraph_CharSideBar");
static_assert(sizeof(CharSideBar_C_ExecuteUbergraph_CharSideBar) == 0x000030, "Wrong size on CharSideBar_C_ExecuteUbergraph_CharSideBar");
static_assert(offsetof(CharSideBar_C_ExecuteUbergraph_CharSideBar, EntryPoint) == 0x000000, "Member 'CharSideBar_C_ExecuteUbergraph_CharSideBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_ExecuteUbergraph_CharSideBar, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'CharSideBar_C_ExecuteUbergraph_CharSideBar::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_ExecuteUbergraph_CharSideBar, CallFunc_GetPlayerController_PC) == 0x000010, "Member 'CharSideBar_C_ExecuteUbergraph_CharSideBar::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_ExecuteUbergraph_CharSideBar, CallFunc_GetRefMgr_RefMgr_1) == 0x000018, "Member 'CharSideBar_C_ExecuteUbergraph_CharSideBar::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_ExecuteUbergraph_CharSideBar, CallFunc_GetPlayerController_PC_1) == 0x000020, "Member 'CharSideBar_C_ExecuteUbergraph_CharSideBar::CallFunc_GetPlayerController_PC_1' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_ExecuteUbergraph_CharSideBar, CallFunc_CanISelectACharacter_YesOrNo) == 0x000028, "Member 'CharSideBar_C_ExecuteUbergraph_CharSideBar::CallFunc_CanISelectACharacter_YesOrNo' has a wrong offset!");

// Function CharSideBar.CharSideBar_C.InitializeIcon
// 0x003C (0x003C - 0x0000)
struct CharSideBar_C_InitializeIcon final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0028(0x0014)()
};
static_assert(alignof(CharSideBar_C_InitializeIcon) == 0x000004, "Wrong alignment on CharSideBar_C_InitializeIcon");
static_assert(sizeof(CharSideBar_C_InitializeIcon) == 0x00003C, "Wrong size on CharSideBar_C_InitializeIcon");
static_assert(offsetof(CharSideBar_C_InitializeIcon, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'CharSideBar_C_InitializeIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_InitializeIcon, K2Node_MakeStruct_SlateColor_1) == 0x000014, "Member 'CharSideBar_C_InitializeIcon::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_InitializeIcon, K2Node_MakeStruct_SlateColor_2) == 0x000028, "Member 'CharSideBar_C_InitializeIcon::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

// Function CharSideBar.CharSideBar_C.StateChange
// 0x0058 (0x0058 - 0x0000)
struct CharSideBar_C_StateChange final
{
public:
	class APlayerControllerBP_C*                  PC;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerStates                                 Temp_byte_Variable;                                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2579[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr_1;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC_1;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAlliedCharacter_C*                     K2Node_DynamicCast_AsAllied_Character;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_257A[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyAbilityBP_C*                         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharSideBar_C_StateChange) == 0x000008, "Wrong alignment on CharSideBar_C_StateChange");
static_assert(sizeof(CharSideBar_C_StateChange) == 0x000058, "Wrong size on CharSideBar_C_StateChange");
static_assert(offsetof(CharSideBar_C_StateChange, PC) == 0x000000, "Member 'CharSideBar_C_StateChange::PC' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_bool_Variable) == 0x000008, "Member 'CharSideBar_C_StateChange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_bool_Variable_1) == 0x000009, "Member 'CharSideBar_C_StateChange::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_bool_Variable_2) == 0x00000A, "Member 'CharSideBar_C_StateChange::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_bool_Variable_3) == 0x00000B, "Member 'CharSideBar_C_StateChange::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_bool_Variable_4) == 0x00000C, "Member 'CharSideBar_C_StateChange::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_bool_Variable_5) == 0x00000D, "Member 'CharSideBar_C_StateChange::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_bool_Variable_6) == 0x00000E, "Member 'CharSideBar_C_StateChange::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_byte_Variable) == 0x00000F, "Member 'CharSideBar_C_StateChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, Temp_bool_Variable_7) == 0x000010, "Member 'CharSideBar_C_StateChange::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, CallFunc_GetRefMgr_RefMgr) == 0x000018, "Member 'CharSideBar_C_StateChange::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, CallFunc_GetPlayerController_PC) == 0x000020, "Member 'CharSideBar_C_StateChange::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, CallFunc_GetRefMgr_RefMgr_1) == 0x000028, "Member 'CharSideBar_C_StateChange::CallFunc_GetRefMgr_RefMgr_1' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, CallFunc_GetPlayerController_PC_1) == 0x000030, "Member 'CharSideBar_C_StateChange::CallFunc_GetPlayerController_PC_1' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, K2Node_DynamicCast_AsAllied_Character) == 0x000038, "Member 'CharSideBar_C_StateChange::K2Node_DynamicCast_AsAllied_Character' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'CharSideBar_C_StateChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, K2Node_Select_Default) == 0x000041, "Member 'CharSideBar_C_StateChange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000044, "Member 'CharSideBar_C_StateChange::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, CallFunc_Array_Get_Item) == 0x000048, "Member 'CharSideBar_C_StateChange::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_StateChange, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'CharSideBar_C_StateChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CharSideBar.CharSideBar_C.UpdateAttackIndicator
// 0x0048 (0x0048 - 0x0000)
struct CharSideBar_C_UpdateAttackIndicator final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_257B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAlliedCharacter_C*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_257C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMyAbilityBP_C*                         CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCooldown_Output;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharSideBar_C_UpdateAttackIndicator) == 0x000008, "Wrong alignment on CharSideBar_C_UpdateAttackIndicator");
static_assert(sizeof(CharSideBar_C_UpdateAttackIndicator) == 0x000048, "Wrong size on CharSideBar_C_UpdateAttackIndicator");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CharSideBar_C_UpdateAttackIndicator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CharSideBar_C_UpdateAttackIndicator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_GetRefMgr_RefMgr) == 0x000010, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_GetPlayerController_PC) == 0x000018, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_Array_Get_Item) == 0x000020, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_GetCooldown_Output) == 0x000038, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_GetCooldown_Output' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateAttackIndicator, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'CharSideBar_C_UpdateAttackIndicator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function CharSideBar.CharSideBar_C.UpdateHealth
// 0x0018 (0x0018 - 0x0000)
struct CharSideBar_C_UpdateHealth final
{
public:
	double                                        Percentage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharSideBar_C_UpdateHealth) == 0x000008, "Wrong alignment on CharSideBar_C_UpdateHealth");
static_assert(sizeof(CharSideBar_C_UpdateHealth) == 0x000018, "Wrong size on CharSideBar_C_UpdateHealth");
static_assert(offsetof(CharSideBar_C_UpdateHealth, Percentage) == 0x000000, "Member 'CharSideBar_C_UpdateHealth::Percentage' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateHealth, CallFunc_GetRefMgr_RefMgr) == 0x000008, "Member 'CharSideBar_C_UpdateHealth::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateHealth, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000010, "Member 'CharSideBar_C_UpdateHealth::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function CharSideBar.CharSideBar_C.UpdateMovementIndicator
// 0x0020 (0x0020 - 0x0000)
struct CharSideBar_C_UpdateMovementIndicator final
{
public:
	class AReferenceManager_C*                    CallFunc_GetRefMgr_RefMgr;                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  CallFunc_GetPlayerController_PC;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAlliedCharacter_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharSideBar_C_UpdateMovementIndicator) == 0x000008, "Wrong alignment on CharSideBar_C_UpdateMovementIndicator");
static_assert(sizeof(CharSideBar_C_UpdateMovementIndicator) == 0x000020, "Wrong size on CharSideBar_C_UpdateMovementIndicator");
static_assert(offsetof(CharSideBar_C_UpdateMovementIndicator, CallFunc_GetRefMgr_RefMgr) == 0x000000, "Member 'CharSideBar_C_UpdateMovementIndicator::CallFunc_GetRefMgr_RefMgr' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateMovementIndicator, CallFunc_GetPlayerController_PC) == 0x000008, "Member 'CharSideBar_C_UpdateMovementIndicator::CallFunc_GetPlayerController_PC' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateMovementIndicator, CallFunc_Array_Get_Item) == 0x000010, "Member 'CharSideBar_C_UpdateMovementIndicator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateMovementIndicator, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'CharSideBar_C_UpdateMovementIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharSideBar_C_UpdateMovementIndicator, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'CharSideBar_C_UpdateMovementIndicator::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

