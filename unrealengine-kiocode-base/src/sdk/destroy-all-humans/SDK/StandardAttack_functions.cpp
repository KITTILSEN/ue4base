#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StandardAttack

#include "Basic.hpp"

#include "StandardAttack_classes.hpp"
#include "StandardAttack_parameters.hpp"


namespace SDK
{

// Function StandardAttack.StandardAttack_C.ClearAttackRange
// (Public, BlueprintCallable, BlueprintEvent)

void UStandardAttack_C::ClearAttackRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "ClearAttackRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StandardAttack.StandardAttack_C.ContinueAction
// (Public, BlueprintCallable, BlueprintEvent)

void UStandardAttack_C::ContinueAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "ContinueAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StandardAttack.StandardAttack_C.DrawAttackRange
// (Public, BlueprintCallable, BlueprintEvent)

void UStandardAttack_C::DrawAttackRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "DrawAttackRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StandardAttack.StandardAttack_C.IsACharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldPos                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UStandardAttack_C::IsACharacter(const struct FVector& WorldPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "IsACharacter");

	Params::StandardAttack_C_IsACharacter Parms{};

	Parms.WorldPos = std::move(WorldPos);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function StandardAttack.StandardAttack_C.OnAbilityDeselected
// (Public, BlueprintCallable, BlueprintEvent)

void UStandardAttack_C::OnAbilityDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "OnAbilityDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StandardAttack.StandardAttack_C.OnAbilitySelected
// (Public, BlueprintCallable, BlueprintEvent)

void UStandardAttack_C::OnAbilitySelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "OnAbilitySelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StandardAttack.StandardAttack_C.OnEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UStandardAttack_C::OnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "OnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StandardAttack.StandardAttack_C.PreDisplayTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_Target                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UStandardAttack_C::PreDisplayTarget(const struct FVector& Param_Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "PreDisplayTarget");

	Params::StandardAttack_C_PreDisplayTarget Parms{};

	Parms.Param_Target = std::move(Param_Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function StandardAttack.StandardAttack_C.Use
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          AbilityTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UStandardAttack_C::Use(const struct FVector& AbilityTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "Use");

	Params::StandardAttack_C_Use Parms{};

	Parms.AbilityTarget = std::move(AbilityTarget);

	UObject::ProcessEvent(Func, &Parms);
}


// Function StandardAttack.StandardAttack_C.ValidateTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_Target                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UStandardAttack_C::ValidateTarget(const struct FVector& Param_Target, bool* Valid_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardAttack_C", "ValidateTarget");

	Params::StandardAttack_C_ValidateTarget Parms{};

	Parms.Param_Target = std::move(Param_Target);

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}

}

