#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnemyProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EnemyProjectile.EnemyProjectile_C.ExecuteUbergraph_EnemyProjectile
// 0x0020 (0x0020 - 0x0000)
struct EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2358[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMyCharacter_C*                         K2Node_DynamicCast_AsMy_Character;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile) == 0x000008, "Wrong alignment on EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile");
static_assert(sizeof(EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile) == 0x000020, "Wrong size on EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile");
static_assert(offsetof(EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile, EntryPoint) == 0x000000, "Member 'EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile, K2Node_Event_OtherActor) == 0x000008, "Member 'EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile, K2Node_DynamicCast_AsMy_Character) == 0x000010, "Member 'EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile::K2Node_DynamicCast_AsMy_Character' has a wrong offset!");
static_assert(offsetof(EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'EnemyProjectile_C_ExecuteUbergraph_EnemyProjectile::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function EnemyProjectile.EnemyProjectile_C.Launch
// 0x0038 (0x0038 - 0x0000)
struct EnemyProjectile_C_Launch final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyProjectile_C_Launch) == 0x000008, "Wrong alignment on EnemyProjectile_C_Launch");
static_assert(sizeof(EnemyProjectile_C_Launch) == 0x000038, "Wrong size on EnemyProjectile_C_Launch");
static_assert(offsetof(EnemyProjectile_C_Launch, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'EnemyProjectile_C_Launch::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyProjectile_C_Launch, CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity) == 0x000018, "Member 'EnemyProjectile_C_Launch::CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity' has a wrong offset!");
static_assert(offsetof(EnemyProjectile_C_Launch, CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue) == 0x000030, "Member 'EnemyProjectile_C_Launch::CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue' has a wrong offset!");

// Function EnemyProjectile.EnemyProjectile_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct EnemyProjectile_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyProjectile_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on EnemyProjectile_C_ReceiveActorBeginOverlap");
static_assert(sizeof(EnemyProjectile_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on EnemyProjectile_C_ReceiveActorBeginOverlap");
static_assert(offsetof(EnemyProjectile_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'EnemyProjectile_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

}

