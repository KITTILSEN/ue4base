#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_HDPlayerCharacter_FP

#include "Basic.hpp"

#include "ABP_HDPlayerCharacter_FP_classes.hpp"
#include "ABP_HDPlayerCharacter_FP_parameters.hpp"


namespace SDK
{

// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.ExecuteUbergraph_ABP_HDPlayerCharacter_FP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_HDPlayerCharacter_FP_C::ExecuteUbergraph_ABP_HDPlayerCharacter_FP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "ExecuteUbergraph_ABP_HDPlayerCharacter_FP");

	Params::ABP_HDPlayerCharacter_FP_C_ExecuteUbergraph_ABP_HDPlayerCharacter_FP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.AnimNotify_ProneExit
// (BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::AnimNotify_ProneExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "AnimNotify_ProneExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.AnimNotify_ProneEnter
// (BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::AnimNotify_ProneEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "AnimNotify_ProneEnter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.AnimNotify_ReloadStart
// (BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::AnimNotify_ReloadStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "AnimNotify_ReloadStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.AnimNotify_ReloadEnd
// (BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::AnimNotify_ReloadEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "AnimNotify_ReloadEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.WeaponUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HDWeaponBase_C*               NewWeapon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_HDPlayerCharacter_FP_C::WeaponUpdated(class ABP_HDWeaponBase_C* NewWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "WeaponUpdated");

	Params::ABP_HDPlayerCharacter_FP_C_WeaponUpdated Parms{};

	Parms.NewWeapon = NewWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.BlueprintUpdateEquippedWeaponRefs
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADFBaseItem*                      NewWeap                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_HDPlayerCharacter_FP_C::BlueprintUpdateEquippedWeaponRefs(class ADFBaseItem* NewWeap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "BlueprintUpdateEquippedWeaponRefs");

	Params::ABP_HDPlayerCharacter_FP_C_BlueprintUpdateEquippedWeaponRefs Parms{};

	Parms.NewWeap = NewWeap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.BlueprintUpdateControllerOwnerRefs
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AController*                      NewC                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_HDPlayerCharacter_FP_C::BlueprintUpdateControllerOwnerRefs(class AController* NewC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "BlueprintUpdateControllerOwnerRefs");

	Params::ABP_HDPlayerCharacter_FP_C_BlueprintUpdateControllerOwnerRefs Parms{};

	Parms.NewC = NewC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.BlueprintUpdatePawnOwnerRefs
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            NewPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_HDPlayerCharacter_FP_C::BlueprintUpdatePawnOwnerRefs(class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "BlueprintUpdatePawnOwnerRefs");

	Params::ABP_HDPlayerCharacter_FP_C_BlueprintUpdatePawnOwnerRefs Parms{};

	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.UpdateAttachments
// (BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::UpdateAttachments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "UpdateAttachments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Param_DeltaTimeX                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_HDPlayerCharacter_FP_C::BlueprintUpdateAnimation(float Param_DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "BlueprintUpdateAnimation");

	Params::ABP_HDPlayerCharacter_FP_C_BlueprintUpdateAnimation Parms{};

	Parms.Param_DeltaTimeX = Param_DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.AssignWeaponLocomotionAnims
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterAnimCollection         AnimCollection                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    Param_bReadyToThrow                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_HDPlayerCharacter_FP_C::AssignWeaponLocomotionAnims(struct FCharacterAnimCollection& AnimCollection, bool Param_bReadyToThrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "AssignWeaponLocomotionAnims");

	Params::ABP_HDPlayerCharacter_FP_C_AssignWeaponLocomotionAnims Parms{};

	Parms.AnimCollection = std::move(AnimCollection);
	Parms.Param_bReadyToThrow = Param_bReadyToThrow;

	UObject::ProcessEvent(Func, &Parms);

	AnimCollection = std::move(Parms.AnimCollection);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.AssignLegacyWeaponLocomotionAnims
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, class UAnimSequenceBase*>WeaponAnimSet                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UABP_HDPlayerCharacter_FP_C::AssignLegacyWeaponLocomotionAnims(TMap<class FName, class UAnimSequenceBase*>& WeaponAnimSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "AssignLegacyWeaponLocomotionAnims");

	Params::ABP_HDPlayerCharacter_FP_C_AssignLegacyWeaponLocomotionAnims Parms{};

	Parms.WeaponAnimSet = std::move(WeaponAnimSet);

	UObject::ProcessEvent(Func, &Parms);

	WeaponAnimSet = std::move(Parms.WeaponAnimSet);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.UpdateLeanOffsets
// (Protected, BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::UpdateLeanOffsets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "UpdateLeanOffsets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.PlayCharacterFPPMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bForceDisableAutoBlendOut                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   PlayDuration                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_HDPlayerCharacter_FP_C::PlayCharacterFPPMontage(class UAnimMontage* MontageToPlay, bool bForceDisableAutoBlendOut, float* PlayDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "PlayCharacterFPPMontage");

	Params::ABP_HDPlayerCharacter_FP_C_PlayCharacterFPPMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.bForceDisableAutoBlendOut = bForceDisableAutoBlendOut;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayDuration != nullptr)
		*PlayDuration = Parms.PlayDuration;
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.GetSightPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Positon                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_HDPlayerCharacter_FP_C::GetSightPosition(struct FVector* Positon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "GetSightPosition");

	Params::ABP_HDPlayerCharacter_FP_C_GetSightPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Positon != nullptr)
		*Positon = std::move(Parms.Positon);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.GetSmoothRotation
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::GetSmoothRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "GetSmoothRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.GetSightRotationOffset
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::GetSightRotationOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "GetSightRotationOffset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.GetGripAmount
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::GetGripAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "GetGripAmount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.GetMountPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_HDPlayerCharacter_FP_C::GetMountPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "GetMountPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UABP_HDPlayerCharacter_FP_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "AnimGraph");

	Params::ABP_HDPlayerCharacter_FP_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.VaultingLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Input_pose                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_VaultingLayer                                    (Parm, OutParm, NoDestructor)

void UABP_HDPlayerCharacter_FP_C::VaultingLayer(const struct FPoseLink& Input_pose, struct FPoseLink* Param_VaultingLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "VaultingLayer");

	Params::ABP_HDPlayerCharacter_FP_C_VaultingLayer Parms{};

	Parms.Input_pose = std::move(Input_pose);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_VaultingLayer != nullptr)
		*Param_VaultingLayer = std::move(Parms.Param_VaultingLayer);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.AdditiveLoco
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_WeaponAnims                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_AdditiveLoco                                     (Parm, OutParm, NoDestructor)

void UABP_HDPlayerCharacter_FP_C::AdditiveLoco(const struct FPoseLink& Param_WeaponAnims, struct FPoseLink* Param_AdditiveLoco)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "AdditiveLoco");

	Params::ABP_HDPlayerCharacter_FP_C_AdditiveLoco Parms{};

	Parms.Param_WeaponAnims = std::move(Param_WeaponAnims);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AdditiveLoco != nullptr)
		*Param_AdditiveLoco = std::move(Parms.Param_AdditiveLoco);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.StanceTransitions
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        WeaponArms                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_StanceTransitions                                (Parm, OutParm, NoDestructor)

void UABP_HDPlayerCharacter_FP_C::StanceTransitions(const struct FPoseLink& InPose, const struct FPoseLink& WeaponArms, struct FPoseLink* Param_StanceTransitions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "StanceTransitions");

	Params::ABP_HDPlayerCharacter_FP_C_StanceTransitions Parms{};

	Parms.InPose = std::move(InPose);
	Parms.WeaponArms = std::move(WeaponArms);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_StanceTransitions != nullptr)
		*Param_StanceTransitions = std::move(Parms.Param_StanceTransitions);
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.PlayUnEquipMontage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_HDPlayerCharacter_FP_C::PlayUnEquipMontage(class UAnimMontage* MontageToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "PlayUnEquipMontage");

	Params::ABP_HDPlayerCharacter_FP_C_PlayUnEquipMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.PlayReloadMontage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFullReload                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_HDPlayerCharacter_FP_C::PlayReloadMontage(class UAnimMontage* MontageToPlay, bool bFullReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "PlayReloadMontage");

	Params::ABP_HDPlayerCharacter_FP_C_PlayReloadMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.bFullReload = bFullReload;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.PlayFireMontage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFireLast                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_bAiming                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_HDPlayerCharacter_FP_C::PlayFireMontage(class UAnimMontage* MontageToPlay, bool bFireLast, bool Param_bAiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "PlayFireMontage");

	Params::ABP_HDPlayerCharacter_FP_C_PlayFireMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.bFireLast = bFireLast;
	Parms.Param_bAiming = Param_bAiming;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C.PlayEquipMontage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_HDPlayerCharacter_FP_C::PlayEquipMontage(class UAnimMontage* MontageToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_HDPlayerCharacter_FP_C", "PlayEquipMontage");

	Params::ABP_HDPlayerCharacter_FP_C_PlayEquipMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

